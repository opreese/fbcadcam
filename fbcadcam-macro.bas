'fbcadcam macro by Owen Paul Reese
'email opreese@gmail.com
'website fbcadcam.com / fbcadcam.net / fbcadcam.org
'cell# (407) 655-8537

'open source - no restrictions

'description: script engine for fbcadcam macros
'source code:
'http://fbcadcam.org/fbcadcam-macro/
'test.bas is your source code to run as a macro
#Include "fbcadcam-macro-dec.bi"
#Include "fbcadcam-macro-var.bi"



Function parse(temp As String) As String
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Function parse"
		Print #5,"temp:";temp
		'For dbugi=LBound(temp) To UBound(temp)
			'Print #5,"temp("; dbugi; "):"; temp(dbugi)
		'Next
		Print #5,"---------------"
	EndIf
	Dim As Integer openprin,closeprin,x,i
	Dim As BOOLEAN skip
	temp=LTrim(RTrim(temp))
	If InStr(temp,")-(") Then
		'this is a line command
		x=InStr(temp,")-(")
		'from x+3, find and remove the next closeprin
		openprin=0
		closeprin=0
		For i=x+3 To Len(temp)
			If Mid(temp,i,1)="(" Then openprin+=1
			If Mid(temp,i,1)=")" Then closeprin+=1
			If closeprin>openprin Then
				'this is the closeprin to remove
				temp=Left(temp,i-1)+Mid(temp,i+1)
				'now replace )-( with a comma
				temp=Left(temp,x-1)+","+Mid(temp,x+3)
				'now remove the first openprin which should be the first character
				temp=Mid(temp,2)
				Exit For
			EndIf
		Next
	Else
		'this is a circle,copy,move,rotate,flip command
		'if the first charater is an openprin then
		'remove it and it's associate closeprin
		If Left(temp,1)="(" Then
			temp=Mid(temp,2)
			openprin=0
			closeprin=0
			For i=1 To Len(temp)
				If Mid(temp,i,1)="(" Then openprin+=1
				If Mid(temp,i,1)=")" Then closeprin+=1
				If closeprin>openprin Then
					temp=Left(temp,i-1)+Mid(temp,i+1)
					Exit For
				EndIf
			Next
		EndIf 
	EndIf
	'now all that remains is to convert commas into tabs
	'replace all commas except for those used in arrays
	For i=1 To Len(temp)
		If Mid(temp,i,1)="," Then
			openprin=0
			closeprin=0
			skip=FALSE
			For x=i+1 To Len(temp)
				If Mid(temp,i,1)="(" Then openprin+=1
				If Mid(temp,i,1)=")" Then closeprin+=1
				If closeprin>openprin Then
					skip=TRUE
					Exit For
				EndIf
			Next
			If skip=FALSE Then temp=Left(temp,i-1)+Chr(9)+Mid(temp,i+1)
		EndIf
	Next
	temp=temp+Chr(9)
	Return temp
End Function

Function keyword_commands_block(block_i As Integer, block_c As Integer, block_temp As String, block_temps() As String) As Integer
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Function keyword_commands_block"
		Print #5,"block_i:";block_i
		Print #5,"block_c:";block_c
		Print #5,"block_temp:";block_temp
		For dbugi=LBound(block_temps) To UBound(block_temps)
			Print #5,"block_temps("; dbugi; "):"; block_temps(dbugi)
		Next
		Print #5,"---------------"
	EndIf
	Dim As Integer i,j,k,x,c,temp_c,fxstart,fxend,openprin,closeprin
	Dim As Integer if_i,if_c,endif_c
	Dim As Integer for_c,next_c
	Dim As Integer do_c,loop_c
	Dim As Integer select_case_c,end_select_c
	Dim As BOOLEAN keyword_command_found
	Dim As String temp,temps(),functext

	temp=block_temp
	For i= 1 To macro_function_c
		If InStr(temp,macro_function_name(i)) And Left(temp,8)<>"declare " Then
			fxstart=InStr(temp,macro_function_name(i))
			If Left(LTrim(Mid(temp,fxstart+Len(macro_function_name(i)))),1)="(" Then
				openprin=0
				closeprin=0
				For x=fxstart To Len(temp)
					If Mid(temp,x,1)="(" Then openprin+=1
					If Mid(temp,x,1)=")" Then
						closeprin+=1
						If closeprin=openprin Then
							fxend=x
							functext=Mid(temp,fxstart,fxend-fxstart+1)
							temp=Left(temp,fxstart-1)+func_value(functext)+Mid(temp,fxend+1)
							i=0
							Exit For
						EndIf
					EndIf
				Next
			EndIf
		EndIf
	Next
	block_temp=temp


	keyword_command_found=FALSE
	If Left(block_temp,4)="dim " Then
		keyword_dim(block_temp)
		keyword_command_found=TRUE
	EndIf
	If Left(block_temp,6)="redim " Then
		keyword_redim(block_temp)
		keyword_command_found=TRUE
	EndIf
	If Left(block_temp,6)="print " Then
		temp=Mid(block_temp,7)
		keyword_print(temp)
		keyword_command_found=TRUE
	EndIf
	If Left(block_temp,4)="for " Then
		for_c=1
		next_c=0
		temp_c=0
		ReDim temps(temp_c)
		temps(temp_c)=block_temp
		c=block_i
		Do
			c+=1
			temp_c+=1
			ReDim Preserve temps(temp_c)
			temp=block_temps(c)
			temps(temp_c)=temp
			If Left(temp,4)="for " Then for_c+=1
			If temp="next" Then
				next_c+=1
				If next_c=for_c Then
					block_i=c
					Exit Do
				EndIf
			EndIf
		Loop
		keyword_for(temps(),temp_c-1)
		keyword_command_found=TRUE
	EndIf
	If Left(block_temp,3)="do " Then
		do_c=1
		loop_c=0
		temp_c=0
		ReDim temps(temp_c)
		temps(temp_c)=block_temp
		c=block_i
		Do
			c+=1
			temp_c+=1
			ReDim Preserve temps(temp_c)
			temp=block_temps(c)
			temps(temp_c)=temp
			If Left(temp,3)="do " Then do_c+=1
			If temp="loop" Then
				loop_c+=1
				If loop_c=do_c Then
					block_i=c
					Exit Do
				EndIf
			EndIf
		Loop
		keyword_do(temps(),temp_c-1)
		keyword_command_found=TRUE
	EndIf
	If Left(block_temp,12)="select case " Then
		select_case_c=1
		end_select_c=0
		temp_c=0
		ReDim temps(temp_c)
		temps(temp_c)=block_temp
		c=block_i
		Do
			c+=1
			temp_c+=1
			ReDim Preserve temps(temp_c)
			temp=block_temps(c)
			temps(temp_c)=temp
			If Left(temp,12)="select case " Then select_case_c+=1
			If temp="end select" Then
				end_select_c+=1
				If end_select_c=select_case_c Then
					block_i=c
					Exit Do
				EndIf
			EndIf
		Loop
		keyword_select(temps(),temp_c-1)
		keyword_command_found=TRUE
	EndIf
	If Left(block_temp,3)="if " Then
		if_c=1
		endif_c=0
		temp_c=0
		ReDim temps(temp_c)
		temps(temp_c)=block_temp
		c=block_i
		If Right(block_temp,5)<>" then" Then
			'single line if then statement
			keyword_if(temps(),temp_c)
			keyword_command_found=TRUE
		Else
			if_c=1
			For i=block_i+1 To block_c
				c+=1
				temp_c+=1
				ReDim Preserve temps(temp_c)
				temp=block_temps(c)
				temps(temp_c)=temp
				If Left(temp,3)="if " Then
					If Right(temp,5)=" then" Then if_c+=1
				EndIf
				If temp="endif" Or temp="end if" Then
					endif_c+=1
					If endif_c=if_c Then
						'this is the end of the block
						'grab the data lines
						keyword_if(temps(),temp_c)
						keyword_command_found=TRUE
						block_i=c
						Exit For
					EndIf
				EndIf
			Next
		EndIf
	EndIf
	If Left(block_temp,7)="return " Then
		macro_function_exit(macro_function_recursion_c)=TRUE
		temp=macro_function_return(macro_function_recursion_c)+"="+LTrim(Mid(block_temp,8))
		keyword_let(temp)
		keyword_command_found=TRUE
	EndIf
	If Left(block_temp,4)="line" Then
		keyword_line(block_temp)
		keyword_command_found=TRUE
	EndIf
	If Left(block_temp,6)="circle" Then
		keyword_circle(block_temp)
		keyword_command_found=TRUE
	EndIf
	If Left(block_temp,10)="randomize " Then
		keyword_randomize(block_temp)
		keyword_command_found=TRUE
	EndIf	
	If Left(block_temp,4)="move" Then
		temp=Mid(block_temp,5)
		keyword_move(temp)
		keyword_command_found=TRUE
	EndIf
	If Left(block_temp,4)="copy" Then
		temp=LTrim(Mid(block_temp,5))
		If Left(temp,6)="rotate" Then
			temp=LTrim(Mid(temp,7))
			keyword_copy_rotate(temp)
		Else
			If Left(temp,4)="flip" Then
				temp=LTrim(Mid(temp,5))
				If Left(temp,8)="vertical" Then
					temp=LTrim(Mid(temp,9))
					keyword_copy_flip_vertical(temp)
				Else
					If Left(temp,10)="horizontal" Then
						temp=LTrim(Mid(temp,11))
						keyword_copy_flip_horizontal(temp)
					Else
						If Left(temp,4)="both" Then
							temp=LTrim(Mid(temp,5))
							keyword_copy_flip_both(temp)
						EndIf
					EndIf
				EndIf
			Else
				keyword_copy(temp)
			EndIf
		EndIf
		keyword_command_found=TRUE
	EndIf
	If Left(block_temp,6)="rotate" Then
		temp=Mid(block_temp,7)
		keyword_rotate(temp)
		keyword_command_found=TRUE
	EndIf
	If Left(block_temp,4)="flip" Then
		temp=LTrim(Mid(block_temp,5))
		If Left(temp,8)="vertical" Then
			temp=LTrim(Mid(temp,9))
			keyword_flip_vertical(temp)
		Else
			If Left(temp,10)="horizontal" Then
				temp=LTrim(Mid(temp,11))
				keyword_flip_horizontal(temp)
			Else
				If Left(temp,4)="both" Then
					temp=LTrim(Mid(temp,5))
					keyword_flip_both(temp)
				EndIf
			EndIf
		EndIf
		keyword_command_found=TRUE
	EndIf
	If Left(block_temp,5)="text " Then
		keyword_text(block_temp)
		keyword_command_found=TRUE
	EndIf
	If keyword_command_found=FALSE Then
		'let variable be set to value
		'call subruotine or function
		keyword_commands(block_temp)
	EndIf
	Return block_i
End Function

Sub keyword_move(temp As String)
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Sub keyword_move"
		Print #5,"temp:";temp
		'For dbugi=LBound(temp) To UBound(temp)
			'Print #5,"temp("; dbugi; "):"; temp(dbugi)
		'Next
		Print #5,"---------------"
	EndIf
	Dim As Integer i,parse_c
	Dim As String parse_temp,parse_i(4)
	temp=parse(temp)
	For i=1 To Len(temp)
		If Asc(Mid(temp,i,1))<>9 Then
			parse_temp+=Mid(temp,i,1)
		Else
			parse_c+=1
			parse_i(parse_c)=parse_temp
			parse_temp=""
		EndIf
	Next
	modifyx1=CDbl(full_evaluate_expression(parse_i(1)))
	modifyy1=CDbl(full_evaluate_expression(parse_i(2)))
	modifyx2=CDbl(full_evaluate_expression(parse_i(3)))
	modifyy2=CDbl(full_evaluate_expression(parse_i(4)))
	setmovedown
End Sub

Sub keyword_copy(temp As String)
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Sub keyword_copy"
		Print #5,"temp:";temp
		'For dbugi=LBound(temp) To UBound(temp)
			'Print #5,"temp("; dbugi; "):"; temp(dbugi)
		'Next
		Print #5,"---------------"
	EndIf
	Dim As Integer i,parse_c
	Dim As String parse_temp,parse_i(4)
	temp=parse(temp)
	For i=1 To Len(temp)
		If Asc(Mid(temp,i,1))<>9 Then
			parse_temp+=Mid(temp,i,1)
		Else
			parse_c+=1
			parse_i(parse_c)=parse_temp
			parse_temp=""
		EndIf
	Next
	modifyx1=CDbl(full_evaluate_expression(parse_i(1)))
	modifyy1=CDbl(full_evaluate_expression(parse_i(2)))
	modifyx2=CDbl(full_evaluate_expression(parse_i(3)))
	modifyy2=CDbl(full_evaluate_expression(parse_i(4)))
	setcopydown
End Sub

Sub keyword_rotate(temp As String)
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Sub keyword_rotate"
		Print #5,"temp:";temp
		'For dbugi=LBound(temp) To UBound(temp)
			'Print #5,"temp("; dbugi; "):"; temp(dbugi)
		'Next
		Print #5,"---------------"
	EndIf
	Dim As Integer i,parse_c
	Dim As String parse_temp,parse_i(3)
	temp=parse(temp)
	For i=1 To Len(temp)
		If Asc(Mid(temp,i,1))<>9 Then
			parse_temp+=Mid(temp,i,1)
		Else
			parse_c+=1
			parse_i(parse_c)=parse_temp
			parse_temp=""
		EndIf
	Next
	modifyx1=CDbl(full_evaluate_expression(parse_i(1)))
	modifyy1=CDbl(full_evaluate_expression(parse_i(2)))
	angle=CDbl(full_evaluate_expression(parse_i(3)))
	setrotatedown
End Sub

Sub keyword_copy_rotate(temp As String)
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Sub keyword_copy_rotate"
		Print #5,"temp:";temp
		'For dbugi=LBound(temp) To UBound(temp)
			'Print #5,"temp("; dbugi; "):"; temp(dbugi)
		'Next
		Print #5,"---------------"
	EndIf
	Dim As Integer i,parse_c
	Dim As String parse_temp,parse_i(3)
	temp=parse(temp)
	For i=1 To Len(temp)
		If Asc(Mid(temp,i,1))<>9 Then
			parse_temp+=Mid(temp,i,1)
		Else
			parse_c+=1
			parse_i(parse_c)=parse_temp
			parse_temp=""
		EndIf
	Next
	modifyx1=CDbl(full_evaluate_expression(parse_i(1)))
	modifyy1=CDbl(full_evaluate_expression(parse_i(2)))
	angle=CDbl(full_evaluate_expression(parse_i(3)))
	setrotatecopydown
End Sub

Sub keyword_flip_vertical(temp As String)
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Sub keyword_flip_vertical"
		Print #5,"temp:";temp
		'For dbugi=LBound(temp) To UBound(temp)
			'Print #5,"temp("; dbugi; "):"; temp(dbugi)
		'Next
		Print #5,"---------------"
	EndIf
	Dim As Integer i,parse_c
	Dim As String parse_temp,parse_i(2)
	temp=parse(temp)
	For i=1 To Len(temp)
		If Asc(Mid(temp,i,1))<>9 Then
			parse_temp+=Mid(temp,i,1)
		Else
			parse_c+=1
			parse_i(parse_c)=parse_temp
			parse_temp=""
		EndIf
	Next
	modifyx1=CDbl(full_evaluate_expression(parse_i(1)))
	modifyy1=CDbl(full_evaluate_expression(parse_i(2)))
	flipvertical
End Sub

Sub keyword_flip_horizontal(temp As String)
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Sub keyword_flip_horizontal"
		Print #5,"temp:";temp
		'For dbugi=LBound(temp) To UBound(temp)
			'Print #5,"temp("; dbugi; "):"; temp(dbugi)
		'Next
		Print #5,"---------------"
	EndIf
	Dim As Integer i,parse_c
	Dim As String parse_temp,parse_i(2)
	temp=parse(temp)
	For i=1 To Len(temp)
		If Asc(Mid(temp,i,1))<>9 Then
			parse_temp+=Mid(temp,i,1)
		Else
			parse_c+=1
			parse_i(parse_c)=parse_temp
			parse_temp=""
		EndIf
	Next
	modifyx1=CDbl(full_evaluate_expression(parse_i(1)))
	modifyy1=CDbl(full_evaluate_expression(parse_i(2)))
	fliphorizontal
End Sub

Sub keyword_flip_both(temp As String)
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Sub keyword_flip_both"
		Print #5,"temp:";temp
		'For dbugi=LBound(temp) To UBound(temp)
			'Print #5,"temp("; dbugi; "):"; temp(dbugi)
		'Next
		Print #5,"---------------"
	EndIf
	Dim As Integer i,parse_c
	Dim As String parse_temp,parse_i(2)
	temp=parse(temp)
	For i=1 To Len(temp)
		If Asc(Mid(temp,i,1))<>9 Then
			parse_temp+=Mid(temp,i,1)
		Else
			parse_c+=1
			parse_i(parse_c)=parse_temp
			parse_temp=""
		EndIf
	Next
	modifyx1=CDbl(full_evaluate_expression(parse_i(1)))
	modifyy1=CDbl(full_evaluate_expression(parse_i(2)))
	flipvh
End Sub

Sub keyword_copy_flip_vertical(temp As String)
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Sub keyword_copy_flip_vertical"
		Print #5,"temp:";temp
		'For dbugi=LBound(temp) To UBound(temp)
			'Print #5,"temp("; dbugi; "):"; temp(dbugi)
		'Next
		Print #5,"---------------"
	EndIf
	Dim As Integer i,parse_c
	Dim As String parse_temp,parse_i(2)
	temp=parse(temp)
	For i=1 To Len(temp)
		If Asc(Mid(temp,i,1))<>9 Then
			parse_temp+=Mid(temp,i,1)
		Else
			parse_c+=1
			parse_i(parse_c)=parse_temp
			parse_temp=""
		EndIf
	Next
	modifyx1=CDbl(full_evaluate_expression(parse_i(1)))
	modifyy1=CDbl(full_evaluate_expression(parse_i(2)))
	flipverticalcopy
End Sub

Sub keyword_copy_flip_horizontal(temp As String)
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Sub keyword_copy_flip_horizontal"
		Print #5,"temp:";temp
		'For dbugi=LBound(temp) To UBound(temp)
			'Print #5,"temp("; dbugi; "):"; temp(dbugi)
		'Next
		Print #5,"---------------"
	EndIf
	Dim As Integer i,parse_c
	Dim As String parse_temp,parse_i(2)
	temp=parse(temp)
	For i=1 To Len(temp)
		If Asc(Mid(temp,i,1))<>9 Then
			parse_temp+=Mid(temp,i,1)
		Else
			parse_c+=1
			parse_i(parse_c)=parse_temp
			parse_temp=""
		EndIf
	Next
	modifyx1=CDbl(full_evaluate_expression(parse_i(1)))
	modifyy1=CDbl(full_evaluate_expression(parse_i(2)))
	fliphorizontalcopy
End Sub

Sub keyword_copy_flip_both(temp As String)
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Sub keyword_copy_flip_both"
		Print #5,"temp:";temp
		'For dbugi=LBound(temp) To UBound(temp)
			'Print #5,"temp("; dbugi; "):"; temp(dbugi)
		'Next
		Print #5,"---------------"
	EndIf
	Dim As Integer i,parse_c
	Dim As String parse_temp,parse_i(2)
	temp=parse(temp)
	For i=1 To Len(temp)
		If Asc(Mid(temp,i,1))<>9 Then
			parse_temp+=Mid(temp,i,1)
		Else
			parse_c+=1
			parse_i(parse_c)=parse_temp
			parse_temp=""
		EndIf
	Next
	modifyx1=CDbl(full_evaluate_expression(parse_i(1)))
	modifyy1=CDbl(full_evaluate_expression(parse_i(2)))
	flipvhcopy
End Sub

Function full_evaluate_expression(expression As String) As String
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Function full_evaluate_expression"
		Print #5,"expression:";expression
		'For dbugi=LBound(temp) To UBound(temp)
			'Print #5,"temp("; dbugi; "):"; temp(dbugi)
		'Next
		Print #5,"---------------"
	EndIf
	Dim As Integer i,j,k,x,xa,xaset,c,low,hi,n
	Dim As Double dn
	Dim As String s1,s2,stemp,temp2
	Dim As Integer stemp_c,stemp_n(),stemp_c_x
	Dim As Integer openprin_c,closeprin_c,openprin_x,closeprin_x,variables_c,variables_x()
	Dim As String temp_alpha,variables()
	Dim As Byte n_boolean
	Dim As Byte n_byte
	Dim As UByte n_ubyte
	Dim As Short n_short
	Dim As UShort n_ushort
	Dim As Long n_long
	Dim As ULong n_ulong
	Dim As UInteger n_uinteger
	Dim As LongInt n_longint
	Dim As ULongInt n_ulongint
	Dim As Single n_single
	Dim As String n_string
	Dim As BOOLEAN quote
	
	s2=expression
	For i = 1 To Len(s2)
		Select Case Mid(s2,i,1)
			Case Chr(34)
				temp_alpha=""
				If quote=FALSE Then quote=TRUE Else quote=FALSE
			Case "a" To "z","0" To "9","_"
				If quote=FALSE Then
					temp_alpha+=Mid(s2,i,1)
					If Len(temp_alpha)=1 Then
						Select Case temp_alpha
							Case "0" To "9"
								temp_alpha=""
						End Select
					EndIf
				EndIf
			Case Else
				If temp_alpha<>"" Then
					variables_c+=1
					ReDim Preserve variables_x(variables_c)
					ReDim Preserve variables(variables_c)
					variables_x(variables_c)=i-Len(temp_alpha)
					variables(variables_c)=temp_alpha
					temp_alpha=""
				EndIf
		End Select
	Next
	If temp_alpha<>"" Then
		variables_c+=1
		ReDim Preserve variables_x(variables_c)
		ReDim Preserve variables(variables_c)
		variables_x(variables_c)=i-Len(temp_alpha)
		variables(variables_c)=temp_alpha
		temp_alpha=""
	EndIf

	For j=variables_c To 1 Step -1
		For i=1 To macro_variables_info_c
			If variables(j)=macro_variables_info(i,1) Then
				Select Case macro_variables_info(i,2)
					Case "BOOLEAN_ARRAY","BYTE_ARRAY","UBYTE_ARRAY","SHORT_ARRAY","USHORT_ARRAY","LONG_ARRAY","ULONG_ARRAY","INTEGER_ARRAY","UINTEGER_ARRAY","LONGINT_ARRAY","ULONGINT_ARRAY","SINGLE_ARRAY","DOUBLE_ARRAY","STRING_ARRAY"
						openprin_c=0
						openprin_x=0
						closeprin_c=0
						closeprin_x=0
						For x=variables_x(j)+Len(variables(j)) To Len(s2)
							Select Case Mid(s2,x,1)
								Case "("
									openprin_c+=1
									If openprin_c=1 Then openprin_x=x
								Case ")"
									closeprin_c+=1
									If closeprin_c=openprin_c Then
										closeprin_x=x
										stemp=Mid(s2,openprin_x+1,closeprin_x-openprin_x-1)
										If InStr(stemp,",") Then 'this is for 2d and 3d arrays
											stemp_c=0
											ReDim stemp_n(stemp_c)
											stemp_c_x=1
											For c=1 To Len(stemp)
												If Mid(stemp,c,1)="," Then
													stemp_c+=1
													ReDim Preserve stemp_n(stemp_c)
													stemp_n(stemp_c)=CInt(evaluate_string_numeric_expression(Mid(stemp,stemp_c_x,c-stemp_c_x)))
													stemp_c_x=c+1
												EndIf
											Next
											stemp_c+=1
											ReDim Preserve stemp_n(stemp_c)
											stemp_n(stemp_c)=CInt(evaluate_string_numeric_expression(Mid(stemp,stemp_c_x,c-stemp_c_x)))
											'now get the array value based on the index values of stemp_n()
											s2=get_multi_dim_array_type_s2(s2,i,stemp_n(),j,variables_x(),closeprin_x)
										Else
											s2=get_1d_array_type_s2(s2,i,stemp,j,variables_x(),closeprin_x)
										EndIf
									EndIf
							End Select
						Next
				End Select
				Exit For
			EndIf
		Next
	Next
	s2=evaluate_string_numeric_expression(s2)
	Return s2
End Function

Function find_close_prin(temp As String) As Integer
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Function find_close_prin"
		Print #5,"temp:";temp
		'For dbugi=LBound(temp) To UBound(temp)
			'Print #5,"temp("; dbugi; "):"; temp(dbugi)
		'Next
		Print #5,"---------------"
	EndIf
	Dim As Integer i,x
	Dim As Integer openprin_c,closeprin_c,openprin_x,closeprin_x
	openprin_c=0
	closeprin_c=0
	For i=1 To Len(temp)
		If Mid(temp,i,1)=")" Then
			closeprin_c+=1
			If closeprin_c=openprin_c Then
				closeprin_x=i
				Exit For
			EndIf
		EndIf
		If Mid(temp,i,1)="(" Then openprin_c+=1
	Next
	Return closeprin_x
End Function

Function get_1d_array_type_s2(s2 As String,i As Integer,stemp As String,j As Integer,variables_x() As Integer,closeprin_x As Integer) As String
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Function get_1d_array_type_s2"
		Print #5,"s2:";s2
		Print #5,"i:";i
		Print #5,"stemp:";stemp
		Print #5,"j:";j
		Print #5,"closeprin_x:";closeprin_x
		For dbugi=LBound(variables_x) To UBound(variables_x)
			Print #5,"variables_x("; dbugi; "):"; variables_x(dbugi)
		Next
		Print #5,"---------------"
	EndIf
	Dim As Integer n
	Dim As Double dn
	Dim As Byte n_boolean
	Dim As Byte n_byte
	Dim As UByte n_ubyte
	Dim As Short n_short
	Dim As UShort n_ushort
	Dim As Long n_long
	Dim As ULong n_ulong
	Dim As UInteger n_uinteger
	Dim As LongInt n_longint
	Dim As ULongInt n_ulongint
	Dim As Single n_single
	Dim As String n_string
	
	n=CInt(evaluate_string_numeric_expression(stemp))
	Select Case macro_variables_info(i,2)
		Case "BOOLEAN_ARRAY"
			Select Case macro_variables_info(i,5)
				Case "1d"
					Select Case macro_variables_info(i,3)
						Case "1"'variables_value()
							n_boolean=macro_variables_boolean_array_1d_1(n)
						Case "2"
							n_boolean=macro_variables_boolean_array_1d_2(n)
						Case "3"
							n_boolean=macro_variables_boolean_array_1d_3(n)
						Case "4"
							n_boolean=macro_variables_boolean_array_1d_4(n)
						Case "5"
							n_boolean=macro_variables_boolean_array_1d_5(n)
						Case "6"
							n_boolean=macro_variables_boolean_array_1d_6(n)
						Case "7"
							n_boolean=macro_variables_boolean_array_1d_7(n)
						Case "8"
							n_boolean=macro_variables_boolean_array_1d_8(n)
						Case "9"
							n_boolean=macro_variables_boolean_array_1d_9(n)
					End Select
			End Select
			s2=Mid(s2,1,variables_x(j)-1)+LTrim(Str(n_boolean))+Mid(s2,closeprin_x+1)
		Case "BYTE_ARRAY"
			Select Case macro_variables_info(i,5)
				Case "1d"
					Select Case macro_variables_info(i,3)
						Case "1"'variables_value()
							n_byte=macro_variables_byte_array_1d_1(n)
						Case "2"
							n_byte=macro_variables_byte_array_1d_2(n)
						Case "3"
							n_byte=macro_variables_byte_array_1d_3(n)
						Case "4"
							n_byte=macro_variables_byte_array_1d_4(n)
						Case "5"
							n_byte=macro_variables_byte_array_1d_5(n)
						Case "6"
							n_byte=macro_variables_byte_array_1d_6(n)
						Case "7"
							n_byte=macro_variables_byte_array_1d_7(n)
						Case "8"
							n_byte=macro_variables_byte_array_1d_8(n)
						Case "9"
							n_byte=macro_variables_byte_array_1d_9(n)
					End Select
			End Select
			s2=Mid(s2,1,variables_x(j)-1)+LTrim(Str(n_byte))+Mid(s2,closeprin_x+1)
		Case "UBYTE_ARRAY"
			Select Case macro_variables_info(i,5)
				Case "1d"
					Select Case macro_variables_info(i,3)
						Case "1"'variables_value()
							n_ubyte=macro_variables_ubyte_array_1d_1(n)
						Case "2"
							n_ubyte=macro_variables_ubyte_array_1d_2(n)
						Case "3"
							n_ubyte=macro_variables_ubyte_array_1d_3(n)
						Case "4"
							n_ubyte=macro_variables_ubyte_array_1d_4(n)
						Case "5"
							n_ubyte=macro_variables_ubyte_array_1d_5(n)
						Case "6"
							n_ubyte=macro_variables_ubyte_array_1d_6(n)
						Case "7"
							n_ubyte=macro_variables_ubyte_array_1d_7(n)
						Case "8"
							n_ubyte=macro_variables_ubyte_array_1d_8(n)
						Case "9"
							n_ubyte=macro_variables_ubyte_array_1d_9(n)
					End Select
			End Select
			s2=Mid(s2,1,variables_x(j)-1)+LTrim(Str(n_ubyte))+Mid(s2,closeprin_x+1)
		Case "SHORT_ARRAY"
			Select Case macro_variables_info(i,5)
				Case "1d"
					Select Case macro_variables_info(i,3)
						Case "1"'variables_value()
							n_short=macro_variables_short_array_1d_1(n)
						Case "2"
							n_short=macro_variables_short_array_1d_2(n)
						Case "3"
							n_short=macro_variables_short_array_1d_3(n)
						Case "4"
							n_short=macro_variables_short_array_1d_4(n)
						Case "5"
							n_short=macro_variables_short_array_1d_5(n)
						Case "6"
							n_short=macro_variables_short_array_1d_6(n)
						Case "7"
							n_short=macro_variables_short_array_1d_7(n)
						Case "8"
							n_short=macro_variables_short_array_1d_8(n)
						Case "9"
							n_short=macro_variables_short_array_1d_9(n)
					End Select
			End Select
			s2=Mid(s2,1,variables_x(j)-1)+LTrim(Str(n_short))+Mid(s2,closeprin_x+1)
		Case "USHORT_ARRAY"
			Select Case macro_variables_info(i,5)
				Case "1d"
					Select Case macro_variables_info(i,3)
						Case "1"'variables_value()
							n_ushort=macro_variables_ushort_array_1d_1(n)
						Case "2"
							n_ushort=macro_variables_ushort_array_1d_2(n)
						Case "3"
							n_ushort=macro_variables_ushort_array_1d_3(n)
						Case "4"
							n_ushort=macro_variables_ushort_array_1d_4(n)
						Case "5"
							n_ushort=macro_variables_ushort_array_1d_5(n)
						Case "6"
							n_ushort=macro_variables_ushort_array_1d_6(n)
						Case "7"
							n_ushort=macro_variables_ushort_array_1d_7(n)
						Case "8"
							n_ushort=macro_variables_ushort_array_1d_8(n)
						Case "9"
							n_ushort=macro_variables_ushort_array_1d_9(n)
					End Select
			End Select
			s2=Mid(s2,1,variables_x(j)-1)+LTrim(Str(n_ushort))+Mid(s2,closeprin_x+1)
		Case "LONG_ARRAY"
			Select Case macro_variables_info(i,5)
				Case "1d"
					Select Case macro_variables_info(i,3)
						Case "1"'variables_value()
							n_long=macro_variables_long_array_1d_1(n)
						Case "2"
							n_long=macro_variables_long_array_1d_2(n)
						Case "3"
							n_long=macro_variables_long_array_1d_3(n)
						Case "4"
							n_long=macro_variables_long_array_1d_4(n)
						Case "5"
							n_long=macro_variables_long_array_1d_5(n)
						Case "6"
							n_long=macro_variables_long_array_1d_6(n)
						Case "7"
							n_long=macro_variables_long_array_1d_7(n)
						Case "8"
							n_long=macro_variables_long_array_1d_8(n)
						Case "9"
							n_long=macro_variables_long_array_1d_9(n)
					End Select
			End Select
			s2=Mid(s2,1,variables_x(j)-1)+LTrim(Str(n_long))+Mid(s2,closeprin_x+1)
		Case "ULONG_ARRAY"
			Select Case macro_variables_info(i,5)
				Case "1d"
					Select Case macro_variables_info(i,3)
						Case "1"'variables_value()
							n_ulong=macro_variables_ulong_array_1d_1(n)
						Case "2"
							n_ulong=macro_variables_ulong_array_1d_2(n)
						Case "3"
							n_ulong=macro_variables_ulong_array_1d_3(n)
						Case "4"
							n_ulong=macro_variables_ulong_array_1d_4(n)
						Case "5"
							n_ulong=macro_variables_ulong_array_1d_5(n)
						Case "6"
							n_ulong=macro_variables_ulong_array_1d_6(n)
						Case "7"
							n_ulong=macro_variables_ulong_array_1d_7(n)
						Case "8"
							n_ulong=macro_variables_ulong_array_1d_8(n)
						Case "9"
							n_ulong=macro_variables_ulong_array_1d_9(n)
					End Select
			End Select
			s2=Mid(s2,1,variables_x(j)-1)+LTrim(Str(n_ulong))+Mid(s2,closeprin_x+1)
		Case "INTEGER_ARRAY"
			Select Case macro_variables_info(i,5)
				Case "1d"
					Select Case macro_variables_info(i,3)
						Case "1"'variables_value()
							n=macro_variables_integer_array_1d_1(n)
						Case "2"
							n=macro_variables_integer_array_1d_2(n)
						Case "3"
							n=macro_variables_integer_array_1d_3(n)
						Case "4"
							n=macro_variables_integer_array_1d_4(n)
						Case "5"
							n=macro_variables_integer_array_1d_5(n)
						Case "6"
							n=macro_variables_integer_array_1d_6(n)
						Case "7"
							n=macro_variables_integer_array_1d_7(n)
						Case "8"
							n=macro_variables_integer_array_1d_8(n)
						Case "9"
							n=macro_variables_integer_array_1d_9(n)
					End Select
			End Select
			s2=Mid(s2,1,variables_x(j)-1)+LTrim(Str(n))+Mid(s2,closeprin_x+1)
		Case "UINTEGER_ARRAY"
			Select Case macro_variables_info(i,5)
				Case "1d"
					Select Case macro_variables_info(i,3)
						Case "1"'variables_value()
							n_uinteger=macro_variables_uinteger_array_1d_1(n)
						Case "2"
							n_uinteger=macro_variables_uinteger_array_1d_2(n)
						Case "3"
							n_uinteger=macro_variables_uinteger_array_1d_3(n)
						Case "4"
							n_uinteger=macro_variables_uinteger_array_1d_4(n)
						Case "5"
							n_uinteger=macro_variables_uinteger_array_1d_5(n)
						Case "6"
							n_uinteger=macro_variables_uinteger_array_1d_6(n)
						Case "7"
							n_uinteger=macro_variables_uinteger_array_1d_7(n)
						Case "8"
							n_uinteger=macro_variables_uinteger_array_1d_8(n)
						Case "9"
							n_uinteger=macro_variables_uinteger_array_1d_9(n)
					End Select
			End Select
			s2=Mid(s2,1,variables_x(j)-1)+LTrim(Str(n_uinteger))+Mid(s2,closeprin_x+1)
		Case "LONGINT_ARRAY"
			Select Case macro_variables_info(i,5)
				Case "1d"
					Select Case macro_variables_info(i,3)
						Case "1"'variables_value()
							n_longint=macro_variables_longint_array_1d_1(n)
						Case "2"
							n_longint=macro_variables_longint_array_1d_2(n)
						Case "3"
							n_longint=macro_variables_longint_array_1d_3(n)
						Case "4"
							n_longint=macro_variables_longint_array_1d_4(n)
						Case "5"
							n_longint=macro_variables_longint_array_1d_5(n)
						Case "6"
							n_longint=macro_variables_longint_array_1d_6(n)
						Case "7"
							n_longint=macro_variables_longint_array_1d_7(n)
						Case "8"
							n_longint=macro_variables_longint_array_1d_8(n)
						Case "9"
							n_longint=macro_variables_longint_array_1d_9(n)
					End Select
			End Select
			s2=Mid(s2,1,variables_x(j)-1)+LTrim(Str(n_longint))+Mid(s2,closeprin_x+1)
		Case "ULONGINT_ARRAY"
			Select Case macro_variables_info(i,5)
				Case "1d"
					Select Case macro_variables_info(i,3)
						Case "1"'variables_value()
							n_ulongint=macro_variables_ulongint_array_1d_1(n)
						Case "2"
							n_ulongint=macro_variables_ulongint_array_1d_2(n)
						Case "3"
							n_ulongint=macro_variables_ulongint_array_1d_3(n)
						Case "4"
							n_ulongint=macro_variables_ulongint_array_1d_4(n)
						Case "5"
							n_ulongint=macro_variables_ulongint_array_1d_5(n)
						Case "6"
							n_ulongint=macro_variables_ulongint_array_1d_6(n)
						Case "7"
							n_ulongint=macro_variables_ulongint_array_1d_7(n)
						Case "8"
							n_ulongint=macro_variables_ulongint_array_1d_8(n)
						Case "9"
							n_ulongint=macro_variables_ulongint_array_1d_9(n)
					End Select
			End Select
			s2=Mid(s2,1,variables_x(j)-1)+LTrim(Str(n_ulongint))+Mid(s2,closeprin_x+1)
		Case "SINGLE_ARRAY"
			Select Case macro_variables_info(i,5)
				Case "1d"
					Select Case macro_variables_info(i,3)
						Case "1"'variables_value()
							n_single=macro_variables_single_array_1d_1(n)
						Case "2"
							n_single=macro_variables_single_array_1d_2(n)
						Case "3"
							n_single=macro_variables_single_array_1d_3(n)
						Case "4"
							n_single=macro_variables_single_array_1d_4(n)
						Case "5"
							n_single=macro_variables_single_array_1d_5(n)
						Case "6"
							n_single=macro_variables_single_array_1d_6(n)
						Case "7"
							n_single=macro_variables_single_array_1d_7(n)
						Case "8"
							n_single=macro_variables_single_array_1d_8(n)
						Case "9"
							n_single=macro_variables_single_array_1d_9(n)
					End Select
			End Select
			s2=Mid(s2,1,variables_x(j)-1)+LTrim(Str(n_single))+Mid(s2,closeprin_x+1)
		Case "DOUBLE_ARRAY"
			Select Case macro_variables_info(i,5)
				Case "1d"
					Select Case macro_variables_info(i,3)
						Case "1"'variables_value()
							dn=macro_variables_double_array_1d_1(n)
						Case "2"
							dn=macro_variables_double_array_1d_2(n)
						Case "3"
							dn=macro_variables_double_array_1d_3(n)
						Case "4"
							dn=macro_variables_double_array_1d_4(n)
						Case "5"
							dn=macro_variables_double_array_1d_5(n)
						Case "6"
							dn=macro_variables_double_array_1d_6(n)
						Case "7"
							dn=macro_variables_double_array_1d_7(n)
						Case "8"
							dn=macro_variables_double_array_1d_8(n)
						Case "9"
							dn=macro_variables_double_array_1d_9(n)
					End Select
			End Select
			s2=Mid(s2,1,variables_x(j)-1)+LTrim(Str(dn))+Mid(s2,closeprin_x+1)
		Case "STRING_ARRAY"
			Select Case macro_variables_info(i,5)
				Case "1d"
					Select Case macro_variables_info(i,3)
						Case "1"'variables_value()
							n_string=macro_variables_string_array_1d_1(n)
						Case "2"
							n_string=macro_variables_string_array_1d_2(n)
						Case "3"
							n_string=macro_variables_string_array_1d_3(n)
						Case "4"
							n_string=macro_variables_string_array_1d_4(n)
						Case "5"
							n_string=macro_variables_string_array_1d_5(n)
						Case "6"
							n_string=macro_variables_string_array_1d_6(n)
						Case "7"
							n_string=macro_variables_string_array_1d_7(n)
						Case "8"
							n_string=macro_variables_string_array_1d_8(n)
						Case "9"
							n_string=macro_variables_string_array_1d_9(n)
					End Select
			End Select
			s2=Mid(s2,1,variables_x(j)-1)+Chr(34)+n_string+Chr(34)+Mid(s2,closeprin_x+1)
	End Select
	Return s2
End Function

Function get_multi_dim_array_type_s2(s2 As String,i As Integer,stemp_n() As Integer,j As Integer,variables_x() As Integer,closeprin_x As Integer) As String
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Function get_multi_dim_array_type_s2"
		Print #5,"s2:";s2
		Print #5,"i:";i
		Print #5,"j:";j
		Print #5,"closeprin_x:";closeprin_x
		For dbugi=LBound(stemp_n) To UBound(stemp_n)
			Print #5,"stemp_n("; dbugi; "):"; stemp_n(dbugi)
		Next
		For dbugi=LBound(variables_x) To UBound(variables_x)
			Print #5,"variables_x("; dbugi; "):"; variables_x(dbugi)
		Next
		Print #5,"---------------"
	EndIf
	Dim As Integer n
	Dim As Double dn
	Dim As Byte n_boolean
	Dim As Byte n_byte
	Dim As UByte n_ubyte
	Dim As Short n_short
	Dim As UShort n_ushort
	Dim As Long n_long
	Dim As ULong n_ulong
	Dim As UInteger n_uinteger
	Dim As LongInt n_longint
	Dim As ULongInt n_ulongint
	Dim As Single n_single
	Dim As String n_string
	
	Select Case macro_variables_info(i,2)
		Case "BOOLEAN_ARRAY"
			Select Case macro_variables_info(i,5)
				Case "2d"
					Select Case macro_variables_info(i,3)
						Case "1"
							n_boolean=macro_variables_boolean_array_2d_1(stemp_n(1),stemp_n(2))
						Case "2"
							n_boolean=macro_variables_boolean_array_2d_2(stemp_n(1),stemp_n(2))
						Case "3"
							n_boolean=macro_variables_boolean_array_2d_3(stemp_n(1),stemp_n(2))
						Case "4"
							n_boolean=macro_variables_boolean_array_2d_4(stemp_n(1),stemp_n(2))
						Case "5"
							n_boolean=macro_variables_boolean_array_2d_5(stemp_n(1),stemp_n(2))
						Case "6"
							n_boolean=macro_variables_boolean_array_2d_6(stemp_n(1),stemp_n(2))
						Case "7"
							n_boolean=macro_variables_boolean_array_2d_7(stemp_n(1),stemp_n(2))
						Case "8"
							n_boolean=macro_variables_boolean_array_2d_8(stemp_n(1),stemp_n(2))
						Case "9"
							n_boolean=macro_variables_boolean_array_2d_9(stemp_n(1),stemp_n(2))
					End Select
				Case "3d"
					Select Case macro_variables_info(i,3)
						Case "1"
							n_boolean=macro_variables_boolean_array_3d_1(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "2"
							n_boolean=macro_variables_boolean_array_3d_2(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "3"
							n_boolean=macro_variables_boolean_array_3d_3(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "4"
							n_boolean=macro_variables_boolean_array_3d_4(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "5"
							n_boolean=macro_variables_boolean_array_3d_5(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "6"
							n_boolean=macro_variables_boolean_array_3d_6(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "7"
							n_boolean=macro_variables_boolean_array_3d_7(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "8"
							n_boolean=macro_variables_boolean_array_3d_8(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "9"
							n_boolean=macro_variables_boolean_array_3d_9(stemp_n(1),stemp_n(2),stemp_n(3))
					End Select
			End Select
			s2=Mid(s2,1,variables_x(j)-1)+LTrim(Str(n_boolean))+Mid(s2,closeprin_x+1)
		Case "BYTE_ARRAY"
			Select Case macro_variables_info(i,5)
				Case "2d"
					Select Case macro_variables_info(i,3)
						Case "1"
							n_byte=macro_variables_byte_array_2d_1(stemp_n(1),stemp_n(2))
						Case "2"
							n_byte=macro_variables_byte_array_2d_2(stemp_n(1),stemp_n(2))
						Case "3"
							n_byte=macro_variables_byte_array_2d_3(stemp_n(1),stemp_n(2))
						Case "4"
							n_byte=macro_variables_byte_array_2d_4(stemp_n(1),stemp_n(2))
						Case "5"
							n_byte=macro_variables_byte_array_2d_5(stemp_n(1),stemp_n(2))
						Case "6"
							n_byte=macro_variables_byte_array_2d_6(stemp_n(1),stemp_n(2))
						Case "7"
							n_byte=macro_variables_byte_array_2d_7(stemp_n(1),stemp_n(2))
						Case "8"
							n_byte=macro_variables_byte_array_2d_8(stemp_n(1),stemp_n(2))
						Case "9"
							n_byte=macro_variables_byte_array_2d_9(stemp_n(1),stemp_n(2))
					End Select
				Case "3d"
					Select Case macro_variables_info(i,3)
						Case "1"
							n_byte=macro_variables_byte_array_3d_1(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "2"
							n_byte=macro_variables_byte_array_3d_2(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "3"
							n_byte=macro_variables_byte_array_3d_3(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "4"
							n_byte=macro_variables_byte_array_3d_4(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "5"
							n_byte=macro_variables_byte_array_3d_5(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "6"
							n_byte=macro_variables_byte_array_3d_6(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "7"
							n_byte=macro_variables_byte_array_3d_7(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "8"
							n_byte=macro_variables_byte_array_3d_8(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "9"
							n_byte=macro_variables_byte_array_3d_9(stemp_n(1),stemp_n(2),stemp_n(3))
					End Select
			End Select
			s2=Mid(s2,1,variables_x(j)-1)+LTrim(Str(n_byte))+Mid(s2,closeprin_x+1)
		Case "UBYTE_ARRAY"
			Select Case macro_variables_info(i,5)
				Case "2d"
					Select Case macro_variables_info(i,3)
						Case "1"
							n_ubyte=macro_variables_ubyte_array_2d_1(stemp_n(1),stemp_n(2))
						Case "2"
							n_ubyte=macro_variables_ubyte_array_2d_2(stemp_n(1),stemp_n(2))
						Case "3"
							n_ubyte=macro_variables_ubyte_array_2d_3(stemp_n(1),stemp_n(2))
						Case "4"
							n_ubyte=macro_variables_ubyte_array_2d_4(stemp_n(1),stemp_n(2))
						Case "5"
							n_ubyte=macro_variables_ubyte_array_2d_5(stemp_n(1),stemp_n(2))
						Case "6"
							n_ubyte=macro_variables_ubyte_array_2d_6(stemp_n(1),stemp_n(2))
						Case "7"
							n_ubyte=macro_variables_ubyte_array_2d_7(stemp_n(1),stemp_n(2))
						Case "8"
							n_ubyte=macro_variables_ubyte_array_2d_8(stemp_n(1),stemp_n(2))
						Case "9"
							n_ubyte=macro_variables_ubyte_array_2d_9(stemp_n(1),stemp_n(2))
					End Select
				Case "3d"
					Select Case macro_variables_info(i,3)
						Case "1"
							n_ubyte=macro_variables_ubyte_array_3d_1(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "2"
							n_ubyte=macro_variables_ubyte_array_3d_2(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "3"
							n_ubyte=macro_variables_ubyte_array_3d_3(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "4"
							n_ubyte=macro_variables_ubyte_array_3d_4(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "5"
							n_ubyte=macro_variables_ubyte_array_3d_5(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "6"
							n_ubyte=macro_variables_ubyte_array_3d_6(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "7"
							n_ubyte=macro_variables_ubyte_array_3d_7(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "8"
							n_ubyte=macro_variables_ubyte_array_3d_8(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "9"
							n_ubyte=macro_variables_ubyte_array_3d_9(stemp_n(1),stemp_n(2),stemp_n(3))
					End Select
			End Select
			s2=Mid(s2,1,variables_x(j)-1)+LTrim(Str(n_ubyte))+Mid(s2,closeprin_x+1)
		Case "SHORT_ARRAY"
			Select Case macro_variables_info(i,5)
				Case "2d"
					Select Case macro_variables_info(i,3)
						Case "1"
							n_short=macro_variables_short_array_2d_1(stemp_n(1),stemp_n(2))
						Case "2"
							n_short=macro_variables_short_array_2d_2(stemp_n(1),stemp_n(2))
						Case "3"
							n_short=macro_variables_short_array_2d_3(stemp_n(1),stemp_n(2))
						Case "4"
							n_short=macro_variables_short_array_2d_4(stemp_n(1),stemp_n(2))
						Case "5"
							n_short=macro_variables_short_array_2d_5(stemp_n(1),stemp_n(2))
						Case "6"
							n_short=macro_variables_short_array_2d_6(stemp_n(1),stemp_n(2))
						Case "7"
							n_short=macro_variables_short_array_2d_7(stemp_n(1),stemp_n(2))
						Case "8"
							n_short=macro_variables_short_array_2d_8(stemp_n(1),stemp_n(2))
						Case "9"
							n_short=macro_variables_short_array_2d_9(stemp_n(1),stemp_n(2))
					End Select
				Case "3d"
					Select Case macro_variables_info(i,3)
						Case "1"
							n_short=macro_variables_short_array_3d_1(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "2"
							n_short=macro_variables_short_array_3d_2(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "3"
							n_short=macro_variables_short_array_3d_3(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "4"
							n_short=macro_variables_short_array_3d_4(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "5"
							n_short=macro_variables_short_array_3d_5(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "6"
							n_short=macro_variables_short_array_3d_6(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "7"
							n_short=macro_variables_short_array_3d_7(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "8"
							n_short=macro_variables_short_array_3d_8(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "9"
							n_short=macro_variables_short_array_3d_9(stemp_n(1),stemp_n(2),stemp_n(3))
					End Select
			End Select
			s2=Mid(s2,1,variables_x(j)-1)+LTrim(Str(n_short))+Mid(s2,closeprin_x+1)
		Case "USHORT_ARRAY"
			Select Case macro_variables_info(i,5)
				Case "2d"
					Select Case macro_variables_info(i,3)
						Case "1"
							n_ushort=macro_variables_ushort_array_2d_1(stemp_n(1),stemp_n(2))
						Case "2"
							n_ushort=macro_variables_ushort_array_2d_2(stemp_n(1),stemp_n(2))
						Case "3"
							n_ushort=macro_variables_ushort_array_2d_3(stemp_n(1),stemp_n(2))
						Case "4"
							n_ushort=macro_variables_ushort_array_2d_4(stemp_n(1),stemp_n(2))
						Case "5"
							n_ushort=macro_variables_ushort_array_2d_5(stemp_n(1),stemp_n(2))
						Case "6"
							n_ushort=macro_variables_ushort_array_2d_6(stemp_n(1),stemp_n(2))
						Case "7"
							n_ushort=macro_variables_ushort_array_2d_7(stemp_n(1),stemp_n(2))
						Case "8"
							n_ushort=macro_variables_ushort_array_2d_8(stemp_n(1),stemp_n(2))
						Case "9"
							n_ushort=macro_variables_ushort_array_2d_9(stemp_n(1),stemp_n(2))
					End Select
				Case "3d"
					Select Case macro_variables_info(i,3)
						Case "1"
							n_ushort=macro_variables_ushort_array_3d_1(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "2"
							n_ushort=macro_variables_ushort_array_3d_2(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "3"
							n_ushort=macro_variables_ushort_array_3d_3(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "4"
							n_ushort=macro_variables_ushort_array_3d_4(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "5"
							n_ushort=macro_variables_ushort_array_3d_5(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "6"
							n_ushort=macro_variables_ushort_array_3d_6(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "7"
							n_ushort=macro_variables_ushort_array_3d_7(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "8"
							n_ushort=macro_variables_ushort_array_3d_8(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "9"
							n_ushort=macro_variables_ushort_array_3d_9(stemp_n(1),stemp_n(2),stemp_n(3))
					End Select
			End Select
			s2=Mid(s2,1,variables_x(j)-1)+LTrim(Str(n_ushort))+Mid(s2,closeprin_x+1)
		Case "LONG_ARRAY"
			Select Case macro_variables_info(i,5)
				Case "2d"
					Select Case macro_variables_info(i,3)
						Case "1"
							n_long=macro_variables_long_array_2d_1(stemp_n(1),stemp_n(2))
						Case "2"
							n_long=macro_variables_long_array_2d_2(stemp_n(1),stemp_n(2))
						Case "3"
							n_long=macro_variables_long_array_2d_3(stemp_n(1),stemp_n(2))
						Case "4"
							n_long=macro_variables_long_array_2d_4(stemp_n(1),stemp_n(2))
						Case "5"
							n_long=macro_variables_long_array_2d_5(stemp_n(1),stemp_n(2))
						Case "6"
							n_long=macro_variables_long_array_2d_6(stemp_n(1),stemp_n(2))
						Case "7"
							n_long=macro_variables_long_array_2d_7(stemp_n(1),stemp_n(2))
						Case "8"
							n_long=macro_variables_long_array_2d_8(stemp_n(1),stemp_n(2))
						Case "9"
							n_long=macro_variables_long_array_2d_9(stemp_n(1),stemp_n(2))
					End Select
				Case "3d"
					Select Case macro_variables_info(i,3)
						Case "1"
							n_long=macro_variables_long_array_3d_1(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "2"
							n_long=macro_variables_long_array_3d_2(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "3"
							n_long=macro_variables_long_array_3d_3(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "4"
							n_long=macro_variables_long_array_3d_4(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "5"
							n_long=macro_variables_long_array_3d_5(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "6"
							n_long=macro_variables_long_array_3d_6(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "7"
							n_long=macro_variables_long_array_3d_7(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "8"
							n_long=macro_variables_long_array_3d_8(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "9"
							n_long=macro_variables_long_array_3d_9(stemp_n(1),stemp_n(2),stemp_n(3))
					End Select
			End Select
			s2=Mid(s2,1,variables_x(j)-1)+LTrim(Str(n_long))+Mid(s2,closeprin_x+1)
		Case "ULONG_ARRAY"
			Select Case macro_variables_info(i,5)
				Case "2d"
					Select Case macro_variables_info(i,3)
						Case "1"
							n_ulong=macro_variables_ulong_array_2d_1(stemp_n(1),stemp_n(2))
						Case "2"
							n_ulong=macro_variables_ulong_array_2d_2(stemp_n(1),stemp_n(2))
						Case "3"
							n_ulong=macro_variables_ulong_array_2d_3(stemp_n(1),stemp_n(2))
						Case "4"
							n_ulong=macro_variables_ulong_array_2d_4(stemp_n(1),stemp_n(2))
						Case "5"
							n_ulong=macro_variables_ulong_array_2d_5(stemp_n(1),stemp_n(2))
						Case "6"
							n_ulong=macro_variables_ulong_array_2d_6(stemp_n(1),stemp_n(2))
						Case "7"
							n_ulong=macro_variables_ulong_array_2d_7(stemp_n(1),stemp_n(2))
						Case "8"
							n_ulong=macro_variables_ulong_array_2d_8(stemp_n(1),stemp_n(2))
						Case "9"
							n_ulong=macro_variables_ulong_array_2d_9(stemp_n(1),stemp_n(2))
					End Select
				Case "3d"
					Select Case macro_variables_info(i,3)
						Case "1"
							n_ulong=macro_variables_ulong_array_3d_1(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "2"
							n_ulong=macro_variables_ulong_array_3d_2(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "3"
							n_ulong=macro_variables_ulong_array_3d_3(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "4"
							n_ulong=macro_variables_ulong_array_3d_4(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "5"
							n_ulong=macro_variables_ulong_array_3d_5(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "6"
							n_ulong=macro_variables_ulong_array_3d_6(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "7"
							n_ulong=macro_variables_ulong_array_3d_7(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "8"
							n_ulong=macro_variables_ulong_array_3d_8(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "9"
							n_ulong=macro_variables_ulong_array_3d_9(stemp_n(1),stemp_n(2),stemp_n(3))
					End Select
			End Select
			s2=Mid(s2,1,variables_x(j)-1)+LTrim(Str(n_ulong))+Mid(s2,closeprin_x+1)
		Case "INTEGER_ARRAY"
			Select Case macro_variables_info(i,5)
				Case "2d"
					Select Case macro_variables_info(i,3)
						Case "1"
							n=macro_variables_integer_array_2d_1(stemp_n(1),stemp_n(2))
						Case "2"
							n=macro_variables_integer_array_2d_2(stemp_n(1),stemp_n(2))
						Case "3"
							n=macro_variables_integer_array_2d_3(stemp_n(1),stemp_n(2))
						Case "4"
							n=macro_variables_integer_array_2d_4(stemp_n(1),stemp_n(2))
						Case "5"
							n=macro_variables_integer_array_2d_5(stemp_n(1),stemp_n(2))
						Case "6"
							n=macro_variables_integer_array_2d_6(stemp_n(1),stemp_n(2))
						Case "7"
							n=macro_variables_integer_array_2d_7(stemp_n(1),stemp_n(2))
						Case "8"
							n=macro_variables_integer_array_2d_8(stemp_n(1),stemp_n(2))
						Case "9"
							n=macro_variables_integer_array_2d_9(stemp_n(1),stemp_n(2))
					End Select
				Case "3d"
					Select Case macro_variables_info(i,3)
						Case "1"
							n=macro_variables_integer_array_3d_1(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "2"
							n=macro_variables_integer_array_3d_2(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "3"
							n=macro_variables_integer_array_3d_3(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "4"
							n=macro_variables_integer_array_3d_4(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "5"
							n=macro_variables_integer_array_3d_5(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "6"
							n=macro_variables_integer_array_3d_6(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "7"
							n=macro_variables_integer_array_3d_7(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "8"
							n=macro_variables_integer_array_3d_8(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "9"
							n=macro_variables_integer_array_3d_9(stemp_n(1),stemp_n(2),stemp_n(3))
					End Select
			End Select
			s2=Mid(s2,1,variables_x(j)-1)+LTrim(Str(n))+Mid(s2,closeprin_x+1)
		Case "UINTEGER_ARRAY"
			Select Case macro_variables_info(i,5)
				Case "2d"
					Select Case macro_variables_info(i,3)
						Case "1"
							n_uinteger=macro_variables_uinteger_array_2d_1(stemp_n(1),stemp_n(2))
						Case "2"
							n_uinteger=macro_variables_uinteger_array_2d_2(stemp_n(1),stemp_n(2))
						Case "3"
							n_uinteger=macro_variables_uinteger_array_2d_3(stemp_n(1),stemp_n(2))
						Case "4"
							n_uinteger=macro_variables_uinteger_array_2d_4(stemp_n(1),stemp_n(2))
						Case "5"
							n_uinteger=macro_variables_uinteger_array_2d_5(stemp_n(1),stemp_n(2))
						Case "6"
							n_uinteger=macro_variables_uinteger_array_2d_6(stemp_n(1),stemp_n(2))
						Case "7"
							n_uinteger=macro_variables_uinteger_array_2d_7(stemp_n(1),stemp_n(2))
						Case "8"
							n_uinteger=macro_variables_uinteger_array_2d_8(stemp_n(1),stemp_n(2))
						Case "9"
							n_uinteger=macro_variables_uinteger_array_2d_9(stemp_n(1),stemp_n(2))
					End Select
				Case "3d"
					Select Case macro_variables_info(i,3)
						Case "1"
							n_uinteger=macro_variables_uinteger_array_3d_1(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "2"
							n_uinteger=macro_variables_uinteger_array_3d_2(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "3"
							n_uinteger=macro_variables_uinteger_array_3d_3(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "4"
							n_uinteger=macro_variables_uinteger_array_3d_4(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "5"
							n_uinteger=macro_variables_uinteger_array_3d_5(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "6"
							n_uinteger=macro_variables_uinteger_array_3d_6(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "7"
							n_uinteger=macro_variables_uinteger_array_3d_7(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "8"
							n_uinteger=macro_variables_uinteger_array_3d_8(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "9"
							n_uinteger=macro_variables_uinteger_array_3d_9(stemp_n(1),stemp_n(2),stemp_n(3))
					End Select
			End Select
			s2=Mid(s2,1,variables_x(j)-1)+LTrim(Str(n_uinteger))+Mid(s2,closeprin_x+1)
		Case "LONGINT_ARRAY"
			Select Case macro_variables_info(i,5)
				Case "2d"
					Select Case macro_variables_info(i,3)
						Case "1"
							n_longint=macro_variables_longint_array_2d_1(stemp_n(1),stemp_n(2))
						Case "2"
							n_longint=macro_variables_longint_array_2d_2(stemp_n(1),stemp_n(2))
						Case "3"
							n_longint=macro_variables_longint_array_2d_3(stemp_n(1),stemp_n(2))
						Case "4"
							n_longint=macro_variables_longint_array_2d_4(stemp_n(1),stemp_n(2))
						Case "5"
							n_longint=macro_variables_longint_array_2d_5(stemp_n(1),stemp_n(2))
						Case "6"
							n_longint=macro_variables_longint_array_2d_6(stemp_n(1),stemp_n(2))
						Case "7"
							n_longint=macro_variables_longint_array_2d_7(stemp_n(1),stemp_n(2))
						Case "8"
							n_longint=macro_variables_longint_array_2d_8(stemp_n(1),stemp_n(2))
						Case "9"
							n_longint=macro_variables_longint_array_2d_9(stemp_n(1),stemp_n(2))
					End Select
				Case "3d"
					Select Case macro_variables_info(i,3)
						Case "1"
							n_longint=macro_variables_longint_array_3d_1(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "2"
							n_longint=macro_variables_longint_array_3d_2(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "3"
							n_longint=macro_variables_longint_array_3d_3(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "4"
							n_longint=macro_variables_longint_array_3d_4(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "5"
							n_longint=macro_variables_longint_array_3d_5(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "6"
							n_longint=macro_variables_longint_array_3d_6(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "7"
							n_longint=macro_variables_longint_array_3d_7(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "8"
							n_longint=macro_variables_longint_array_3d_8(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "9"
							n_longint=macro_variables_longint_array_3d_9(stemp_n(1),stemp_n(2),stemp_n(3))
					End Select
			End Select
			s2=Mid(s2,1,variables_x(j)-1)+LTrim(Str(n_longint))+Mid(s2,closeprin_x+1)
		Case "ULONGINT_ARRAY"
			Select Case macro_variables_info(i,5)
				Case "2d"
					Select Case macro_variables_info(i,3)
						Case "1"
							n_ulongint=macro_variables_ulongint_array_2d_1(stemp_n(1),stemp_n(2))
						Case "2"
							n_ulongint=macro_variables_ulongint_array_2d_2(stemp_n(1),stemp_n(2))
						Case "3"
							n_ulongint=macro_variables_ulongint_array_2d_3(stemp_n(1),stemp_n(2))
						Case "4"
							n_ulongint=macro_variables_ulongint_array_2d_4(stemp_n(1),stemp_n(2))
						Case "5"
							n_ulongint=macro_variables_ulongint_array_2d_5(stemp_n(1),stemp_n(2))
						Case "6"
							n_ulongint=macro_variables_ulongint_array_2d_6(stemp_n(1),stemp_n(2))
						Case "7"
							n_ulongint=macro_variables_ulongint_array_2d_7(stemp_n(1),stemp_n(2))
						Case "8"
							n_ulongint=macro_variables_ulongint_array_2d_8(stemp_n(1),stemp_n(2))
						Case "9"
							n_ulongint=macro_variables_ulongint_array_2d_9(stemp_n(1),stemp_n(2))
					End Select
				Case "3d"
					Select Case macro_variables_info(i,3)
						Case "1"
							n_ulongint=macro_variables_ulongint_array_3d_1(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "2"
							n_ulongint=macro_variables_ulongint_array_3d_2(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "3"
							n_ulongint=macro_variables_ulongint_array_3d_3(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "4"
							n_ulongint=macro_variables_ulongint_array_3d_4(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "5"
							n_ulongint=macro_variables_ulongint_array_3d_5(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "6"
							n_ulongint=macro_variables_ulongint_array_3d_6(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "7"
							n_ulongint=macro_variables_ulongint_array_3d_7(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "8"
							n_ulongint=macro_variables_ulongint_array_3d_8(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "9"
							n_ulongint=macro_variables_ulongint_array_3d_9(stemp_n(1),stemp_n(2),stemp_n(3))
					End Select
			End Select
			s2=Mid(s2,1,variables_x(j)-1)+LTrim(Str(n_ulongint))+Mid(s2,closeprin_x+1)
		Case "SINGLE_ARRAY"
			Select Case macro_variables_info(i,5)
				Case "2d"
					Select Case macro_variables_info(i,3)
						Case "1"
							n_single=macro_variables_single_array_2d_1(stemp_n(1),stemp_n(2))
						Case "2"
							n_single=macro_variables_single_array_2d_2(stemp_n(1),stemp_n(2))
						Case "3"
							n_single=macro_variables_single_array_2d_3(stemp_n(1),stemp_n(2))
						Case "4"
							n_single=macro_variables_single_array_2d_4(stemp_n(1),stemp_n(2))
						Case "5"
							n_single=macro_variables_single_array_2d_5(stemp_n(1),stemp_n(2))
						Case "6"
							n_single=macro_variables_single_array_2d_6(stemp_n(1),stemp_n(2))
						Case "7"
							n_single=macro_variables_single_array_2d_7(stemp_n(1),stemp_n(2))
						Case "8"
							n_single=macro_variables_single_array_2d_8(stemp_n(1),stemp_n(2))
						Case "9"
							n_single=macro_variables_single_array_2d_9(stemp_n(1),stemp_n(2))
					End Select
				Case "3d"
					Select Case macro_variables_info(i,3)
						Case "1"
							n_single=macro_variables_single_array_3d_1(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "2"
							n_single=macro_variables_single_array_3d_2(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "3"
							n_single=macro_variables_single_array_3d_3(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "4"
							n_single=macro_variables_single_array_3d_4(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "5"
							n_single=macro_variables_single_array_3d_5(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "6"
							n_single=macro_variables_single_array_3d_6(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "7"
							n_single=macro_variables_single_array_3d_7(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "8"
							n_single=macro_variables_single_array_3d_8(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "9"
							n_single=macro_variables_single_array_3d_9(stemp_n(1),stemp_n(2),stemp_n(3))
					End Select
			End Select
			s2=Mid(s2,1,variables_x(j)-1)+LTrim(Str(n_single))+Mid(s2,closeprin_x+1)
		Case "DOUBLE_ARRAY"
			Select Case macro_variables_info(i,5)
				Case "2d"
					Select Case macro_variables_info(i,3)
						Case "1"
							dn=macro_variables_double_array_2d_1(stemp_n(1),stemp_n(2))
						Case "2"
							dn=macro_variables_double_array_2d_2(stemp_n(1),stemp_n(2))
						Case "3"
							dn=macro_variables_double_array_2d_3(stemp_n(1),stemp_n(2))
						Case "4"
							dn=macro_variables_double_array_2d_4(stemp_n(1),stemp_n(2))
						Case "5"
							dn=macro_variables_double_array_2d_5(stemp_n(1),stemp_n(2))
						Case "6"
							dn=macro_variables_double_array_2d_6(stemp_n(1),stemp_n(2))
						Case "7"
							dn=macro_variables_double_array_2d_7(stemp_n(1),stemp_n(2))
						Case "8"
							dn=macro_variables_double_array_2d_8(stemp_n(1),stemp_n(2))
						Case "9"
							dn=macro_variables_double_array_2d_9(stemp_n(1),stemp_n(2))
					End Select
				Case "3d"
					Select Case macro_variables_info(i,3)
						Case "1"
							dn=macro_variables_double_array_3d_1(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "2"
							dn=macro_variables_double_array_3d_2(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "3"
							dn=macro_variables_double_array_3d_3(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "4"
							dn=macro_variables_double_array_3d_4(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "5"
							dn=macro_variables_double_array_3d_5(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "6"
							dn=macro_variables_double_array_3d_6(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "7"
							dn=macro_variables_double_array_3d_7(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "8"
							dn=macro_variables_double_array_3d_8(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "9"
							dn=macro_variables_double_array_3d_9(stemp_n(1),stemp_n(2),stemp_n(3))
					End Select
			End Select
			s2=Mid(s2,1,variables_x(j)-1)+LTrim(Str(dn))+Mid(s2,closeprin_x+1)
		Case "STRING_ARRAY"
			Select Case macro_variables_info(i,5)
				Case "2d"
					Select Case macro_variables_info(i,3)
						Case "1"
							n_string=macro_variables_string_array_2d_1(stemp_n(1),stemp_n(2))
						Case "2"
							n_string=macro_variables_string_array_2d_2(stemp_n(1),stemp_n(2))
						Case "3"
							n_string=macro_variables_string_array_2d_3(stemp_n(1),stemp_n(2))
						Case "4"
							n_string=macro_variables_string_array_2d_4(stemp_n(1),stemp_n(2))
						Case "5"
							n_string=macro_variables_string_array_2d_5(stemp_n(1),stemp_n(2))
						Case "6"
							n_string=macro_variables_string_array_2d_6(stemp_n(1),stemp_n(2))
						Case "7"
							n_string=macro_variables_string_array_2d_7(stemp_n(1),stemp_n(2))
						Case "8"
							n_string=macro_variables_string_array_2d_8(stemp_n(1),stemp_n(2))
						Case "9"
							n_string=macro_variables_string_array_2d_9(stemp_n(1),stemp_n(2))
					End Select
				Case "3d"
					Select Case macro_variables_info(i,3)
						Case "1"
							n_string=macro_variables_string_array_3d_1(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "2"
							n_string=macro_variables_string_array_3d_2(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "3"
							n_string=macro_variables_string_array_3d_3(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "4"
							n_string=macro_variables_string_array_3d_4(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "5"
							n_string=macro_variables_string_array_3d_5(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "6"
							n_string=macro_variables_string_array_3d_6(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "7"
							n_string=macro_variables_string_array_3d_7(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "8"
							n_string=macro_variables_string_array_3d_8(stemp_n(1),stemp_n(2),stemp_n(3))
						Case "9"
							n_string=macro_variables_string_array_3d_9(stemp_n(1),stemp_n(2),stemp_n(3))
					End Select
			End Select
			s2=Mid(s2,1,variables_x(j)-1)+Chr(34)+n_string+Chr(34)+Mid(s2,closeprin_x+1)
	End Select
	Return s2
End Function

Function cleanupthestring(temp As String) As String
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Function cleanupthestring"
		Print #5,"temp:";temp
		'For dbugi=LBound(temp) To UBound(temp)
			'Print #5,"temp("; dbugi; "):"; temp(dbugi)
		'Next
		Print #5,"---------------"
	EndIf
	Dim As Integer x,i
	Dim As BOOLEAN quote
	Dim As String temp2
	x=InStr(temp,"'") 'remove comments
	If x>0 Then temp=Left(temp,x-1)
	'temp=LCase(temp) 'convert the string to lower case
	quote=FALSE
	For i=1 To Len(temp)
		If Mid(temp,i,1)=Chr(34) Then
			If quote=FALSE Then
				quote=TRUE
			Else
				quote=FALSE
			EndIf
		EndIf
		If quote=FALSE Then Mid(temp,i,1)=LCase(Mid(temp,i,1))
	Next
	If Right(temp,1)="," Then temp=Left(temp,Len(temp)-1)
	temp2=""
	For i = 1 To Len(temp)
		If Asc(Mid(temp,i,1))<>9 Then temp2+=Mid(temp,i,1)
	Next
	temp=temp2
	temp=LTrim(RTrim(temp)) 'remove spaces from the beginning and end of the string
	Return temp
End Function

Function func_value(func_text As String) As String
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Function func_value"
		Print #5,"func_text:";func_text
		'For dbugi=LBound(temp) To UBound(temp)
			'Print #5,"temp("; dbugi; "):"; temp(dbugi)
		'Next
		Print #5,"---------------"
	EndIf
	Dim As Integer i,j,k,x,c,a,b,ai1,ai2,ai3
	Dim As BOOLEAN keyword_command_found
	Dim As String temp,temps(),temp2,array_index,temptemp
	Dim As Integer temps_c
	Dim As Integer stringpartc

	temp=func_text
	For i= 1 To macro_function_c
		If temp=macro_function_name(i) Then
			clear_sub_function_variables(macro_function_name(i))
			For j=1 To macro_function_data_c
				If macro_function_data(j)=macro_function_name(i) Then
					c=1
					For k=1 To CInt(macro_function_data(j+c))
						c+=1
						'Print "*************** function data ****** iterate k=";k;" data=";macro_function_data(j+c)
					Next
					c+=1
					'Print "*************** function data ****** one more time=";macro_function_data(j+c)
					temps_c=0
					ReDim temps(temps_c)
					For k=1 To CInt(macro_function_data(j+c))
						c+=1
						'Print "*************** function data ****** 2nd k=";macro_function_data(j+c)
						temps_c+=1
						ReDim Preserve temps(temps_c)
						temps(temps_c)=macro_function_data(j+c)
					Next
					For k=1 To temps_c
						temp=temps(k)
						k=keyword_commands_block(k,temps_c,temp,temps())
					Next
					Exit For
				EndIf
			Next
			Exit For
		Else 'function routine is called and parms are parsed ie. A=f(x)
			clear_sub_function_variables(macro_function_name(i))
			'note: this does not address A=B+f(x) or A=f(x)+B
			If LTrim(RTrim(Mid(temp,1,InStr(temp,"(")-1)))=macro_function_name(i) Then
				temp=LTrim(Mid(temp,InStr(temp,"(")+1)) 'test(x(),1) = x(),1)
				temp=RTrim(Left(temp,Len(temp)-1)) 'x(),1) = x(),1
				getparts(temp)
				For j=1 To macro_function_data_c
					If macro_function_data(j)=macro_function_name(i) Then
						macro_function_recursion_c+=1
						ReDim Preserve macro_function_return(macro_function_recursion_c)
						ReDim Preserve macro_function_exit(macro_function_recursion_c)
						macro_function_return(macro_function_recursion_c)=macro_function_name(i)+"_return"
						macro_function_exit(macro_function_recursion_c)=FALSE
						stringpartc=0
						c=1
						For k=1 To CInt(macro_function_data(j+c))
							c+=1
							stringpartc+=1
							If InStr(string_parts(stringpartc),"()") Then 'copy array x() to test_n()
								temp=LTrim(RTrim(Mid(string_parts(stringpartc),1,InStr(string_parts(stringpartc),"(")-1)))
								For a=1 To macro_variables_info_c
									If temp=macro_variables_info(a,1) Then
										temp="redim "+macro_function_data(j+c)+macro_variables_info(a,4)
										'Print temp
										keyword_redim(temp)
										For b=1 To macro_variables_info_c
											If macro_function_data(j+c)=macro_variables_info(b,1) Then
												array_index=macro_variables_info(b,3)
												Exit For
											EndIf
										Next
										copy_array(a,array_index)
										Exit For
									EndIf
								Next
							Else
								temp=macro_function_data(j+c)+"="+string_parts(stringpartc)
								keyword_let(temp)
							EndIf
						Next
						c+=1
						temps_c=0
						ReDim temps(temps_c)
						For k=1 To CInt(macro_function_data(j+c))
							c+=1
							temps_c+=1
							ReDim Preserve temps(temps_c)
							temps(temps_c)=macro_function_data(j+c)
						Next
						For k=1 To temps_c
							temp=temps(k)
							k=keyword_commands_block(k,temps_c,temp,temps())
							If macro_function_exit(macro_function_recursion_c)=TRUE Then Exit For
						Next
						temp=macro_function_return(macro_function_recursion_c)
						macro_function_recursion_c-=1
						Exit For
					EndIf
				Next
				Exit For
			EndIf
		EndIf
	Next
	For i=1 To macro_variables_info_c
		If temp=macro_variables_info(i,1) Then
			Select Case macro_variables_info(i,2)
				Case "BOOLEAN"
					Return Str(macro_variables_boolean_value(CInt(macro_variables_info(i,3))))
				Case "BYTE"
					Return Str(macro_variables_byte_value(CInt(macro_variables_info(i,3))))
				Case "UBYTE"
					Return Str(macro_variables_ubyte_value(CInt(macro_variables_info(i,3))))
				Case "SHORT"
					Return Str(macro_variables_short_value(CInt(macro_variables_info(i,3))))
				Case "USHORT"
					Return Str(macro_variables_ushort_value(CInt(macro_variables_info(i,3))))
				Case "LONG"
					Return Str(macro_variables_long_value(CInt(macro_variables_info(i,3))))
				Case "ULONG"
					Return Str(macro_variables_ulong_value(CInt(macro_variables_info(i,3))))
				Case "INTEGER"
					Return Str(macro_variables_integer_value(CInt(macro_variables_info(i,3))))
				Case "UINTEGER"
					Return Str(macro_variables_uinteger_value(CInt(macro_variables_info(i,3))))
				Case "LONGINT"
					Return Str(macro_variables_longint_value(CInt(macro_variables_info(i,3))))
				Case "ULONGINT"
					Return Str(macro_variables_ulongint_value(CInt(macro_variables_info(i,3))))
				Case "SINGLE"
					Return Str(macro_variables_single_value(CInt(macro_variables_info(i,3))))
				Case "DOUBLE"
					Return Str(macro_variables_double_value(CInt(macro_variables_info(i,3))))
				Case "STRING"
					Return macro_variables_string_value(CInt(macro_variables_info(i,3)))
			End Select
			Exit For
		EndIf
	Next
End Function

Sub init_fbcadcam_macro()
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Sub init_fbcadcam_macro"
		'Print #5,"temp:";temp
		'For dbugi=LBound(temp) To UBound(temp)
			'Print #5,"temp("; dbugi; "):"; temp(dbugi)
		'Next
		Print #5,"---------------"
	EndIf
	fbcadcam_macro_debug=""
	
	ReDim  macro_variables_boolean_value(0)
	ReDim  macro_variables_byte_value(0)
	ReDim macro_variables_ubyte_value(0)
	ReDim macro_variables_short_value(0)
	ReDim macro_variables_ushort_value(0)
	ReDim macro_variables_long_value(0)
	ReDim macro_variables_ulong_value(0)
	ReDim macro_variables_integer_value(0)
	ReDim macro_variables_uinteger_value(0)
	ReDim macro_variables_longint_value(0)
	ReDim macro_variables_ulongint_value(0)
	ReDim macro_variables_single_value(0)
	ReDim macro_variables_double_value(0)
	ReDim macro_variables_string_value(0)
	
	macro_variables_boolean_c=0
	macro_variables_byte_c=0
	macro_variables_ubyte_c=0
	macro_variables_short_c=0
	macro_variables_ushort_c=0
	macro_variables_long_c=0
	macro_variables_ulong_c=0
	macro_variables_integer_c=0
	macro_variables_uinteger_c=0
	macro_variables_longint_c=0
	macro_variables_ulongint_c=0
	macro_variables_single_c=0
	macro_variables_double_c=0
	macro_variables_string_c=0
	
	macro_variables_boolean_array_1d_c=0
	ReDim macro_variables_boolean_array_1d_1(0)
	ReDim macro_variables_boolean_array_1d_2(0)
	ReDim macro_variables_boolean_array_1d_3(0)
	ReDim macro_variables_boolean_array_1d_4(0)
	ReDim macro_variables_boolean_array_1d_5(0)
	ReDim macro_variables_boolean_array_1d_6(0)
	ReDim macro_variables_boolean_array_1d_7(0)
	ReDim macro_variables_boolean_array_1d_8(0)
	ReDim macro_variables_boolean_array_1d_9(0)
	macro_variables_boolean_array_2d_c=0
	ReDim macro_variables_boolean_array_2d_1(0,0)
	ReDim macro_variables_boolean_array_2d_2(0,0)
	ReDim macro_variables_boolean_array_2d_3(0,0)
	ReDim macro_variables_boolean_array_2d_4(0,0)
	ReDim macro_variables_boolean_array_2d_5(0,0)
	ReDim macro_variables_boolean_array_2d_6(0,0)
	ReDim macro_variables_boolean_array_2d_7(0,0)
	ReDim macro_variables_boolean_array_2d_8(0,0)
	ReDim macro_variables_boolean_array_2d_9(0,0)
	macro_variables_boolean_array_3d_c=0
	ReDim macro_variables_boolean_array_3d_1(0,0,0)
	ReDim macro_variables_boolean_array_3d_2(0,0,0)
	ReDim macro_variables_boolean_array_3d_3(0,0,0)
	ReDim macro_variables_boolean_array_3d_4(0,0,0)
	ReDim macro_variables_boolean_array_3d_5(0,0,0)
	ReDim macro_variables_boolean_array_3d_6(0,0,0)
	ReDim macro_variables_boolean_array_3d_7(0,0,0)
	ReDim macro_variables_boolean_array_3d_8(0,0,0)
	ReDim macro_variables_boolean_array_3d_9(0,0,0)
	
	macro_variables_byte_array_1d_c=0
	ReDim macro_variables_byte_array_1d_1(0)
	ReDim macro_variables_byte_array_1d_2(0)
	ReDim macro_variables_byte_array_1d_3(0)
	ReDim macro_variables_byte_array_1d_4(0)
	ReDim macro_variables_byte_array_1d_5(0)
	ReDim macro_variables_byte_array_1d_6(0)
	ReDim macro_variables_byte_array_1d_7(0)
	ReDim macro_variables_byte_array_1d_8(0)
	ReDim macro_variables_byte_array_1d_9(0)
	macro_variables_byte_array_2d_c=0
	ReDim macro_variables_byte_array_2d_1(0,0)
	ReDim macro_variables_byte_array_2d_2(0,0)
	ReDim macro_variables_byte_array_2d_3(0,0)
	ReDim macro_variables_byte_array_2d_4(0,0)
	ReDim macro_variables_byte_array_2d_5(0,0)
	ReDim macro_variables_byte_array_2d_6(0,0)
	ReDim macro_variables_byte_array_2d_7(0,0)
	ReDim macro_variables_byte_array_2d_8(0,0)
	ReDim macro_variables_byte_array_2d_9(0,0)
	macro_variables_byte_array_3d_c=0
	ReDim macro_variables_byte_array_3d_1(0,0,0)
	ReDim macro_variables_byte_array_3d_2(0,0,0)
	ReDim macro_variables_byte_array_3d_3(0,0,0)
	ReDim macro_variables_byte_array_3d_4(0,0,0)
	ReDim macro_variables_byte_array_3d_5(0,0,0)
	ReDim macro_variables_byte_array_3d_6(0,0,0)
	ReDim macro_variables_byte_array_3d_7(0,0,0)
	ReDim macro_variables_byte_array_3d_8(0,0,0)
	ReDim macro_variables_byte_array_3d_9(0,0,0)
	
	macro_variables_ubyte_array_1d_c=0
	ReDim macro_variables_ubyte_array_1d_1(0)
	ReDim macro_variables_ubyte_array_1d_2(0)
	ReDim macro_variables_ubyte_array_1d_3(0)
	ReDim macro_variables_ubyte_array_1d_4(0)
	ReDim macro_variables_ubyte_array_1d_5(0)
	ReDim macro_variables_ubyte_array_1d_6(0)
	ReDim macro_variables_ubyte_array_1d_7(0)
	ReDim macro_variables_ubyte_array_1d_8(0)
	ReDim macro_variables_ubyte_array_1d_9(0)
	macro_variables_ubyte_array_2d_c=0
	ReDim macro_variables_ubyte_array_2d_1(0,0)
	ReDim macro_variables_ubyte_array_2d_2(0,0)
	ReDim macro_variables_ubyte_array_2d_3(0,0)
	ReDim macro_variables_ubyte_array_2d_4(0,0)
	ReDim macro_variables_ubyte_array_2d_5(0,0)
	ReDim macro_variables_ubyte_array_2d_6(0,0)
	ReDim macro_variables_ubyte_array_2d_7(0,0)
	ReDim macro_variables_ubyte_array_2d_8(0,0)
	ReDim macro_variables_ubyte_array_2d_9(0,0)
	macro_variables_ubyte_array_3d_c=0
	ReDim macro_variables_ubyte_array_3d_1(0,0,0)
	ReDim macro_variables_ubyte_array_3d_2(0,0,0)
	ReDim macro_variables_ubyte_array_3d_3(0,0,0)
	ReDim macro_variables_ubyte_array_3d_4(0,0,0)
	ReDim macro_variables_ubyte_array_3d_5(0,0,0)
	ReDim macro_variables_ubyte_array_3d_6(0,0,0)
	ReDim macro_variables_ubyte_array_3d_7(0,0,0)
	ReDim macro_variables_ubyte_array_3d_8(0,0,0)
	ReDim macro_variables_ubyte_array_3d_9(0,0,0)
	
	macro_variables_short_array_1d_c=0
	ReDim macro_variables_short_array_1d_1(0)
	ReDim macro_variables_short_array_1d_2(0)
	ReDim macro_variables_short_array_1d_3(0)
	ReDim macro_variables_short_array_1d_4(0)
	ReDim macro_variables_short_array_1d_5(0)
	ReDim macro_variables_short_array_1d_6(0)
	ReDim macro_variables_short_array_1d_7(0)
	ReDim macro_variables_short_array_1d_8(0)
	ReDim macro_variables_short_array_1d_9(0)
	macro_variables_short_array_2d_c=0
	ReDim macro_variables_short_array_2d_1(0,0)
	ReDim macro_variables_short_array_2d_2(0,0)
	ReDim macro_variables_short_array_2d_3(0,0)
	ReDim macro_variables_short_array_2d_4(0,0)
	ReDim macro_variables_short_array_2d_5(0,0)
	ReDim macro_variables_short_array_2d_6(0,0)
	ReDim macro_variables_short_array_2d_7(0,0)
	ReDim macro_variables_short_array_2d_8(0,0)
	ReDim macro_variables_short_array_2d_9(0,0)
	macro_variables_short_array_3d_c=0
	ReDim macro_variables_short_array_3d_1(0,0,0)
	ReDim macro_variables_short_array_3d_2(0,0,0)
	ReDim macro_variables_short_array_3d_3(0,0,0)
	ReDim macro_variables_short_array_3d_4(0,0,0)
	ReDim macro_variables_short_array_3d_5(0,0,0)
	ReDim macro_variables_short_array_3d_6(0,0,0)
	ReDim macro_variables_short_array_3d_7(0,0,0)
	ReDim macro_variables_short_array_3d_8(0,0,0)
	ReDim macro_variables_short_array_3d_9(0,0,0)
	
	macro_variables_ushort_array_1d_c=0
	ReDim macro_variables_ushort_array_1d_1(0)
	ReDim macro_variables_ushort_array_1d_2(0)
	ReDim macro_variables_ushort_array_1d_3(0)
	ReDim macro_variables_ushort_array_1d_4(0)
	ReDim macro_variables_ushort_array_1d_5(0)
	ReDim macro_variables_ushort_array_1d_6(0)
	ReDim macro_variables_ushort_array_1d_7(0)
	ReDim macro_variables_ushort_array_1d_8(0)
	ReDim macro_variables_ushort_array_1d_9(0)
	macro_variables_ushort_array_2d_c=0
	ReDim macro_variables_ushort_array_2d_1(0,0)
	ReDim macro_variables_ushort_array_2d_2(0,0)
	ReDim macro_variables_ushort_array_2d_3(0,0)
	ReDim macro_variables_ushort_array_2d_4(0,0)
	ReDim macro_variables_ushort_array_2d_5(0,0)
	ReDim macro_variables_ushort_array_2d_6(0,0)
	ReDim macro_variables_ushort_array_2d_7(0,0)
	ReDim macro_variables_ushort_array_2d_8(0,0)
	ReDim macro_variables_ushort_array_2d_9(0,0)
	macro_variables_ushort_array_3d_c=0
	ReDim macro_variables_ushort_array_3d_1(0,0,0)
	ReDim macro_variables_ushort_array_3d_2(0,0,0)
	ReDim macro_variables_ushort_array_3d_3(0,0,0)
	ReDim macro_variables_ushort_array_3d_4(0,0,0)
	ReDim macro_variables_ushort_array_3d_5(0,0,0)
	ReDim macro_variables_ushort_array_3d_6(0,0,0)
	ReDim macro_variables_ushort_array_3d_7(0,0,0)
	ReDim macro_variables_ushort_array_3d_8(0,0,0)
	ReDim macro_variables_ushort_array_3d_9(0,0,0)
	
	macro_variables_long_array_1d_c=0
	ReDim macro_variables_long_array_1d_1(0)
	ReDim macro_variables_long_array_1d_2(0)
	ReDim macro_variables_long_array_1d_3(0)
	ReDim macro_variables_long_array_1d_4(0)
	ReDim macro_variables_long_array_1d_5(0)
	ReDim macro_variables_long_array_1d_6(0)
	ReDim macro_variables_long_array_1d_7(0)
	ReDim macro_variables_long_array_1d_8(0)
	ReDim macro_variables_long_array_1d_9(0)
	macro_variables_long_array_2d_c=0
	ReDim macro_variables_long_array_2d_1(0,0)
	ReDim macro_variables_long_array_2d_2(0,0)
	ReDim macro_variables_long_array_2d_3(0,0)
	ReDim macro_variables_long_array_2d_4(0,0)
	ReDim macro_variables_long_array_2d_5(0,0)
	ReDim macro_variables_long_array_2d_6(0,0)
	ReDim macro_variables_long_array_2d_7(0,0)
	ReDim macro_variables_long_array_2d_8(0,0)
	ReDim macro_variables_long_array_2d_9(0,0)
	macro_variables_long_array_3d_c=0
	ReDim macro_variables_long_array_3d_1(0,0,0)
	ReDim macro_variables_long_array_3d_2(0,0,0)
	ReDim macro_variables_long_array_3d_3(0,0,0)
	ReDim macro_variables_long_array_3d_4(0,0,0)
	ReDim macro_variables_long_array_3d_5(0,0,0)
	ReDim macro_variables_long_array_3d_6(0,0,0)
	ReDim macro_variables_long_array_3d_7(0,0,0)
	ReDim macro_variables_long_array_3d_8(0,0,0)
	ReDim macro_variables_long_array_3d_9(0,0,0)
	
	macro_variables_ulong_array_1d_c=0
	ReDim macro_variables_ulong_array_1d_1(0)
	ReDim macro_variables_ulong_array_1d_2(0)
	ReDim macro_variables_ulong_array_1d_3(0)
	ReDim macro_variables_ulong_array_1d_4(0)
	ReDim macro_variables_ulong_array_1d_5(0)
	ReDim macro_variables_ulong_array_1d_6(0)
	ReDim macro_variables_ulong_array_1d_7(0)
	ReDim macro_variables_ulong_array_1d_8(0)
	ReDim macro_variables_ulong_array_1d_9(0)
	macro_variables_ulong_array_2d_c=0
	ReDim macro_variables_ulong_array_2d_1(0,0)
	ReDim macro_variables_ulong_array_2d_2(0,0)
	ReDim macro_variables_ulong_array_2d_3(0,0)
	ReDim macro_variables_ulong_array_2d_4(0,0)
	ReDim macro_variables_ulong_array_2d_5(0,0)
	ReDim macro_variables_ulong_array_2d_6(0,0)
	ReDim macro_variables_ulong_array_2d_7(0,0)
	ReDim macro_variables_ulong_array_2d_8(0,0)
	ReDim macro_variables_ulong_array_2d_9(0,0)
	macro_variables_ulong_array_3d_c=0
	ReDim macro_variables_ulong_array_3d_1(0,0,0)
	ReDim macro_variables_ulong_array_3d_2(0,0,0)
	ReDim macro_variables_ulong_array_3d_3(0,0,0)
	ReDim macro_variables_ulong_array_3d_4(0,0,0)
	ReDim macro_variables_ulong_array_3d_5(0,0,0)
	ReDim macro_variables_ulong_array_3d_6(0,0,0)
	ReDim macro_variables_ulong_array_3d_7(0,0,0)
	ReDim macro_variables_ulong_array_3d_8(0,0,0)
	ReDim macro_variables_ulong_array_3d_9(0,0,0)
	
	macro_variables_integer_array_1d_c=0
	ReDim macro_variables_integer_array_1d_1(0)
	ReDim macro_variables_integer_array_1d_2(0)
	ReDim macro_variables_integer_array_1d_3(0)
	ReDim macro_variables_integer_array_1d_4(0)
	ReDim macro_variables_integer_array_1d_5(0)
	ReDim macro_variables_integer_array_1d_6(0)
	ReDim macro_variables_integer_array_1d_7(0)
	ReDim macro_variables_integer_array_1d_8(0)
	ReDim macro_variables_integer_array_1d_9(0)
	macro_variables_integer_array_2d_c=0
	ReDim macro_variables_integer_array_2d_1(0,0)
	ReDim macro_variables_integer_array_2d_2(0,0)
	ReDim macro_variables_integer_array_2d_3(0,0)
	ReDim macro_variables_integer_array_2d_4(0,0)
	ReDim macro_variables_integer_array_2d_5(0,0)
	ReDim macro_variables_integer_array_2d_6(0,0)
	ReDim macro_variables_integer_array_2d_7(0,0)
	ReDim macro_variables_integer_array_2d_8(0,0)
	ReDim macro_variables_integer_array_2d_9(0,0)
	macro_variables_integer_array_3d_c=0
	ReDim macro_variables_integer_array_3d_1(0,0,0)
	ReDim macro_variables_integer_array_3d_2(0,0,0)
	ReDim macro_variables_integer_array_3d_3(0,0,0)
	ReDim macro_variables_integer_array_3d_4(0,0,0)
	ReDim macro_variables_integer_array_3d_5(0,0,0)
	ReDim macro_variables_integer_array_3d_6(0,0,0)
	ReDim macro_variables_integer_array_3d_7(0,0,0)
	ReDim macro_variables_integer_array_3d_8(0,0,0)
	ReDim macro_variables_integer_array_3d_9(0,0,0)
	
	macro_variables_uinteger_array_1d_c=0
	ReDim macro_variables_uinteger_array_1d_1(0)
	ReDim macro_variables_uinteger_array_1d_2(0)
	ReDim macro_variables_uinteger_array_1d_3(0)
	ReDim macro_variables_uinteger_array_1d_4(0)
	ReDim macro_variables_uinteger_array_1d_5(0)
	ReDim macro_variables_uinteger_array_1d_6(0)
	ReDim macro_variables_uinteger_array_1d_7(0)
	ReDim macro_variables_uinteger_array_1d_8(0)
	ReDim macro_variables_uinteger_array_1d_9(0)
	macro_variables_uinteger_array_2d_c=0
	ReDim macro_variables_uinteger_array_2d_1(0,0)
	ReDim macro_variables_uinteger_array_2d_2(0,0)
	ReDim macro_variables_uinteger_array_2d_3(0,0)
	ReDim macro_variables_uinteger_array_2d_4(0,0)
	ReDim macro_variables_uinteger_array_2d_5(0,0)
	ReDim macro_variables_uinteger_array_2d_6(0,0)
	ReDim macro_variables_uinteger_array_2d_7(0,0)
	ReDim macro_variables_uinteger_array_2d_8(0,0)
	ReDim macro_variables_uinteger_array_2d_9(0,0)
	macro_variables_uinteger_array_3d_c=0
	ReDim macro_variables_uinteger_array_3d_1(0,0,0)
	ReDim macro_variables_uinteger_array_3d_2(0,0,0)
	ReDim macro_variables_uinteger_array_3d_3(0,0,0)
	ReDim macro_variables_uinteger_array_3d_4(0,0,0)
	ReDim macro_variables_uinteger_array_3d_5(0,0,0)
	ReDim macro_variables_uinteger_array_3d_6(0,0,0)
	ReDim macro_variables_uinteger_array_3d_7(0,0,0)
	ReDim macro_variables_uinteger_array_3d_8(0,0,0)
	ReDim macro_variables_uinteger_array_3d_9(0,0,0)
	
	macro_variables_longint_array_1d_c=0
	ReDim macro_variables_longint_array_1d_1(0)
	ReDim macro_variables_longint_array_1d_2(0)
	ReDim macro_variables_longint_array_1d_3(0)
	ReDim macro_variables_longint_array_1d_4(0)
	ReDim macro_variables_longint_array_1d_5(0)
	ReDim macro_variables_longint_array_1d_6(0)
	ReDim macro_variables_longint_array_1d_7(0)
	ReDim macro_variables_longint_array_1d_8(0)
	ReDim macro_variables_longint_array_1d_9(0)
	macro_variables_longint_array_2d_c=0
	ReDim macro_variables_longint_array_2d_1(0,0)
	ReDim macro_variables_longint_array_2d_2(0,0)
	ReDim macro_variables_longint_array_2d_3(0,0)
	ReDim macro_variables_longint_array_2d_4(0,0)
	ReDim macro_variables_longint_array_2d_5(0,0)
	ReDim macro_variables_longint_array_2d_6(0,0)
	ReDim macro_variables_longint_array_2d_7(0,0)
	ReDim macro_variables_longint_array_2d_8(0,0)
	ReDim macro_variables_longint_array_2d_9(0,0)
	macro_variables_longint_array_3d_c=0
	ReDim macro_variables_longint_array_3d_1(0,0,0)
	ReDim macro_variables_longint_array_3d_2(0,0,0)
	ReDim macro_variables_longint_array_3d_3(0,0,0)
	ReDim macro_variables_longint_array_3d_4(0,0,0)
	ReDim macro_variables_longint_array_3d_5(0,0,0)
	ReDim macro_variables_longint_array_3d_6(0,0,0)
	ReDim macro_variables_longint_array_3d_7(0,0,0)
	ReDim macro_variables_longint_array_3d_8(0,0,0)
	ReDim macro_variables_longint_array_3d_9(0,0,0)
	
	macro_variables_ulongint_array_1d_c=0
	ReDim macro_variables_ulongint_array_1d_1(0)
	ReDim macro_variables_ulongint_array_1d_2(0)
	ReDim macro_variables_ulongint_array_1d_3(0)
	ReDim macro_variables_ulongint_array_1d_4(0)
	ReDim macro_variables_ulongint_array_1d_5(0)
	ReDim macro_variables_ulongint_array_1d_6(0)
	ReDim macro_variables_ulongint_array_1d_7(0)
	ReDim macro_variables_ulongint_array_1d_8(0)
	ReDim macro_variables_ulongint_array_1d_9(0)
	macro_variables_ulongint_array_2d_c=0
	ReDim macro_variables_ulongint_array_2d_1(0,0)
	ReDim macro_variables_ulongint_array_2d_2(0,0)
	ReDim macro_variables_ulongint_array_2d_3(0,0)
	ReDim macro_variables_ulongint_array_2d_4(0,0)
	ReDim macro_variables_ulongint_array_2d_5(0,0)
	ReDim macro_variables_ulongint_array_2d_6(0,0)
	ReDim macro_variables_ulongint_array_2d_7(0,0)
	ReDim macro_variables_ulongint_array_2d_8(0,0)
	ReDim macro_variables_ulongint_array_2d_9(0,0)
	macro_variables_ulongint_array_3d_c=0
	ReDim macro_variables_ulongint_array_3d_1(0,0,0)
	ReDim macro_variables_ulongint_array_3d_2(0,0,0)
	ReDim macro_variables_ulongint_array_3d_3(0,0,0)
	ReDim macro_variables_ulongint_array_3d_4(0,0,0)
	ReDim macro_variables_ulongint_array_3d_5(0,0,0)
	ReDim macro_variables_ulongint_array_3d_6(0,0,0)
	ReDim macro_variables_ulongint_array_3d_7(0,0,0)
	ReDim macro_variables_ulongint_array_3d_8(0,0,0)
	ReDim macro_variables_ulongint_array_3d_9(0,0,0)
	
	macro_variables_single_array_1d_c=0
	ReDim macro_variables_single_array_1d_1(0)
	ReDim macro_variables_single_array_1d_2(0)
	ReDim macro_variables_single_array_1d_3(0)
	ReDim macro_variables_single_array_1d_4(0)
	ReDim macro_variables_single_array_1d_5(0)
	ReDim macro_variables_single_array_1d_6(0)
	ReDim macro_variables_single_array_1d_7(0)
	ReDim macro_variables_single_array_1d_8(0)
	ReDim macro_variables_single_array_1d_9(0)
	macro_variables_single_array_2d_c=0
	ReDim macro_variables_single_array_2d_1(0,0)
	ReDim macro_variables_single_array_2d_2(0,0)
	ReDim macro_variables_single_array_2d_3(0,0)
	ReDim macro_variables_single_array_2d_4(0,0)
	ReDim macro_variables_single_array_2d_5(0,0)
	ReDim macro_variables_single_array_2d_6(0,0)
	ReDim macro_variables_single_array_2d_7(0,0)
	ReDim macro_variables_single_array_2d_8(0,0)
	ReDim macro_variables_single_array_2d_9(0,0)
	macro_variables_single_array_3d_c=0
	ReDim macro_variables_single_array_3d_1(0,0,0)
	ReDim macro_variables_single_array_3d_2(0,0,0)
	ReDim macro_variables_single_array_3d_3(0,0,0)
	ReDim macro_variables_single_array_3d_4(0,0,0)
	ReDim macro_variables_single_array_3d_5(0,0,0)
	ReDim macro_variables_single_array_3d_6(0,0,0)
	ReDim macro_variables_single_array_3d_7(0,0,0)
	ReDim macro_variables_single_array_3d_8(0,0,0)
	ReDim macro_variables_single_array_3d_9(0,0,0)
	
	macro_variables_double_array_1d_c=0
	ReDim macro_variables_double_array_1d_1(0)
	ReDim macro_variables_double_array_1d_2(0)
	ReDim macro_variables_double_array_1d_3(0)
	ReDim macro_variables_double_array_1d_4(0)
	ReDim macro_variables_double_array_1d_5(0)
	ReDim macro_variables_double_array_1d_6(0)
	ReDim macro_variables_double_array_1d_7(0)
	ReDim macro_variables_double_array_1d_8(0)
	ReDim macro_variables_double_array_1d_9(0)
	macro_variables_double_array_2d_c=0
	ReDim macro_variables_double_array_2d_1(0,0)
	ReDim macro_variables_double_array_2d_2(0,0)
	ReDim macro_variables_double_array_2d_3(0,0)
	ReDim macro_variables_double_array_2d_4(0,0)
	ReDim macro_variables_double_array_2d_5(0,0)
	ReDim macro_variables_double_array_2d_6(0,0)
	ReDim macro_variables_double_array_2d_7(0,0)
	ReDim macro_variables_double_array_2d_8(0,0)
	ReDim macro_variables_double_array_2d_9(0,0)
	macro_variables_double_array_3d_c=0
	ReDim macro_variables_double_array_3d_1(0,0,0)
	ReDim macro_variables_double_array_3d_2(0,0,0)
	ReDim macro_variables_double_array_3d_3(0,0,0)
	ReDim macro_variables_double_array_3d_4(0,0,0)
	ReDim macro_variables_double_array_3d_5(0,0,0)
	ReDim macro_variables_double_array_3d_6(0,0,0)
	ReDim macro_variables_double_array_3d_7(0,0,0)
	ReDim macro_variables_double_array_3d_8(0,0,0)
	ReDim macro_variables_double_array_3d_9(0,0,0)
	
	macro_variables_string_array_1d_c=0
	ReDim macro_variables_string_array_1d_1(0)
	ReDim macro_variables_string_array_1d_2(0)
	ReDim macro_variables_string_array_1d_3(0)
	ReDim macro_variables_string_array_1d_4(0)
	ReDim macro_variables_string_array_1d_5(0)
	ReDim macro_variables_string_array_1d_6(0)
	ReDim macro_variables_string_array_1d_7(0)
	ReDim macro_variables_string_array_1d_8(0)
	ReDim macro_variables_string_array_1d_9(0)
	macro_variables_string_array_2d_c=0
	ReDim macro_variables_string_array_2d_1(0,0)
	ReDim macro_variables_string_array_2d_2(0,0)
	ReDim macro_variables_string_array_2d_3(0,0)
	ReDim macro_variables_string_array_2d_4(0,0)
	ReDim macro_variables_string_array_2d_5(0,0)
	ReDim macro_variables_string_array_2d_6(0,0)
	ReDim macro_variables_string_array_2d_7(0,0)
	ReDim macro_variables_string_array_2d_8(0,0)
	ReDim macro_variables_string_array_2d_9(0,0)
	macro_variables_string_array_3d_c=0
	ReDim macro_variables_string_array_3d_1(0,0,0)
	ReDim macro_variables_string_array_3d_2(0,0,0)
	ReDim macro_variables_string_array_3d_3(0,0,0)
	ReDim macro_variables_string_array_3d_4(0,0,0)
	ReDim macro_variables_string_array_3d_5(0,0,0)
	ReDim macro_variables_string_array_3d_6(0,0,0)
	ReDim macro_variables_string_array_3d_7(0,0,0)
	ReDim macro_variables_string_array_3d_8(0,0,0)
	ReDim macro_variables_string_array_3d_9(0,0,0)
	
	exit_for=FALSE
	exit_do=FALSE
	
	ReDim macro_sub_name(0)
	macro_sub_c=0
	ReDim macro_sub_data(0)
	macro_sub_data_c=0
	ReDim macro_function_name(0)
	macro_function_c=0
	ReDim macro_function_data(0)
	ReDim macro_function_return(0)
	macro_function_data_c=0
	macro_function_recursion_c=0
	ReDim macro_function_exit(0)
	dim_params=""
	ReDim string_parts(0)
	string_parts_c=0
	
	macro_function_recursion_c=0
	ReDim macro_function_return(macro_function_recursion_c)
	ReDim macro_function_exit(macro_function_recursion_c)
	
	macro_variables_info_c=0
	ReDim macro_variables_info(macro_variables_info_c,8)
	
	'For BOOLEAN variables TRUE and FALSE are included as preset Byte variables
	macro_variables_byte_c=2
	macro_variables_info_c=2
	ReDim  macro_variables_byte_value(2)
	ReDim macro_variables_info(2,8)
	'TRUE
	macro_variables_byte_value(1)=-1
	macro_variables_info(1,1)="true"
	macro_variables_info(1,2)="BYTE"
	macro_variables_info(1,3)="1"
	'FALSE
	macro_variables_byte_value(2)=0
	macro_variables_info(2,1)="false"
	macro_variables_info(2,2)="BYTE"
	macro_variables_info(2,3)="2"
End Sub

Sub keyword_select(select_temps() As String,select_temp_c As Integer)
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Sub keyword_select"
		Print #5,"select_temp_c:";select_temp_c
		For dbugi=LBound(select_temps) To UBound(select_temps)
			Print #5,"select_temps("; dbugi; "):"; select_temps(dbugi)
		Next
		Print #5,"---------------"
	EndIf
	Dim As Integer i,j,k,x,comma_c,commas_x(),openprin_c,closeprin_c,cases_c
	Dim As String temp,temps(),s1,s2,s3,cases()
	Dim As BOOLEAN case_eval,comma_found,cases_multi_part,case_set
	
	case_eval=FALSE
	temp=select_temps(0)
	temp=LTrim(Mid(temp,13))
	s1=temp
	For i = 1 To select_temp_c
		temp=select_temps(i)
		If temp="case else" Then
			If case_eval=TRUE Then Exit For
			i+=1
			temp=select_temps(i)
			case_eval=TRUE
		Else
			If Left(temp,5)="case " Then
				If case_eval=TRUE Then Exit For
				temp=LTrim(Mid(temp,6))
				s2=temp
				cases_multi_part=FALSE
				If InStr(s2,",") Then
					comma_c=0
					ReDim commas_x(comma_c)
					For x=1 To Len(s2)
						If Mid(s2,x,1)="," Then
							openprin_c=0
							closeprin_c=0
							comma_found=TRUE
							For k=x To 1 Step-1
								If Mid(s2,k,1)=")" Then
									closeprin_c+=1
									If openprin_c<closeprin_c Then Exit For
								EndIf
								If Mid(s2,k,1)="(" Then
									openprin_c+=1
									If openprin_c>closeprin_c Then
										'its probably a comma in an array
										comma_found=FALSE
										Exit For
									EndIf
								EndIf
							Next
							If comma_found=TRUE Then
								cases_multi_part=TRUE
								comma_c+=1
								ReDim Preserve commas_x(comma_c)
								commas_x(comma_c)=x
							EndIf
						EndIf
					Next
					If cases_multi_part=TRUE Then
						cases_c=comma_c+1
						ReDim cases(cases_c)
						For j=1 To comma_c
							If j=1 Then
								cases(j)=Mid(s2,1,commas_x(j)-1)
								If comma_c=1 Then cases(j+1)=Mid(s2,commas_x(j)+1)
							Else
								If j=comma_c Then
									cases(j)=Mid(s2,commas_x(j-1)+1,commas_x(j)-commas_x(j-1)-1)
									cases(j+1)=Mid(s2,commas_x(j)+1)
								Else
									cases(j)=Mid(s2,commas_x(j-1)+1,commas_x(j)-commas_x(j-1)-1)
								EndIf
							EndIf
						Next
						For j=1 To cases_c
							cases(j)=LTrim(RTrim(cases(j)))
						Next
					End If
				EndIf
				If cases_multi_part=TRUE Then
					s3=""
					For j=1 To cases_c
						s2=cases(j)
						case_set=FALSE
						If Left(s2,2)="is" Then
							Select Case Mid(s2,3,1)
								Case " ","=","<",">"
									case_set=TRUE
									s3=s3+s1+Mid(s2,3)
							End Select
						EndIf
						If case_set=FALSE Then
							If InStr(s2," to ") Then
								x=InStr(s2," to ")
								case_set=TRUE
								s3=s3+s1+">="+Left(s2,x-1)+" and "+s1+"<="+Mid(s2,x+4)
							EndIf
						EndIf
						If case_set=FALSE Then s3=s3+s1+"="+s2
						If j<> cases_c Then s3=s3+" or "
					Next
				Else
					case_set=FALSE
					If Left(s2,2)="is" Then
						Select Case Mid(s2,3,1)
							Case " ","=","<",">"
								case_set=TRUE
								s3=s1+Mid(s2,3)
						End Select
					EndIf
					If case_set=FALSE Then
						If InStr(s2," to ") Then
							x=InStr(s2," to ")
							case_set=TRUE
							s3=s1+">="+Left(s2,x-1)+" and "+s1+"<="+Mid(s2,x+4)
						EndIf
					EndIf
					If case_set=FALSE Then s3=s1+"="+s2
				EndIf
			If evaluate_condition(s3)=TRUE Then
				i+=1
				temp=select_temps(i)
				case_eval=TRUE
			EndIf
			EndIf
		EndIf				
		If case_eval=TRUE Then i=keyword_commands_block(i,select_temp_c,temp,select_temps())
		If exit_for=TRUE Then
			exit_for=FALSE
			Exit Sub
		EndIf
		If exit_do=TRUE Then
			exit_do=FALSE
			Exit Sub
		EndIf
	Next
End Sub

Sub keyword_redim(temp As String)
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Sub keyword_redim"
		Print #5,"temp:";temp
		'For dbugi=LBound(temp) To UBound(temp)
			'Print #5,"temp("; dbugi; "):"; temp(dbugi)
		'Next
		Print #5,"---------------"
	EndIf
	dim_params="redim"
	temp=LTrim(Mid(temp,7)) 'remove redim
	If Left(temp,9)="preserve " Then
		temp=LTrim(Mid(temp,10)) 'remove preserve
		dim_params="redim preserve"
	EndIf
	temp="dim "+temp
	keyword_dim(temp)
	dim_params=""			
End Sub

Sub rename_function_variables(filename As String,prepend As string,has_passed_variables As BOOLEAN)
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Sub rename_function_variables"
		Print #5,"filename:";filename
		Print #5,"prepend:";prepend
		Print #5,"has_passed_variables:";has_passed_variables
		'For dbugi=LBound(temp) To UBound(temp)
			'Print #5,"temp("; dbugi; "):"; temp(dbugi)
		'Next
		Print #5,"---------------"
	EndIf
	Dim As Integer i,j,k,x,xa,xaset,c,low,hi,n
	Dim As Double dn
	Dim As String temp,s1,s2,stemp,temp2
	Dim As Integer stemp_c,stemp_n(),stemp_c_x
	Dim As Integer openprin_c,closeprin_c,openprin_x,closeprin_x,variables_c,variables_x()
	Dim As String temp_alpha,variables()
	Dim As Integer passed_variables_c
	Dim As BOOLEAN passed_variables_set=FALSE
	Dim As BOOLEAN quote
	
	Open "app_dims.bas" For Input As #3
	Do While Not Eof(3)
		Line Input #3,s2
		temp_alpha=""
		For i = 1 To Len(s2)
			Select Case Mid(s2,i,1)
				Case Chr(34)
					temp_alpha=""
					If quote=FALSE Then quote=TRUE Else quote=FALSE
				Case "a" To "z","0" To "9","_"
					If quote=FALSE Then
						temp_alpha+=Mid(s2,i,1)
						If Len(temp_alpha)=1 Then
							Select Case temp_alpha
								Case "0" To "9"
									temp_alpha=""
							End Select
						EndIf
					EndIf
				Case Else
					If temp_alpha<>"" Then
						Select Case temp_alpha
							'Case "dim","as","integer","double"
							'	temp_alpha=""
							Case "dim","as","boolean","byte","ubyte","short","ushort","long","ulong","integer","uinteger","longint","ulongint","single","double","string"
								temp_alpha=""
							Case Else
								variables_c+=1
								ReDim Preserve variables_x(variables_c)
								ReDim Preserve variables(variables_c)
								variables_x(variables_c)=i-Len(temp_alpha)
								variables(variables_c)=temp_alpha
								temp_alpha=""
						End Select
					EndIf
			End Select
		Next
		If temp_alpha<>"" Then
			Select Case temp_alpha
				Case "dim","as","boolean","byte","ubyte","short","ushort","long","ulong","integer","uinteger","longint","ulongint","single","double","string"
					temp_alpha=""
				Case Else
					variables_c+=1
					ReDim Preserve variables_x(variables_c)
					ReDim Preserve variables(variables_c)
					variables_x(variables_c)=i-Len(temp_alpha)
					variables(variables_c)=temp_alpha
					temp_alpha=""
			End Select
		EndIf
		If has_passed_variables=TRUE And passed_variables_set=FALSE Then
			passed_variables_c=variables_c
			passed_variables_set=TRUE
		EndIf
	Loop
	Close #3
	Open "app_dims.bas" For Input As #3
	Do While Not Eof(3)
		Line Input #3,s2
		temp_alpha=""
		temp=""
		For i = 1 To Len(s2)
			temp=temp+Mid(s2,i,1)
			Select Case Mid(s2,i,1)
				Case Chr(34)
					temp_alpha=""
					If quote=FALSE Then quote=TRUE Else quote=FALSE
				Case "a" To "z","0" To "9","_"
					If quote=FALSE Then
						temp_alpha+=Mid(s2,i,1)
						If Len(temp_alpha)=1 Then
							Select Case temp_alpha
								Case "0" To "9"
									temp_alpha=""
							End Select
						EndIf
					EndIf
				Case Else
					If temp_alpha<>"" Then
						For k=1 To variables_c
							If temp_alpha=variables(k) Then
								temp=Left(temp,Len(temp)-Len(temp_alpha)-1)+prepend+"_"+temp_alpha+Right(temp,1)
								Exit For
							EndIf
						Next
						temp_alpha=""
					EndIf
			End Select
		Next
		If temp_alpha<>"" Then
			For k=1 To variables_c
				If temp_alpha=variables(k) Then
					temp=Left(temp,Len(temp)-Len(temp_alpha))+prepend+"_"+temp_alpha
					Exit For
				EndIf
			Next
			temp_alpha=""
		EndIf
		keyword_dim(temp)
	Loop
	Close #3
	macro_function_data_c+=1	
	ReDim Preserve macro_function_data(macro_function_data_c)
	macro_function_data(macro_function_data_c)=LTrim(Str(passed_variables_c-1))
	For k = 1 To passed_variables_c-1
		macro_function_data_c+=1
		ReDim Preserve macro_function_data(macro_function_data_c)
		macro_function_data(macro_function_data_c)=prepend+"_"+variables(k)
	Next
	c=0
	Open filename For Input As #3
	Do While Not Eof(3)
		c+=1
		Line Input #3,s2
	Loop
	Close #3
	macro_function_data_c+=1
	ReDim Preserve macro_function_data(macro_function_data_c)
	macro_function_data(macro_function_data_c)=LTrim(Str(c-2))
	Open filename For Input As #3
	Line Input #3,s2
	Do While Not Eof(3)
		Line Input #3,s2
		If s2="end function" Then Exit Do
		temp_alpha=""
		temp=""
		For i = 1 To Len(s2)
			temp=temp+Mid(s2,i,1)
			Select Case Mid(s2,i,1)
				Case Chr(34)
					temp_alpha=""
					If quote=FALSE Then quote=TRUE Else quote=FALSE
				Case "a" To "z","0" To "9","_"
					If quote=FALSE Then
						temp_alpha+=Mid(s2,i,1)
						If Len(temp_alpha)=1 Then
							Select Case temp_alpha
								Case "0" To "9"
									temp_alpha=""
							End Select
						EndIf
					EndIf
				Case Else
					If temp_alpha<>"" Then
						For k=1 To variables_c
							If temp_alpha=variables(k) And variables(k)<>"return" Then
								temp=Left(temp,Len(temp)-Len(temp_alpha)-1)+prepend+"_"+temp_alpha+Right(temp,1)
								Exit For
							EndIf
						Next
						temp_alpha=""
					EndIf
			End Select
		Next
		If temp_alpha<>"" Then
			For k=1 To variables_c
				If temp_alpha=variables(k) And variables(k)<>"return" Then
					temp=Left(temp,Len(temp)-Len(temp_alpha))+prepend+"_"+temp_alpha
					Exit For
				EndIf
			Next
			temp_alpha=""
		EndIf
		macro_function_data_c+=1
		ReDim Preserve macro_function_data(macro_function_data_c)
		macro_function_data(macro_function_data_c)=temp
	Loop
	Close #3
End Sub

Sub rename_sub_variables(filename As String,prepend As string,has_passed_variables As BOOLEAN)
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Sub rename_sub_variables"
		Print #5,"filename:";filename
		Print #5,"prepend:";prepend
		Print #5,"has_passed_variables:";has_passed_variables
		'For dbugi=LBound(temp) To UBound(temp)
			'Print #5,"temp("; dbugi; "):"; temp(dbugi)
		'Next
		Print #5,"---------------"
	EndIf
	Dim As Integer i,j,k,x,xa,xaset,c,low,hi,n
	Dim As Double dn
	Dim As String temp,s1,s2,stemp,temp2
	Dim As Integer stemp_c,stemp_n(),stemp_c_x
	Dim As Integer openprin_c,closeprin_c,openprin_x,closeprin_x,variables_c,variables_x()
	Dim As String temp_alpha,variables()
	Dim As Integer passed_variables_c
	Dim As BOOLEAN passed_variables_set=FALSE
	Dim As BOOLEAN quote
	
	Open "app_dims.bas" For Input As #3
	Do While Not Eof(3)
		Line Input #3,s2
		temp_alpha=""
		For i = 1 To Len(s2)
			Select Case Mid(s2,i,1)
				Case Chr(34)
					temp_alpha=""
					If quote=FALSE Then quote=TRUE Else quote=FALSE
				Case "a" To "z","0" To "9","_"
					If quote=FALSE Then
						temp_alpha+=Mid(s2,i,1)
						If Len(temp_alpha)=1 Then
							Select Case temp_alpha
								Case "0" To "9"
									temp_alpha=""
							End Select
						EndIf
					EndIf
				Case Else
					If temp_alpha<>"" Then
						Select Case temp_alpha
							Case "dim","as","boolean","byte","ubyte","short","ushort","long","ulong","integer","uinteger","longint","ulongint","single","double","string"
								temp_alpha=""
							Case Else
								variables_c+=1
								ReDim Preserve variables_x(variables_c)
								ReDim Preserve variables(variables_c)
								variables_x(variables_c)=i-Len(temp_alpha)
								variables(variables_c)=temp_alpha
								temp_alpha=""
						End Select
					EndIf
			End Select
		Next
		If temp_alpha<>"" Then
			Select Case temp_alpha
				Case "dim","as","boolean","byte","ubyte","short","ushort","long","ulong","integer","uinteger","longint","ulongint","single","double","string"
					temp_alpha=""
				Case Else
					variables_c+=1
					ReDim Preserve variables_x(variables_c)
					ReDim Preserve variables(variables_c)
					variables_x(variables_c)=i-Len(temp_alpha)
					variables(variables_c)=temp_alpha
					temp_alpha=""
			End Select
		EndIf
		If has_passed_variables=TRUE And passed_variables_set=FALSE Then
			passed_variables_c=variables_c
			passed_variables_set=TRUE
		EndIf
	Loop
	Close #3
	
	Open "app_dims.bas" For Input As #3
	Do While Not Eof(3)
		Line Input #3,s2
		temp_alpha=""
		temp=""
		For i = 1 To Len(s2)
			temp=temp+Mid(s2,i,1)
			Select Case Mid(s2,i,1)
				Case Chr(34)
					temp_alpha=""
					If quote=FALSE Then quote=TRUE Else quote=FALSE
				Case "a" To "z","0" To "9","_"
					If quote=FALSE Then
						temp_alpha+=Mid(s2,i,1)
						If Len(temp_alpha)=1 Then
							Select Case temp_alpha
								Case "0" To "9"
									temp_alpha=""
							End Select
						EndIf
					EndIf
				Case Else
					If temp_alpha<>"" Then
						For k=1 To variables_c
							If temp_alpha=variables(k) Then
								temp=Left(temp,Len(temp)-Len(temp_alpha)-1)+prepend+"_"+temp_alpha+Right(temp,1)
								Exit For
							EndIf
						Next
						temp_alpha=""
					EndIf
			End Select
		Next
		If temp_alpha<>"" Then
			For k=1 To variables_c
				If temp_alpha=variables(k) Then
					temp=Left(temp,Len(temp)-Len(temp_alpha))+prepend+"_"+temp_alpha
					Exit For
				EndIf
			Next
			temp_alpha=""
		EndIf
		keyword_dim(temp)
	Loop
	Close #3
	macro_sub_data_c+=1	
	ReDim Preserve macro_sub_data(macro_sub_data_c)
	macro_sub_data(macro_sub_data_c)=LTrim(Str(passed_variables_c))
	For k = 1 To passed_variables_c
		macro_sub_data_c+=1
		ReDim Preserve macro_sub_data(macro_sub_data_c)
		macro_sub_data(macro_sub_data_c)=prepend+"_"+variables(k)
	Next
	c=0
	Open filename For Input As #3
	Do While Not Eof(3)
		c+=1
		Line Input #3,s2
	Loop
	Close #3
	macro_sub_data_c+=1
	ReDim Preserve macro_sub_data(macro_sub_data_c)
	macro_sub_data(macro_sub_data_c)=LTrim(Str(c-2))
	Open filename For Input As #3
	Line Input #3,s2
	Do While Not Eof(3)
		Line Input #3,s2
		If s2="end sub" Then Exit Do
		temp_alpha=""
		temp=""
		For i = 1 To Len(s2)
			temp=temp+Mid(s2,i,1)
			Select Case Mid(s2,i,1)
				Case Chr(34)
					temp_alpha=""
					If quote=FALSE Then quote=TRUE Else quote=FALSE
				Case "a" To "z","0" To "9","_"
					If quote=FALSE Then
						temp_alpha+=Mid(s2,i,1)
						If Len(temp_alpha)=1 Then
							Select Case temp_alpha
								Case "0" To "9"
									temp_alpha=""
							End Select
						EndIf
					EndIf
				Case Else
					If temp_alpha<>"" Then
						For k=1 To variables_c
							If temp_alpha=variables(k) Then
								temp=Left(temp,Len(temp)-Len(temp_alpha)-1)+prepend+"_"+temp_alpha+Right(temp,1)
								Exit For
							EndIf
						Next
						temp_alpha=""
					EndIf
			End Select
		Next
		If temp_alpha<>"" Then
			For k=1 To variables_c
				If temp_alpha=variables(k) Then
					temp=Left(temp,Len(temp)-Len(temp_alpha))+prepend+"_"+temp_alpha
					Exit For
				EndIf
			Next
			temp_alpha=""
		EndIf
		macro_sub_data_c+=1
		ReDim Preserve macro_sub_data(macro_sub_data_c)
		macro_sub_data(macro_sub_data_c)=temp
	Loop
	Close #3
End Sub

Sub import_macro_bas_file(macro_bas As String)
	If d_bug=TRUE Then
		Open "d_bug.txt" For Output As #5
		Close #5
		Open "d_bug.txt" For Append As #5
		Dim As Integer dbugi
		Print #5,"Sub import_macro_bas_file"
		Print #5,"macro_bas:";macro_bas
		'For dbugi=LBound(temp) To UBound(temp)
			'Print #5,"temp("; dbugi; "):"; temp(dbugi)
		'Next
		Print #5,"---------------"
	EndIf
	init_fbcadcam_macro

	Dim As Integer i,x,aclei,acleic
	Dim As String temp,temp2,app_command_line_entry()
	Dim As BOOLEAN has_passed_variables
	acleic=0
	Open macro_bas For Input As #1
	Open "app.bas" For Output As #2
	macro_sub_c=0
	ReDim macro_sub_name(macro_sub_c)
	macro_sub_data_c=0
	ReDim macro_sub_data(macro_sub_data_c)
	macro_function_c=0
	ReDim macro_function_name(macro_function_c)
	macro_function_data_c=0
	ReDim macro_function_data(macro_function_data_c)
	Do While Not Eof(1)
		Line Input #1,temp
		temp=cleanupthestring(temp)
		If Left(temp,4)="sub " Then
			has_passed_variables=FALSE
			Open "app_subs.bas" For Output As #3
			Open "app_dims.bas" For Output As #4
			Print #3, temp
			macro_sub_c+=1
			ReDim Preserve macro_sub_name(macro_sub_c)
			temp2=Mid(temp,5)
			macro_sub_name(macro_sub_c)=LTrim(RTrim(Mid(temp2,1,InStr(temp2,"(")-1)))
			macro_sub_data_c+=1
			ReDim Preserve macro_sub_data(macro_sub_data_c)
			macro_sub_data(macro_sub_data_c)=macro_sub_name(macro_sub_c)
			temp2=Mid(temp2,InStr(temp2,"(")+1) 'remove the left parin
			temp2=LTrim(temp2)
			temp2=Left(temp2,Len(temp2)-1) 'remove the right parin
			temp2=RTrim(temp2)
			If temp2<>"" Then
				Print #4,"dim "+temp2
				has_passed_variables=TRUE
			EndIf
			Do While temp<>"end sub"
				Line Input #1,temp
				temp=cleanupthestring(temp)
				If temp<>"" Then
					If Left(temp,4)="dim " Then
						 Print #4, temp
					Else
						Print #3, temp
					EndIf
				EndIf
			Loop
			Close #3
			Close #4
			rename_sub_variables("app_subs.bas",macro_sub_name(macro_sub_c),has_passed_variables)
		Else
			If Left(temp,9)="function " Then
				has_passed_variables=FALSE
				Open "app_functions.bas" For Output As #3
				Open "app_dims.bas" For Output As #4
				Print #3, temp
				macro_function_c+=1
				ReDim Preserve macro_function_name(macro_function_c)
				temp2=Mid(temp,10)
				macro_function_name(macro_function_c)=LTrim(RTrim(Mid(temp2,1,InStr(temp2,"(")-1)))
				macro_function_data_c+=1
				ReDim Preserve macro_function_data(macro_function_data_c)
				macro_function_data(macro_function_data_c)=macro_function_name(macro_function_c)
				temp2=Mid(temp2,InStr(temp2,"(")+1) 'remove the left parin
				temp2=LTrim(temp2)
				For x = Len(temp2) To 1 Step -1
					If Mid(temp2,x,1)=")" Then
						temp2=Left(temp2,x-1)+", return "+LTrim(Mid(temp2,x+1))
						Exit For
					EndIf
				Next
				temp2=RTrim(temp2)
				If temp2<>"" Then
					Print #4,"dim "+temp2
					has_passed_variables=TRUE
				EndIf
				Do While temp<>"end function"
					Line Input #1,temp
					temp=cleanupthestring(temp)
					If temp<>"" Then
						If Left(temp,4)="dim " Then
							 Print #4, temp
						Else
							Print #3, temp
						EndIf
					EndIf
				Loop
				Close #3
				Close #4
				rename_function_variables("app_functions.bas",macro_function_name(macro_function_c),has_passed_variables)
			Else
				If temp<>"" Then
					acleic+=1
					Print #2,temp
				EndIf
			EndIf
		EndIf
	Loop
	Close #1
	Close #2

	ReDim app_command_line_entry(acleic)
	acleic=0
	Open "app.bas" For Input As #1
	Do While Not Eof(1)
		Line Input #1,temp
		If temp<>"" Then
			acleic+=1
			app_command_line_entry(acleic)=temp
			'fbcadcam_macro_debug+=temp+Chr(10)
		EndIf
	Loop
	Close #1
	'fbcadcam_macro_debug+=Chr(10)
	For aclei=1 To acleic
		temp=app_command_line_entry(aclei)
		aclei=keyword_commands_block(aclei,acleic,temp,app_command_line_entry())
	Next
End Sub

Sub keyword_do(do_temps() As String,do_temp_c As Integer)
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Sub keyword_do"
		Print #5,"do_temp_c:";do_temp_c
		For dbugi=LBound(do_temps) To UBound(do_temps)
			Print #5,"do_temps("; dbugi; "):"; do_temps(dbugi)
		Next
		Print #5,"---------------"
	EndIf
	Dim As Integer i
	Dim As String temp,temps(),do_type,s1
	Dim As BOOLEAN do_eval

	temp=do_temps(0)
	If temp="do" Then
		do_type="do"
	Else
		temp=LTrim(Mid(temp,3))
		If Left(temp,6)="while " Then do_type="while"
		If Left(temp,6)="until " Then do_type="until"
		temp=LTrim(Mid(temp,7))
		s1=temp
	EndIf
	Do
		Select Case do_type
			Case "while","until"
				do_eval=evaluate_condition(s1)
				Select Case do_type
					Case "while"
						If do_eval=FALSE Then Exit Do
					Case "until"			
						If do_eval=TRUE Then Exit Do
				End Select
		End Select
		For i = 1 To do_temp_c
			temp=do_temps(i)
			If temp="exit do" Then Exit Do
			i=keyword_commands_block(i,do_temp_c,temp,do_temps())
			If exit_for=TRUE Then Exit Sub
			If exit_do=TRUE Then
				exit_do=FALSE
				Exit Sub
			EndIf
		Next
	Loop
End Sub

Sub keyword_if(if_temps() As String,if_temp_c As Integer)
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Sub keyword_if"
		Print #5,"if_temp_c:";if_temp_c
		For dbugi=LBound(if_temps) To UBound(if_temps)
			Print #5,"if_temps("; dbugi; "):"; if_temps(dbugi)
		Next
		Print #5,"---------------"
	EndIf
	Dim As Integer k,x,c,temp_c
	Dim As Integer if_i,if_c,endif_c
	Dim As BOOLEAN if_block
	Dim As String temp,temps(),s1,s2,s3,s4
	Dim As String if_expression, then_expression, else_expression

	s1=""
	s2=""
	s3=""
	temp=if_temps(0)
	temp=Mid(temp,3) 'remove if
	temp=LTrim(RTrim(temp))
	x=InStr(temp," then")
	s1=Mid(temp,1,x-1)
	s1=LTrim(RTrim(s1))
	temp=Mid(temp,x+1)
	temp=LTrim(RTrim(temp))
	If Right(temp,4)<>"then" Then 'single line if then else statement
		temp=Mid(temp,6) 'remove then
		If InStr(temp," else") Then
			x=InStr(temp," else")
			s2=Mid(temp,1,x-1)
			s2=LTrim(RTrim(s2))
			temp=Mid(temp,x+6) 'remove else
			s3=LTrim(RTrim(temp))
		Else	
			s2=LTrim(RTrim(temp))
		End If
	Else
		if_block=TRUE
	End If
	if_expression=s1
	then_expression=s2
	else_expression=s3
	If evaluate_condition(if_expression)=TRUE Then
		If if_block=TRUE Then
			For if_i = 1 To if_temp_c-1
				If if_temps(if_i)<>"else" Then
					then_expression=if_temps(if_i)
					temp=then_expression
					If temp="exit for" Then
						exit_for=TRUE
						Exit Sub
					EndIf
					If temp="exit do" Then
						exit_do=TRUE
						Exit Sub
					EndIf
					if_i=keyword_commands_block(if_i,if_temp_c-1,temp,if_temps())
				Else
					Exit For
				EndIf
			Next
		Else
			temp=then_expression
			If temp="exit for" Then
				exit_for=TRUE
				Exit Sub
			EndIf
			If temp="exit do" Then
				exit_do=TRUE
				Exit Sub
			EndIf			
			if_i=keyword_commands_block(if_i,if_temp_c-1,temp,if_temps())
		EndIf
	Else
		If if_block=TRUE Then
			For if_i = 1 To if_temp_c-1
				If if_temps(if_i)="else" Then Exit For
			Next
			For k=if_i+1 to if_temp_c-1
				else_expression=if_temps(k)
				temp=else_expression
				If temp="exit for" Then
					exit_for=TRUE
					Exit Sub
				EndIf
				If temp="exit do" Then
					exit_do=TRUE
					Exit Sub
				EndIf				
				k=keyword_commands_block(k,if_temp_c-1,temp,if_temps())
			Next
		Else
			temp=else_expression
			If temp="exit for" Then
				exit_for=TRUE
				Exit Sub
			EndIf
			If temp="exit do" Then
				exit_do=TRUE
				Exit Sub
			EndIf			
			if_i=keyword_commands_block(if_i,if_temp_c,temp,if_temps())
		EndIf
	EndIf
End Sub

Sub keyword_for(for_temps() As String,for_temp_c As Integer)
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Sub keyword_for"
		Print #5,"for_temp_c:";for_temp_c
		For dbugi=LBound(for_temps) To UBound(for_temps)
			Print #5,"for_temps("; dbugi; "):"; for_temps(dbugi)
		Next
		Print #5,"---------------"
	EndIf
	Dim As Integer i,j,k,x,c,temp_c
	Dim As Integer for_c,next_c
	Dim As BOOLEAN keyword_command_found,if_block
	Dim As String temp,temps(),s1,s2,s3,s4

	Dim As Integer iterator_index

	Dim As Double iterator, iterator_from, iterator_to, iterator_step

	temp=for_temps(0)
	temp=Mid(temp,5) 'remove for
	temp=LTrim(RTrim(temp))
	x=InStr(temp,"=")
	s1=Mid(temp,1,x-1)
	s1=LTrim(RTrim(s1))
	temp=Mid(temp,x+1)
	temp=LTrim(RTrim(temp))
	x=InStr(temp," to ")
	s2=Mid(temp,1,x-1)
	s2=LTrim(RTrim(s2))
	iterator_from=CDbl(full_evaluate_expression(s2))
	temp=Mid(temp,x+4)
	temp=LTrim(RTrim(temp))
	x=InStr(temp," step ")
	If x<>0 Then
		s3=Mid(temp,1,x-1)
		s3=LTrim(RTrim(s3))
		iterator_to=CDbl(full_evaluate_expression(s3))
		temp=Mid(temp,x+6)
		temp=LTrim(RTrim(temp))
		s4=temp
		iterator_step=CDbl(full_evaluate_expression(s4))
	Else
		s3=temp
		iterator_to=CDbl(full_evaluate_expression(s3))
		s4="1"
		iterator_step=CDbl(full_evaluate_expression(s4))
	EndIf

	For i=1 To macro_variables_info_c
		If s1=macro_variables_info(i,1) Then
			iterator_index=CInt(macro_variables_info(i,3))
			For iterator = iterator_from To iterator_to Step iterator_step
				Select Case macro_variables_info(i,2)
					Case "BYTE"
						macro_variables_byte_value(iterator_index)=CByte(iterator)
					Case "UBYTE"
						macro_variables_ubyte_value(iterator_index)=CUByte(iterator)
					Case "SHORT"
						macro_variables_short_value(iterator_index)=CShort(iterator)
					Case "USHORT"
						macro_variables_ushort_value(iterator_index)=CUShort(iterator)
					Case "LONG"
						macro_variables_long_value(iterator_index)=CLng(iterator)
					Case "ULONG"
						macro_variables_ulong_value(iterator_index)=CULng(iterator)
					Case "INTEGER"
						macro_variables_integer_value(iterator_index)=CInt(iterator)
					Case "UINTEGER"
						macro_variables_uinteger_value(iterator_index)=CUInt(iterator)
					Case "LONGINT"
						macro_variables_longint_value(iterator_index)=CLngInt(iterator)
					Case "ULONGINT"
						macro_variables_ulongint_value(iterator_index)=CULngInt(iterator)
					Case "SINGLE"
						macro_variables_single_value(iterator_index)=CSng(iterator)
					Case "DOUBLE"
						macro_variables_double_value(iterator_index)=iterator
				End Select
				For k=1 To for_temp_c
					temp=for_temps(k)
					If temp="exit for" Then Exit Sub
					k=keyword_commands_block(k,for_temp_c,temp,for_temps())
					If exit_for=TRUE Then
						exit_for=FALSE
						Exit Sub
					EndIf
					If exit_do=TRUE Then Exit Sub
				Next
			Next
			Exit For
		EndIf
		
	Next
End Sub

Sub copy_array(a As Integer,array_index As String)
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Sub copy_array"
		Print #5,"a:";a
		Print #5,"array_index:";array_index
		'For dbugi=LBound(temp) To UBound(temp)
			'Print #5,"temp("; dbugi; "):"; temp(dbugi)
		'Next
		Print #5,"---------------"
	EndIf
	Dim As Integer ai1,ai2,ai3
	Select Case macro_variables_info(a,2)
		Case "BOOLEAN_ARRAY"
			Select Case macro_variables_info(a,5)
				Case "1d"
					Select Case macro_variables_info(a,3)
						Case "1"
							For ai1=LBound(macro_variables_boolean_array_1d_1) To UBound(macro_variables_boolean_array_1d_1)
								Select Case array_index
									Case "1"
										macro_variables_boolean_array_1d_1(ai1)=macro_variables_boolean_array_1d_1(ai1)
									Case "2"
										macro_variables_boolean_array_1d_2(ai1)=macro_variables_boolean_array_1d_1(ai1)
									Case "3"
										macro_variables_boolean_array_1d_3(ai1)=macro_variables_boolean_array_1d_1(ai1)
									Case "4"
										macro_variables_boolean_array_1d_4(ai1)=macro_variables_boolean_array_1d_1(ai1)
									Case "5"
										macro_variables_boolean_array_1d_5(ai1)=macro_variables_boolean_array_1d_1(ai1)
									Case "6"
										macro_variables_boolean_array_1d_6(ai1)=macro_variables_boolean_array_1d_1(ai1)
									Case "7"
										macro_variables_boolean_array_1d_7(ai1)=macro_variables_boolean_array_1d_1(ai1)
									Case "8"
										macro_variables_boolean_array_1d_8(ai1)=macro_variables_boolean_array_1d_1(ai1)
									Case "9"
										macro_variables_boolean_array_1d_9(ai1)=macro_variables_boolean_array_1d_1(ai1)
								End Select
							Next
						Case "2"
							For ai1=LBound(macro_variables_boolean_array_1d_2) To UBound(macro_variables_boolean_array_1d_2)
								Select Case array_index
									Case "1"
										macro_variables_boolean_array_1d_1(ai1)=macro_variables_boolean_array_1d_2(ai1)
									Case "2"
										macro_variables_boolean_array_1d_2(ai1)=macro_variables_boolean_array_1d_2(ai1)
									Case "3"
										macro_variables_boolean_array_1d_3(ai1)=macro_variables_boolean_array_1d_2(ai1)
									Case "4"
										macro_variables_boolean_array_1d_4(ai1)=macro_variables_boolean_array_1d_2(ai1)
									Case "5"
										macro_variables_boolean_array_1d_5(ai1)=macro_variables_boolean_array_1d_2(ai1)
									Case "6"
										macro_variables_boolean_array_1d_6(ai1)=macro_variables_boolean_array_1d_2(ai1)
									Case "7"
										macro_variables_boolean_array_1d_7(ai1)=macro_variables_boolean_array_1d_2(ai1)
									Case "8"
										macro_variables_boolean_array_1d_8(ai1)=macro_variables_boolean_array_1d_2(ai1)
									Case "9"
										macro_variables_boolean_array_1d_9(ai1)=macro_variables_boolean_array_1d_2(ai1)
								End Select
							Next
						Case "3"
							For ai1=LBound(macro_variables_boolean_array_1d_3) To UBound(macro_variables_boolean_array_1d_3)
								Select Case array_index
									Case "1"
										macro_variables_boolean_array_1d_1(ai1)=macro_variables_boolean_array_1d_3(ai1)
									Case "2"
										macro_variables_boolean_array_1d_2(ai1)=macro_variables_boolean_array_1d_3(ai1)
									Case "3"
										macro_variables_boolean_array_1d_3(ai1)=macro_variables_boolean_array_1d_3(ai1)
									Case "4"
										macro_variables_boolean_array_1d_4(ai1)=macro_variables_boolean_array_1d_3(ai1)
									Case "5"
										macro_variables_boolean_array_1d_5(ai1)=macro_variables_boolean_array_1d_3(ai1)
									Case "6"
										macro_variables_boolean_array_1d_6(ai1)=macro_variables_boolean_array_1d_3(ai1)
									Case "7"
										macro_variables_boolean_array_1d_7(ai1)=macro_variables_boolean_array_1d_3(ai1)
									Case "8"
										macro_variables_boolean_array_1d_8(ai1)=macro_variables_boolean_array_1d_3(ai1)
									Case "9"
										macro_variables_boolean_array_1d_9(ai1)=macro_variables_boolean_array_1d_3(ai1)
								End Select
							Next
						Case "4"
							For ai1=LBound(macro_variables_boolean_array_1d_4) To UBound(macro_variables_boolean_array_1d_4)
								Select Case array_index
									Case "1"
										macro_variables_boolean_array_1d_1(ai1)=macro_variables_boolean_array_1d_4(ai1)
									Case "2"
										macro_variables_boolean_array_1d_2(ai1)=macro_variables_boolean_array_1d_4(ai1)
									Case "3"
										macro_variables_boolean_array_1d_3(ai1)=macro_variables_boolean_array_1d_4(ai1)
									Case "4"
										macro_variables_boolean_array_1d_4(ai1)=macro_variables_boolean_array_1d_4(ai1)
									Case "5"
										macro_variables_boolean_array_1d_5(ai1)=macro_variables_boolean_array_1d_4(ai1)
									Case "6"
										macro_variables_boolean_array_1d_6(ai1)=macro_variables_boolean_array_1d_4(ai1)
									Case "7"
										macro_variables_boolean_array_1d_7(ai1)=macro_variables_boolean_array_1d_4(ai1)
									Case "8"
										macro_variables_boolean_array_1d_8(ai1)=macro_variables_boolean_array_1d_4(ai1)
									Case "9"
										macro_variables_boolean_array_1d_9(ai1)=macro_variables_boolean_array_1d_4(ai1)
								End Select
							Next
						Case "5"
							For ai1=LBound(macro_variables_boolean_array_1d_5) To UBound(macro_variables_boolean_array_1d_5)
								Select Case array_index
									Case "1"
										macro_variables_boolean_array_1d_1(ai1)=macro_variables_boolean_array_1d_5(ai1)
									Case "2"
										macro_variables_boolean_array_1d_2(ai1)=macro_variables_boolean_array_1d_5(ai1)
									Case "3"
										macro_variables_boolean_array_1d_3(ai1)=macro_variables_boolean_array_1d_5(ai1)
									Case "4"
										macro_variables_boolean_array_1d_4(ai1)=macro_variables_boolean_array_1d_5(ai1)
									Case "5"
										macro_variables_boolean_array_1d_5(ai1)=macro_variables_boolean_array_1d_5(ai1)
									Case "6"
										macro_variables_boolean_array_1d_6(ai1)=macro_variables_boolean_array_1d_5(ai1)
									Case "7"
										macro_variables_boolean_array_1d_7(ai1)=macro_variables_boolean_array_1d_5(ai1)
									Case "8"
										macro_variables_boolean_array_1d_8(ai1)=macro_variables_boolean_array_1d_5(ai1)
									Case "9"
										macro_variables_boolean_array_1d_9(ai1)=macro_variables_boolean_array_1d_5(ai1)
								End Select
							Next
						Case "6"
							For ai1=LBound(macro_variables_boolean_array_1d_6) To UBound(macro_variables_boolean_array_1d_6)
								Select Case array_index
									Case "1"
										macro_variables_boolean_array_1d_1(ai1)=macro_variables_boolean_array_1d_6(ai1)
									Case "2"
										macro_variables_boolean_array_1d_2(ai1)=macro_variables_boolean_array_1d_6(ai1)
									Case "3"
										macro_variables_boolean_array_1d_3(ai1)=macro_variables_boolean_array_1d_6(ai1)
									Case "4"
										macro_variables_boolean_array_1d_4(ai1)=macro_variables_boolean_array_1d_6(ai1)
									Case "5"
										macro_variables_boolean_array_1d_5(ai1)=macro_variables_boolean_array_1d_6(ai1)
									Case "6"
										macro_variables_boolean_array_1d_6(ai1)=macro_variables_boolean_array_1d_6(ai1)
									Case "7"
										macro_variables_boolean_array_1d_7(ai1)=macro_variables_boolean_array_1d_6(ai1)
									Case "8"
										macro_variables_boolean_array_1d_8(ai1)=macro_variables_boolean_array_1d_6(ai1)
									Case "9"
										macro_variables_boolean_array_1d_9(ai1)=macro_variables_boolean_array_1d_6(ai1)
								End Select
							Next
						Case "7"
							For ai1=LBound(macro_variables_boolean_array_1d_7) To UBound(macro_variables_boolean_array_1d_7)
								Select Case array_index
									Case "1"
										macro_variables_boolean_array_1d_1(ai1)=macro_variables_boolean_array_1d_7(ai1)
									Case "2"
										macro_variables_boolean_array_1d_2(ai1)=macro_variables_boolean_array_1d_7(ai1)
									Case "3"
										macro_variables_boolean_array_1d_3(ai1)=macro_variables_boolean_array_1d_7(ai1)
									Case "4"
										macro_variables_boolean_array_1d_4(ai1)=macro_variables_boolean_array_1d_7(ai1)
									Case "5"
										macro_variables_boolean_array_1d_5(ai1)=macro_variables_boolean_array_1d_7(ai1)
									Case "6"
										macro_variables_boolean_array_1d_6(ai1)=macro_variables_boolean_array_1d_7(ai1)
									Case "7"
										macro_variables_boolean_array_1d_7(ai1)=macro_variables_boolean_array_1d_7(ai1)
									Case "8"
										macro_variables_boolean_array_1d_8(ai1)=macro_variables_boolean_array_1d_7(ai1)
									Case "9"
										macro_variables_boolean_array_1d_9(ai1)=macro_variables_boolean_array_1d_7(ai1)
								End Select
							Next
						Case "8"
							For ai1=LBound(macro_variables_boolean_array_1d_8) To UBound(macro_variables_boolean_array_1d_8)
								Select Case array_index
									Case "1"
										macro_variables_boolean_array_1d_1(ai1)=macro_variables_boolean_array_1d_8(ai1)
									Case "2"
										macro_variables_boolean_array_1d_2(ai1)=macro_variables_boolean_array_1d_8(ai1)
									Case "3"
										macro_variables_boolean_array_1d_3(ai1)=macro_variables_boolean_array_1d_8(ai1)
									Case "4"
										macro_variables_boolean_array_1d_4(ai1)=macro_variables_boolean_array_1d_8(ai1)
									Case "5"
										macro_variables_boolean_array_1d_5(ai1)=macro_variables_boolean_array_1d_8(ai1)
									Case "6"
										macro_variables_boolean_array_1d_6(ai1)=macro_variables_boolean_array_1d_8(ai1)
									Case "7"
										macro_variables_boolean_array_1d_7(ai1)=macro_variables_boolean_array_1d_8(ai1)
									Case "8"
										macro_variables_boolean_array_1d_8(ai1)=macro_variables_boolean_array_1d_8(ai1)
									Case "9"
										macro_variables_boolean_array_1d_9(ai1)=macro_variables_boolean_array_1d_8(ai1)
								End Select
							Next
						Case "9"
							For ai1=LBound(macro_variables_boolean_array_1d_9) To UBound(macro_variables_boolean_array_1d_9)
								Select Case array_index
									Case "1"
										macro_variables_boolean_array_1d_1(ai1)=macro_variables_boolean_array_1d_9(ai1)
									Case "2"
										macro_variables_boolean_array_1d_2(ai1)=macro_variables_boolean_array_1d_9(ai1)
									Case "3"
										macro_variables_boolean_array_1d_3(ai1)=macro_variables_boolean_array_1d_9(ai1)
									Case "4"
										macro_variables_boolean_array_1d_4(ai1)=macro_variables_boolean_array_1d_9(ai1)
									Case "5"
										macro_variables_boolean_array_1d_5(ai1)=macro_variables_boolean_array_1d_9(ai1)
									Case "6"
										macro_variables_boolean_array_1d_6(ai1)=macro_variables_boolean_array_1d_9(ai1)
									Case "7"
										macro_variables_boolean_array_1d_7(ai1)=macro_variables_boolean_array_1d_9(ai1)
									Case "8"
										macro_variables_boolean_array_1d_8(ai1)=macro_variables_boolean_array_1d_9(ai1)
									Case "9"
										macro_variables_boolean_array_1d_9(ai1)=macro_variables_boolean_array_1d_9(ai1)
								End Select
							Next
					End Select
				Case "2d"
					Select Case macro_variables_info(a,3)
						Case "1"
							For ai1=LBound(macro_variables_boolean_array_2d_1) To UBound(macro_variables_boolean_array_2d_1)
								For ai2=LBound(macro_variables_boolean_array_2d_1,2) To UBound(macro_variables_boolean_array_2d_1,2)
									Select Case array_index
										Case "1"
											macro_variables_boolean_array_2d_1(ai1,ai2)=macro_variables_boolean_array_2d_1(ai1,ai2)
										Case "2"
											macro_variables_boolean_array_2d_2(ai1,ai2)=macro_variables_boolean_array_2d_1(ai1,ai2)
										Case "3"
											macro_variables_boolean_array_2d_3(ai1,ai2)=macro_variables_boolean_array_2d_1(ai1,ai2)
										Case "4"
											macro_variables_boolean_array_2d_4(ai1,ai2)=macro_variables_boolean_array_2d_1(ai1,ai2)
										Case "5"
											macro_variables_boolean_array_2d_5(ai1,ai2)=macro_variables_boolean_array_2d_1(ai1,ai2)
										Case "6"
											macro_variables_boolean_array_2d_6(ai1,ai2)=macro_variables_boolean_array_2d_1(ai1,ai2)
										Case "7"
											macro_variables_boolean_array_2d_7(ai1,ai2)=macro_variables_boolean_array_2d_1(ai1,ai2)
										Case "8"
											macro_variables_boolean_array_2d_8(ai1,ai2)=macro_variables_boolean_array_2d_1(ai1,ai2)
										Case "9"
											macro_variables_boolean_array_2d_9(ai1,ai2)=macro_variables_boolean_array_2d_1(ai1,ai2)
									End Select
								Next
							Next
						Case "2"
							For ai1=LBound(macro_variables_boolean_array_2d_2) To UBound(macro_variables_boolean_array_2d_2)
								For ai2=LBound(macro_variables_boolean_array_2d_2,2) To UBound(macro_variables_boolean_array_2d_2,2)
									Select Case array_index
										Case "1"
											macro_variables_boolean_array_2d_1(ai1,ai2)=macro_variables_boolean_array_2d_2(ai1,ai2)
										Case "2"
											macro_variables_boolean_array_2d_2(ai1,ai2)=macro_variables_boolean_array_2d_2(ai1,ai2)
										Case "3"
											macro_variables_boolean_array_2d_3(ai1,ai2)=macro_variables_boolean_array_2d_2(ai1,ai2)
										Case "4"
											macro_variables_boolean_array_2d_4(ai1,ai2)=macro_variables_boolean_array_2d_2(ai1,ai2)
										Case "5"
											macro_variables_boolean_array_2d_5(ai1,ai2)=macro_variables_boolean_array_2d_2(ai1,ai2)
										Case "6"
											macro_variables_boolean_array_2d_6(ai1,ai2)=macro_variables_boolean_array_2d_2(ai1,ai2)
										Case "7"
											macro_variables_boolean_array_2d_7(ai1,ai2)=macro_variables_boolean_array_2d_2(ai1,ai2)
										Case "8"
											macro_variables_boolean_array_2d_8(ai1,ai2)=macro_variables_boolean_array_2d_2(ai1,ai2)
										Case "9"
											macro_variables_boolean_array_2d_9(ai1,ai2)=macro_variables_boolean_array_2d_2(ai1,ai2)
									End Select
								Next
							Next
						Case "3"
							For ai1=LBound(macro_variables_boolean_array_2d_3) To UBound(macro_variables_boolean_array_2d_3)
								For ai2=LBound(macro_variables_boolean_array_2d_3,2) To UBound(macro_variables_boolean_array_2d_3,2)
									Select Case array_index
										Case "1"
											macro_variables_boolean_array_2d_1(ai1,ai2)=macro_variables_boolean_array_2d_3(ai1,ai2)
										Case "2"
											macro_variables_boolean_array_2d_2(ai1,ai2)=macro_variables_boolean_array_2d_3(ai1,ai2)
										Case "3"
											macro_variables_boolean_array_2d_3(ai1,ai2)=macro_variables_boolean_array_2d_3(ai1,ai2)
										Case "4"
											macro_variables_boolean_array_2d_4(ai1,ai2)=macro_variables_boolean_array_2d_3(ai1,ai2)
										Case "5"
											macro_variables_boolean_array_2d_5(ai1,ai2)=macro_variables_boolean_array_2d_3(ai1,ai2)
										Case "6"
											macro_variables_boolean_array_2d_6(ai1,ai2)=macro_variables_boolean_array_2d_3(ai1,ai2)
										Case "7"
											macro_variables_boolean_array_2d_7(ai1,ai2)=macro_variables_boolean_array_2d_3(ai1,ai2)
										Case "8"
											macro_variables_boolean_array_2d_8(ai1,ai2)=macro_variables_boolean_array_2d_3(ai1,ai2)
										Case "9"
											macro_variables_boolean_array_2d_9(ai1,ai2)=macro_variables_boolean_array_2d_3(ai1,ai2)
									End Select
								Next
							Next
						Case "4"
							For ai1=LBound(macro_variables_boolean_array_2d_4) To UBound(macro_variables_boolean_array_2d_4)
								For ai2=LBound(macro_variables_boolean_array_2d_4,2) To UBound(macro_variables_boolean_array_2d_4,2)
									Select Case array_index
										Case "1"
											macro_variables_boolean_array_2d_1(ai1,ai2)=macro_variables_boolean_array_2d_4(ai1,ai2)
										Case "2"
											macro_variables_boolean_array_2d_2(ai1,ai2)=macro_variables_boolean_array_2d_4(ai1,ai2)
										Case "3"
											macro_variables_boolean_array_2d_3(ai1,ai2)=macro_variables_boolean_array_2d_4(ai1,ai2)
										Case "4"
											macro_variables_boolean_array_2d_4(ai1,ai2)=macro_variables_boolean_array_2d_4(ai1,ai2)
										Case "5"
											macro_variables_boolean_array_2d_5(ai1,ai2)=macro_variables_boolean_array_2d_4(ai1,ai2)
										Case "6"
											macro_variables_boolean_array_2d_6(ai1,ai2)=macro_variables_boolean_array_2d_4(ai1,ai2)
										Case "7"
											macro_variables_boolean_array_2d_7(ai1,ai2)=macro_variables_boolean_array_2d_4(ai1,ai2)
										Case "8"
											macro_variables_boolean_array_2d_8(ai1,ai2)=macro_variables_boolean_array_2d_4(ai1,ai2)
										Case "9"
											macro_variables_boolean_array_2d_9(ai1,ai2)=macro_variables_boolean_array_2d_4(ai1,ai2)
									End Select
								Next
							Next
						Case "5"
							For ai1=LBound(macro_variables_boolean_array_2d_5) To UBound(macro_variables_boolean_array_2d_5)
								For ai2=LBound(macro_variables_boolean_array_2d_5,2) To UBound(macro_variables_boolean_array_2d_5,2)
									Select Case array_index
										Case "1"
											macro_variables_boolean_array_2d_1(ai1,ai2)=macro_variables_boolean_array_2d_5(ai1,ai2)
										Case "2"
											macro_variables_boolean_array_2d_2(ai1,ai2)=macro_variables_boolean_array_2d_5(ai1,ai2)
										Case "3"
											macro_variables_boolean_array_2d_3(ai1,ai2)=macro_variables_boolean_array_2d_5(ai1,ai2)
										Case "4"
											macro_variables_boolean_array_2d_4(ai1,ai2)=macro_variables_boolean_array_2d_5(ai1,ai2)
										Case "5"
											macro_variables_boolean_array_2d_5(ai1,ai2)=macro_variables_boolean_array_2d_5(ai1,ai2)
										Case "6"
											macro_variables_boolean_array_2d_6(ai1,ai2)=macro_variables_boolean_array_2d_5(ai1,ai2)
										Case "7"
											macro_variables_boolean_array_2d_7(ai1,ai2)=macro_variables_boolean_array_2d_5(ai1,ai2)
										Case "8"
											macro_variables_boolean_array_2d_8(ai1,ai2)=macro_variables_boolean_array_2d_5(ai1,ai2)
										Case "9"
											macro_variables_boolean_array_2d_9(ai1,ai2)=macro_variables_boolean_array_2d_5(ai1,ai2)
									End Select
								Next
							Next
						Case "6"
							For ai1=LBound(macro_variables_boolean_array_2d_6) To UBound(macro_variables_boolean_array_2d_6)
								For ai2=LBound(macro_variables_boolean_array_2d_6,2) To UBound(macro_variables_boolean_array_2d_6,2)
									Select Case array_index
										Case "1"
											macro_variables_boolean_array_2d_1(ai1,ai2)=macro_variables_boolean_array_2d_6(ai1,ai2)
										Case "2"
											macro_variables_boolean_array_2d_2(ai1,ai2)=macro_variables_boolean_array_2d_6(ai1,ai2)
										Case "3"
											macro_variables_boolean_array_2d_3(ai1,ai2)=macro_variables_boolean_array_2d_6(ai1,ai2)
										Case "4"
											macro_variables_boolean_array_2d_4(ai1,ai2)=macro_variables_boolean_array_2d_6(ai1,ai2)
										Case "5"
											macro_variables_boolean_array_2d_5(ai1,ai2)=macro_variables_boolean_array_2d_6(ai1,ai2)
										Case "6"
											macro_variables_boolean_array_2d_6(ai1,ai2)=macro_variables_boolean_array_2d_6(ai1,ai2)
										Case "7"
											macro_variables_boolean_array_2d_7(ai1,ai2)=macro_variables_boolean_array_2d_6(ai1,ai2)
										Case "8"
											macro_variables_boolean_array_2d_8(ai1,ai2)=macro_variables_boolean_array_2d_6(ai1,ai2)
										Case "9"
											macro_variables_boolean_array_2d_9(ai1,ai2)=macro_variables_boolean_array_2d_6(ai1,ai2)
									End Select
								Next
							Next
						Case "7"
							For ai1=LBound(macro_variables_boolean_array_2d_7) To UBound(macro_variables_boolean_array_2d_7)
								For ai2=LBound(macro_variables_boolean_array_2d_7,2) To UBound(macro_variables_boolean_array_2d_7,2)
									Select Case array_index
										Case "1"
											macro_variables_boolean_array_2d_1(ai1,ai2)=macro_variables_boolean_array_2d_7(ai1,ai2)
										Case "2"
											macro_variables_boolean_array_2d_2(ai1,ai2)=macro_variables_boolean_array_2d_7(ai1,ai2)
										Case "3"
											macro_variables_boolean_array_2d_3(ai1,ai2)=macro_variables_boolean_array_2d_7(ai1,ai2)
										Case "4"
											macro_variables_boolean_array_2d_4(ai1,ai2)=macro_variables_boolean_array_2d_7(ai1,ai2)
										Case "5"
											macro_variables_boolean_array_2d_5(ai1,ai2)=macro_variables_boolean_array_2d_7(ai1,ai2)
										Case "6"
											macro_variables_boolean_array_2d_6(ai1,ai2)=macro_variables_boolean_array_2d_7(ai1,ai2)
										Case "7"
											macro_variables_boolean_array_2d_7(ai1,ai2)=macro_variables_boolean_array_2d_7(ai1,ai2)
										Case "8"
											macro_variables_boolean_array_2d_8(ai1,ai2)=macro_variables_boolean_array_2d_7(ai1,ai2)
										Case "9"
											macro_variables_boolean_array_2d_9(ai1,ai2)=macro_variables_boolean_array_2d_7(ai1,ai2)
									End Select
								Next
							Next
						Case "8"
							For ai1=LBound(macro_variables_boolean_array_2d_8) To UBound(macro_variables_boolean_array_2d_8)
								For ai2=LBound(macro_variables_boolean_array_2d_8,2) To UBound(macro_variables_boolean_array_2d_8,2)
									Select Case array_index
										Case "1"
											macro_variables_boolean_array_2d_1(ai1,ai2)=macro_variables_boolean_array_2d_8(ai1,ai2)
										Case "2"
											macro_variables_boolean_array_2d_2(ai1,ai2)=macro_variables_boolean_array_2d_8(ai1,ai2)
										Case "3"
											macro_variables_boolean_array_2d_3(ai1,ai2)=macro_variables_boolean_array_2d_8(ai1,ai2)
										Case "4"
											macro_variables_boolean_array_2d_4(ai1,ai2)=macro_variables_boolean_array_2d_8(ai1,ai2)
										Case "5"
											macro_variables_boolean_array_2d_5(ai1,ai2)=macro_variables_boolean_array_2d_8(ai1,ai2)
										Case "6"
											macro_variables_boolean_array_2d_6(ai1,ai2)=macro_variables_boolean_array_2d_8(ai1,ai2)
										Case "7"
											macro_variables_boolean_array_2d_7(ai1,ai2)=macro_variables_boolean_array_2d_8(ai1,ai2)
										Case "8"
											macro_variables_boolean_array_2d_8(ai1,ai2)=macro_variables_boolean_array_2d_8(ai1,ai2)
										Case "9"
											macro_variables_boolean_array_2d_9(ai1,ai2)=macro_variables_boolean_array_2d_8(ai1,ai2)
									End Select
								Next
							Next
						Case "9"
							For ai1=LBound(macro_variables_boolean_array_2d_9) To UBound(macro_variables_boolean_array_2d_9)
								For ai2=LBound(macro_variables_boolean_array_2d_9,2) To UBound(macro_variables_boolean_array_2d_9,2)
									Select Case array_index
										Case "1"
											macro_variables_boolean_array_2d_1(ai1,ai2)=macro_variables_boolean_array_2d_9(ai1,ai2)
										Case "2"
											macro_variables_boolean_array_2d_2(ai1,ai2)=macro_variables_boolean_array_2d_9(ai1,ai2)
										Case "3"
											macro_variables_boolean_array_2d_3(ai1,ai2)=macro_variables_boolean_array_2d_9(ai1,ai2)
										Case "4"
											macro_variables_boolean_array_2d_4(ai1,ai2)=macro_variables_boolean_array_2d_9(ai1,ai2)
										Case "5"
											macro_variables_boolean_array_2d_5(ai1,ai2)=macro_variables_boolean_array_2d_9(ai1,ai2)
										Case "6"
											macro_variables_boolean_array_2d_6(ai1,ai2)=macro_variables_boolean_array_2d_9(ai1,ai2)
										Case "7"
											macro_variables_boolean_array_2d_7(ai1,ai2)=macro_variables_boolean_array_2d_9(ai1,ai2)
										Case "8"
											macro_variables_boolean_array_2d_8(ai1,ai2)=macro_variables_boolean_array_2d_9(ai1,ai2)
										Case "9"
											macro_variables_boolean_array_2d_9(ai1,ai2)=macro_variables_boolean_array_2d_9(ai1,ai2)
									End Select
								Next
							Next
					End Select
				Case "3d"
					Select Case macro_variables_info(a,3)
						Case "1"
							For ai1=LBound(macro_variables_boolean_array_3d_1) To UBound(macro_variables_boolean_array_3d_1)
								For ai2=LBound(macro_variables_boolean_array_3d_1,2) To UBound(macro_variables_boolean_array_3d_1,2)
									For ai3=LBound(macro_variables_boolean_array_3d_1,3) To UBound(macro_variables_boolean_array_3d_1,3)
										Select Case array_index
											Case "1"
												macro_variables_boolean_array_3d_1(ai1,ai2,ai3)=macro_variables_boolean_array_3d_1(ai1,ai2,ai3)
											Case "2"
												macro_variables_boolean_array_3d_2(ai1,ai2,ai3)=macro_variables_boolean_array_3d_1(ai1,ai2,ai3)
											Case "3"
												macro_variables_boolean_array_3d_3(ai1,ai2,ai3)=macro_variables_boolean_array_3d_1(ai1,ai2,ai3)
											Case "4"
												macro_variables_boolean_array_3d_4(ai1,ai2,ai3)=macro_variables_boolean_array_3d_1(ai1,ai2,ai3)
											Case "5"
												macro_variables_boolean_array_3d_5(ai1,ai2,ai3)=macro_variables_boolean_array_3d_1(ai1,ai2,ai3)
											Case "6"
												macro_variables_boolean_array_3d_6(ai1,ai2,ai3)=macro_variables_boolean_array_3d_1(ai1,ai2,ai3)
											Case "7"
												macro_variables_boolean_array_3d_7(ai1,ai2,ai3)=macro_variables_boolean_array_3d_1(ai1,ai2,ai3)
											Case "8"
												macro_variables_boolean_array_3d_8(ai1,ai2,ai3)=macro_variables_boolean_array_3d_1(ai1,ai2,ai3)
											Case "9"
												macro_variables_boolean_array_3d_9(ai1,ai2,ai3)=macro_variables_boolean_array_3d_1(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "2"
							For ai1=LBound(macro_variables_boolean_array_3d_2) To UBound(macro_variables_boolean_array_3d_2)
								For ai2=LBound(macro_variables_boolean_array_3d_2,2) To UBound(macro_variables_boolean_array_3d_2,2)
									For ai3=LBound(macro_variables_boolean_array_3d_2,3) To UBound(macro_variables_boolean_array_3d_2,3)
										Select Case array_index
											Case "1"
												macro_variables_boolean_array_3d_1(ai1,ai2,ai3)=macro_variables_boolean_array_3d_2(ai1,ai2,ai3)
											Case "2"
												macro_variables_boolean_array_3d_2(ai1,ai2,ai3)=macro_variables_boolean_array_3d_2(ai1,ai2,ai3)
											Case "3"
												macro_variables_boolean_array_3d_3(ai1,ai2,ai3)=macro_variables_boolean_array_3d_2(ai1,ai2,ai3)
											Case "4"
												macro_variables_boolean_array_3d_4(ai1,ai2,ai3)=macro_variables_boolean_array_3d_2(ai1,ai2,ai3)
											Case "5"
												macro_variables_boolean_array_3d_5(ai1,ai2,ai3)=macro_variables_boolean_array_3d_2(ai1,ai2,ai3)
											Case "6"
												macro_variables_boolean_array_3d_6(ai1,ai2,ai3)=macro_variables_boolean_array_3d_2(ai1,ai2,ai3)
											Case "7"
												macro_variables_boolean_array_3d_7(ai1,ai2,ai3)=macro_variables_boolean_array_3d_2(ai1,ai2,ai3)
											Case "8"
												macro_variables_boolean_array_3d_8(ai1,ai2,ai3)=macro_variables_boolean_array_3d_2(ai1,ai2,ai3)
											Case "9"
												macro_variables_boolean_array_3d_9(ai1,ai2,ai3)=macro_variables_boolean_array_3d_2(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "3"
							For ai1=LBound(macro_variables_boolean_array_3d_3) To UBound(macro_variables_boolean_array_3d_3)
								For ai2=LBound(macro_variables_boolean_array_3d_3,2) To UBound(macro_variables_boolean_array_3d_3,2)
									For ai3=LBound(macro_variables_boolean_array_3d_3,3) To UBound(macro_variables_boolean_array_3d_3,3)
										Select Case array_index
											Case "1"
												macro_variables_boolean_array_3d_1(ai1,ai2,ai3)=macro_variables_boolean_array_3d_3(ai1,ai2,ai3)
											Case "2"
												macro_variables_boolean_array_3d_2(ai1,ai2,ai3)=macro_variables_boolean_array_3d_3(ai1,ai2,ai3)
											Case "3"
												macro_variables_boolean_array_3d_3(ai1,ai2,ai3)=macro_variables_boolean_array_3d_3(ai1,ai2,ai3)
											Case "4"
												macro_variables_boolean_array_3d_4(ai1,ai2,ai3)=macro_variables_boolean_array_3d_3(ai1,ai2,ai3)
											Case "5"
												macro_variables_boolean_array_3d_5(ai1,ai2,ai3)=macro_variables_boolean_array_3d_3(ai1,ai2,ai3)
											Case "6"
												macro_variables_boolean_array_3d_6(ai1,ai2,ai3)=macro_variables_boolean_array_3d_3(ai1,ai2,ai3)
											Case "7"
												macro_variables_boolean_array_3d_7(ai1,ai2,ai3)=macro_variables_boolean_array_3d_3(ai1,ai2,ai3)
											Case "8"
												macro_variables_boolean_array_3d_8(ai1,ai2,ai3)=macro_variables_boolean_array_3d_3(ai1,ai2,ai3)
											Case "9"
												macro_variables_boolean_array_3d_9(ai1,ai2,ai3)=macro_variables_boolean_array_3d_3(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "4"
							For ai1=LBound(macro_variables_boolean_array_3d_4) To UBound(macro_variables_boolean_array_3d_4)
								For ai2=LBound(macro_variables_boolean_array_3d_4,2) To UBound(macro_variables_boolean_array_3d_4,2)
									For ai3=LBound(macro_variables_boolean_array_3d_4,3) To UBound(macro_variables_boolean_array_3d_4,3)
										Select Case array_index
											Case "1"
												macro_variables_boolean_array_3d_1(ai1,ai2,ai3)=macro_variables_boolean_array_3d_4(ai1,ai2,ai3)
											Case "2"
												macro_variables_boolean_array_3d_2(ai1,ai2,ai3)=macro_variables_boolean_array_3d_4(ai1,ai2,ai3)
											Case "3"
												macro_variables_boolean_array_3d_3(ai1,ai2,ai3)=macro_variables_boolean_array_3d_4(ai1,ai2,ai3)
											Case "4"
												macro_variables_boolean_array_3d_4(ai1,ai2,ai3)=macro_variables_boolean_array_3d_4(ai1,ai2,ai3)
											Case "5"
												macro_variables_boolean_array_3d_5(ai1,ai2,ai3)=macro_variables_boolean_array_3d_4(ai1,ai2,ai3)
											Case "6"
												macro_variables_boolean_array_3d_6(ai1,ai2,ai3)=macro_variables_boolean_array_3d_4(ai1,ai2,ai3)
											Case "7"
												macro_variables_boolean_array_3d_7(ai1,ai2,ai3)=macro_variables_boolean_array_3d_4(ai1,ai2,ai3)
											Case "8"
												macro_variables_boolean_array_3d_8(ai1,ai2,ai3)=macro_variables_boolean_array_3d_4(ai1,ai2,ai3)
											Case "9"
												macro_variables_boolean_array_3d_9(ai1,ai2,ai3)=macro_variables_boolean_array_3d_4(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "5"
							For ai1=LBound(macro_variables_boolean_array_3d_5) To UBound(macro_variables_boolean_array_3d_5)
								For ai2=LBound(macro_variables_boolean_array_3d_5,2) To UBound(macro_variables_boolean_array_3d_5,2)
									For ai3=LBound(macro_variables_boolean_array_3d_5,3) To UBound(macro_variables_boolean_array_3d_5,3)
										Select Case array_index
											Case "1"
												macro_variables_boolean_array_3d_1(ai1,ai2,ai3)=macro_variables_boolean_array_3d_5(ai1,ai2,ai3)
											Case "2"
												macro_variables_boolean_array_3d_2(ai1,ai2,ai3)=macro_variables_boolean_array_3d_5(ai1,ai2,ai3)
											Case "3"
												macro_variables_boolean_array_3d_3(ai1,ai2,ai3)=macro_variables_boolean_array_3d_5(ai1,ai2,ai3)
											Case "4"
												macro_variables_boolean_array_3d_4(ai1,ai2,ai3)=macro_variables_boolean_array_3d_5(ai1,ai2,ai3)
											Case "5"
												macro_variables_boolean_array_3d_5(ai1,ai2,ai3)=macro_variables_boolean_array_3d_5(ai1,ai2,ai3)
											Case "6"
												macro_variables_boolean_array_3d_6(ai1,ai2,ai3)=macro_variables_boolean_array_3d_5(ai1,ai2,ai3)
											Case "7"
												macro_variables_boolean_array_3d_7(ai1,ai2,ai3)=macro_variables_boolean_array_3d_5(ai1,ai2,ai3)
											Case "8"
												macro_variables_boolean_array_3d_8(ai1,ai2,ai3)=macro_variables_boolean_array_3d_5(ai1,ai2,ai3)
											Case "9"
												macro_variables_boolean_array_3d_9(ai1,ai2,ai3)=macro_variables_boolean_array_3d_5(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "6"
							For ai1=LBound(macro_variables_boolean_array_3d_6) To UBound(macro_variables_boolean_array_3d_6)
								For ai2=LBound(macro_variables_boolean_array_3d_6,2) To UBound(macro_variables_boolean_array_3d_6,2)
									For ai3=LBound(macro_variables_boolean_array_3d_6,3) To UBound(macro_variables_boolean_array_3d_6,3)
										Select Case array_index
											Case "1"
												macro_variables_boolean_array_3d_1(ai1,ai2,ai3)=macro_variables_boolean_array_3d_6(ai1,ai2,ai3)
											Case "2"
												macro_variables_boolean_array_3d_2(ai1,ai2,ai3)=macro_variables_boolean_array_3d_6(ai1,ai2,ai3)
											Case "3"
												macro_variables_boolean_array_3d_3(ai1,ai2,ai3)=macro_variables_boolean_array_3d_6(ai1,ai2,ai3)
											Case "4"
												macro_variables_boolean_array_3d_4(ai1,ai2,ai3)=macro_variables_boolean_array_3d_6(ai1,ai2,ai3)
											Case "5"
												macro_variables_boolean_array_3d_5(ai1,ai2,ai3)=macro_variables_boolean_array_3d_6(ai1,ai2,ai3)
											Case "6"
												macro_variables_boolean_array_3d_6(ai1,ai2,ai3)=macro_variables_boolean_array_3d_6(ai1,ai2,ai3)
											Case "7"
												macro_variables_boolean_array_3d_7(ai1,ai2,ai3)=macro_variables_boolean_array_3d_6(ai1,ai2,ai3)
											Case "8"
												macro_variables_boolean_array_3d_8(ai1,ai2,ai3)=macro_variables_boolean_array_3d_6(ai1,ai2,ai3)
											Case "9"
												macro_variables_boolean_array_3d_9(ai1,ai2,ai3)=macro_variables_boolean_array_3d_6(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "7"
							For ai1=LBound(macro_variables_boolean_array_3d_7) To UBound(macro_variables_boolean_array_3d_7)
								For ai2=LBound(macro_variables_boolean_array_3d_7,2) To UBound(macro_variables_boolean_array_3d_7,2)
									For ai3=LBound(macro_variables_boolean_array_3d_7,3) To UBound(macro_variables_boolean_array_3d_7,3)
										Select Case array_index
											Case "1"
												macro_variables_boolean_array_3d_1(ai1,ai2,ai3)=macro_variables_boolean_array_3d_7(ai1,ai2,ai3)
											Case "2"
												macro_variables_boolean_array_3d_2(ai1,ai2,ai3)=macro_variables_boolean_array_3d_7(ai1,ai2,ai3)
											Case "3"
												macro_variables_boolean_array_3d_3(ai1,ai2,ai3)=macro_variables_boolean_array_3d_7(ai1,ai2,ai3)
											Case "4"
												macro_variables_boolean_array_3d_4(ai1,ai2,ai3)=macro_variables_boolean_array_3d_7(ai1,ai2,ai3)
											Case "5"
												macro_variables_boolean_array_3d_5(ai1,ai2,ai3)=macro_variables_boolean_array_3d_7(ai1,ai2,ai3)
											Case "6"
												macro_variables_boolean_array_3d_6(ai1,ai2,ai3)=macro_variables_boolean_array_3d_7(ai1,ai2,ai3)
											Case "7"
												macro_variables_boolean_array_3d_7(ai1,ai2,ai3)=macro_variables_boolean_array_3d_7(ai1,ai2,ai3)
											Case "8"
												macro_variables_boolean_array_3d_8(ai1,ai2,ai3)=macro_variables_boolean_array_3d_7(ai1,ai2,ai3)
											Case "9"
												macro_variables_boolean_array_3d_9(ai1,ai2,ai3)=macro_variables_boolean_array_3d_7(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "8"
							For ai1=LBound(macro_variables_boolean_array_3d_8) To UBound(macro_variables_boolean_array_3d_8)
								For ai2=LBound(macro_variables_boolean_array_3d_8,2) To UBound(macro_variables_boolean_array_3d_8,2)
									For ai3=LBound(macro_variables_boolean_array_3d_8,3) To UBound(macro_variables_boolean_array_3d_8,3)
										Select Case array_index
											Case "1"
												macro_variables_boolean_array_3d_1(ai1,ai2,ai3)=macro_variables_boolean_array_3d_8(ai1,ai2,ai3)
											Case "2"
												macro_variables_boolean_array_3d_2(ai1,ai2,ai3)=macro_variables_boolean_array_3d_8(ai1,ai2,ai3)
											Case "3"
												macro_variables_boolean_array_3d_3(ai1,ai2,ai3)=macro_variables_boolean_array_3d_8(ai1,ai2,ai3)
											Case "4"
												macro_variables_boolean_array_3d_4(ai1,ai2,ai3)=macro_variables_boolean_array_3d_8(ai1,ai2,ai3)
											Case "5"
												macro_variables_boolean_array_3d_5(ai1,ai2,ai3)=macro_variables_boolean_array_3d_8(ai1,ai2,ai3)
											Case "6"
												macro_variables_boolean_array_3d_6(ai1,ai2,ai3)=macro_variables_boolean_array_3d_8(ai1,ai2,ai3)
											Case "7"
												macro_variables_boolean_array_3d_7(ai1,ai2,ai3)=macro_variables_boolean_array_3d_8(ai1,ai2,ai3)
											Case "8"
												macro_variables_boolean_array_3d_8(ai1,ai2,ai3)=macro_variables_boolean_array_3d_8(ai1,ai2,ai3)
											Case "9"
												macro_variables_boolean_array_3d_9(ai1,ai2,ai3)=macro_variables_boolean_array_3d_8(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "9"
							For ai1=LBound(macro_variables_boolean_array_3d_9) To UBound(macro_variables_boolean_array_3d_9)
								For ai2=LBound(macro_variables_boolean_array_3d_9,2) To UBound(macro_variables_boolean_array_3d_9,2)
									For ai3=LBound(macro_variables_boolean_array_3d_9,3) To UBound(macro_variables_boolean_array_3d_9,3)
										Select Case array_index
											Case "1"
												macro_variables_boolean_array_3d_1(ai1,ai2,ai3)=macro_variables_boolean_array_3d_9(ai1,ai2,ai3)
											Case "2"
												macro_variables_boolean_array_3d_2(ai1,ai2,ai3)=macro_variables_boolean_array_3d_9(ai1,ai2,ai3)
											Case "3"
												macro_variables_boolean_array_3d_3(ai1,ai2,ai3)=macro_variables_boolean_array_3d_9(ai1,ai2,ai3)
											Case "4"
												macro_variables_boolean_array_3d_4(ai1,ai2,ai3)=macro_variables_boolean_array_3d_9(ai1,ai2,ai3)
											Case "5"
												macro_variables_boolean_array_3d_5(ai1,ai2,ai3)=macro_variables_boolean_array_3d_9(ai1,ai2,ai3)
											Case "6"
												macro_variables_boolean_array_3d_6(ai1,ai2,ai3)=macro_variables_boolean_array_3d_9(ai1,ai2,ai3)
											Case "7"
												macro_variables_boolean_array_3d_7(ai1,ai2,ai3)=macro_variables_boolean_array_3d_9(ai1,ai2,ai3)
											Case "8"
												macro_variables_boolean_array_3d_8(ai1,ai2,ai3)=macro_variables_boolean_array_3d_9(ai1,ai2,ai3)
											Case "9"
												macro_variables_boolean_array_3d_9(ai1,ai2,ai3)=macro_variables_boolean_array_3d_9(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
					End Select
			End Select
		Case "BYTE_ARRAY"
			Select Case macro_variables_info(a,5)
				Case "1d"
					Select Case macro_variables_info(a,3)
						Case "1"
							For ai1=LBound(macro_variables_byte_array_1d_1) To UBound(macro_variables_byte_array_1d_1)
								Select Case array_index
									Case "1"
										macro_variables_byte_array_1d_1(ai1)=macro_variables_byte_array_1d_1(ai1)
									Case "2"
										macro_variables_byte_array_1d_2(ai1)=macro_variables_byte_array_1d_1(ai1)
									Case "3"
										macro_variables_byte_array_1d_3(ai1)=macro_variables_byte_array_1d_1(ai1)
									Case "4"
										macro_variables_byte_array_1d_4(ai1)=macro_variables_byte_array_1d_1(ai1)
									Case "5"
										macro_variables_byte_array_1d_5(ai1)=macro_variables_byte_array_1d_1(ai1)
									Case "6"
										macro_variables_byte_array_1d_6(ai1)=macro_variables_byte_array_1d_1(ai1)
									Case "7"
										macro_variables_byte_array_1d_7(ai1)=macro_variables_byte_array_1d_1(ai1)
									Case "8"
										macro_variables_byte_array_1d_8(ai1)=macro_variables_byte_array_1d_1(ai1)
									Case "9"
										macro_variables_byte_array_1d_9(ai1)=macro_variables_byte_array_1d_1(ai1)
								End Select
							Next
						Case "2"
							For ai1=LBound(macro_variables_byte_array_1d_2) To UBound(macro_variables_byte_array_1d_2)
								Select Case array_index
									Case "1"
										macro_variables_byte_array_1d_1(ai1)=macro_variables_byte_array_1d_2(ai1)
									Case "2"
										macro_variables_byte_array_1d_2(ai1)=macro_variables_byte_array_1d_2(ai1)
									Case "3"
										macro_variables_byte_array_1d_3(ai1)=macro_variables_byte_array_1d_2(ai1)
									Case "4"
										macro_variables_byte_array_1d_4(ai1)=macro_variables_byte_array_1d_2(ai1)
									Case "5"
										macro_variables_byte_array_1d_5(ai1)=macro_variables_byte_array_1d_2(ai1)
									Case "6"
										macro_variables_byte_array_1d_6(ai1)=macro_variables_byte_array_1d_2(ai1)
									Case "7"
										macro_variables_byte_array_1d_7(ai1)=macro_variables_byte_array_1d_2(ai1)
									Case "8"
										macro_variables_byte_array_1d_8(ai1)=macro_variables_byte_array_1d_2(ai1)
									Case "9"
										macro_variables_byte_array_1d_9(ai1)=macro_variables_byte_array_1d_2(ai1)
								End Select
							Next
						Case "3"
							For ai1=LBound(macro_variables_byte_array_1d_3) To UBound(macro_variables_byte_array_1d_3)
								Select Case array_index
									Case "1"
										macro_variables_byte_array_1d_1(ai1)=macro_variables_byte_array_1d_3(ai1)
									Case "2"
										macro_variables_byte_array_1d_2(ai1)=macro_variables_byte_array_1d_3(ai1)
									Case "3"
										macro_variables_byte_array_1d_3(ai1)=macro_variables_byte_array_1d_3(ai1)
									Case "4"
										macro_variables_byte_array_1d_4(ai1)=macro_variables_byte_array_1d_3(ai1)
									Case "5"
										macro_variables_byte_array_1d_5(ai1)=macro_variables_byte_array_1d_3(ai1)
									Case "6"
										macro_variables_byte_array_1d_6(ai1)=macro_variables_byte_array_1d_3(ai1)
									Case "7"
										macro_variables_byte_array_1d_7(ai1)=macro_variables_byte_array_1d_3(ai1)
									Case "8"
										macro_variables_byte_array_1d_8(ai1)=macro_variables_byte_array_1d_3(ai1)
									Case "9"
										macro_variables_byte_array_1d_9(ai1)=macro_variables_byte_array_1d_3(ai1)
								End Select
							Next
						Case "4"
							For ai1=LBound(macro_variables_byte_array_1d_4) To UBound(macro_variables_byte_array_1d_4)
								Select Case array_index
									Case "1"
										macro_variables_byte_array_1d_1(ai1)=macro_variables_byte_array_1d_4(ai1)
									Case "2"
										macro_variables_byte_array_1d_2(ai1)=macro_variables_byte_array_1d_4(ai1)
									Case "3"
										macro_variables_byte_array_1d_3(ai1)=macro_variables_byte_array_1d_4(ai1)
									Case "4"
										macro_variables_byte_array_1d_4(ai1)=macro_variables_byte_array_1d_4(ai1)
									Case "5"
										macro_variables_byte_array_1d_5(ai1)=macro_variables_byte_array_1d_4(ai1)
									Case "6"
										macro_variables_byte_array_1d_6(ai1)=macro_variables_byte_array_1d_4(ai1)
									Case "7"
										macro_variables_byte_array_1d_7(ai1)=macro_variables_byte_array_1d_4(ai1)
									Case "8"
										macro_variables_byte_array_1d_8(ai1)=macro_variables_byte_array_1d_4(ai1)
									Case "9"
										macro_variables_byte_array_1d_9(ai1)=macro_variables_byte_array_1d_4(ai1)
								End Select
							Next
						Case "5"
							For ai1=LBound(macro_variables_byte_array_1d_5) To UBound(macro_variables_byte_array_1d_5)
								Select Case array_index
									Case "1"
										macro_variables_byte_array_1d_1(ai1)=macro_variables_byte_array_1d_5(ai1)
									Case "2"
										macro_variables_byte_array_1d_2(ai1)=macro_variables_byte_array_1d_5(ai1)
									Case "3"
										macro_variables_byte_array_1d_3(ai1)=macro_variables_byte_array_1d_5(ai1)
									Case "4"
										macro_variables_byte_array_1d_4(ai1)=macro_variables_byte_array_1d_5(ai1)
									Case "5"
										macro_variables_byte_array_1d_5(ai1)=macro_variables_byte_array_1d_5(ai1)
									Case "6"
										macro_variables_byte_array_1d_6(ai1)=macro_variables_byte_array_1d_5(ai1)
									Case "7"
										macro_variables_byte_array_1d_7(ai1)=macro_variables_byte_array_1d_5(ai1)
									Case "8"
										macro_variables_byte_array_1d_8(ai1)=macro_variables_byte_array_1d_5(ai1)
									Case "9"
										macro_variables_byte_array_1d_9(ai1)=macro_variables_byte_array_1d_5(ai1)
								End Select
							Next
						Case "6"
							For ai1=LBound(macro_variables_byte_array_1d_6) To UBound(macro_variables_byte_array_1d_6)
								Select Case array_index
									Case "1"
										macro_variables_byte_array_1d_1(ai1)=macro_variables_byte_array_1d_6(ai1)
									Case "2"
										macro_variables_byte_array_1d_2(ai1)=macro_variables_byte_array_1d_6(ai1)
									Case "3"
										macro_variables_byte_array_1d_3(ai1)=macro_variables_byte_array_1d_6(ai1)
									Case "4"
										macro_variables_byte_array_1d_4(ai1)=macro_variables_byte_array_1d_6(ai1)
									Case "5"
										macro_variables_byte_array_1d_5(ai1)=macro_variables_byte_array_1d_6(ai1)
									Case "6"
										macro_variables_byte_array_1d_6(ai1)=macro_variables_byte_array_1d_6(ai1)
									Case "7"
										macro_variables_byte_array_1d_7(ai1)=macro_variables_byte_array_1d_6(ai1)
									Case "8"
										macro_variables_byte_array_1d_8(ai1)=macro_variables_byte_array_1d_6(ai1)
									Case "9"
										macro_variables_byte_array_1d_9(ai1)=macro_variables_byte_array_1d_6(ai1)
								End Select
							Next
						Case "7"
							For ai1=LBound(macro_variables_byte_array_1d_7) To UBound(macro_variables_byte_array_1d_7)
								Select Case array_index
									Case "1"
										macro_variables_byte_array_1d_1(ai1)=macro_variables_byte_array_1d_7(ai1)
									Case "2"
										macro_variables_byte_array_1d_2(ai1)=macro_variables_byte_array_1d_7(ai1)
									Case "3"
										macro_variables_byte_array_1d_3(ai1)=macro_variables_byte_array_1d_7(ai1)
									Case "4"
										macro_variables_byte_array_1d_4(ai1)=macro_variables_byte_array_1d_7(ai1)
									Case "5"
										macro_variables_byte_array_1d_5(ai1)=macro_variables_byte_array_1d_7(ai1)
									Case "6"
										macro_variables_byte_array_1d_6(ai1)=macro_variables_byte_array_1d_7(ai1)
									Case "7"
										macro_variables_byte_array_1d_7(ai1)=macro_variables_byte_array_1d_7(ai1)
									Case "8"
										macro_variables_byte_array_1d_8(ai1)=macro_variables_byte_array_1d_7(ai1)
									Case "9"
										macro_variables_byte_array_1d_9(ai1)=macro_variables_byte_array_1d_7(ai1)
								End Select
							Next
						Case "8"
							For ai1=LBound(macro_variables_byte_array_1d_8) To UBound(macro_variables_byte_array_1d_8)
								Select Case array_index
									Case "1"
										macro_variables_byte_array_1d_1(ai1)=macro_variables_byte_array_1d_8(ai1)
									Case "2"
										macro_variables_byte_array_1d_2(ai1)=macro_variables_byte_array_1d_8(ai1)
									Case "3"
										macro_variables_byte_array_1d_3(ai1)=macro_variables_byte_array_1d_8(ai1)
									Case "4"
										macro_variables_byte_array_1d_4(ai1)=macro_variables_byte_array_1d_8(ai1)
									Case "5"
										macro_variables_byte_array_1d_5(ai1)=macro_variables_byte_array_1d_8(ai1)
									Case "6"
										macro_variables_byte_array_1d_6(ai1)=macro_variables_byte_array_1d_8(ai1)
									Case "7"
										macro_variables_byte_array_1d_7(ai1)=macro_variables_byte_array_1d_8(ai1)
									Case "8"
										macro_variables_byte_array_1d_8(ai1)=macro_variables_byte_array_1d_8(ai1)
									Case "9"
										macro_variables_byte_array_1d_9(ai1)=macro_variables_byte_array_1d_8(ai1)
								End Select
							Next
						Case "9"
							For ai1=LBound(macro_variables_byte_array_1d_9) To UBound(macro_variables_byte_array_1d_9)
								Select Case array_index
									Case "1"
										macro_variables_byte_array_1d_1(ai1)=macro_variables_byte_array_1d_9(ai1)
									Case "2"
										macro_variables_byte_array_1d_2(ai1)=macro_variables_byte_array_1d_9(ai1)
									Case "3"
										macro_variables_byte_array_1d_3(ai1)=macro_variables_byte_array_1d_9(ai1)
									Case "4"
										macro_variables_byte_array_1d_4(ai1)=macro_variables_byte_array_1d_9(ai1)
									Case "5"
										macro_variables_byte_array_1d_5(ai1)=macro_variables_byte_array_1d_9(ai1)
									Case "6"
										macro_variables_byte_array_1d_6(ai1)=macro_variables_byte_array_1d_9(ai1)
									Case "7"
										macro_variables_byte_array_1d_7(ai1)=macro_variables_byte_array_1d_9(ai1)
									Case "8"
										macro_variables_byte_array_1d_8(ai1)=macro_variables_byte_array_1d_9(ai1)
									Case "9"
										macro_variables_byte_array_1d_9(ai1)=macro_variables_byte_array_1d_9(ai1)
								End Select
							Next
					End Select
				Case "2d"
					Select Case macro_variables_info(a,3)
						Case "1"
							For ai1=LBound(macro_variables_byte_array_2d_1) To UBound(macro_variables_byte_array_2d_1)
								For ai2=LBound(macro_variables_byte_array_2d_1,2) To UBound(macro_variables_byte_array_2d_1,2)
									Select Case array_index
										Case "1"
											macro_variables_byte_array_2d_1(ai1,ai2)=macro_variables_byte_array_2d_1(ai1,ai2)
										Case "2"
											macro_variables_byte_array_2d_2(ai1,ai2)=macro_variables_byte_array_2d_1(ai1,ai2)
										Case "3"
											macro_variables_byte_array_2d_3(ai1,ai2)=macro_variables_byte_array_2d_1(ai1,ai2)
										Case "4"
											macro_variables_byte_array_2d_4(ai1,ai2)=macro_variables_byte_array_2d_1(ai1,ai2)
										Case "5"
											macro_variables_byte_array_2d_5(ai1,ai2)=macro_variables_byte_array_2d_1(ai1,ai2)
										Case "6"
											macro_variables_byte_array_2d_6(ai1,ai2)=macro_variables_byte_array_2d_1(ai1,ai2)
										Case "7"
											macro_variables_byte_array_2d_7(ai1,ai2)=macro_variables_byte_array_2d_1(ai1,ai2)
										Case "8"
											macro_variables_byte_array_2d_8(ai1,ai2)=macro_variables_byte_array_2d_1(ai1,ai2)
										Case "9"
											macro_variables_byte_array_2d_9(ai1,ai2)=macro_variables_byte_array_2d_1(ai1,ai2)
									End Select
								Next
							Next
						Case "2"
							For ai1=LBound(macro_variables_byte_array_2d_2) To UBound(macro_variables_byte_array_2d_2)
								For ai2=LBound(macro_variables_byte_array_2d_2,2) To UBound(macro_variables_byte_array_2d_2,2)
									Select Case array_index
										Case "1"
											macro_variables_byte_array_2d_1(ai1,ai2)=macro_variables_byte_array_2d_2(ai1,ai2)
										Case "2"
											macro_variables_byte_array_2d_2(ai1,ai2)=macro_variables_byte_array_2d_2(ai1,ai2)
										Case "3"
											macro_variables_byte_array_2d_3(ai1,ai2)=macro_variables_byte_array_2d_2(ai1,ai2)
										Case "4"
											macro_variables_byte_array_2d_4(ai1,ai2)=macro_variables_byte_array_2d_2(ai1,ai2)
										Case "5"
											macro_variables_byte_array_2d_5(ai1,ai2)=macro_variables_byte_array_2d_2(ai1,ai2)
										Case "6"
											macro_variables_byte_array_2d_6(ai1,ai2)=macro_variables_byte_array_2d_2(ai1,ai2)
										Case "7"
											macro_variables_byte_array_2d_7(ai1,ai2)=macro_variables_byte_array_2d_2(ai1,ai2)
										Case "8"
											macro_variables_byte_array_2d_8(ai1,ai2)=macro_variables_byte_array_2d_2(ai1,ai2)
										Case "9"
											macro_variables_byte_array_2d_9(ai1,ai2)=macro_variables_byte_array_2d_2(ai1,ai2)
									End Select
								Next
							Next
						Case "3"
							For ai1=LBound(macro_variables_byte_array_2d_3) To UBound(macro_variables_byte_array_2d_3)
								For ai2=LBound(macro_variables_byte_array_2d_3,2) To UBound(macro_variables_byte_array_2d_3,2)
									Select Case array_index
										Case "1"
											macro_variables_byte_array_2d_1(ai1,ai2)=macro_variables_byte_array_2d_3(ai1,ai2)
										Case "2"
											macro_variables_byte_array_2d_2(ai1,ai2)=macro_variables_byte_array_2d_3(ai1,ai2)
										Case "3"
											macro_variables_byte_array_2d_3(ai1,ai2)=macro_variables_byte_array_2d_3(ai1,ai2)
										Case "4"
											macro_variables_byte_array_2d_4(ai1,ai2)=macro_variables_byte_array_2d_3(ai1,ai2)
										Case "5"
											macro_variables_byte_array_2d_5(ai1,ai2)=macro_variables_byte_array_2d_3(ai1,ai2)
										Case "6"
											macro_variables_byte_array_2d_6(ai1,ai2)=macro_variables_byte_array_2d_3(ai1,ai2)
										Case "7"
											macro_variables_byte_array_2d_7(ai1,ai2)=macro_variables_byte_array_2d_3(ai1,ai2)
										Case "8"
											macro_variables_byte_array_2d_8(ai1,ai2)=macro_variables_byte_array_2d_3(ai1,ai2)
										Case "9"
											macro_variables_byte_array_2d_9(ai1,ai2)=macro_variables_byte_array_2d_3(ai1,ai2)
									End Select
								Next
							Next
						Case "4"
							For ai1=LBound(macro_variables_byte_array_2d_4) To UBound(macro_variables_byte_array_2d_4)
								For ai2=LBound(macro_variables_byte_array_2d_4,2) To UBound(macro_variables_byte_array_2d_4,2)
									Select Case array_index
										Case "1"
											macro_variables_byte_array_2d_1(ai1,ai2)=macro_variables_byte_array_2d_4(ai1,ai2)
										Case "2"
											macro_variables_byte_array_2d_2(ai1,ai2)=macro_variables_byte_array_2d_4(ai1,ai2)
										Case "3"
											macro_variables_byte_array_2d_3(ai1,ai2)=macro_variables_byte_array_2d_4(ai1,ai2)
										Case "4"
											macro_variables_byte_array_2d_4(ai1,ai2)=macro_variables_byte_array_2d_4(ai1,ai2)
										Case "5"
											macro_variables_byte_array_2d_5(ai1,ai2)=macro_variables_byte_array_2d_4(ai1,ai2)
										Case "6"
											macro_variables_byte_array_2d_6(ai1,ai2)=macro_variables_byte_array_2d_4(ai1,ai2)
										Case "7"
											macro_variables_byte_array_2d_7(ai1,ai2)=macro_variables_byte_array_2d_4(ai1,ai2)
										Case "8"
											macro_variables_byte_array_2d_8(ai1,ai2)=macro_variables_byte_array_2d_4(ai1,ai2)
										Case "9"
											macro_variables_byte_array_2d_9(ai1,ai2)=macro_variables_byte_array_2d_4(ai1,ai2)
									End Select
								Next
							Next
						Case "5"
							For ai1=LBound(macro_variables_byte_array_2d_5) To UBound(macro_variables_byte_array_2d_5)
								For ai2=LBound(macro_variables_byte_array_2d_5,2) To UBound(macro_variables_byte_array_2d_5,2)
									Select Case array_index
										Case "1"
											macro_variables_byte_array_2d_1(ai1,ai2)=macro_variables_byte_array_2d_5(ai1,ai2)
										Case "2"
											macro_variables_byte_array_2d_2(ai1,ai2)=macro_variables_byte_array_2d_5(ai1,ai2)
										Case "3"
											macro_variables_byte_array_2d_3(ai1,ai2)=macro_variables_byte_array_2d_5(ai1,ai2)
										Case "4"
											macro_variables_byte_array_2d_4(ai1,ai2)=macro_variables_byte_array_2d_5(ai1,ai2)
										Case "5"
											macro_variables_byte_array_2d_5(ai1,ai2)=macro_variables_byte_array_2d_5(ai1,ai2)
										Case "6"
											macro_variables_byte_array_2d_6(ai1,ai2)=macro_variables_byte_array_2d_5(ai1,ai2)
										Case "7"
											macro_variables_byte_array_2d_7(ai1,ai2)=macro_variables_byte_array_2d_5(ai1,ai2)
										Case "8"
											macro_variables_byte_array_2d_8(ai1,ai2)=macro_variables_byte_array_2d_5(ai1,ai2)
										Case "9"
											macro_variables_byte_array_2d_9(ai1,ai2)=macro_variables_byte_array_2d_5(ai1,ai2)
									End Select
								Next
							Next
						Case "6"
							For ai1=LBound(macro_variables_byte_array_2d_6) To UBound(macro_variables_byte_array_2d_6)
								For ai2=LBound(macro_variables_byte_array_2d_6,2) To UBound(macro_variables_byte_array_2d_6,2)
									Select Case array_index
										Case "1"
											macro_variables_byte_array_2d_1(ai1,ai2)=macro_variables_byte_array_2d_6(ai1,ai2)
										Case "2"
											macro_variables_byte_array_2d_2(ai1,ai2)=macro_variables_byte_array_2d_6(ai1,ai2)
										Case "3"
											macro_variables_byte_array_2d_3(ai1,ai2)=macro_variables_byte_array_2d_6(ai1,ai2)
										Case "4"
											macro_variables_byte_array_2d_4(ai1,ai2)=macro_variables_byte_array_2d_6(ai1,ai2)
										Case "5"
											macro_variables_byte_array_2d_5(ai1,ai2)=macro_variables_byte_array_2d_6(ai1,ai2)
										Case "6"
											macro_variables_byte_array_2d_6(ai1,ai2)=macro_variables_byte_array_2d_6(ai1,ai2)
										Case "7"
											macro_variables_byte_array_2d_7(ai1,ai2)=macro_variables_byte_array_2d_6(ai1,ai2)
										Case "8"
											macro_variables_byte_array_2d_8(ai1,ai2)=macro_variables_byte_array_2d_6(ai1,ai2)
										Case "9"
											macro_variables_byte_array_2d_9(ai1,ai2)=macro_variables_byte_array_2d_6(ai1,ai2)
									End Select
								Next
							Next
						Case "7"
							For ai1=LBound(macro_variables_byte_array_2d_7) To UBound(macro_variables_byte_array_2d_7)
								For ai2=LBound(macro_variables_byte_array_2d_7,2) To UBound(macro_variables_byte_array_2d_7,2)
									Select Case array_index
										Case "1"
											macro_variables_byte_array_2d_1(ai1,ai2)=macro_variables_byte_array_2d_7(ai1,ai2)
										Case "2"
											macro_variables_byte_array_2d_2(ai1,ai2)=macro_variables_byte_array_2d_7(ai1,ai2)
										Case "3"
											macro_variables_byte_array_2d_3(ai1,ai2)=macro_variables_byte_array_2d_7(ai1,ai2)
										Case "4"
											macro_variables_byte_array_2d_4(ai1,ai2)=macro_variables_byte_array_2d_7(ai1,ai2)
										Case "5"
											macro_variables_byte_array_2d_5(ai1,ai2)=macro_variables_byte_array_2d_7(ai1,ai2)
										Case "6"
											macro_variables_byte_array_2d_6(ai1,ai2)=macro_variables_byte_array_2d_7(ai1,ai2)
										Case "7"
											macro_variables_byte_array_2d_7(ai1,ai2)=macro_variables_byte_array_2d_7(ai1,ai2)
										Case "8"
											macro_variables_byte_array_2d_8(ai1,ai2)=macro_variables_byte_array_2d_7(ai1,ai2)
										Case "9"
											macro_variables_byte_array_2d_9(ai1,ai2)=macro_variables_byte_array_2d_7(ai1,ai2)
									End Select
								Next
							Next
						Case "8"
							For ai1=LBound(macro_variables_byte_array_2d_8) To UBound(macro_variables_byte_array_2d_8)
								For ai2=LBound(macro_variables_byte_array_2d_8,2) To UBound(macro_variables_byte_array_2d_8,2)
									Select Case array_index
										Case "1"
											macro_variables_byte_array_2d_1(ai1,ai2)=macro_variables_byte_array_2d_8(ai1,ai2)
										Case "2"
											macro_variables_byte_array_2d_2(ai1,ai2)=macro_variables_byte_array_2d_8(ai1,ai2)
										Case "3"
											macro_variables_byte_array_2d_3(ai1,ai2)=macro_variables_byte_array_2d_8(ai1,ai2)
										Case "4"
											macro_variables_byte_array_2d_4(ai1,ai2)=macro_variables_byte_array_2d_8(ai1,ai2)
										Case "5"
											macro_variables_byte_array_2d_5(ai1,ai2)=macro_variables_byte_array_2d_8(ai1,ai2)
										Case "6"
											macro_variables_byte_array_2d_6(ai1,ai2)=macro_variables_byte_array_2d_8(ai1,ai2)
										Case "7"
											macro_variables_byte_array_2d_7(ai1,ai2)=macro_variables_byte_array_2d_8(ai1,ai2)
										Case "8"
											macro_variables_byte_array_2d_8(ai1,ai2)=macro_variables_byte_array_2d_8(ai1,ai2)
										Case "9"
											macro_variables_byte_array_2d_9(ai1,ai2)=macro_variables_byte_array_2d_8(ai1,ai2)
									End Select
								Next
							Next
						Case "9"
							For ai1=LBound(macro_variables_byte_array_2d_9) To UBound(macro_variables_byte_array_2d_9)
								For ai2=LBound(macro_variables_byte_array_2d_9,2) To UBound(macro_variables_byte_array_2d_9,2)
									Select Case array_index
										Case "1"
											macro_variables_byte_array_2d_1(ai1,ai2)=macro_variables_byte_array_2d_9(ai1,ai2)
										Case "2"
											macro_variables_byte_array_2d_2(ai1,ai2)=macro_variables_byte_array_2d_9(ai1,ai2)
										Case "3"
											macro_variables_byte_array_2d_3(ai1,ai2)=macro_variables_byte_array_2d_9(ai1,ai2)
										Case "4"
											macro_variables_byte_array_2d_4(ai1,ai2)=macro_variables_byte_array_2d_9(ai1,ai2)
										Case "5"
											macro_variables_byte_array_2d_5(ai1,ai2)=macro_variables_byte_array_2d_9(ai1,ai2)
										Case "6"
											macro_variables_byte_array_2d_6(ai1,ai2)=macro_variables_byte_array_2d_9(ai1,ai2)
										Case "7"
											macro_variables_byte_array_2d_7(ai1,ai2)=macro_variables_byte_array_2d_9(ai1,ai2)
										Case "8"
											macro_variables_byte_array_2d_8(ai1,ai2)=macro_variables_byte_array_2d_9(ai1,ai2)
										Case "9"
											macro_variables_byte_array_2d_9(ai1,ai2)=macro_variables_byte_array_2d_9(ai1,ai2)
									End Select
								Next
							Next
					End Select
				Case "3d"
					Select Case macro_variables_info(a,3)
						Case "1"
							For ai1=LBound(macro_variables_byte_array_3d_1) To UBound(macro_variables_byte_array_3d_1)
								For ai2=LBound(macro_variables_byte_array_3d_1,2) To UBound(macro_variables_byte_array_3d_1,2)
									For ai3=LBound(macro_variables_byte_array_3d_1,3) To UBound(macro_variables_byte_array_3d_1,3)
										Select Case array_index
											Case "1"
												macro_variables_byte_array_3d_1(ai1,ai2,ai3)=macro_variables_byte_array_3d_1(ai1,ai2,ai3)
											Case "2"
												macro_variables_byte_array_3d_2(ai1,ai2,ai3)=macro_variables_byte_array_3d_1(ai1,ai2,ai3)
											Case "3"
												macro_variables_byte_array_3d_3(ai1,ai2,ai3)=macro_variables_byte_array_3d_1(ai1,ai2,ai3)
											Case "4"
												macro_variables_byte_array_3d_4(ai1,ai2,ai3)=macro_variables_byte_array_3d_1(ai1,ai2,ai3)
											Case "5"
												macro_variables_byte_array_3d_5(ai1,ai2,ai3)=macro_variables_byte_array_3d_1(ai1,ai2,ai3)
											Case "6"
												macro_variables_byte_array_3d_6(ai1,ai2,ai3)=macro_variables_byte_array_3d_1(ai1,ai2,ai3)
											Case "7"
												macro_variables_byte_array_3d_7(ai1,ai2,ai3)=macro_variables_byte_array_3d_1(ai1,ai2,ai3)
											Case "8"
												macro_variables_byte_array_3d_8(ai1,ai2,ai3)=macro_variables_byte_array_3d_1(ai1,ai2,ai3)
											Case "9"
												macro_variables_byte_array_3d_9(ai1,ai2,ai3)=macro_variables_byte_array_3d_1(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "2"
							For ai1=LBound(macro_variables_byte_array_3d_2) To UBound(macro_variables_byte_array_3d_2)
								For ai2=LBound(macro_variables_byte_array_3d_2,2) To UBound(macro_variables_byte_array_3d_2,2)
									For ai3=LBound(macro_variables_byte_array_3d_2,3) To UBound(macro_variables_byte_array_3d_2,3)
										Select Case array_index
											Case "1"
												macro_variables_byte_array_3d_1(ai1,ai2,ai3)=macro_variables_byte_array_3d_2(ai1,ai2,ai3)
											Case "2"
												macro_variables_byte_array_3d_2(ai1,ai2,ai3)=macro_variables_byte_array_3d_2(ai1,ai2,ai3)
											Case "3"
												macro_variables_byte_array_3d_3(ai1,ai2,ai3)=macro_variables_byte_array_3d_2(ai1,ai2,ai3)
											Case "4"
												macro_variables_byte_array_3d_4(ai1,ai2,ai3)=macro_variables_byte_array_3d_2(ai1,ai2,ai3)
											Case "5"
												macro_variables_byte_array_3d_5(ai1,ai2,ai3)=macro_variables_byte_array_3d_2(ai1,ai2,ai3)
											Case "6"
												macro_variables_byte_array_3d_6(ai1,ai2,ai3)=macro_variables_byte_array_3d_2(ai1,ai2,ai3)
											Case "7"
												macro_variables_byte_array_3d_7(ai1,ai2,ai3)=macro_variables_byte_array_3d_2(ai1,ai2,ai3)
											Case "8"
												macro_variables_byte_array_3d_8(ai1,ai2,ai3)=macro_variables_byte_array_3d_2(ai1,ai2,ai3)
											Case "9"
												macro_variables_byte_array_3d_9(ai1,ai2,ai3)=macro_variables_byte_array_3d_2(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "3"
							For ai1=LBound(macro_variables_byte_array_3d_3) To UBound(macro_variables_byte_array_3d_3)
								For ai2=LBound(macro_variables_byte_array_3d_3,2) To UBound(macro_variables_byte_array_3d_3,2)
									For ai3=LBound(macro_variables_byte_array_3d_3,3) To UBound(macro_variables_byte_array_3d_3,3)
										Select Case array_index
											Case "1"
												macro_variables_byte_array_3d_1(ai1,ai2,ai3)=macro_variables_byte_array_3d_3(ai1,ai2,ai3)
											Case "2"
												macro_variables_byte_array_3d_2(ai1,ai2,ai3)=macro_variables_byte_array_3d_3(ai1,ai2,ai3)
											Case "3"
												macro_variables_byte_array_3d_3(ai1,ai2,ai3)=macro_variables_byte_array_3d_3(ai1,ai2,ai3)
											Case "4"
												macro_variables_byte_array_3d_4(ai1,ai2,ai3)=macro_variables_byte_array_3d_3(ai1,ai2,ai3)
											Case "5"
												macro_variables_byte_array_3d_5(ai1,ai2,ai3)=macro_variables_byte_array_3d_3(ai1,ai2,ai3)
											Case "6"
												macro_variables_byte_array_3d_6(ai1,ai2,ai3)=macro_variables_byte_array_3d_3(ai1,ai2,ai3)
											Case "7"
												macro_variables_byte_array_3d_7(ai1,ai2,ai3)=macro_variables_byte_array_3d_3(ai1,ai2,ai3)
											Case "8"
												macro_variables_byte_array_3d_8(ai1,ai2,ai3)=macro_variables_byte_array_3d_3(ai1,ai2,ai3)
											Case "9"
												macro_variables_byte_array_3d_9(ai1,ai2,ai3)=macro_variables_byte_array_3d_3(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "4"
							For ai1=LBound(macro_variables_byte_array_3d_4) To UBound(macro_variables_byte_array_3d_4)
								For ai2=LBound(macro_variables_byte_array_3d_4,2) To UBound(macro_variables_byte_array_3d_4,2)
									For ai3=LBound(macro_variables_byte_array_3d_4,3) To UBound(macro_variables_byte_array_3d_4,3)
										Select Case array_index
											Case "1"
												macro_variables_byte_array_3d_1(ai1,ai2,ai3)=macro_variables_byte_array_3d_4(ai1,ai2,ai3)
											Case "2"
												macro_variables_byte_array_3d_2(ai1,ai2,ai3)=macro_variables_byte_array_3d_4(ai1,ai2,ai3)
											Case "3"
												macro_variables_byte_array_3d_3(ai1,ai2,ai3)=macro_variables_byte_array_3d_4(ai1,ai2,ai3)
											Case "4"
												macro_variables_byte_array_3d_4(ai1,ai2,ai3)=macro_variables_byte_array_3d_4(ai1,ai2,ai3)
											Case "5"
												macro_variables_byte_array_3d_5(ai1,ai2,ai3)=macro_variables_byte_array_3d_4(ai1,ai2,ai3)
											Case "6"
												macro_variables_byte_array_3d_6(ai1,ai2,ai3)=macro_variables_byte_array_3d_4(ai1,ai2,ai3)
											Case "7"
												macro_variables_byte_array_3d_7(ai1,ai2,ai3)=macro_variables_byte_array_3d_4(ai1,ai2,ai3)
											Case "8"
												macro_variables_byte_array_3d_8(ai1,ai2,ai3)=macro_variables_byte_array_3d_4(ai1,ai2,ai3)
											Case "9"
												macro_variables_byte_array_3d_9(ai1,ai2,ai3)=macro_variables_byte_array_3d_4(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "5"
							For ai1=LBound(macro_variables_byte_array_3d_5) To UBound(macro_variables_byte_array_3d_5)
								For ai2=LBound(macro_variables_byte_array_3d_5,2) To UBound(macro_variables_byte_array_3d_5,2)
									For ai3=LBound(macro_variables_byte_array_3d_5,3) To UBound(macro_variables_byte_array_3d_5,3)
										Select Case array_index
											Case "1"
												macro_variables_byte_array_3d_1(ai1,ai2,ai3)=macro_variables_byte_array_3d_5(ai1,ai2,ai3)
											Case "2"
												macro_variables_byte_array_3d_2(ai1,ai2,ai3)=macro_variables_byte_array_3d_5(ai1,ai2,ai3)
											Case "3"
												macro_variables_byte_array_3d_3(ai1,ai2,ai3)=macro_variables_byte_array_3d_5(ai1,ai2,ai3)
											Case "4"
												macro_variables_byte_array_3d_4(ai1,ai2,ai3)=macro_variables_byte_array_3d_5(ai1,ai2,ai3)
											Case "5"
												macro_variables_byte_array_3d_5(ai1,ai2,ai3)=macro_variables_byte_array_3d_5(ai1,ai2,ai3)
											Case "6"
												macro_variables_byte_array_3d_6(ai1,ai2,ai3)=macro_variables_byte_array_3d_5(ai1,ai2,ai3)
											Case "7"
												macro_variables_byte_array_3d_7(ai1,ai2,ai3)=macro_variables_byte_array_3d_5(ai1,ai2,ai3)
											Case "8"
												macro_variables_byte_array_3d_8(ai1,ai2,ai3)=macro_variables_byte_array_3d_5(ai1,ai2,ai3)
											Case "9"
												macro_variables_byte_array_3d_9(ai1,ai2,ai3)=macro_variables_byte_array_3d_5(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "6"
							For ai1=LBound(macro_variables_byte_array_3d_6) To UBound(macro_variables_byte_array_3d_6)
								For ai2=LBound(macro_variables_byte_array_3d_6,2) To UBound(macro_variables_byte_array_3d_6,2)
									For ai3=LBound(macro_variables_byte_array_3d_6,3) To UBound(macro_variables_byte_array_3d_6,3)
										Select Case array_index
											Case "1"
												macro_variables_byte_array_3d_1(ai1,ai2,ai3)=macro_variables_byte_array_3d_6(ai1,ai2,ai3)
											Case "2"
												macro_variables_byte_array_3d_2(ai1,ai2,ai3)=macro_variables_byte_array_3d_6(ai1,ai2,ai3)
											Case "3"
												macro_variables_byte_array_3d_3(ai1,ai2,ai3)=macro_variables_byte_array_3d_6(ai1,ai2,ai3)
											Case "4"
												macro_variables_byte_array_3d_4(ai1,ai2,ai3)=macro_variables_byte_array_3d_6(ai1,ai2,ai3)
											Case "5"
												macro_variables_byte_array_3d_5(ai1,ai2,ai3)=macro_variables_byte_array_3d_6(ai1,ai2,ai3)
											Case "6"
												macro_variables_byte_array_3d_6(ai1,ai2,ai3)=macro_variables_byte_array_3d_6(ai1,ai2,ai3)
											Case "7"
												macro_variables_byte_array_3d_7(ai1,ai2,ai3)=macro_variables_byte_array_3d_6(ai1,ai2,ai3)
											Case "8"
												macro_variables_byte_array_3d_8(ai1,ai2,ai3)=macro_variables_byte_array_3d_6(ai1,ai2,ai3)
											Case "9"
												macro_variables_byte_array_3d_9(ai1,ai2,ai3)=macro_variables_byte_array_3d_6(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "7"
							For ai1=LBound(macro_variables_byte_array_3d_7) To UBound(macro_variables_byte_array_3d_7)
								For ai2=LBound(macro_variables_byte_array_3d_7,2) To UBound(macro_variables_byte_array_3d_7,2)
									For ai3=LBound(macro_variables_byte_array_3d_7,3) To UBound(macro_variables_byte_array_3d_7,3)
										Select Case array_index
											Case "1"
												macro_variables_byte_array_3d_1(ai1,ai2,ai3)=macro_variables_byte_array_3d_7(ai1,ai2,ai3)
											Case "2"
												macro_variables_byte_array_3d_2(ai1,ai2,ai3)=macro_variables_byte_array_3d_7(ai1,ai2,ai3)
											Case "3"
												macro_variables_byte_array_3d_3(ai1,ai2,ai3)=macro_variables_byte_array_3d_7(ai1,ai2,ai3)
											Case "4"
												macro_variables_byte_array_3d_4(ai1,ai2,ai3)=macro_variables_byte_array_3d_7(ai1,ai2,ai3)
											Case "5"
												macro_variables_byte_array_3d_5(ai1,ai2,ai3)=macro_variables_byte_array_3d_7(ai1,ai2,ai3)
											Case "6"
												macro_variables_byte_array_3d_6(ai1,ai2,ai3)=macro_variables_byte_array_3d_7(ai1,ai2,ai3)
											Case "7"
												macro_variables_byte_array_3d_7(ai1,ai2,ai3)=macro_variables_byte_array_3d_7(ai1,ai2,ai3)
											Case "8"
												macro_variables_byte_array_3d_8(ai1,ai2,ai3)=macro_variables_byte_array_3d_7(ai1,ai2,ai3)
											Case "9"
												macro_variables_byte_array_3d_9(ai1,ai2,ai3)=macro_variables_byte_array_3d_7(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "8"
							For ai1=LBound(macro_variables_byte_array_3d_8) To UBound(macro_variables_byte_array_3d_8)
								For ai2=LBound(macro_variables_byte_array_3d_8,2) To UBound(macro_variables_byte_array_3d_8,2)
									For ai3=LBound(macro_variables_byte_array_3d_8,3) To UBound(macro_variables_byte_array_3d_8,3)
										Select Case array_index
											Case "1"
												macro_variables_byte_array_3d_1(ai1,ai2,ai3)=macro_variables_byte_array_3d_8(ai1,ai2,ai3)
											Case "2"
												macro_variables_byte_array_3d_2(ai1,ai2,ai3)=macro_variables_byte_array_3d_8(ai1,ai2,ai3)
											Case "3"
												macro_variables_byte_array_3d_3(ai1,ai2,ai3)=macro_variables_byte_array_3d_8(ai1,ai2,ai3)
											Case "4"
												macro_variables_byte_array_3d_4(ai1,ai2,ai3)=macro_variables_byte_array_3d_8(ai1,ai2,ai3)
											Case "5"
												macro_variables_byte_array_3d_5(ai1,ai2,ai3)=macro_variables_byte_array_3d_8(ai1,ai2,ai3)
											Case "6"
												macro_variables_byte_array_3d_6(ai1,ai2,ai3)=macro_variables_byte_array_3d_8(ai1,ai2,ai3)
											Case "7"
												macro_variables_byte_array_3d_7(ai1,ai2,ai3)=macro_variables_byte_array_3d_8(ai1,ai2,ai3)
											Case "8"
												macro_variables_byte_array_3d_8(ai1,ai2,ai3)=macro_variables_byte_array_3d_8(ai1,ai2,ai3)
											Case "9"
												macro_variables_byte_array_3d_9(ai1,ai2,ai3)=macro_variables_byte_array_3d_8(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "9"
							For ai1=LBound(macro_variables_byte_array_3d_9) To UBound(macro_variables_byte_array_3d_9)
								For ai2=LBound(macro_variables_byte_array_3d_9,2) To UBound(macro_variables_byte_array_3d_9,2)
									For ai3=LBound(macro_variables_byte_array_3d_9,3) To UBound(macro_variables_byte_array_3d_9,3)
										Select Case array_index
											Case "1"
												macro_variables_byte_array_3d_1(ai1,ai2,ai3)=macro_variables_byte_array_3d_9(ai1,ai2,ai3)
											Case "2"
												macro_variables_byte_array_3d_2(ai1,ai2,ai3)=macro_variables_byte_array_3d_9(ai1,ai2,ai3)
											Case "3"
												macro_variables_byte_array_3d_3(ai1,ai2,ai3)=macro_variables_byte_array_3d_9(ai1,ai2,ai3)
											Case "4"
												macro_variables_byte_array_3d_4(ai1,ai2,ai3)=macro_variables_byte_array_3d_9(ai1,ai2,ai3)
											Case "5"
												macro_variables_byte_array_3d_5(ai1,ai2,ai3)=macro_variables_byte_array_3d_9(ai1,ai2,ai3)
											Case "6"
												macro_variables_byte_array_3d_6(ai1,ai2,ai3)=macro_variables_byte_array_3d_9(ai1,ai2,ai3)
											Case "7"
												macro_variables_byte_array_3d_7(ai1,ai2,ai3)=macro_variables_byte_array_3d_9(ai1,ai2,ai3)
											Case "8"
												macro_variables_byte_array_3d_8(ai1,ai2,ai3)=macro_variables_byte_array_3d_9(ai1,ai2,ai3)
											Case "9"
												macro_variables_byte_array_3d_9(ai1,ai2,ai3)=macro_variables_byte_array_3d_9(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
					End Select
			End Select
		Case "UBYTE_ARRAY"
			Select Case macro_variables_info(a,5)
				Case "1d"
					Select Case macro_variables_info(a,3)
						Case "1"
							For ai1=LBound(macro_variables_ubyte_array_1d_1) To UBound(macro_variables_ubyte_array_1d_1)
								Select Case array_index
									Case "1"
										macro_variables_ubyte_array_1d_1(ai1)=macro_variables_ubyte_array_1d_1(ai1)
									Case "2"
										macro_variables_ubyte_array_1d_2(ai1)=macro_variables_ubyte_array_1d_1(ai1)
									Case "3"
										macro_variables_ubyte_array_1d_3(ai1)=macro_variables_ubyte_array_1d_1(ai1)
									Case "4"
										macro_variables_ubyte_array_1d_4(ai1)=macro_variables_ubyte_array_1d_1(ai1)
									Case "5"
										macro_variables_ubyte_array_1d_5(ai1)=macro_variables_ubyte_array_1d_1(ai1)
									Case "6"
										macro_variables_ubyte_array_1d_6(ai1)=macro_variables_ubyte_array_1d_1(ai1)
									Case "7"
										macro_variables_ubyte_array_1d_7(ai1)=macro_variables_ubyte_array_1d_1(ai1)
									Case "8"
										macro_variables_ubyte_array_1d_8(ai1)=macro_variables_ubyte_array_1d_1(ai1)
									Case "9"
										macro_variables_ubyte_array_1d_9(ai1)=macro_variables_ubyte_array_1d_1(ai1)
								End Select
							Next
						Case "2"
							For ai1=LBound(macro_variables_ubyte_array_1d_2) To UBound(macro_variables_ubyte_array_1d_2)
								Select Case array_index
									Case "1"
										macro_variables_ubyte_array_1d_1(ai1)=macro_variables_ubyte_array_1d_2(ai1)
									Case "2"
										macro_variables_ubyte_array_1d_2(ai1)=macro_variables_ubyte_array_1d_2(ai1)
									Case "3"
										macro_variables_ubyte_array_1d_3(ai1)=macro_variables_ubyte_array_1d_2(ai1)
									Case "4"
										macro_variables_ubyte_array_1d_4(ai1)=macro_variables_ubyte_array_1d_2(ai1)
									Case "5"
										macro_variables_ubyte_array_1d_5(ai1)=macro_variables_ubyte_array_1d_2(ai1)
									Case "6"
										macro_variables_ubyte_array_1d_6(ai1)=macro_variables_ubyte_array_1d_2(ai1)
									Case "7"
										macro_variables_ubyte_array_1d_7(ai1)=macro_variables_ubyte_array_1d_2(ai1)
									Case "8"
										macro_variables_ubyte_array_1d_8(ai1)=macro_variables_ubyte_array_1d_2(ai1)
									Case "9"
										macro_variables_ubyte_array_1d_9(ai1)=macro_variables_ubyte_array_1d_2(ai1)
								End Select
							Next
						Case "3"
							For ai1=LBound(macro_variables_ubyte_array_1d_3) To UBound(macro_variables_ubyte_array_1d_3)
								Select Case array_index
									Case "1"
										macro_variables_ubyte_array_1d_1(ai1)=macro_variables_ubyte_array_1d_3(ai1)
									Case "2"
										macro_variables_ubyte_array_1d_2(ai1)=macro_variables_ubyte_array_1d_3(ai1)
									Case "3"
										macro_variables_ubyte_array_1d_3(ai1)=macro_variables_ubyte_array_1d_3(ai1)
									Case "4"
										macro_variables_ubyte_array_1d_4(ai1)=macro_variables_ubyte_array_1d_3(ai1)
									Case "5"
										macro_variables_ubyte_array_1d_5(ai1)=macro_variables_ubyte_array_1d_3(ai1)
									Case "6"
										macro_variables_ubyte_array_1d_6(ai1)=macro_variables_ubyte_array_1d_3(ai1)
									Case "7"
										macro_variables_ubyte_array_1d_7(ai1)=macro_variables_ubyte_array_1d_3(ai1)
									Case "8"
										macro_variables_ubyte_array_1d_8(ai1)=macro_variables_ubyte_array_1d_3(ai1)
									Case "9"
										macro_variables_ubyte_array_1d_9(ai1)=macro_variables_ubyte_array_1d_3(ai1)
								End Select
							Next
						Case "4"
							For ai1=LBound(macro_variables_ubyte_array_1d_4) To UBound(macro_variables_ubyte_array_1d_4)
								Select Case array_index
									Case "1"
										macro_variables_ubyte_array_1d_1(ai1)=macro_variables_ubyte_array_1d_4(ai1)
									Case "2"
										macro_variables_ubyte_array_1d_2(ai1)=macro_variables_ubyte_array_1d_4(ai1)
									Case "3"
										macro_variables_ubyte_array_1d_3(ai1)=macro_variables_ubyte_array_1d_4(ai1)
									Case "4"
										macro_variables_ubyte_array_1d_4(ai1)=macro_variables_ubyte_array_1d_4(ai1)
									Case "5"
										macro_variables_ubyte_array_1d_5(ai1)=macro_variables_ubyte_array_1d_4(ai1)
									Case "6"
										macro_variables_ubyte_array_1d_6(ai1)=macro_variables_ubyte_array_1d_4(ai1)
									Case "7"
										macro_variables_ubyte_array_1d_7(ai1)=macro_variables_ubyte_array_1d_4(ai1)
									Case "8"
										macro_variables_ubyte_array_1d_8(ai1)=macro_variables_ubyte_array_1d_4(ai1)
									Case "9"
										macro_variables_ubyte_array_1d_9(ai1)=macro_variables_ubyte_array_1d_4(ai1)
								End Select
							Next
						Case "5"
							For ai1=LBound(macro_variables_ubyte_array_1d_5) To UBound(macro_variables_ubyte_array_1d_5)
								Select Case array_index
									Case "1"
										macro_variables_ubyte_array_1d_1(ai1)=macro_variables_ubyte_array_1d_5(ai1)
									Case "2"
										macro_variables_ubyte_array_1d_2(ai1)=macro_variables_ubyte_array_1d_5(ai1)
									Case "3"
										macro_variables_ubyte_array_1d_3(ai1)=macro_variables_ubyte_array_1d_5(ai1)
									Case "4"
										macro_variables_ubyte_array_1d_4(ai1)=macro_variables_ubyte_array_1d_5(ai1)
									Case "5"
										macro_variables_ubyte_array_1d_5(ai1)=macro_variables_ubyte_array_1d_5(ai1)
									Case "6"
										macro_variables_ubyte_array_1d_6(ai1)=macro_variables_ubyte_array_1d_5(ai1)
									Case "7"
										macro_variables_ubyte_array_1d_7(ai1)=macro_variables_ubyte_array_1d_5(ai1)
									Case "8"
										macro_variables_ubyte_array_1d_8(ai1)=macro_variables_ubyte_array_1d_5(ai1)
									Case "9"
										macro_variables_ubyte_array_1d_9(ai1)=macro_variables_ubyte_array_1d_5(ai1)
								End Select
							Next
						Case "6"
							For ai1=LBound(macro_variables_ubyte_array_1d_6) To UBound(macro_variables_ubyte_array_1d_6)
								Select Case array_index
									Case "1"
										macro_variables_ubyte_array_1d_1(ai1)=macro_variables_ubyte_array_1d_6(ai1)
									Case "2"
										macro_variables_ubyte_array_1d_2(ai1)=macro_variables_ubyte_array_1d_6(ai1)
									Case "3"
										macro_variables_ubyte_array_1d_3(ai1)=macro_variables_ubyte_array_1d_6(ai1)
									Case "4"
										macro_variables_ubyte_array_1d_4(ai1)=macro_variables_ubyte_array_1d_6(ai1)
									Case "5"
										macro_variables_ubyte_array_1d_5(ai1)=macro_variables_ubyte_array_1d_6(ai1)
									Case "6"
										macro_variables_ubyte_array_1d_6(ai1)=macro_variables_ubyte_array_1d_6(ai1)
									Case "7"
										macro_variables_ubyte_array_1d_7(ai1)=macro_variables_ubyte_array_1d_6(ai1)
									Case "8"
										macro_variables_ubyte_array_1d_8(ai1)=macro_variables_ubyte_array_1d_6(ai1)
									Case "9"
										macro_variables_ubyte_array_1d_9(ai1)=macro_variables_ubyte_array_1d_6(ai1)
								End Select
							Next
						Case "7"
							For ai1=LBound(macro_variables_ubyte_array_1d_7) To UBound(macro_variables_ubyte_array_1d_7)
								Select Case array_index
									Case "1"
										macro_variables_ubyte_array_1d_1(ai1)=macro_variables_ubyte_array_1d_7(ai1)
									Case "2"
										macro_variables_ubyte_array_1d_2(ai1)=macro_variables_ubyte_array_1d_7(ai1)
									Case "3"
										macro_variables_ubyte_array_1d_3(ai1)=macro_variables_ubyte_array_1d_7(ai1)
									Case "4"
										macro_variables_ubyte_array_1d_4(ai1)=macro_variables_ubyte_array_1d_7(ai1)
									Case "5"
										macro_variables_ubyte_array_1d_5(ai1)=macro_variables_ubyte_array_1d_7(ai1)
									Case "6"
										macro_variables_ubyte_array_1d_6(ai1)=macro_variables_ubyte_array_1d_7(ai1)
									Case "7"
										macro_variables_ubyte_array_1d_7(ai1)=macro_variables_ubyte_array_1d_7(ai1)
									Case "8"
										macro_variables_ubyte_array_1d_8(ai1)=macro_variables_ubyte_array_1d_7(ai1)
									Case "9"
										macro_variables_ubyte_array_1d_9(ai1)=macro_variables_ubyte_array_1d_7(ai1)
								End Select
							Next
						Case "8"
							For ai1=LBound(macro_variables_ubyte_array_1d_8) To UBound(macro_variables_ubyte_array_1d_8)
								Select Case array_index
									Case "1"
										macro_variables_ubyte_array_1d_1(ai1)=macro_variables_ubyte_array_1d_8(ai1)
									Case "2"
										macro_variables_ubyte_array_1d_2(ai1)=macro_variables_ubyte_array_1d_8(ai1)
									Case "3"
										macro_variables_ubyte_array_1d_3(ai1)=macro_variables_ubyte_array_1d_8(ai1)
									Case "4"
										macro_variables_ubyte_array_1d_4(ai1)=macro_variables_ubyte_array_1d_8(ai1)
									Case "5"
										macro_variables_ubyte_array_1d_5(ai1)=macro_variables_ubyte_array_1d_8(ai1)
									Case "6"
										macro_variables_ubyte_array_1d_6(ai1)=macro_variables_ubyte_array_1d_8(ai1)
									Case "7"
										macro_variables_ubyte_array_1d_7(ai1)=macro_variables_ubyte_array_1d_8(ai1)
									Case "8"
										macro_variables_ubyte_array_1d_8(ai1)=macro_variables_ubyte_array_1d_8(ai1)
									Case "9"
										macro_variables_ubyte_array_1d_9(ai1)=macro_variables_ubyte_array_1d_8(ai1)
								End Select
							Next
						Case "9"
							For ai1=LBound(macro_variables_ubyte_array_1d_9) To UBound(macro_variables_ubyte_array_1d_9)
								Select Case array_index
									Case "1"
										macro_variables_ubyte_array_1d_1(ai1)=macro_variables_ubyte_array_1d_9(ai1)
									Case "2"
										macro_variables_ubyte_array_1d_2(ai1)=macro_variables_ubyte_array_1d_9(ai1)
									Case "3"
										macro_variables_ubyte_array_1d_3(ai1)=macro_variables_ubyte_array_1d_9(ai1)
									Case "4"
										macro_variables_ubyte_array_1d_4(ai1)=macro_variables_ubyte_array_1d_9(ai1)
									Case "5"
										macro_variables_ubyte_array_1d_5(ai1)=macro_variables_ubyte_array_1d_9(ai1)
									Case "6"
										macro_variables_ubyte_array_1d_6(ai1)=macro_variables_ubyte_array_1d_9(ai1)
									Case "7"
										macro_variables_ubyte_array_1d_7(ai1)=macro_variables_ubyte_array_1d_9(ai1)
									Case "8"
										macro_variables_ubyte_array_1d_8(ai1)=macro_variables_ubyte_array_1d_9(ai1)
									Case "9"
										macro_variables_ubyte_array_1d_9(ai1)=macro_variables_ubyte_array_1d_9(ai1)
								End Select
							Next
					End Select
				Case "2d"
					Select Case macro_variables_info(a,3)
						Case "1"
							For ai1=LBound(macro_variables_ubyte_array_2d_1) To UBound(macro_variables_ubyte_array_2d_1)
								For ai2=LBound(macro_variables_ubyte_array_2d_1,2) To UBound(macro_variables_ubyte_array_2d_1,2)
									Select Case array_index
										Case "1"
											macro_variables_ubyte_array_2d_1(ai1,ai2)=macro_variables_ubyte_array_2d_1(ai1,ai2)
										Case "2"
											macro_variables_ubyte_array_2d_2(ai1,ai2)=macro_variables_ubyte_array_2d_1(ai1,ai2)
										Case "3"
											macro_variables_ubyte_array_2d_3(ai1,ai2)=macro_variables_ubyte_array_2d_1(ai1,ai2)
										Case "4"
											macro_variables_ubyte_array_2d_4(ai1,ai2)=macro_variables_ubyte_array_2d_1(ai1,ai2)
										Case "5"
											macro_variables_ubyte_array_2d_5(ai1,ai2)=macro_variables_ubyte_array_2d_1(ai1,ai2)
										Case "6"
											macro_variables_ubyte_array_2d_6(ai1,ai2)=macro_variables_ubyte_array_2d_1(ai1,ai2)
										Case "7"
											macro_variables_ubyte_array_2d_7(ai1,ai2)=macro_variables_ubyte_array_2d_1(ai1,ai2)
										Case "8"
											macro_variables_ubyte_array_2d_8(ai1,ai2)=macro_variables_ubyte_array_2d_1(ai1,ai2)
										Case "9"
											macro_variables_ubyte_array_2d_9(ai1,ai2)=macro_variables_ubyte_array_2d_1(ai1,ai2)
									End Select
								Next
							Next
						Case "2"
							For ai1=LBound(macro_variables_ubyte_array_2d_2) To UBound(macro_variables_ubyte_array_2d_2)
								For ai2=LBound(macro_variables_ubyte_array_2d_2,2) To UBound(macro_variables_ubyte_array_2d_2,2)
									Select Case array_index
										Case "1"
											macro_variables_ubyte_array_2d_1(ai1,ai2)=macro_variables_ubyte_array_2d_2(ai1,ai2)
										Case "2"
											macro_variables_ubyte_array_2d_2(ai1,ai2)=macro_variables_ubyte_array_2d_2(ai1,ai2)
										Case "3"
											macro_variables_ubyte_array_2d_3(ai1,ai2)=macro_variables_ubyte_array_2d_2(ai1,ai2)
										Case "4"
											macro_variables_ubyte_array_2d_4(ai1,ai2)=macro_variables_ubyte_array_2d_2(ai1,ai2)
										Case "5"
											macro_variables_ubyte_array_2d_5(ai1,ai2)=macro_variables_ubyte_array_2d_2(ai1,ai2)
										Case "6"
											macro_variables_ubyte_array_2d_6(ai1,ai2)=macro_variables_ubyte_array_2d_2(ai1,ai2)
										Case "7"
											macro_variables_ubyte_array_2d_7(ai1,ai2)=macro_variables_ubyte_array_2d_2(ai1,ai2)
										Case "8"
											macro_variables_ubyte_array_2d_8(ai1,ai2)=macro_variables_ubyte_array_2d_2(ai1,ai2)
										Case "9"
											macro_variables_ubyte_array_2d_9(ai1,ai2)=macro_variables_ubyte_array_2d_2(ai1,ai2)
									End Select
								Next
							Next
						Case "3"
							For ai1=LBound(macro_variables_ubyte_array_2d_3) To UBound(macro_variables_ubyte_array_2d_3)
								For ai2=LBound(macro_variables_ubyte_array_2d_3,2) To UBound(macro_variables_ubyte_array_2d_3,2)
									Select Case array_index
										Case "1"
											macro_variables_ubyte_array_2d_1(ai1,ai2)=macro_variables_ubyte_array_2d_3(ai1,ai2)
										Case "2"
											macro_variables_ubyte_array_2d_2(ai1,ai2)=macro_variables_ubyte_array_2d_3(ai1,ai2)
										Case "3"
											macro_variables_ubyte_array_2d_3(ai1,ai2)=macro_variables_ubyte_array_2d_3(ai1,ai2)
										Case "4"
											macro_variables_ubyte_array_2d_4(ai1,ai2)=macro_variables_ubyte_array_2d_3(ai1,ai2)
										Case "5"
											macro_variables_ubyte_array_2d_5(ai1,ai2)=macro_variables_ubyte_array_2d_3(ai1,ai2)
										Case "6"
											macro_variables_ubyte_array_2d_6(ai1,ai2)=macro_variables_ubyte_array_2d_3(ai1,ai2)
										Case "7"
											macro_variables_ubyte_array_2d_7(ai1,ai2)=macro_variables_ubyte_array_2d_3(ai1,ai2)
										Case "8"
											macro_variables_ubyte_array_2d_8(ai1,ai2)=macro_variables_ubyte_array_2d_3(ai1,ai2)
										Case "9"
											macro_variables_ubyte_array_2d_9(ai1,ai2)=macro_variables_ubyte_array_2d_3(ai1,ai2)
									End Select
								Next
							Next
						Case "4"
							For ai1=LBound(macro_variables_ubyte_array_2d_4) To UBound(macro_variables_ubyte_array_2d_4)
								For ai2=LBound(macro_variables_ubyte_array_2d_4,2) To UBound(macro_variables_ubyte_array_2d_4,2)
									Select Case array_index
										Case "1"
											macro_variables_ubyte_array_2d_1(ai1,ai2)=macro_variables_ubyte_array_2d_4(ai1,ai2)
										Case "2"
											macro_variables_ubyte_array_2d_2(ai1,ai2)=macro_variables_ubyte_array_2d_4(ai1,ai2)
										Case "3"
											macro_variables_ubyte_array_2d_3(ai1,ai2)=macro_variables_ubyte_array_2d_4(ai1,ai2)
										Case "4"
											macro_variables_ubyte_array_2d_4(ai1,ai2)=macro_variables_ubyte_array_2d_4(ai1,ai2)
										Case "5"
											macro_variables_ubyte_array_2d_5(ai1,ai2)=macro_variables_ubyte_array_2d_4(ai1,ai2)
										Case "6"
											macro_variables_ubyte_array_2d_6(ai1,ai2)=macro_variables_ubyte_array_2d_4(ai1,ai2)
										Case "7"
											macro_variables_ubyte_array_2d_7(ai1,ai2)=macro_variables_ubyte_array_2d_4(ai1,ai2)
										Case "8"
											macro_variables_ubyte_array_2d_8(ai1,ai2)=macro_variables_ubyte_array_2d_4(ai1,ai2)
										Case "9"
											macro_variables_ubyte_array_2d_9(ai1,ai2)=macro_variables_ubyte_array_2d_4(ai1,ai2)
									End Select
								Next
							Next
						Case "5"
							For ai1=LBound(macro_variables_ubyte_array_2d_5) To UBound(macro_variables_ubyte_array_2d_5)
								For ai2=LBound(macro_variables_ubyte_array_2d_5,2) To UBound(macro_variables_ubyte_array_2d_5,2)
									Select Case array_index
										Case "1"
											macro_variables_ubyte_array_2d_1(ai1,ai2)=macro_variables_ubyte_array_2d_5(ai1,ai2)
										Case "2"
											macro_variables_ubyte_array_2d_2(ai1,ai2)=macro_variables_ubyte_array_2d_5(ai1,ai2)
										Case "3"
											macro_variables_ubyte_array_2d_3(ai1,ai2)=macro_variables_ubyte_array_2d_5(ai1,ai2)
										Case "4"
											macro_variables_ubyte_array_2d_4(ai1,ai2)=macro_variables_ubyte_array_2d_5(ai1,ai2)
										Case "5"
											macro_variables_ubyte_array_2d_5(ai1,ai2)=macro_variables_ubyte_array_2d_5(ai1,ai2)
										Case "6"
											macro_variables_ubyte_array_2d_6(ai1,ai2)=macro_variables_ubyte_array_2d_5(ai1,ai2)
										Case "7"
											macro_variables_ubyte_array_2d_7(ai1,ai2)=macro_variables_ubyte_array_2d_5(ai1,ai2)
										Case "8"
											macro_variables_ubyte_array_2d_8(ai1,ai2)=macro_variables_ubyte_array_2d_5(ai1,ai2)
										Case "9"
											macro_variables_ubyte_array_2d_9(ai1,ai2)=macro_variables_ubyte_array_2d_5(ai1,ai2)
									End Select
								Next
							Next
						Case "6"
							For ai1=LBound(macro_variables_ubyte_array_2d_6) To UBound(macro_variables_ubyte_array_2d_6)
								For ai2=LBound(macro_variables_ubyte_array_2d_6,2) To UBound(macro_variables_ubyte_array_2d_6,2)
									Select Case array_index
										Case "1"
											macro_variables_ubyte_array_2d_1(ai1,ai2)=macro_variables_ubyte_array_2d_6(ai1,ai2)
										Case "2"
											macro_variables_ubyte_array_2d_2(ai1,ai2)=macro_variables_ubyte_array_2d_6(ai1,ai2)
										Case "3"
											macro_variables_ubyte_array_2d_3(ai1,ai2)=macro_variables_ubyte_array_2d_6(ai1,ai2)
										Case "4"
											macro_variables_ubyte_array_2d_4(ai1,ai2)=macro_variables_ubyte_array_2d_6(ai1,ai2)
										Case "5"
											macro_variables_ubyte_array_2d_5(ai1,ai2)=macro_variables_ubyte_array_2d_6(ai1,ai2)
										Case "6"
											macro_variables_ubyte_array_2d_6(ai1,ai2)=macro_variables_ubyte_array_2d_6(ai1,ai2)
										Case "7"
											macro_variables_ubyte_array_2d_7(ai1,ai2)=macro_variables_ubyte_array_2d_6(ai1,ai2)
										Case "8"
											macro_variables_ubyte_array_2d_8(ai1,ai2)=macro_variables_ubyte_array_2d_6(ai1,ai2)
										Case "9"
											macro_variables_ubyte_array_2d_9(ai1,ai2)=macro_variables_ubyte_array_2d_6(ai1,ai2)
									End Select
								Next
							Next
						Case "7"
							For ai1=LBound(macro_variables_ubyte_array_2d_7) To UBound(macro_variables_ubyte_array_2d_7)
								For ai2=LBound(macro_variables_ubyte_array_2d_7,2) To UBound(macro_variables_ubyte_array_2d_7,2)
									Select Case array_index
										Case "1"
											macro_variables_ubyte_array_2d_1(ai1,ai2)=macro_variables_ubyte_array_2d_7(ai1,ai2)
										Case "2"
											macro_variables_ubyte_array_2d_2(ai1,ai2)=macro_variables_ubyte_array_2d_7(ai1,ai2)
										Case "3"
											macro_variables_ubyte_array_2d_3(ai1,ai2)=macro_variables_ubyte_array_2d_7(ai1,ai2)
										Case "4"
											macro_variables_ubyte_array_2d_4(ai1,ai2)=macro_variables_ubyte_array_2d_7(ai1,ai2)
										Case "5"
											macro_variables_ubyte_array_2d_5(ai1,ai2)=macro_variables_ubyte_array_2d_7(ai1,ai2)
										Case "6"
											macro_variables_ubyte_array_2d_6(ai1,ai2)=macro_variables_ubyte_array_2d_7(ai1,ai2)
										Case "7"
											macro_variables_ubyte_array_2d_7(ai1,ai2)=macro_variables_ubyte_array_2d_7(ai1,ai2)
										Case "8"
											macro_variables_ubyte_array_2d_8(ai1,ai2)=macro_variables_ubyte_array_2d_7(ai1,ai2)
										Case "9"
											macro_variables_ubyte_array_2d_9(ai1,ai2)=macro_variables_ubyte_array_2d_7(ai1,ai2)
									End Select
								Next
							Next
						Case "8"
							For ai1=LBound(macro_variables_ubyte_array_2d_8) To UBound(macro_variables_ubyte_array_2d_8)
								For ai2=LBound(macro_variables_ubyte_array_2d_8,2) To UBound(macro_variables_ubyte_array_2d_8,2)
									Select Case array_index
										Case "1"
											macro_variables_ubyte_array_2d_1(ai1,ai2)=macro_variables_ubyte_array_2d_8(ai1,ai2)
										Case "2"
											macro_variables_ubyte_array_2d_2(ai1,ai2)=macro_variables_ubyte_array_2d_8(ai1,ai2)
										Case "3"
											macro_variables_ubyte_array_2d_3(ai1,ai2)=macro_variables_ubyte_array_2d_8(ai1,ai2)
										Case "4"
											macro_variables_ubyte_array_2d_4(ai1,ai2)=macro_variables_ubyte_array_2d_8(ai1,ai2)
										Case "5"
											macro_variables_ubyte_array_2d_5(ai1,ai2)=macro_variables_ubyte_array_2d_8(ai1,ai2)
										Case "6"
											macro_variables_ubyte_array_2d_6(ai1,ai2)=macro_variables_ubyte_array_2d_8(ai1,ai2)
										Case "7"
											macro_variables_ubyte_array_2d_7(ai1,ai2)=macro_variables_ubyte_array_2d_8(ai1,ai2)
										Case "8"
											macro_variables_ubyte_array_2d_8(ai1,ai2)=macro_variables_ubyte_array_2d_8(ai1,ai2)
										Case "9"
											macro_variables_ubyte_array_2d_9(ai1,ai2)=macro_variables_ubyte_array_2d_8(ai1,ai2)
									End Select
								Next
							Next
						Case "9"
							For ai1=LBound(macro_variables_ubyte_array_2d_9) To UBound(macro_variables_ubyte_array_2d_9)
								For ai2=LBound(macro_variables_ubyte_array_2d_9,2) To UBound(macro_variables_ubyte_array_2d_9,2)
									Select Case array_index
										Case "1"
											macro_variables_ubyte_array_2d_1(ai1,ai2)=macro_variables_ubyte_array_2d_9(ai1,ai2)
										Case "2"
											macro_variables_ubyte_array_2d_2(ai1,ai2)=macro_variables_ubyte_array_2d_9(ai1,ai2)
										Case "3"
											macro_variables_ubyte_array_2d_3(ai1,ai2)=macro_variables_ubyte_array_2d_9(ai1,ai2)
										Case "4"
											macro_variables_ubyte_array_2d_4(ai1,ai2)=macro_variables_ubyte_array_2d_9(ai1,ai2)
										Case "5"
											macro_variables_ubyte_array_2d_5(ai1,ai2)=macro_variables_ubyte_array_2d_9(ai1,ai2)
										Case "6"
											macro_variables_ubyte_array_2d_6(ai1,ai2)=macro_variables_ubyte_array_2d_9(ai1,ai2)
										Case "7"
											macro_variables_ubyte_array_2d_7(ai1,ai2)=macro_variables_ubyte_array_2d_9(ai1,ai2)
										Case "8"
											macro_variables_ubyte_array_2d_8(ai1,ai2)=macro_variables_ubyte_array_2d_9(ai1,ai2)
										Case "9"
											macro_variables_ubyte_array_2d_9(ai1,ai2)=macro_variables_ubyte_array_2d_9(ai1,ai2)
									End Select
								Next
							Next
					End Select
				Case "3d"
					Select Case macro_variables_info(a,3)
						Case "1"
							For ai1=LBound(macro_variables_ubyte_array_3d_1) To UBound(macro_variables_ubyte_array_3d_1)
								For ai2=LBound(macro_variables_ubyte_array_3d_1,2) To UBound(macro_variables_ubyte_array_3d_1,2)
									For ai3=LBound(macro_variables_ubyte_array_3d_1,3) To UBound(macro_variables_ubyte_array_3d_1,3)
										Select Case array_index
											Case "1"
												macro_variables_ubyte_array_3d_1(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_1(ai1,ai2,ai3)
											Case "2"
												macro_variables_ubyte_array_3d_2(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_1(ai1,ai2,ai3)
											Case "3"
												macro_variables_ubyte_array_3d_3(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_1(ai1,ai2,ai3)
											Case "4"
												macro_variables_ubyte_array_3d_4(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_1(ai1,ai2,ai3)
											Case "5"
												macro_variables_ubyte_array_3d_5(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_1(ai1,ai2,ai3)
											Case "6"
												macro_variables_ubyte_array_3d_6(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_1(ai1,ai2,ai3)
											Case "7"
												macro_variables_ubyte_array_3d_7(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_1(ai1,ai2,ai3)
											Case "8"
												macro_variables_ubyte_array_3d_8(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_1(ai1,ai2,ai3)
											Case "9"
												macro_variables_ubyte_array_3d_9(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_1(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "2"
							For ai1=LBound(macro_variables_ubyte_array_3d_2) To UBound(macro_variables_ubyte_array_3d_2)
								For ai2=LBound(macro_variables_ubyte_array_3d_2,2) To UBound(macro_variables_ubyte_array_3d_2,2)
									For ai3=LBound(macro_variables_ubyte_array_3d_2,3) To UBound(macro_variables_ubyte_array_3d_2,3)
										Select Case array_index
											Case "1"
												macro_variables_ubyte_array_3d_1(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_2(ai1,ai2,ai3)
											Case "2"
												macro_variables_ubyte_array_3d_2(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_2(ai1,ai2,ai3)
											Case "3"
												macro_variables_ubyte_array_3d_3(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_2(ai1,ai2,ai3)
											Case "4"
												macro_variables_ubyte_array_3d_4(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_2(ai1,ai2,ai3)
											Case "5"
												macro_variables_ubyte_array_3d_5(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_2(ai1,ai2,ai3)
											Case "6"
												macro_variables_ubyte_array_3d_6(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_2(ai1,ai2,ai3)
											Case "7"
												macro_variables_ubyte_array_3d_7(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_2(ai1,ai2,ai3)
											Case "8"
												macro_variables_ubyte_array_3d_8(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_2(ai1,ai2,ai3)
											Case "9"
												macro_variables_ubyte_array_3d_9(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_2(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "3"
							For ai1=LBound(macro_variables_ubyte_array_3d_3) To UBound(macro_variables_ubyte_array_3d_3)
								For ai2=LBound(macro_variables_ubyte_array_3d_3,2) To UBound(macro_variables_ubyte_array_3d_3,2)
									For ai3=LBound(macro_variables_ubyte_array_3d_3,3) To UBound(macro_variables_ubyte_array_3d_3,3)
										Select Case array_index
											Case "1"
												macro_variables_ubyte_array_3d_1(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_3(ai1,ai2,ai3)
											Case "2"
												macro_variables_ubyte_array_3d_2(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_3(ai1,ai2,ai3)
											Case "3"
												macro_variables_ubyte_array_3d_3(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_3(ai1,ai2,ai3)
											Case "4"
												macro_variables_ubyte_array_3d_4(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_3(ai1,ai2,ai3)
											Case "5"
												macro_variables_ubyte_array_3d_5(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_3(ai1,ai2,ai3)
											Case "6"
												macro_variables_ubyte_array_3d_6(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_3(ai1,ai2,ai3)
											Case "7"
												macro_variables_ubyte_array_3d_7(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_3(ai1,ai2,ai3)
											Case "8"
												macro_variables_ubyte_array_3d_8(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_3(ai1,ai2,ai3)
											Case "9"
												macro_variables_ubyte_array_3d_9(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_3(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "4"
							For ai1=LBound(macro_variables_ubyte_array_3d_4) To UBound(macro_variables_ubyte_array_3d_4)
								For ai2=LBound(macro_variables_ubyte_array_3d_4,2) To UBound(macro_variables_ubyte_array_3d_4,2)
									For ai3=LBound(macro_variables_ubyte_array_3d_4,3) To UBound(macro_variables_ubyte_array_3d_4,3)
										Select Case array_index
											Case "1"
												macro_variables_ubyte_array_3d_1(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_4(ai1,ai2,ai3)
											Case "2"
												macro_variables_ubyte_array_3d_2(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_4(ai1,ai2,ai3)
											Case "3"
												macro_variables_ubyte_array_3d_3(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_4(ai1,ai2,ai3)
											Case "4"
												macro_variables_ubyte_array_3d_4(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_4(ai1,ai2,ai3)
											Case "5"
												macro_variables_ubyte_array_3d_5(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_4(ai1,ai2,ai3)
											Case "6"
												macro_variables_ubyte_array_3d_6(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_4(ai1,ai2,ai3)
											Case "7"
												macro_variables_ubyte_array_3d_7(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_4(ai1,ai2,ai3)
											Case "8"
												macro_variables_ubyte_array_3d_8(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_4(ai1,ai2,ai3)
											Case "9"
												macro_variables_ubyte_array_3d_9(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_4(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "5"
							For ai1=LBound(macro_variables_ubyte_array_3d_5) To UBound(macro_variables_ubyte_array_3d_5)
								For ai2=LBound(macro_variables_ubyte_array_3d_5,2) To UBound(macro_variables_ubyte_array_3d_5,2)
									For ai3=LBound(macro_variables_ubyte_array_3d_5,3) To UBound(macro_variables_ubyte_array_3d_5,3)
										Select Case array_index
											Case "1"
												macro_variables_ubyte_array_3d_1(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_5(ai1,ai2,ai3)
											Case "2"
												macro_variables_ubyte_array_3d_2(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_5(ai1,ai2,ai3)
											Case "3"
												macro_variables_ubyte_array_3d_3(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_5(ai1,ai2,ai3)
											Case "4"
												macro_variables_ubyte_array_3d_4(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_5(ai1,ai2,ai3)
											Case "5"
												macro_variables_ubyte_array_3d_5(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_5(ai1,ai2,ai3)
											Case "6"
												macro_variables_ubyte_array_3d_6(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_5(ai1,ai2,ai3)
											Case "7"
												macro_variables_ubyte_array_3d_7(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_5(ai1,ai2,ai3)
											Case "8"
												macro_variables_ubyte_array_3d_8(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_5(ai1,ai2,ai3)
											Case "9"
												macro_variables_ubyte_array_3d_9(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_5(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "6"
							For ai1=LBound(macro_variables_ubyte_array_3d_6) To UBound(macro_variables_ubyte_array_3d_6)
								For ai2=LBound(macro_variables_ubyte_array_3d_6,2) To UBound(macro_variables_ubyte_array_3d_6,2)
									For ai3=LBound(macro_variables_ubyte_array_3d_6,3) To UBound(macro_variables_ubyte_array_3d_6,3)
										Select Case array_index
											Case "1"
												macro_variables_ubyte_array_3d_1(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_6(ai1,ai2,ai3)
											Case "2"
												macro_variables_ubyte_array_3d_2(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_6(ai1,ai2,ai3)
											Case "3"
												macro_variables_ubyte_array_3d_3(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_6(ai1,ai2,ai3)
											Case "4"
												macro_variables_ubyte_array_3d_4(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_6(ai1,ai2,ai3)
											Case "5"
												macro_variables_ubyte_array_3d_5(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_6(ai1,ai2,ai3)
											Case "6"
												macro_variables_ubyte_array_3d_6(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_6(ai1,ai2,ai3)
											Case "7"
												macro_variables_ubyte_array_3d_7(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_6(ai1,ai2,ai3)
											Case "8"
												macro_variables_ubyte_array_3d_8(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_6(ai1,ai2,ai3)
											Case "9"
												macro_variables_ubyte_array_3d_9(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_6(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "7"
							For ai1=LBound(macro_variables_ubyte_array_3d_7) To UBound(macro_variables_ubyte_array_3d_7)
								For ai2=LBound(macro_variables_ubyte_array_3d_7,2) To UBound(macro_variables_ubyte_array_3d_7,2)
									For ai3=LBound(macro_variables_ubyte_array_3d_7,3) To UBound(macro_variables_ubyte_array_3d_7,3)
										Select Case array_index
											Case "1"
												macro_variables_ubyte_array_3d_1(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_7(ai1,ai2,ai3)
											Case "2"
												macro_variables_ubyte_array_3d_2(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_7(ai1,ai2,ai3)
											Case "3"
												macro_variables_ubyte_array_3d_3(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_7(ai1,ai2,ai3)
											Case "4"
												macro_variables_ubyte_array_3d_4(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_7(ai1,ai2,ai3)
											Case "5"
												macro_variables_ubyte_array_3d_5(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_7(ai1,ai2,ai3)
											Case "6"
												macro_variables_ubyte_array_3d_6(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_7(ai1,ai2,ai3)
											Case "7"
												macro_variables_ubyte_array_3d_7(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_7(ai1,ai2,ai3)
											Case "8"
												macro_variables_ubyte_array_3d_8(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_7(ai1,ai2,ai3)
											Case "9"
												macro_variables_ubyte_array_3d_9(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_7(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "8"
							For ai1=LBound(macro_variables_ubyte_array_3d_8) To UBound(macro_variables_ubyte_array_3d_8)
								For ai2=LBound(macro_variables_ubyte_array_3d_8,2) To UBound(macro_variables_ubyte_array_3d_8,2)
									For ai3=LBound(macro_variables_ubyte_array_3d_8,3) To UBound(macro_variables_ubyte_array_3d_8,3)
										Select Case array_index
											Case "1"
												macro_variables_ubyte_array_3d_1(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_8(ai1,ai2,ai3)
											Case "2"
												macro_variables_ubyte_array_3d_2(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_8(ai1,ai2,ai3)
											Case "3"
												macro_variables_ubyte_array_3d_3(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_8(ai1,ai2,ai3)
											Case "4"
												macro_variables_ubyte_array_3d_4(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_8(ai1,ai2,ai3)
											Case "5"
												macro_variables_ubyte_array_3d_5(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_8(ai1,ai2,ai3)
											Case "6"
												macro_variables_ubyte_array_3d_6(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_8(ai1,ai2,ai3)
											Case "7"
												macro_variables_ubyte_array_3d_7(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_8(ai1,ai2,ai3)
											Case "8"
												macro_variables_ubyte_array_3d_8(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_8(ai1,ai2,ai3)
											Case "9"
												macro_variables_ubyte_array_3d_9(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_8(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "9"
							For ai1=LBound(macro_variables_ubyte_array_3d_9) To UBound(macro_variables_ubyte_array_3d_9)
								For ai2=LBound(macro_variables_ubyte_array_3d_9,2) To UBound(macro_variables_ubyte_array_3d_9,2)
									For ai3=LBound(macro_variables_ubyte_array_3d_9,3) To UBound(macro_variables_ubyte_array_3d_9,3)
										Select Case array_index
											Case "1"
												macro_variables_ubyte_array_3d_1(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_9(ai1,ai2,ai3)
											Case "2"
												macro_variables_ubyte_array_3d_2(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_9(ai1,ai2,ai3)
											Case "3"
												macro_variables_ubyte_array_3d_3(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_9(ai1,ai2,ai3)
											Case "4"
												macro_variables_ubyte_array_3d_4(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_9(ai1,ai2,ai3)
											Case "5"
												macro_variables_ubyte_array_3d_5(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_9(ai1,ai2,ai3)
											Case "6"
												macro_variables_ubyte_array_3d_6(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_9(ai1,ai2,ai3)
											Case "7"
												macro_variables_ubyte_array_3d_7(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_9(ai1,ai2,ai3)
											Case "8"
												macro_variables_ubyte_array_3d_8(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_9(ai1,ai2,ai3)
											Case "9"
												macro_variables_ubyte_array_3d_9(ai1,ai2,ai3)=macro_variables_ubyte_array_3d_9(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
					End Select
			End Select
		Case "SHORT_ARRAY"
			Select Case macro_variables_info(a,5)
				Case "1d"
					Select Case macro_variables_info(a,3)
						Case "1"
							For ai1=LBound(macro_variables_short_array_1d_1) To UBound(macro_variables_short_array_1d_1)
								Select Case array_index
									Case "1"
										macro_variables_short_array_1d_1(ai1)=macro_variables_short_array_1d_1(ai1)
									Case "2"
										macro_variables_short_array_1d_2(ai1)=macro_variables_short_array_1d_1(ai1)
									Case "3"
										macro_variables_short_array_1d_3(ai1)=macro_variables_short_array_1d_1(ai1)
									Case "4"
										macro_variables_short_array_1d_4(ai1)=macro_variables_short_array_1d_1(ai1)
									Case "5"
										macro_variables_short_array_1d_5(ai1)=macro_variables_short_array_1d_1(ai1)
									Case "6"
										macro_variables_short_array_1d_6(ai1)=macro_variables_short_array_1d_1(ai1)
									Case "7"
										macro_variables_short_array_1d_7(ai1)=macro_variables_short_array_1d_1(ai1)
									Case "8"
										macro_variables_short_array_1d_8(ai1)=macro_variables_short_array_1d_1(ai1)
									Case "9"
										macro_variables_short_array_1d_9(ai1)=macro_variables_short_array_1d_1(ai1)
								End Select
							Next
						Case "2"
							For ai1=LBound(macro_variables_short_array_1d_2) To UBound(macro_variables_short_array_1d_2)
								Select Case array_index
									Case "1"
										macro_variables_short_array_1d_1(ai1)=macro_variables_short_array_1d_2(ai1)
									Case "2"
										macro_variables_short_array_1d_2(ai1)=macro_variables_short_array_1d_2(ai1)
									Case "3"
										macro_variables_short_array_1d_3(ai1)=macro_variables_short_array_1d_2(ai1)
									Case "4"
										macro_variables_short_array_1d_4(ai1)=macro_variables_short_array_1d_2(ai1)
									Case "5"
										macro_variables_short_array_1d_5(ai1)=macro_variables_short_array_1d_2(ai1)
									Case "6"
										macro_variables_short_array_1d_6(ai1)=macro_variables_short_array_1d_2(ai1)
									Case "7"
										macro_variables_short_array_1d_7(ai1)=macro_variables_short_array_1d_2(ai1)
									Case "8"
										macro_variables_short_array_1d_8(ai1)=macro_variables_short_array_1d_2(ai1)
									Case "9"
										macro_variables_short_array_1d_9(ai1)=macro_variables_short_array_1d_2(ai1)
								End Select
							Next
						Case "3"
							For ai1=LBound(macro_variables_short_array_1d_3) To UBound(macro_variables_short_array_1d_3)
								Select Case array_index
									Case "1"
										macro_variables_short_array_1d_1(ai1)=macro_variables_short_array_1d_3(ai1)
									Case "2"
										macro_variables_short_array_1d_2(ai1)=macro_variables_short_array_1d_3(ai1)
									Case "3"
										macro_variables_short_array_1d_3(ai1)=macro_variables_short_array_1d_3(ai1)
									Case "4"
										macro_variables_short_array_1d_4(ai1)=macro_variables_short_array_1d_3(ai1)
									Case "5"
										macro_variables_short_array_1d_5(ai1)=macro_variables_short_array_1d_3(ai1)
									Case "6"
										macro_variables_short_array_1d_6(ai1)=macro_variables_short_array_1d_3(ai1)
									Case "7"
										macro_variables_short_array_1d_7(ai1)=macro_variables_short_array_1d_3(ai1)
									Case "8"
										macro_variables_short_array_1d_8(ai1)=macro_variables_short_array_1d_3(ai1)
									Case "9"
										macro_variables_short_array_1d_9(ai1)=macro_variables_short_array_1d_3(ai1)
								End Select
							Next
						Case "4"
							For ai1=LBound(macro_variables_short_array_1d_4) To UBound(macro_variables_short_array_1d_4)
								Select Case array_index
									Case "1"
										macro_variables_short_array_1d_1(ai1)=macro_variables_short_array_1d_4(ai1)
									Case "2"
										macro_variables_short_array_1d_2(ai1)=macro_variables_short_array_1d_4(ai1)
									Case "3"
										macro_variables_short_array_1d_3(ai1)=macro_variables_short_array_1d_4(ai1)
									Case "4"
										macro_variables_short_array_1d_4(ai1)=macro_variables_short_array_1d_4(ai1)
									Case "5"
										macro_variables_short_array_1d_5(ai1)=macro_variables_short_array_1d_4(ai1)
									Case "6"
										macro_variables_short_array_1d_6(ai1)=macro_variables_short_array_1d_4(ai1)
									Case "7"
										macro_variables_short_array_1d_7(ai1)=macro_variables_short_array_1d_4(ai1)
									Case "8"
										macro_variables_short_array_1d_8(ai1)=macro_variables_short_array_1d_4(ai1)
									Case "9"
										macro_variables_short_array_1d_9(ai1)=macro_variables_short_array_1d_4(ai1)
								End Select
							Next
						Case "5"
							For ai1=LBound(macro_variables_short_array_1d_5) To UBound(macro_variables_short_array_1d_5)
								Select Case array_index
									Case "1"
										macro_variables_short_array_1d_1(ai1)=macro_variables_short_array_1d_5(ai1)
									Case "2"
										macro_variables_short_array_1d_2(ai1)=macro_variables_short_array_1d_5(ai1)
									Case "3"
										macro_variables_short_array_1d_3(ai1)=macro_variables_short_array_1d_5(ai1)
									Case "4"
										macro_variables_short_array_1d_4(ai1)=macro_variables_short_array_1d_5(ai1)
									Case "5"
										macro_variables_short_array_1d_5(ai1)=macro_variables_short_array_1d_5(ai1)
									Case "6"
										macro_variables_short_array_1d_6(ai1)=macro_variables_short_array_1d_5(ai1)
									Case "7"
										macro_variables_short_array_1d_7(ai1)=macro_variables_short_array_1d_5(ai1)
									Case "8"
										macro_variables_short_array_1d_8(ai1)=macro_variables_short_array_1d_5(ai1)
									Case "9"
										macro_variables_short_array_1d_9(ai1)=macro_variables_short_array_1d_5(ai1)
								End Select
							Next
						Case "6"
							For ai1=LBound(macro_variables_short_array_1d_6) To UBound(macro_variables_short_array_1d_6)
								Select Case array_index
									Case "1"
										macro_variables_short_array_1d_1(ai1)=macro_variables_short_array_1d_6(ai1)
									Case "2"
										macro_variables_short_array_1d_2(ai1)=macro_variables_short_array_1d_6(ai1)
									Case "3"
										macro_variables_short_array_1d_3(ai1)=macro_variables_short_array_1d_6(ai1)
									Case "4"
										macro_variables_short_array_1d_4(ai1)=macro_variables_short_array_1d_6(ai1)
									Case "5"
										macro_variables_short_array_1d_5(ai1)=macro_variables_short_array_1d_6(ai1)
									Case "6"
										macro_variables_short_array_1d_6(ai1)=macro_variables_short_array_1d_6(ai1)
									Case "7"
										macro_variables_short_array_1d_7(ai1)=macro_variables_short_array_1d_6(ai1)
									Case "8"
										macro_variables_short_array_1d_8(ai1)=macro_variables_short_array_1d_6(ai1)
									Case "9"
										macro_variables_short_array_1d_9(ai1)=macro_variables_short_array_1d_6(ai1)
								End Select
							Next
						Case "7"
							For ai1=LBound(macro_variables_short_array_1d_7) To UBound(macro_variables_short_array_1d_7)
								Select Case array_index
									Case "1"
										macro_variables_short_array_1d_1(ai1)=macro_variables_short_array_1d_7(ai1)
									Case "2"
										macro_variables_short_array_1d_2(ai1)=macro_variables_short_array_1d_7(ai1)
									Case "3"
										macro_variables_short_array_1d_3(ai1)=macro_variables_short_array_1d_7(ai1)
									Case "4"
										macro_variables_short_array_1d_4(ai1)=macro_variables_short_array_1d_7(ai1)
									Case "5"
										macro_variables_short_array_1d_5(ai1)=macro_variables_short_array_1d_7(ai1)
									Case "6"
										macro_variables_short_array_1d_6(ai1)=macro_variables_short_array_1d_7(ai1)
									Case "7"
										macro_variables_short_array_1d_7(ai1)=macro_variables_short_array_1d_7(ai1)
									Case "8"
										macro_variables_short_array_1d_8(ai1)=macro_variables_short_array_1d_7(ai1)
									Case "9"
										macro_variables_short_array_1d_9(ai1)=macro_variables_short_array_1d_7(ai1)
								End Select
							Next
						Case "8"
							For ai1=LBound(macro_variables_short_array_1d_8) To UBound(macro_variables_short_array_1d_8)
								Select Case array_index
									Case "1"
										macro_variables_short_array_1d_1(ai1)=macro_variables_short_array_1d_8(ai1)
									Case "2"
										macro_variables_short_array_1d_2(ai1)=macro_variables_short_array_1d_8(ai1)
									Case "3"
										macro_variables_short_array_1d_3(ai1)=macro_variables_short_array_1d_8(ai1)
									Case "4"
										macro_variables_short_array_1d_4(ai1)=macro_variables_short_array_1d_8(ai1)
									Case "5"
										macro_variables_short_array_1d_5(ai1)=macro_variables_short_array_1d_8(ai1)
									Case "6"
										macro_variables_short_array_1d_6(ai1)=macro_variables_short_array_1d_8(ai1)
									Case "7"
										macro_variables_short_array_1d_7(ai1)=macro_variables_short_array_1d_8(ai1)
									Case "8"
										macro_variables_short_array_1d_8(ai1)=macro_variables_short_array_1d_8(ai1)
									Case "9"
										macro_variables_short_array_1d_9(ai1)=macro_variables_short_array_1d_8(ai1)
								End Select
							Next
						Case "9"
							For ai1=LBound(macro_variables_short_array_1d_9) To UBound(macro_variables_short_array_1d_9)
								Select Case array_index
									Case "1"
										macro_variables_short_array_1d_1(ai1)=macro_variables_short_array_1d_9(ai1)
									Case "2"
										macro_variables_short_array_1d_2(ai1)=macro_variables_short_array_1d_9(ai1)
									Case "3"
										macro_variables_short_array_1d_3(ai1)=macro_variables_short_array_1d_9(ai1)
									Case "4"
										macro_variables_short_array_1d_4(ai1)=macro_variables_short_array_1d_9(ai1)
									Case "5"
										macro_variables_short_array_1d_5(ai1)=macro_variables_short_array_1d_9(ai1)
									Case "6"
										macro_variables_short_array_1d_6(ai1)=macro_variables_short_array_1d_9(ai1)
									Case "7"
										macro_variables_short_array_1d_7(ai1)=macro_variables_short_array_1d_9(ai1)
									Case "8"
										macro_variables_short_array_1d_8(ai1)=macro_variables_short_array_1d_9(ai1)
									Case "9"
										macro_variables_short_array_1d_9(ai1)=macro_variables_short_array_1d_9(ai1)
								End Select
							Next
					End Select
				Case "2d"
					Select Case macro_variables_info(a,3)
						Case "1"
							For ai1=LBound(macro_variables_short_array_2d_1) To UBound(macro_variables_short_array_2d_1)
								For ai2=LBound(macro_variables_short_array_2d_1,2) To UBound(macro_variables_short_array_2d_1,2)
									Select Case array_index
										Case "1"
											macro_variables_short_array_2d_1(ai1,ai2)=macro_variables_short_array_2d_1(ai1,ai2)
										Case "2"
											macro_variables_short_array_2d_2(ai1,ai2)=macro_variables_short_array_2d_1(ai1,ai2)
										Case "3"
											macro_variables_short_array_2d_3(ai1,ai2)=macro_variables_short_array_2d_1(ai1,ai2)
										Case "4"
											macro_variables_short_array_2d_4(ai1,ai2)=macro_variables_short_array_2d_1(ai1,ai2)
										Case "5"
											macro_variables_short_array_2d_5(ai1,ai2)=macro_variables_short_array_2d_1(ai1,ai2)
										Case "6"
											macro_variables_short_array_2d_6(ai1,ai2)=macro_variables_short_array_2d_1(ai1,ai2)
										Case "7"
											macro_variables_short_array_2d_7(ai1,ai2)=macro_variables_short_array_2d_1(ai1,ai2)
										Case "8"
											macro_variables_short_array_2d_8(ai1,ai2)=macro_variables_short_array_2d_1(ai1,ai2)
										Case "9"
											macro_variables_short_array_2d_9(ai1,ai2)=macro_variables_short_array_2d_1(ai1,ai2)
									End Select
								Next
							Next
						Case "2"
							For ai1=LBound(macro_variables_short_array_2d_2) To UBound(macro_variables_short_array_2d_2)
								For ai2=LBound(macro_variables_short_array_2d_2,2) To UBound(macro_variables_short_array_2d_2,2)
									Select Case array_index
										Case "1"
											macro_variables_short_array_2d_1(ai1,ai2)=macro_variables_short_array_2d_2(ai1,ai2)
										Case "2"
											macro_variables_short_array_2d_2(ai1,ai2)=macro_variables_short_array_2d_2(ai1,ai2)
										Case "3"
											macro_variables_short_array_2d_3(ai1,ai2)=macro_variables_short_array_2d_2(ai1,ai2)
										Case "4"
											macro_variables_short_array_2d_4(ai1,ai2)=macro_variables_short_array_2d_2(ai1,ai2)
										Case "5"
											macro_variables_short_array_2d_5(ai1,ai2)=macro_variables_short_array_2d_2(ai1,ai2)
										Case "6"
											macro_variables_short_array_2d_6(ai1,ai2)=macro_variables_short_array_2d_2(ai1,ai2)
										Case "7"
											macro_variables_short_array_2d_7(ai1,ai2)=macro_variables_short_array_2d_2(ai1,ai2)
										Case "8"
											macro_variables_short_array_2d_8(ai1,ai2)=macro_variables_short_array_2d_2(ai1,ai2)
										Case "9"
											macro_variables_short_array_2d_9(ai1,ai2)=macro_variables_short_array_2d_2(ai1,ai2)
									End Select
								Next
							Next
						Case "3"
							For ai1=LBound(macro_variables_short_array_2d_3) To UBound(macro_variables_short_array_2d_3)
								For ai2=LBound(macro_variables_short_array_2d_3,2) To UBound(macro_variables_short_array_2d_3,2)
									Select Case array_index
										Case "1"
											macro_variables_short_array_2d_1(ai1,ai2)=macro_variables_short_array_2d_3(ai1,ai2)
										Case "2"
											macro_variables_short_array_2d_2(ai1,ai2)=macro_variables_short_array_2d_3(ai1,ai2)
										Case "3"
											macro_variables_short_array_2d_3(ai1,ai2)=macro_variables_short_array_2d_3(ai1,ai2)
										Case "4"
											macro_variables_short_array_2d_4(ai1,ai2)=macro_variables_short_array_2d_3(ai1,ai2)
										Case "5"
											macro_variables_short_array_2d_5(ai1,ai2)=macro_variables_short_array_2d_3(ai1,ai2)
										Case "6"
											macro_variables_short_array_2d_6(ai1,ai2)=macro_variables_short_array_2d_3(ai1,ai2)
										Case "7"
											macro_variables_short_array_2d_7(ai1,ai2)=macro_variables_short_array_2d_3(ai1,ai2)
										Case "8"
											macro_variables_short_array_2d_8(ai1,ai2)=macro_variables_short_array_2d_3(ai1,ai2)
										Case "9"
											macro_variables_short_array_2d_9(ai1,ai2)=macro_variables_short_array_2d_3(ai1,ai2)
									End Select
								Next
							Next
						Case "4"
							For ai1=LBound(macro_variables_short_array_2d_4) To UBound(macro_variables_short_array_2d_4)
								For ai2=LBound(macro_variables_short_array_2d_4,2) To UBound(macro_variables_short_array_2d_4,2)
									Select Case array_index
										Case "1"
											macro_variables_short_array_2d_1(ai1,ai2)=macro_variables_short_array_2d_4(ai1,ai2)
										Case "2"
											macro_variables_short_array_2d_2(ai1,ai2)=macro_variables_short_array_2d_4(ai1,ai2)
										Case "3"
											macro_variables_short_array_2d_3(ai1,ai2)=macro_variables_short_array_2d_4(ai1,ai2)
										Case "4"
											macro_variables_short_array_2d_4(ai1,ai2)=macro_variables_short_array_2d_4(ai1,ai2)
										Case "5"
											macro_variables_short_array_2d_5(ai1,ai2)=macro_variables_short_array_2d_4(ai1,ai2)
										Case "6"
											macro_variables_short_array_2d_6(ai1,ai2)=macro_variables_short_array_2d_4(ai1,ai2)
										Case "7"
											macro_variables_short_array_2d_7(ai1,ai2)=macro_variables_short_array_2d_4(ai1,ai2)
										Case "8"
											macro_variables_short_array_2d_8(ai1,ai2)=macro_variables_short_array_2d_4(ai1,ai2)
										Case "9"
											macro_variables_short_array_2d_9(ai1,ai2)=macro_variables_short_array_2d_4(ai1,ai2)
									End Select
								Next
							Next
						Case "5"
							For ai1=LBound(macro_variables_short_array_2d_5) To UBound(macro_variables_short_array_2d_5)
								For ai2=LBound(macro_variables_short_array_2d_5,2) To UBound(macro_variables_short_array_2d_5,2)
									Select Case array_index
										Case "1"
											macro_variables_short_array_2d_1(ai1,ai2)=macro_variables_short_array_2d_5(ai1,ai2)
										Case "2"
											macro_variables_short_array_2d_2(ai1,ai2)=macro_variables_short_array_2d_5(ai1,ai2)
										Case "3"
											macro_variables_short_array_2d_3(ai1,ai2)=macro_variables_short_array_2d_5(ai1,ai2)
										Case "4"
											macro_variables_short_array_2d_4(ai1,ai2)=macro_variables_short_array_2d_5(ai1,ai2)
										Case "5"
											macro_variables_short_array_2d_5(ai1,ai2)=macro_variables_short_array_2d_5(ai1,ai2)
										Case "6"
											macro_variables_short_array_2d_6(ai1,ai2)=macro_variables_short_array_2d_5(ai1,ai2)
										Case "7"
											macro_variables_short_array_2d_7(ai1,ai2)=macro_variables_short_array_2d_5(ai1,ai2)
										Case "8"
											macro_variables_short_array_2d_8(ai1,ai2)=macro_variables_short_array_2d_5(ai1,ai2)
										Case "9"
											macro_variables_short_array_2d_9(ai1,ai2)=macro_variables_short_array_2d_5(ai1,ai2)
									End Select
								Next
							Next
						Case "6"
							For ai1=LBound(macro_variables_short_array_2d_6) To UBound(macro_variables_short_array_2d_6)
								For ai2=LBound(macro_variables_short_array_2d_6,2) To UBound(macro_variables_short_array_2d_6,2)
									Select Case array_index
										Case "1"
											macro_variables_short_array_2d_1(ai1,ai2)=macro_variables_short_array_2d_6(ai1,ai2)
										Case "2"
											macro_variables_short_array_2d_2(ai1,ai2)=macro_variables_short_array_2d_6(ai1,ai2)
										Case "3"
											macro_variables_short_array_2d_3(ai1,ai2)=macro_variables_short_array_2d_6(ai1,ai2)
										Case "4"
											macro_variables_short_array_2d_4(ai1,ai2)=macro_variables_short_array_2d_6(ai1,ai2)
										Case "5"
											macro_variables_short_array_2d_5(ai1,ai2)=macro_variables_short_array_2d_6(ai1,ai2)
										Case "6"
											macro_variables_short_array_2d_6(ai1,ai2)=macro_variables_short_array_2d_6(ai1,ai2)
										Case "7"
											macro_variables_short_array_2d_7(ai1,ai2)=macro_variables_short_array_2d_6(ai1,ai2)
										Case "8"
											macro_variables_short_array_2d_8(ai1,ai2)=macro_variables_short_array_2d_6(ai1,ai2)
										Case "9"
											macro_variables_short_array_2d_9(ai1,ai2)=macro_variables_short_array_2d_6(ai1,ai2)
									End Select
								Next
							Next
						Case "7"
							For ai1=LBound(macro_variables_short_array_2d_7) To UBound(macro_variables_short_array_2d_7)
								For ai2=LBound(macro_variables_short_array_2d_7,2) To UBound(macro_variables_short_array_2d_7,2)
									Select Case array_index
										Case "1"
											macro_variables_short_array_2d_1(ai1,ai2)=macro_variables_short_array_2d_7(ai1,ai2)
										Case "2"
											macro_variables_short_array_2d_2(ai1,ai2)=macro_variables_short_array_2d_7(ai1,ai2)
										Case "3"
											macro_variables_short_array_2d_3(ai1,ai2)=macro_variables_short_array_2d_7(ai1,ai2)
										Case "4"
											macro_variables_short_array_2d_4(ai1,ai2)=macro_variables_short_array_2d_7(ai1,ai2)
										Case "5"
											macro_variables_short_array_2d_5(ai1,ai2)=macro_variables_short_array_2d_7(ai1,ai2)
										Case "6"
											macro_variables_short_array_2d_6(ai1,ai2)=macro_variables_short_array_2d_7(ai1,ai2)
										Case "7"
											macro_variables_short_array_2d_7(ai1,ai2)=macro_variables_short_array_2d_7(ai1,ai2)
										Case "8"
											macro_variables_short_array_2d_8(ai1,ai2)=macro_variables_short_array_2d_7(ai1,ai2)
										Case "9"
											macro_variables_short_array_2d_9(ai1,ai2)=macro_variables_short_array_2d_7(ai1,ai2)
									End Select
								Next
							Next
						Case "8"
							For ai1=LBound(macro_variables_short_array_2d_8) To UBound(macro_variables_short_array_2d_8)
								For ai2=LBound(macro_variables_short_array_2d_8,2) To UBound(macro_variables_short_array_2d_8,2)
									Select Case array_index
										Case "1"
											macro_variables_short_array_2d_1(ai1,ai2)=macro_variables_short_array_2d_8(ai1,ai2)
										Case "2"
											macro_variables_short_array_2d_2(ai1,ai2)=macro_variables_short_array_2d_8(ai1,ai2)
										Case "3"
											macro_variables_short_array_2d_3(ai1,ai2)=macro_variables_short_array_2d_8(ai1,ai2)
										Case "4"
											macro_variables_short_array_2d_4(ai1,ai2)=macro_variables_short_array_2d_8(ai1,ai2)
										Case "5"
											macro_variables_short_array_2d_5(ai1,ai2)=macro_variables_short_array_2d_8(ai1,ai2)
										Case "6"
											macro_variables_short_array_2d_6(ai1,ai2)=macro_variables_short_array_2d_8(ai1,ai2)
										Case "7"
											macro_variables_short_array_2d_7(ai1,ai2)=macro_variables_short_array_2d_8(ai1,ai2)
										Case "8"
											macro_variables_short_array_2d_8(ai1,ai2)=macro_variables_short_array_2d_8(ai1,ai2)
										Case "9"
											macro_variables_short_array_2d_9(ai1,ai2)=macro_variables_short_array_2d_8(ai1,ai2)
									End Select
								Next
							Next
						Case "9"
							For ai1=LBound(macro_variables_short_array_2d_9) To UBound(macro_variables_short_array_2d_9)
								For ai2=LBound(macro_variables_short_array_2d_9,2) To UBound(macro_variables_short_array_2d_9,2)
									Select Case array_index
										Case "1"
											macro_variables_short_array_2d_1(ai1,ai2)=macro_variables_short_array_2d_9(ai1,ai2)
										Case "2"
											macro_variables_short_array_2d_2(ai1,ai2)=macro_variables_short_array_2d_9(ai1,ai2)
										Case "3"
											macro_variables_short_array_2d_3(ai1,ai2)=macro_variables_short_array_2d_9(ai1,ai2)
										Case "4"
											macro_variables_short_array_2d_4(ai1,ai2)=macro_variables_short_array_2d_9(ai1,ai2)
										Case "5"
											macro_variables_short_array_2d_5(ai1,ai2)=macro_variables_short_array_2d_9(ai1,ai2)
										Case "6"
											macro_variables_short_array_2d_6(ai1,ai2)=macro_variables_short_array_2d_9(ai1,ai2)
										Case "7"
											macro_variables_short_array_2d_7(ai1,ai2)=macro_variables_short_array_2d_9(ai1,ai2)
										Case "8"
											macro_variables_short_array_2d_8(ai1,ai2)=macro_variables_short_array_2d_9(ai1,ai2)
										Case "9"
											macro_variables_short_array_2d_9(ai1,ai2)=macro_variables_short_array_2d_9(ai1,ai2)
									End Select
								Next
							Next
					End Select
				Case "3d"
					Select Case macro_variables_info(a,3)
						Case "1"
							For ai1=LBound(macro_variables_short_array_3d_1) To UBound(macro_variables_short_array_3d_1)
								For ai2=LBound(macro_variables_short_array_3d_1,2) To UBound(macro_variables_short_array_3d_1,2)
									For ai3=LBound(macro_variables_short_array_3d_1,3) To UBound(macro_variables_short_array_3d_1,3)
										Select Case array_index
											Case "1"
												macro_variables_short_array_3d_1(ai1,ai2,ai3)=macro_variables_short_array_3d_1(ai1,ai2,ai3)
											Case "2"
												macro_variables_short_array_3d_2(ai1,ai2,ai3)=macro_variables_short_array_3d_1(ai1,ai2,ai3)
											Case "3"
												macro_variables_short_array_3d_3(ai1,ai2,ai3)=macro_variables_short_array_3d_1(ai1,ai2,ai3)
											Case "4"
												macro_variables_short_array_3d_4(ai1,ai2,ai3)=macro_variables_short_array_3d_1(ai1,ai2,ai3)
											Case "5"
												macro_variables_short_array_3d_5(ai1,ai2,ai3)=macro_variables_short_array_3d_1(ai1,ai2,ai3)
											Case "6"
												macro_variables_short_array_3d_6(ai1,ai2,ai3)=macro_variables_short_array_3d_1(ai1,ai2,ai3)
											Case "7"
												macro_variables_short_array_3d_7(ai1,ai2,ai3)=macro_variables_short_array_3d_1(ai1,ai2,ai3)
											Case "8"
												macro_variables_short_array_3d_8(ai1,ai2,ai3)=macro_variables_short_array_3d_1(ai1,ai2,ai3)
											Case "9"
												macro_variables_short_array_3d_9(ai1,ai2,ai3)=macro_variables_short_array_3d_1(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "2"
							For ai1=LBound(macro_variables_short_array_3d_2) To UBound(macro_variables_short_array_3d_2)
								For ai2=LBound(macro_variables_short_array_3d_2,2) To UBound(macro_variables_short_array_3d_2,2)
									For ai3=LBound(macro_variables_short_array_3d_2,3) To UBound(macro_variables_short_array_3d_2,3)
										Select Case array_index
											Case "1"
												macro_variables_short_array_3d_1(ai1,ai2,ai3)=macro_variables_short_array_3d_2(ai1,ai2,ai3)
											Case "2"
												macro_variables_short_array_3d_2(ai1,ai2,ai3)=macro_variables_short_array_3d_2(ai1,ai2,ai3)
											Case "3"
												macro_variables_short_array_3d_3(ai1,ai2,ai3)=macro_variables_short_array_3d_2(ai1,ai2,ai3)
											Case "4"
												macro_variables_short_array_3d_4(ai1,ai2,ai3)=macro_variables_short_array_3d_2(ai1,ai2,ai3)
											Case "5"
												macro_variables_short_array_3d_5(ai1,ai2,ai3)=macro_variables_short_array_3d_2(ai1,ai2,ai3)
											Case "6"
												macro_variables_short_array_3d_6(ai1,ai2,ai3)=macro_variables_short_array_3d_2(ai1,ai2,ai3)
											Case "7"
												macro_variables_short_array_3d_7(ai1,ai2,ai3)=macro_variables_short_array_3d_2(ai1,ai2,ai3)
											Case "8"
												macro_variables_short_array_3d_8(ai1,ai2,ai3)=macro_variables_short_array_3d_2(ai1,ai2,ai3)
											Case "9"
												macro_variables_short_array_3d_9(ai1,ai2,ai3)=macro_variables_short_array_3d_2(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "3"
							For ai1=LBound(macro_variables_short_array_3d_3) To UBound(macro_variables_short_array_3d_3)
								For ai2=LBound(macro_variables_short_array_3d_3,2) To UBound(macro_variables_short_array_3d_3,2)
									For ai3=LBound(macro_variables_short_array_3d_3,3) To UBound(macro_variables_short_array_3d_3,3)
										Select Case array_index
											Case "1"
												macro_variables_short_array_3d_1(ai1,ai2,ai3)=macro_variables_short_array_3d_3(ai1,ai2,ai3)
											Case "2"
												macro_variables_short_array_3d_2(ai1,ai2,ai3)=macro_variables_short_array_3d_3(ai1,ai2,ai3)
											Case "3"
												macro_variables_short_array_3d_3(ai1,ai2,ai3)=macro_variables_short_array_3d_3(ai1,ai2,ai3)
											Case "4"
												macro_variables_short_array_3d_4(ai1,ai2,ai3)=macro_variables_short_array_3d_3(ai1,ai2,ai3)
											Case "5"
												macro_variables_short_array_3d_5(ai1,ai2,ai3)=macro_variables_short_array_3d_3(ai1,ai2,ai3)
											Case "6"
												macro_variables_short_array_3d_6(ai1,ai2,ai3)=macro_variables_short_array_3d_3(ai1,ai2,ai3)
											Case "7"
												macro_variables_short_array_3d_7(ai1,ai2,ai3)=macro_variables_short_array_3d_3(ai1,ai2,ai3)
											Case "8"
												macro_variables_short_array_3d_8(ai1,ai2,ai3)=macro_variables_short_array_3d_3(ai1,ai2,ai3)
											Case "9"
												macro_variables_short_array_3d_9(ai1,ai2,ai3)=macro_variables_short_array_3d_3(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "4"
							For ai1=LBound(macro_variables_short_array_3d_4) To UBound(macro_variables_short_array_3d_4)
								For ai2=LBound(macro_variables_short_array_3d_4,2) To UBound(macro_variables_short_array_3d_4,2)
									For ai3=LBound(macro_variables_short_array_3d_4,3) To UBound(macro_variables_short_array_3d_4,3)
										Select Case array_index
											Case "1"
												macro_variables_short_array_3d_1(ai1,ai2,ai3)=macro_variables_short_array_3d_4(ai1,ai2,ai3)
											Case "2"
												macro_variables_short_array_3d_2(ai1,ai2,ai3)=macro_variables_short_array_3d_4(ai1,ai2,ai3)
											Case "3"
												macro_variables_short_array_3d_3(ai1,ai2,ai3)=macro_variables_short_array_3d_4(ai1,ai2,ai3)
											Case "4"
												macro_variables_short_array_3d_4(ai1,ai2,ai3)=macro_variables_short_array_3d_4(ai1,ai2,ai3)
											Case "5"
												macro_variables_short_array_3d_5(ai1,ai2,ai3)=macro_variables_short_array_3d_4(ai1,ai2,ai3)
											Case "6"
												macro_variables_short_array_3d_6(ai1,ai2,ai3)=macro_variables_short_array_3d_4(ai1,ai2,ai3)
											Case "7"
												macro_variables_short_array_3d_7(ai1,ai2,ai3)=macro_variables_short_array_3d_4(ai1,ai2,ai3)
											Case "8"
												macro_variables_short_array_3d_8(ai1,ai2,ai3)=macro_variables_short_array_3d_4(ai1,ai2,ai3)
											Case "9"
												macro_variables_short_array_3d_9(ai1,ai2,ai3)=macro_variables_short_array_3d_4(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "5"
							For ai1=LBound(macro_variables_short_array_3d_5) To UBound(macro_variables_short_array_3d_5)
								For ai2=LBound(macro_variables_short_array_3d_5,2) To UBound(macro_variables_short_array_3d_5,2)
									For ai3=LBound(macro_variables_short_array_3d_5,3) To UBound(macro_variables_short_array_3d_5,3)
										Select Case array_index
											Case "1"
												macro_variables_short_array_3d_1(ai1,ai2,ai3)=macro_variables_short_array_3d_5(ai1,ai2,ai3)
											Case "2"
												macro_variables_short_array_3d_2(ai1,ai2,ai3)=macro_variables_short_array_3d_5(ai1,ai2,ai3)
											Case "3"
												macro_variables_short_array_3d_3(ai1,ai2,ai3)=macro_variables_short_array_3d_5(ai1,ai2,ai3)
											Case "4"
												macro_variables_short_array_3d_4(ai1,ai2,ai3)=macro_variables_short_array_3d_5(ai1,ai2,ai3)
											Case "5"
												macro_variables_short_array_3d_5(ai1,ai2,ai3)=macro_variables_short_array_3d_5(ai1,ai2,ai3)
											Case "6"
												macro_variables_short_array_3d_6(ai1,ai2,ai3)=macro_variables_short_array_3d_5(ai1,ai2,ai3)
											Case "7"
												macro_variables_short_array_3d_7(ai1,ai2,ai3)=macro_variables_short_array_3d_5(ai1,ai2,ai3)
											Case "8"
												macro_variables_short_array_3d_8(ai1,ai2,ai3)=macro_variables_short_array_3d_5(ai1,ai2,ai3)
											Case "9"
												macro_variables_short_array_3d_9(ai1,ai2,ai3)=macro_variables_short_array_3d_5(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "6"
							For ai1=LBound(macro_variables_short_array_3d_6) To UBound(macro_variables_short_array_3d_6)
								For ai2=LBound(macro_variables_short_array_3d_6,2) To UBound(macro_variables_short_array_3d_6,2)
									For ai3=LBound(macro_variables_short_array_3d_6,3) To UBound(macro_variables_short_array_3d_6,3)
										Select Case array_index
											Case "1"
												macro_variables_short_array_3d_1(ai1,ai2,ai3)=macro_variables_short_array_3d_6(ai1,ai2,ai3)
											Case "2"
												macro_variables_short_array_3d_2(ai1,ai2,ai3)=macro_variables_short_array_3d_6(ai1,ai2,ai3)
											Case "3"
												macro_variables_short_array_3d_3(ai1,ai2,ai3)=macro_variables_short_array_3d_6(ai1,ai2,ai3)
											Case "4"
												macro_variables_short_array_3d_4(ai1,ai2,ai3)=macro_variables_short_array_3d_6(ai1,ai2,ai3)
											Case "5"
												macro_variables_short_array_3d_5(ai1,ai2,ai3)=macro_variables_short_array_3d_6(ai1,ai2,ai3)
											Case "6"
												macro_variables_short_array_3d_6(ai1,ai2,ai3)=macro_variables_short_array_3d_6(ai1,ai2,ai3)
											Case "7"
												macro_variables_short_array_3d_7(ai1,ai2,ai3)=macro_variables_short_array_3d_6(ai1,ai2,ai3)
											Case "8"
												macro_variables_short_array_3d_8(ai1,ai2,ai3)=macro_variables_short_array_3d_6(ai1,ai2,ai3)
											Case "9"
												macro_variables_short_array_3d_9(ai1,ai2,ai3)=macro_variables_short_array_3d_6(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "7"
							For ai1=LBound(macro_variables_short_array_3d_7) To UBound(macro_variables_short_array_3d_7)
								For ai2=LBound(macro_variables_short_array_3d_7,2) To UBound(macro_variables_short_array_3d_7,2)
									For ai3=LBound(macro_variables_short_array_3d_7,3) To UBound(macro_variables_short_array_3d_7,3)
										Select Case array_index
											Case "1"
												macro_variables_short_array_3d_1(ai1,ai2,ai3)=macro_variables_short_array_3d_7(ai1,ai2,ai3)
											Case "2"
												macro_variables_short_array_3d_2(ai1,ai2,ai3)=macro_variables_short_array_3d_7(ai1,ai2,ai3)
											Case "3"
												macro_variables_short_array_3d_3(ai1,ai2,ai3)=macro_variables_short_array_3d_7(ai1,ai2,ai3)
											Case "4"
												macro_variables_short_array_3d_4(ai1,ai2,ai3)=macro_variables_short_array_3d_7(ai1,ai2,ai3)
											Case "5"
												macro_variables_short_array_3d_5(ai1,ai2,ai3)=macro_variables_short_array_3d_7(ai1,ai2,ai3)
											Case "6"
												macro_variables_short_array_3d_6(ai1,ai2,ai3)=macro_variables_short_array_3d_7(ai1,ai2,ai3)
											Case "7"
												macro_variables_short_array_3d_7(ai1,ai2,ai3)=macro_variables_short_array_3d_7(ai1,ai2,ai3)
											Case "8"
												macro_variables_short_array_3d_8(ai1,ai2,ai3)=macro_variables_short_array_3d_7(ai1,ai2,ai3)
											Case "9"
												macro_variables_short_array_3d_9(ai1,ai2,ai3)=macro_variables_short_array_3d_7(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "8"
							For ai1=LBound(macro_variables_short_array_3d_8) To UBound(macro_variables_short_array_3d_8)
								For ai2=LBound(macro_variables_short_array_3d_8,2) To UBound(macro_variables_short_array_3d_8,2)
									For ai3=LBound(macro_variables_short_array_3d_8,3) To UBound(macro_variables_short_array_3d_8,3)
										Select Case array_index
											Case "1"
												macro_variables_short_array_3d_1(ai1,ai2,ai3)=macro_variables_short_array_3d_8(ai1,ai2,ai3)
											Case "2"
												macro_variables_short_array_3d_2(ai1,ai2,ai3)=macro_variables_short_array_3d_8(ai1,ai2,ai3)
											Case "3"
												macro_variables_short_array_3d_3(ai1,ai2,ai3)=macro_variables_short_array_3d_8(ai1,ai2,ai3)
											Case "4"
												macro_variables_short_array_3d_4(ai1,ai2,ai3)=macro_variables_short_array_3d_8(ai1,ai2,ai3)
											Case "5"
												macro_variables_short_array_3d_5(ai1,ai2,ai3)=macro_variables_short_array_3d_8(ai1,ai2,ai3)
											Case "6"
												macro_variables_short_array_3d_6(ai1,ai2,ai3)=macro_variables_short_array_3d_8(ai1,ai2,ai3)
											Case "7"
												macro_variables_short_array_3d_7(ai1,ai2,ai3)=macro_variables_short_array_3d_8(ai1,ai2,ai3)
											Case "8"
												macro_variables_short_array_3d_8(ai1,ai2,ai3)=macro_variables_short_array_3d_8(ai1,ai2,ai3)
											Case "9"
												macro_variables_short_array_3d_9(ai1,ai2,ai3)=macro_variables_short_array_3d_8(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "9"
							For ai1=LBound(macro_variables_short_array_3d_9) To UBound(macro_variables_short_array_3d_9)
								For ai2=LBound(macro_variables_short_array_3d_9,2) To UBound(macro_variables_short_array_3d_9,2)
									For ai3=LBound(macro_variables_short_array_3d_9,3) To UBound(macro_variables_short_array_3d_9,3)
										Select Case array_index
											Case "1"
												macro_variables_short_array_3d_1(ai1,ai2,ai3)=macro_variables_short_array_3d_9(ai1,ai2,ai3)
											Case "2"
												macro_variables_short_array_3d_2(ai1,ai2,ai3)=macro_variables_short_array_3d_9(ai1,ai2,ai3)
											Case "3"
												macro_variables_short_array_3d_3(ai1,ai2,ai3)=macro_variables_short_array_3d_9(ai1,ai2,ai3)
											Case "4"
												macro_variables_short_array_3d_4(ai1,ai2,ai3)=macro_variables_short_array_3d_9(ai1,ai2,ai3)
											Case "5"
												macro_variables_short_array_3d_5(ai1,ai2,ai3)=macro_variables_short_array_3d_9(ai1,ai2,ai3)
											Case "6"
												macro_variables_short_array_3d_6(ai1,ai2,ai3)=macro_variables_short_array_3d_9(ai1,ai2,ai3)
											Case "7"
												macro_variables_short_array_3d_7(ai1,ai2,ai3)=macro_variables_short_array_3d_9(ai1,ai2,ai3)
											Case "8"
												macro_variables_short_array_3d_8(ai1,ai2,ai3)=macro_variables_short_array_3d_9(ai1,ai2,ai3)
											Case "9"
												macro_variables_short_array_3d_9(ai1,ai2,ai3)=macro_variables_short_array_3d_9(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
					End Select
			End Select
		Case "USHORT_ARRAY"
			Select Case macro_variables_info(a,5)
				Case "1d"
					Select Case macro_variables_info(a,3)
						Case "1"
							For ai1=LBound(macro_variables_ushort_array_1d_1) To UBound(macro_variables_ushort_array_1d_1)
								Select Case array_index
									Case "1"
										macro_variables_ushort_array_1d_1(ai1)=macro_variables_ushort_array_1d_1(ai1)
									Case "2"
										macro_variables_ushort_array_1d_2(ai1)=macro_variables_ushort_array_1d_1(ai1)
									Case "3"
										macro_variables_ushort_array_1d_3(ai1)=macro_variables_ushort_array_1d_1(ai1)
									Case "4"
										macro_variables_ushort_array_1d_4(ai1)=macro_variables_ushort_array_1d_1(ai1)
									Case "5"
										macro_variables_ushort_array_1d_5(ai1)=macro_variables_ushort_array_1d_1(ai1)
									Case "6"
										macro_variables_ushort_array_1d_6(ai1)=macro_variables_ushort_array_1d_1(ai1)
									Case "7"
										macro_variables_ushort_array_1d_7(ai1)=macro_variables_ushort_array_1d_1(ai1)
									Case "8"
										macro_variables_ushort_array_1d_8(ai1)=macro_variables_ushort_array_1d_1(ai1)
									Case "9"
										macro_variables_ushort_array_1d_9(ai1)=macro_variables_ushort_array_1d_1(ai1)
								End Select
							Next
						Case "2"
							For ai1=LBound(macro_variables_ushort_array_1d_2) To UBound(macro_variables_ushort_array_1d_2)
								Select Case array_index
									Case "1"
										macro_variables_ushort_array_1d_1(ai1)=macro_variables_ushort_array_1d_2(ai1)
									Case "2"
										macro_variables_ushort_array_1d_2(ai1)=macro_variables_ushort_array_1d_2(ai1)
									Case "3"
										macro_variables_ushort_array_1d_3(ai1)=macro_variables_ushort_array_1d_2(ai1)
									Case "4"
										macro_variables_ushort_array_1d_4(ai1)=macro_variables_ushort_array_1d_2(ai1)
									Case "5"
										macro_variables_ushort_array_1d_5(ai1)=macro_variables_ushort_array_1d_2(ai1)
									Case "6"
										macro_variables_ushort_array_1d_6(ai1)=macro_variables_ushort_array_1d_2(ai1)
									Case "7"
										macro_variables_ushort_array_1d_7(ai1)=macro_variables_ushort_array_1d_2(ai1)
									Case "8"
										macro_variables_ushort_array_1d_8(ai1)=macro_variables_ushort_array_1d_2(ai1)
									Case "9"
										macro_variables_ushort_array_1d_9(ai1)=macro_variables_ushort_array_1d_2(ai1)
								End Select
							Next
						Case "3"
							For ai1=LBound(macro_variables_ushort_array_1d_3) To UBound(macro_variables_ushort_array_1d_3)
								Select Case array_index
									Case "1"
										macro_variables_ushort_array_1d_1(ai1)=macro_variables_ushort_array_1d_3(ai1)
									Case "2"
										macro_variables_ushort_array_1d_2(ai1)=macro_variables_ushort_array_1d_3(ai1)
									Case "3"
										macro_variables_ushort_array_1d_3(ai1)=macro_variables_ushort_array_1d_3(ai1)
									Case "4"
										macro_variables_ushort_array_1d_4(ai1)=macro_variables_ushort_array_1d_3(ai1)
									Case "5"
										macro_variables_ushort_array_1d_5(ai1)=macro_variables_ushort_array_1d_3(ai1)
									Case "6"
										macro_variables_ushort_array_1d_6(ai1)=macro_variables_ushort_array_1d_3(ai1)
									Case "7"
										macro_variables_ushort_array_1d_7(ai1)=macro_variables_ushort_array_1d_3(ai1)
									Case "8"
										macro_variables_ushort_array_1d_8(ai1)=macro_variables_ushort_array_1d_3(ai1)
									Case "9"
										macro_variables_ushort_array_1d_9(ai1)=macro_variables_ushort_array_1d_3(ai1)
								End Select
							Next
						Case "4"
							For ai1=LBound(macro_variables_ushort_array_1d_4) To UBound(macro_variables_ushort_array_1d_4)
								Select Case array_index
									Case "1"
										macro_variables_ushort_array_1d_1(ai1)=macro_variables_ushort_array_1d_4(ai1)
									Case "2"
										macro_variables_ushort_array_1d_2(ai1)=macro_variables_ushort_array_1d_4(ai1)
									Case "3"
										macro_variables_ushort_array_1d_3(ai1)=macro_variables_ushort_array_1d_4(ai1)
									Case "4"
										macro_variables_ushort_array_1d_4(ai1)=macro_variables_ushort_array_1d_4(ai1)
									Case "5"
										macro_variables_ushort_array_1d_5(ai1)=macro_variables_ushort_array_1d_4(ai1)
									Case "6"
										macro_variables_ushort_array_1d_6(ai1)=macro_variables_ushort_array_1d_4(ai1)
									Case "7"
										macro_variables_ushort_array_1d_7(ai1)=macro_variables_ushort_array_1d_4(ai1)
									Case "8"
										macro_variables_ushort_array_1d_8(ai1)=macro_variables_ushort_array_1d_4(ai1)
									Case "9"
										macro_variables_ushort_array_1d_9(ai1)=macro_variables_ushort_array_1d_4(ai1)
								End Select
							Next
						Case "5"
							For ai1=LBound(macro_variables_ushort_array_1d_5) To UBound(macro_variables_ushort_array_1d_5)
								Select Case array_index
									Case "1"
										macro_variables_ushort_array_1d_1(ai1)=macro_variables_ushort_array_1d_5(ai1)
									Case "2"
										macro_variables_ushort_array_1d_2(ai1)=macro_variables_ushort_array_1d_5(ai1)
									Case "3"
										macro_variables_ushort_array_1d_3(ai1)=macro_variables_ushort_array_1d_5(ai1)
									Case "4"
										macro_variables_ushort_array_1d_4(ai1)=macro_variables_ushort_array_1d_5(ai1)
									Case "5"
										macro_variables_ushort_array_1d_5(ai1)=macro_variables_ushort_array_1d_5(ai1)
									Case "6"
										macro_variables_ushort_array_1d_6(ai1)=macro_variables_ushort_array_1d_5(ai1)
									Case "7"
										macro_variables_ushort_array_1d_7(ai1)=macro_variables_ushort_array_1d_5(ai1)
									Case "8"
										macro_variables_ushort_array_1d_8(ai1)=macro_variables_ushort_array_1d_5(ai1)
									Case "9"
										macro_variables_ushort_array_1d_9(ai1)=macro_variables_ushort_array_1d_5(ai1)
								End Select
							Next
						Case "6"
							For ai1=LBound(macro_variables_ushort_array_1d_6) To UBound(macro_variables_ushort_array_1d_6)
								Select Case array_index
									Case "1"
										macro_variables_ushort_array_1d_1(ai1)=macro_variables_ushort_array_1d_6(ai1)
									Case "2"
										macro_variables_ushort_array_1d_2(ai1)=macro_variables_ushort_array_1d_6(ai1)
									Case "3"
										macro_variables_ushort_array_1d_3(ai1)=macro_variables_ushort_array_1d_6(ai1)
									Case "4"
										macro_variables_ushort_array_1d_4(ai1)=macro_variables_ushort_array_1d_6(ai1)
									Case "5"
										macro_variables_ushort_array_1d_5(ai1)=macro_variables_ushort_array_1d_6(ai1)
									Case "6"
										macro_variables_ushort_array_1d_6(ai1)=macro_variables_ushort_array_1d_6(ai1)
									Case "7"
										macro_variables_ushort_array_1d_7(ai1)=macro_variables_ushort_array_1d_6(ai1)
									Case "8"
										macro_variables_ushort_array_1d_8(ai1)=macro_variables_ushort_array_1d_6(ai1)
									Case "9"
										macro_variables_ushort_array_1d_9(ai1)=macro_variables_ushort_array_1d_6(ai1)
								End Select
							Next
						Case "7"
							For ai1=LBound(macro_variables_ushort_array_1d_7) To UBound(macro_variables_ushort_array_1d_7)
								Select Case array_index
									Case "1"
										macro_variables_ushort_array_1d_1(ai1)=macro_variables_ushort_array_1d_7(ai1)
									Case "2"
										macro_variables_ushort_array_1d_2(ai1)=macro_variables_ushort_array_1d_7(ai1)
									Case "3"
										macro_variables_ushort_array_1d_3(ai1)=macro_variables_ushort_array_1d_7(ai1)
									Case "4"
										macro_variables_ushort_array_1d_4(ai1)=macro_variables_ushort_array_1d_7(ai1)
									Case "5"
										macro_variables_ushort_array_1d_5(ai1)=macro_variables_ushort_array_1d_7(ai1)
									Case "6"
										macro_variables_ushort_array_1d_6(ai1)=macro_variables_ushort_array_1d_7(ai1)
									Case "7"
										macro_variables_ushort_array_1d_7(ai1)=macro_variables_ushort_array_1d_7(ai1)
									Case "8"
										macro_variables_ushort_array_1d_8(ai1)=macro_variables_ushort_array_1d_7(ai1)
									Case "9"
										macro_variables_ushort_array_1d_9(ai1)=macro_variables_ushort_array_1d_7(ai1)
								End Select
							Next
						Case "8"
							For ai1=LBound(macro_variables_ushort_array_1d_8) To UBound(macro_variables_ushort_array_1d_8)
								Select Case array_index
									Case "1"
										macro_variables_ushort_array_1d_1(ai1)=macro_variables_ushort_array_1d_8(ai1)
									Case "2"
										macro_variables_ushort_array_1d_2(ai1)=macro_variables_ushort_array_1d_8(ai1)
									Case "3"
										macro_variables_ushort_array_1d_3(ai1)=macro_variables_ushort_array_1d_8(ai1)
									Case "4"
										macro_variables_ushort_array_1d_4(ai1)=macro_variables_ushort_array_1d_8(ai1)
									Case "5"
										macro_variables_ushort_array_1d_5(ai1)=macro_variables_ushort_array_1d_8(ai1)
									Case "6"
										macro_variables_ushort_array_1d_6(ai1)=macro_variables_ushort_array_1d_8(ai1)
									Case "7"
										macro_variables_ushort_array_1d_7(ai1)=macro_variables_ushort_array_1d_8(ai1)
									Case "8"
										macro_variables_ushort_array_1d_8(ai1)=macro_variables_ushort_array_1d_8(ai1)
									Case "9"
										macro_variables_ushort_array_1d_9(ai1)=macro_variables_ushort_array_1d_8(ai1)
								End Select
							Next
						Case "9"
							For ai1=LBound(macro_variables_ushort_array_1d_9) To UBound(macro_variables_ushort_array_1d_9)
								Select Case array_index
									Case "1"
										macro_variables_ushort_array_1d_1(ai1)=macro_variables_ushort_array_1d_9(ai1)
									Case "2"
										macro_variables_ushort_array_1d_2(ai1)=macro_variables_ushort_array_1d_9(ai1)
									Case "3"
										macro_variables_ushort_array_1d_3(ai1)=macro_variables_ushort_array_1d_9(ai1)
									Case "4"
										macro_variables_ushort_array_1d_4(ai1)=macro_variables_ushort_array_1d_9(ai1)
									Case "5"
										macro_variables_ushort_array_1d_5(ai1)=macro_variables_ushort_array_1d_9(ai1)
									Case "6"
										macro_variables_ushort_array_1d_6(ai1)=macro_variables_ushort_array_1d_9(ai1)
									Case "7"
										macro_variables_ushort_array_1d_7(ai1)=macro_variables_ushort_array_1d_9(ai1)
									Case "8"
										macro_variables_ushort_array_1d_8(ai1)=macro_variables_ushort_array_1d_9(ai1)
									Case "9"
										macro_variables_ushort_array_1d_9(ai1)=macro_variables_ushort_array_1d_9(ai1)
								End Select
							Next
					End Select
				Case "2d"
					Select Case macro_variables_info(a,3)
						Case "1"
							For ai1=LBound(macro_variables_ushort_array_2d_1) To UBound(macro_variables_ushort_array_2d_1)
								For ai2=LBound(macro_variables_ushort_array_2d_1,2) To UBound(macro_variables_ushort_array_2d_1,2)
									Select Case array_index
										Case "1"
											macro_variables_ushort_array_2d_1(ai1,ai2)=macro_variables_ushort_array_2d_1(ai1,ai2)
										Case "2"
											macro_variables_ushort_array_2d_2(ai1,ai2)=macro_variables_ushort_array_2d_1(ai1,ai2)
										Case "3"
											macro_variables_ushort_array_2d_3(ai1,ai2)=macro_variables_ushort_array_2d_1(ai1,ai2)
										Case "4"
											macro_variables_ushort_array_2d_4(ai1,ai2)=macro_variables_ushort_array_2d_1(ai1,ai2)
										Case "5"
											macro_variables_ushort_array_2d_5(ai1,ai2)=macro_variables_ushort_array_2d_1(ai1,ai2)
										Case "6"
											macro_variables_ushort_array_2d_6(ai1,ai2)=macro_variables_ushort_array_2d_1(ai1,ai2)
										Case "7"
											macro_variables_ushort_array_2d_7(ai1,ai2)=macro_variables_ushort_array_2d_1(ai1,ai2)
										Case "8"
											macro_variables_ushort_array_2d_8(ai1,ai2)=macro_variables_ushort_array_2d_1(ai1,ai2)
										Case "9"
											macro_variables_ushort_array_2d_9(ai1,ai2)=macro_variables_ushort_array_2d_1(ai1,ai2)
									End Select
								Next
							Next
						Case "2"
							For ai1=LBound(macro_variables_ushort_array_2d_2) To UBound(macro_variables_ushort_array_2d_2)
								For ai2=LBound(macro_variables_ushort_array_2d_2,2) To UBound(macro_variables_ushort_array_2d_2,2)
									Select Case array_index
										Case "1"
											macro_variables_ushort_array_2d_1(ai1,ai2)=macro_variables_ushort_array_2d_2(ai1,ai2)
										Case "2"
											macro_variables_ushort_array_2d_2(ai1,ai2)=macro_variables_ushort_array_2d_2(ai1,ai2)
										Case "3"
											macro_variables_ushort_array_2d_3(ai1,ai2)=macro_variables_ushort_array_2d_2(ai1,ai2)
										Case "4"
											macro_variables_ushort_array_2d_4(ai1,ai2)=macro_variables_ushort_array_2d_2(ai1,ai2)
										Case "5"
											macro_variables_ushort_array_2d_5(ai1,ai2)=macro_variables_ushort_array_2d_2(ai1,ai2)
										Case "6"
											macro_variables_ushort_array_2d_6(ai1,ai2)=macro_variables_ushort_array_2d_2(ai1,ai2)
										Case "7"
											macro_variables_ushort_array_2d_7(ai1,ai2)=macro_variables_ushort_array_2d_2(ai1,ai2)
										Case "8"
											macro_variables_ushort_array_2d_8(ai1,ai2)=macro_variables_ushort_array_2d_2(ai1,ai2)
										Case "9"
											macro_variables_ushort_array_2d_9(ai1,ai2)=macro_variables_ushort_array_2d_2(ai1,ai2)
									End Select
								Next
							Next
						Case "3"
							For ai1=LBound(macro_variables_ushort_array_2d_3) To UBound(macro_variables_ushort_array_2d_3)
								For ai2=LBound(macro_variables_ushort_array_2d_3,2) To UBound(macro_variables_ushort_array_2d_3,2)
									Select Case array_index
										Case "1"
											macro_variables_ushort_array_2d_1(ai1,ai2)=macro_variables_ushort_array_2d_3(ai1,ai2)
										Case "2"
											macro_variables_ushort_array_2d_2(ai1,ai2)=macro_variables_ushort_array_2d_3(ai1,ai2)
										Case "3"
											macro_variables_ushort_array_2d_3(ai1,ai2)=macro_variables_ushort_array_2d_3(ai1,ai2)
										Case "4"
											macro_variables_ushort_array_2d_4(ai1,ai2)=macro_variables_ushort_array_2d_3(ai1,ai2)
										Case "5"
											macro_variables_ushort_array_2d_5(ai1,ai2)=macro_variables_ushort_array_2d_3(ai1,ai2)
										Case "6"
											macro_variables_ushort_array_2d_6(ai1,ai2)=macro_variables_ushort_array_2d_3(ai1,ai2)
										Case "7"
											macro_variables_ushort_array_2d_7(ai1,ai2)=macro_variables_ushort_array_2d_3(ai1,ai2)
										Case "8"
											macro_variables_ushort_array_2d_8(ai1,ai2)=macro_variables_ushort_array_2d_3(ai1,ai2)
										Case "9"
											macro_variables_ushort_array_2d_9(ai1,ai2)=macro_variables_ushort_array_2d_3(ai1,ai2)
									End Select
								Next
							Next
						Case "4"
							For ai1=LBound(macro_variables_ushort_array_2d_4) To UBound(macro_variables_ushort_array_2d_4)
								For ai2=LBound(macro_variables_ushort_array_2d_4,2) To UBound(macro_variables_ushort_array_2d_4,2)
									Select Case array_index
										Case "1"
											macro_variables_ushort_array_2d_1(ai1,ai2)=macro_variables_ushort_array_2d_4(ai1,ai2)
										Case "2"
											macro_variables_ushort_array_2d_2(ai1,ai2)=macro_variables_ushort_array_2d_4(ai1,ai2)
										Case "3"
											macro_variables_ushort_array_2d_3(ai1,ai2)=macro_variables_ushort_array_2d_4(ai1,ai2)
										Case "4"
											macro_variables_ushort_array_2d_4(ai1,ai2)=macro_variables_ushort_array_2d_4(ai1,ai2)
										Case "5"
											macro_variables_ushort_array_2d_5(ai1,ai2)=macro_variables_ushort_array_2d_4(ai1,ai2)
										Case "6"
											macro_variables_ushort_array_2d_6(ai1,ai2)=macro_variables_ushort_array_2d_4(ai1,ai2)
										Case "7"
											macro_variables_ushort_array_2d_7(ai1,ai2)=macro_variables_ushort_array_2d_4(ai1,ai2)
										Case "8"
											macro_variables_ushort_array_2d_8(ai1,ai2)=macro_variables_ushort_array_2d_4(ai1,ai2)
										Case "9"
											macro_variables_ushort_array_2d_9(ai1,ai2)=macro_variables_ushort_array_2d_4(ai1,ai2)
									End Select
								Next
							Next
						Case "5"
							For ai1=LBound(macro_variables_ushort_array_2d_5) To UBound(macro_variables_ushort_array_2d_5)
								For ai2=LBound(macro_variables_ushort_array_2d_5,2) To UBound(macro_variables_ushort_array_2d_5,2)
									Select Case array_index
										Case "1"
											macro_variables_ushort_array_2d_1(ai1,ai2)=macro_variables_ushort_array_2d_5(ai1,ai2)
										Case "2"
											macro_variables_ushort_array_2d_2(ai1,ai2)=macro_variables_ushort_array_2d_5(ai1,ai2)
										Case "3"
											macro_variables_ushort_array_2d_3(ai1,ai2)=macro_variables_ushort_array_2d_5(ai1,ai2)
										Case "4"
											macro_variables_ushort_array_2d_4(ai1,ai2)=macro_variables_ushort_array_2d_5(ai1,ai2)
										Case "5"
											macro_variables_ushort_array_2d_5(ai1,ai2)=macro_variables_ushort_array_2d_5(ai1,ai2)
										Case "6"
											macro_variables_ushort_array_2d_6(ai1,ai2)=macro_variables_ushort_array_2d_5(ai1,ai2)
										Case "7"
											macro_variables_ushort_array_2d_7(ai1,ai2)=macro_variables_ushort_array_2d_5(ai1,ai2)
										Case "8"
											macro_variables_ushort_array_2d_8(ai1,ai2)=macro_variables_ushort_array_2d_5(ai1,ai2)
										Case "9"
											macro_variables_ushort_array_2d_9(ai1,ai2)=macro_variables_ushort_array_2d_5(ai1,ai2)
									End Select
								Next
							Next
						Case "6"
							For ai1=LBound(macro_variables_ushort_array_2d_6) To UBound(macro_variables_ushort_array_2d_6)
								For ai2=LBound(macro_variables_ushort_array_2d_6,2) To UBound(macro_variables_ushort_array_2d_6,2)
									Select Case array_index
										Case "1"
											macro_variables_ushort_array_2d_1(ai1,ai2)=macro_variables_ushort_array_2d_6(ai1,ai2)
										Case "2"
											macro_variables_ushort_array_2d_2(ai1,ai2)=macro_variables_ushort_array_2d_6(ai1,ai2)
										Case "3"
											macro_variables_ushort_array_2d_3(ai1,ai2)=macro_variables_ushort_array_2d_6(ai1,ai2)
										Case "4"
											macro_variables_ushort_array_2d_4(ai1,ai2)=macro_variables_ushort_array_2d_6(ai1,ai2)
										Case "5"
											macro_variables_ushort_array_2d_5(ai1,ai2)=macro_variables_ushort_array_2d_6(ai1,ai2)
										Case "6"
											macro_variables_ushort_array_2d_6(ai1,ai2)=macro_variables_ushort_array_2d_6(ai1,ai2)
										Case "7"
											macro_variables_ushort_array_2d_7(ai1,ai2)=macro_variables_ushort_array_2d_6(ai1,ai2)
										Case "8"
											macro_variables_ushort_array_2d_8(ai1,ai2)=macro_variables_ushort_array_2d_6(ai1,ai2)
										Case "9"
											macro_variables_ushort_array_2d_9(ai1,ai2)=macro_variables_ushort_array_2d_6(ai1,ai2)
									End Select
								Next
							Next
						Case "7"
							For ai1=LBound(macro_variables_ushort_array_2d_7) To UBound(macro_variables_ushort_array_2d_7)
								For ai2=LBound(macro_variables_ushort_array_2d_7,2) To UBound(macro_variables_ushort_array_2d_7,2)
									Select Case array_index
										Case "1"
											macro_variables_ushort_array_2d_1(ai1,ai2)=macro_variables_ushort_array_2d_7(ai1,ai2)
										Case "2"
											macro_variables_ushort_array_2d_2(ai1,ai2)=macro_variables_ushort_array_2d_7(ai1,ai2)
										Case "3"
											macro_variables_ushort_array_2d_3(ai1,ai2)=macro_variables_ushort_array_2d_7(ai1,ai2)
										Case "4"
											macro_variables_ushort_array_2d_4(ai1,ai2)=macro_variables_ushort_array_2d_7(ai1,ai2)
										Case "5"
											macro_variables_ushort_array_2d_5(ai1,ai2)=macro_variables_ushort_array_2d_7(ai1,ai2)
										Case "6"
											macro_variables_ushort_array_2d_6(ai1,ai2)=macro_variables_ushort_array_2d_7(ai1,ai2)
										Case "7"
											macro_variables_ushort_array_2d_7(ai1,ai2)=macro_variables_ushort_array_2d_7(ai1,ai2)
										Case "8"
											macro_variables_ushort_array_2d_8(ai1,ai2)=macro_variables_ushort_array_2d_7(ai1,ai2)
										Case "9"
											macro_variables_ushort_array_2d_9(ai1,ai2)=macro_variables_ushort_array_2d_7(ai1,ai2)
									End Select
								Next
							Next
						Case "8"
							For ai1=LBound(macro_variables_ushort_array_2d_8) To UBound(macro_variables_ushort_array_2d_8)
								For ai2=LBound(macro_variables_ushort_array_2d_8,2) To UBound(macro_variables_ushort_array_2d_8,2)
									Select Case array_index
										Case "1"
											macro_variables_ushort_array_2d_1(ai1,ai2)=macro_variables_ushort_array_2d_8(ai1,ai2)
										Case "2"
											macro_variables_ushort_array_2d_2(ai1,ai2)=macro_variables_ushort_array_2d_8(ai1,ai2)
										Case "3"
											macro_variables_ushort_array_2d_3(ai1,ai2)=macro_variables_ushort_array_2d_8(ai1,ai2)
										Case "4"
											macro_variables_ushort_array_2d_4(ai1,ai2)=macro_variables_ushort_array_2d_8(ai1,ai2)
										Case "5"
											macro_variables_ushort_array_2d_5(ai1,ai2)=macro_variables_ushort_array_2d_8(ai1,ai2)
										Case "6"
											macro_variables_ushort_array_2d_6(ai1,ai2)=macro_variables_ushort_array_2d_8(ai1,ai2)
										Case "7"
											macro_variables_ushort_array_2d_7(ai1,ai2)=macro_variables_ushort_array_2d_8(ai1,ai2)
										Case "8"
											macro_variables_ushort_array_2d_8(ai1,ai2)=macro_variables_ushort_array_2d_8(ai1,ai2)
										Case "9"
											macro_variables_ushort_array_2d_9(ai1,ai2)=macro_variables_ushort_array_2d_8(ai1,ai2)
									End Select
								Next
							Next
						Case "9"
							For ai1=LBound(macro_variables_ushort_array_2d_9) To UBound(macro_variables_ushort_array_2d_9)
								For ai2=LBound(macro_variables_ushort_array_2d_9,2) To UBound(macro_variables_ushort_array_2d_9,2)
									Select Case array_index
										Case "1"
											macro_variables_ushort_array_2d_1(ai1,ai2)=macro_variables_ushort_array_2d_9(ai1,ai2)
										Case "2"
											macro_variables_ushort_array_2d_2(ai1,ai2)=macro_variables_ushort_array_2d_9(ai1,ai2)
										Case "3"
											macro_variables_ushort_array_2d_3(ai1,ai2)=macro_variables_ushort_array_2d_9(ai1,ai2)
										Case "4"
											macro_variables_ushort_array_2d_4(ai1,ai2)=macro_variables_ushort_array_2d_9(ai1,ai2)
										Case "5"
											macro_variables_ushort_array_2d_5(ai1,ai2)=macro_variables_ushort_array_2d_9(ai1,ai2)
										Case "6"
											macro_variables_ushort_array_2d_6(ai1,ai2)=macro_variables_ushort_array_2d_9(ai1,ai2)
										Case "7"
											macro_variables_ushort_array_2d_7(ai1,ai2)=macro_variables_ushort_array_2d_9(ai1,ai2)
										Case "8"
											macro_variables_ushort_array_2d_8(ai1,ai2)=macro_variables_ushort_array_2d_9(ai1,ai2)
										Case "9"
											macro_variables_ushort_array_2d_9(ai1,ai2)=macro_variables_ushort_array_2d_9(ai1,ai2)
									End Select
								Next
							Next
					End Select
				Case "3d"
					Select Case macro_variables_info(a,3)
						Case "1"
							For ai1=LBound(macro_variables_ushort_array_3d_1) To UBound(macro_variables_ushort_array_3d_1)
								For ai2=LBound(macro_variables_ushort_array_3d_1,2) To UBound(macro_variables_ushort_array_3d_1,2)
									For ai3=LBound(macro_variables_ushort_array_3d_1,3) To UBound(macro_variables_ushort_array_3d_1,3)
										Select Case array_index
											Case "1"
												macro_variables_ushort_array_3d_1(ai1,ai2,ai3)=macro_variables_ushort_array_3d_1(ai1,ai2,ai3)
											Case "2"
												macro_variables_ushort_array_3d_2(ai1,ai2,ai3)=macro_variables_ushort_array_3d_1(ai1,ai2,ai3)
											Case "3"
												macro_variables_ushort_array_3d_3(ai1,ai2,ai3)=macro_variables_ushort_array_3d_1(ai1,ai2,ai3)
											Case "4"
												macro_variables_ushort_array_3d_4(ai1,ai2,ai3)=macro_variables_ushort_array_3d_1(ai1,ai2,ai3)
											Case "5"
												macro_variables_ushort_array_3d_5(ai1,ai2,ai3)=macro_variables_ushort_array_3d_1(ai1,ai2,ai3)
											Case "6"
												macro_variables_ushort_array_3d_6(ai1,ai2,ai3)=macro_variables_ushort_array_3d_1(ai1,ai2,ai3)
											Case "7"
												macro_variables_ushort_array_3d_7(ai1,ai2,ai3)=macro_variables_ushort_array_3d_1(ai1,ai2,ai3)
											Case "8"
												macro_variables_ushort_array_3d_8(ai1,ai2,ai3)=macro_variables_ushort_array_3d_1(ai1,ai2,ai3)
											Case "9"
												macro_variables_ushort_array_3d_9(ai1,ai2,ai3)=macro_variables_ushort_array_3d_1(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "2"
							For ai1=LBound(macro_variables_ushort_array_3d_2) To UBound(macro_variables_ushort_array_3d_2)
								For ai2=LBound(macro_variables_ushort_array_3d_2,2) To UBound(macro_variables_ushort_array_3d_2,2)
									For ai3=LBound(macro_variables_ushort_array_3d_2,3) To UBound(macro_variables_ushort_array_3d_2,3)
										Select Case array_index
											Case "1"
												macro_variables_ushort_array_3d_1(ai1,ai2,ai3)=macro_variables_ushort_array_3d_2(ai1,ai2,ai3)
											Case "2"
												macro_variables_ushort_array_3d_2(ai1,ai2,ai3)=macro_variables_ushort_array_3d_2(ai1,ai2,ai3)
											Case "3"
												macro_variables_ushort_array_3d_3(ai1,ai2,ai3)=macro_variables_ushort_array_3d_2(ai1,ai2,ai3)
											Case "4"
												macro_variables_ushort_array_3d_4(ai1,ai2,ai3)=macro_variables_ushort_array_3d_2(ai1,ai2,ai3)
											Case "5"
												macro_variables_ushort_array_3d_5(ai1,ai2,ai3)=macro_variables_ushort_array_3d_2(ai1,ai2,ai3)
											Case "6"
												macro_variables_ushort_array_3d_6(ai1,ai2,ai3)=macro_variables_ushort_array_3d_2(ai1,ai2,ai3)
											Case "7"
												macro_variables_ushort_array_3d_7(ai1,ai2,ai3)=macro_variables_ushort_array_3d_2(ai1,ai2,ai3)
											Case "8"
												macro_variables_ushort_array_3d_8(ai1,ai2,ai3)=macro_variables_ushort_array_3d_2(ai1,ai2,ai3)
											Case "9"
												macro_variables_ushort_array_3d_9(ai1,ai2,ai3)=macro_variables_ushort_array_3d_2(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "3"
							For ai1=LBound(macro_variables_ushort_array_3d_3) To UBound(macro_variables_ushort_array_3d_3)
								For ai2=LBound(macro_variables_ushort_array_3d_3,2) To UBound(macro_variables_ushort_array_3d_3,2)
									For ai3=LBound(macro_variables_ushort_array_3d_3,3) To UBound(macro_variables_ushort_array_3d_3,3)
										Select Case array_index
											Case "1"
												macro_variables_ushort_array_3d_1(ai1,ai2,ai3)=macro_variables_ushort_array_3d_3(ai1,ai2,ai3)
											Case "2"
												macro_variables_ushort_array_3d_2(ai1,ai2,ai3)=macro_variables_ushort_array_3d_3(ai1,ai2,ai3)
											Case "3"
												macro_variables_ushort_array_3d_3(ai1,ai2,ai3)=macro_variables_ushort_array_3d_3(ai1,ai2,ai3)
											Case "4"
												macro_variables_ushort_array_3d_4(ai1,ai2,ai3)=macro_variables_ushort_array_3d_3(ai1,ai2,ai3)
											Case "5"
												macro_variables_ushort_array_3d_5(ai1,ai2,ai3)=macro_variables_ushort_array_3d_3(ai1,ai2,ai3)
											Case "6"
												macro_variables_ushort_array_3d_6(ai1,ai2,ai3)=macro_variables_ushort_array_3d_3(ai1,ai2,ai3)
											Case "7"
												macro_variables_ushort_array_3d_7(ai1,ai2,ai3)=macro_variables_ushort_array_3d_3(ai1,ai2,ai3)
											Case "8"
												macro_variables_ushort_array_3d_8(ai1,ai2,ai3)=macro_variables_ushort_array_3d_3(ai1,ai2,ai3)
											Case "9"
												macro_variables_ushort_array_3d_9(ai1,ai2,ai3)=macro_variables_ushort_array_3d_3(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "4"
							For ai1=LBound(macro_variables_ushort_array_3d_4) To UBound(macro_variables_ushort_array_3d_4)
								For ai2=LBound(macro_variables_ushort_array_3d_4,2) To UBound(macro_variables_ushort_array_3d_4,2)
									For ai3=LBound(macro_variables_ushort_array_3d_4,3) To UBound(macro_variables_ushort_array_3d_4,3)
										Select Case array_index
											Case "1"
												macro_variables_ushort_array_3d_1(ai1,ai2,ai3)=macro_variables_ushort_array_3d_4(ai1,ai2,ai3)
											Case "2"
												macro_variables_ushort_array_3d_2(ai1,ai2,ai3)=macro_variables_ushort_array_3d_4(ai1,ai2,ai3)
											Case "3"
												macro_variables_ushort_array_3d_3(ai1,ai2,ai3)=macro_variables_ushort_array_3d_4(ai1,ai2,ai3)
											Case "4"
												macro_variables_ushort_array_3d_4(ai1,ai2,ai3)=macro_variables_ushort_array_3d_4(ai1,ai2,ai3)
											Case "5"
												macro_variables_ushort_array_3d_5(ai1,ai2,ai3)=macro_variables_ushort_array_3d_4(ai1,ai2,ai3)
											Case "6"
												macro_variables_ushort_array_3d_6(ai1,ai2,ai3)=macro_variables_ushort_array_3d_4(ai1,ai2,ai3)
											Case "7"
												macro_variables_ushort_array_3d_7(ai1,ai2,ai3)=macro_variables_ushort_array_3d_4(ai1,ai2,ai3)
											Case "8"
												macro_variables_ushort_array_3d_8(ai1,ai2,ai3)=macro_variables_ushort_array_3d_4(ai1,ai2,ai3)
											Case "9"
												macro_variables_ushort_array_3d_9(ai1,ai2,ai3)=macro_variables_ushort_array_3d_4(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "5"
							For ai1=LBound(macro_variables_ushort_array_3d_5) To UBound(macro_variables_ushort_array_3d_5)
								For ai2=LBound(macro_variables_ushort_array_3d_5,2) To UBound(macro_variables_ushort_array_3d_5,2)
									For ai3=LBound(macro_variables_ushort_array_3d_5,3) To UBound(macro_variables_ushort_array_3d_5,3)
										Select Case array_index
											Case "1"
												macro_variables_ushort_array_3d_1(ai1,ai2,ai3)=macro_variables_ushort_array_3d_5(ai1,ai2,ai3)
											Case "2"
												macro_variables_ushort_array_3d_2(ai1,ai2,ai3)=macro_variables_ushort_array_3d_5(ai1,ai2,ai3)
											Case "3"
												macro_variables_ushort_array_3d_3(ai1,ai2,ai3)=macro_variables_ushort_array_3d_5(ai1,ai2,ai3)
											Case "4"
												macro_variables_ushort_array_3d_4(ai1,ai2,ai3)=macro_variables_ushort_array_3d_5(ai1,ai2,ai3)
											Case "5"
												macro_variables_ushort_array_3d_5(ai1,ai2,ai3)=macro_variables_ushort_array_3d_5(ai1,ai2,ai3)
											Case "6"
												macro_variables_ushort_array_3d_6(ai1,ai2,ai3)=macro_variables_ushort_array_3d_5(ai1,ai2,ai3)
											Case "7"
												macro_variables_ushort_array_3d_7(ai1,ai2,ai3)=macro_variables_ushort_array_3d_5(ai1,ai2,ai3)
											Case "8"
												macro_variables_ushort_array_3d_8(ai1,ai2,ai3)=macro_variables_ushort_array_3d_5(ai1,ai2,ai3)
											Case "9"
												macro_variables_ushort_array_3d_9(ai1,ai2,ai3)=macro_variables_ushort_array_3d_5(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "6"
							For ai1=LBound(macro_variables_ushort_array_3d_6) To UBound(macro_variables_ushort_array_3d_6)
								For ai2=LBound(macro_variables_ushort_array_3d_6,2) To UBound(macro_variables_ushort_array_3d_6,2)
									For ai3=LBound(macro_variables_ushort_array_3d_6,3) To UBound(macro_variables_ushort_array_3d_6,3)
										Select Case array_index
											Case "1"
												macro_variables_ushort_array_3d_1(ai1,ai2,ai3)=macro_variables_ushort_array_3d_6(ai1,ai2,ai3)
											Case "2"
												macro_variables_ushort_array_3d_2(ai1,ai2,ai3)=macro_variables_ushort_array_3d_6(ai1,ai2,ai3)
											Case "3"
												macro_variables_ushort_array_3d_3(ai1,ai2,ai3)=macro_variables_ushort_array_3d_6(ai1,ai2,ai3)
											Case "4"
												macro_variables_ushort_array_3d_4(ai1,ai2,ai3)=macro_variables_ushort_array_3d_6(ai1,ai2,ai3)
											Case "5"
												macro_variables_ushort_array_3d_5(ai1,ai2,ai3)=macro_variables_ushort_array_3d_6(ai1,ai2,ai3)
											Case "6"
												macro_variables_ushort_array_3d_6(ai1,ai2,ai3)=macro_variables_ushort_array_3d_6(ai1,ai2,ai3)
											Case "7"
												macro_variables_ushort_array_3d_7(ai1,ai2,ai3)=macro_variables_ushort_array_3d_6(ai1,ai2,ai3)
											Case "8"
												macro_variables_ushort_array_3d_8(ai1,ai2,ai3)=macro_variables_ushort_array_3d_6(ai1,ai2,ai3)
											Case "9"
												macro_variables_ushort_array_3d_9(ai1,ai2,ai3)=macro_variables_ushort_array_3d_6(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "7"
							For ai1=LBound(macro_variables_ushort_array_3d_7) To UBound(macro_variables_ushort_array_3d_7)
								For ai2=LBound(macro_variables_ushort_array_3d_7,2) To UBound(macro_variables_ushort_array_3d_7,2)
									For ai3=LBound(macro_variables_ushort_array_3d_7,3) To UBound(macro_variables_ushort_array_3d_7,3)
										Select Case array_index
											Case "1"
												macro_variables_ushort_array_3d_1(ai1,ai2,ai3)=macro_variables_ushort_array_3d_7(ai1,ai2,ai3)
											Case "2"
												macro_variables_ushort_array_3d_2(ai1,ai2,ai3)=macro_variables_ushort_array_3d_7(ai1,ai2,ai3)
											Case "3"
												macro_variables_ushort_array_3d_3(ai1,ai2,ai3)=macro_variables_ushort_array_3d_7(ai1,ai2,ai3)
											Case "4"
												macro_variables_ushort_array_3d_4(ai1,ai2,ai3)=macro_variables_ushort_array_3d_7(ai1,ai2,ai3)
											Case "5"
												macro_variables_ushort_array_3d_5(ai1,ai2,ai3)=macro_variables_ushort_array_3d_7(ai1,ai2,ai3)
											Case "6"
												macro_variables_ushort_array_3d_6(ai1,ai2,ai3)=macro_variables_ushort_array_3d_7(ai1,ai2,ai3)
											Case "7"
												macro_variables_ushort_array_3d_7(ai1,ai2,ai3)=macro_variables_ushort_array_3d_7(ai1,ai2,ai3)
											Case "8"
												macro_variables_ushort_array_3d_8(ai1,ai2,ai3)=macro_variables_ushort_array_3d_7(ai1,ai2,ai3)
											Case "9"
												macro_variables_ushort_array_3d_9(ai1,ai2,ai3)=macro_variables_ushort_array_3d_7(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "8"
							For ai1=LBound(macro_variables_ushort_array_3d_8) To UBound(macro_variables_ushort_array_3d_8)
								For ai2=LBound(macro_variables_ushort_array_3d_8,2) To UBound(macro_variables_ushort_array_3d_8,2)
									For ai3=LBound(macro_variables_ushort_array_3d_8,3) To UBound(macro_variables_ushort_array_3d_8,3)
										Select Case array_index
											Case "1"
												macro_variables_ushort_array_3d_1(ai1,ai2,ai3)=macro_variables_ushort_array_3d_8(ai1,ai2,ai3)
											Case "2"
												macro_variables_ushort_array_3d_2(ai1,ai2,ai3)=macro_variables_ushort_array_3d_8(ai1,ai2,ai3)
											Case "3"
												macro_variables_ushort_array_3d_3(ai1,ai2,ai3)=macro_variables_ushort_array_3d_8(ai1,ai2,ai3)
											Case "4"
												macro_variables_ushort_array_3d_4(ai1,ai2,ai3)=macro_variables_ushort_array_3d_8(ai1,ai2,ai3)
											Case "5"
												macro_variables_ushort_array_3d_5(ai1,ai2,ai3)=macro_variables_ushort_array_3d_8(ai1,ai2,ai3)
											Case "6"
												macro_variables_ushort_array_3d_6(ai1,ai2,ai3)=macro_variables_ushort_array_3d_8(ai1,ai2,ai3)
											Case "7"
												macro_variables_ushort_array_3d_7(ai1,ai2,ai3)=macro_variables_ushort_array_3d_8(ai1,ai2,ai3)
											Case "8"
												macro_variables_ushort_array_3d_8(ai1,ai2,ai3)=macro_variables_ushort_array_3d_8(ai1,ai2,ai3)
											Case "9"
												macro_variables_ushort_array_3d_9(ai1,ai2,ai3)=macro_variables_ushort_array_3d_8(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "9"
							For ai1=LBound(macro_variables_ushort_array_3d_9) To UBound(macro_variables_ushort_array_3d_9)
								For ai2=LBound(macro_variables_ushort_array_3d_9,2) To UBound(macro_variables_ushort_array_3d_9,2)
									For ai3=LBound(macro_variables_ushort_array_3d_9,3) To UBound(macro_variables_ushort_array_3d_9,3)
										Select Case array_index
											Case "1"
												macro_variables_ushort_array_3d_1(ai1,ai2,ai3)=macro_variables_ushort_array_3d_9(ai1,ai2,ai3)
											Case "2"
												macro_variables_ushort_array_3d_2(ai1,ai2,ai3)=macro_variables_ushort_array_3d_9(ai1,ai2,ai3)
											Case "3"
												macro_variables_ushort_array_3d_3(ai1,ai2,ai3)=macro_variables_ushort_array_3d_9(ai1,ai2,ai3)
											Case "4"
												macro_variables_ushort_array_3d_4(ai1,ai2,ai3)=macro_variables_ushort_array_3d_9(ai1,ai2,ai3)
											Case "5"
												macro_variables_ushort_array_3d_5(ai1,ai2,ai3)=macro_variables_ushort_array_3d_9(ai1,ai2,ai3)
											Case "6"
												macro_variables_ushort_array_3d_6(ai1,ai2,ai3)=macro_variables_ushort_array_3d_9(ai1,ai2,ai3)
											Case "7"
												macro_variables_ushort_array_3d_7(ai1,ai2,ai3)=macro_variables_ushort_array_3d_9(ai1,ai2,ai3)
											Case "8"
												macro_variables_ushort_array_3d_8(ai1,ai2,ai3)=macro_variables_ushort_array_3d_9(ai1,ai2,ai3)
											Case "9"
												macro_variables_ushort_array_3d_9(ai1,ai2,ai3)=macro_variables_ushort_array_3d_9(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
					End Select
			End Select
		Case "LONG_ARRAY"
			Select Case macro_variables_info(a,5)
				Case "1d"
					Select Case macro_variables_info(a,3)
						Case "1"
							For ai1=LBound(macro_variables_long_array_1d_1) To UBound(macro_variables_long_array_1d_1)
								Select Case array_index
									Case "1"
										macro_variables_long_array_1d_1(ai1)=macro_variables_long_array_1d_1(ai1)
									Case "2"
										macro_variables_long_array_1d_2(ai1)=macro_variables_long_array_1d_1(ai1)
									Case "3"
										macro_variables_long_array_1d_3(ai1)=macro_variables_long_array_1d_1(ai1)
									Case "4"
										macro_variables_long_array_1d_4(ai1)=macro_variables_long_array_1d_1(ai1)
									Case "5"
										macro_variables_long_array_1d_5(ai1)=macro_variables_long_array_1d_1(ai1)
									Case "6"
										macro_variables_long_array_1d_6(ai1)=macro_variables_long_array_1d_1(ai1)
									Case "7"
										macro_variables_long_array_1d_7(ai1)=macro_variables_long_array_1d_1(ai1)
									Case "8"
										macro_variables_long_array_1d_8(ai1)=macro_variables_long_array_1d_1(ai1)
									Case "9"
										macro_variables_long_array_1d_9(ai1)=macro_variables_long_array_1d_1(ai1)
								End Select
							Next
						Case "2"
							For ai1=LBound(macro_variables_long_array_1d_2) To UBound(macro_variables_long_array_1d_2)
								Select Case array_index
									Case "1"
										macro_variables_long_array_1d_1(ai1)=macro_variables_long_array_1d_2(ai1)
									Case "2"
										macro_variables_long_array_1d_2(ai1)=macro_variables_long_array_1d_2(ai1)
									Case "3"
										macro_variables_long_array_1d_3(ai1)=macro_variables_long_array_1d_2(ai1)
									Case "4"
										macro_variables_long_array_1d_4(ai1)=macro_variables_long_array_1d_2(ai1)
									Case "5"
										macro_variables_long_array_1d_5(ai1)=macro_variables_long_array_1d_2(ai1)
									Case "6"
										macro_variables_long_array_1d_6(ai1)=macro_variables_long_array_1d_2(ai1)
									Case "7"
										macro_variables_long_array_1d_7(ai1)=macro_variables_long_array_1d_2(ai1)
									Case "8"
										macro_variables_long_array_1d_8(ai1)=macro_variables_long_array_1d_2(ai1)
									Case "9"
										macro_variables_long_array_1d_9(ai1)=macro_variables_long_array_1d_2(ai1)
								End Select
							Next
						Case "3"
							For ai1=LBound(macro_variables_long_array_1d_3) To UBound(macro_variables_long_array_1d_3)
								Select Case array_index
									Case "1"
										macro_variables_long_array_1d_1(ai1)=macro_variables_long_array_1d_3(ai1)
									Case "2"
										macro_variables_long_array_1d_2(ai1)=macro_variables_long_array_1d_3(ai1)
									Case "3"
										macro_variables_long_array_1d_3(ai1)=macro_variables_long_array_1d_3(ai1)
									Case "4"
										macro_variables_long_array_1d_4(ai1)=macro_variables_long_array_1d_3(ai1)
									Case "5"
										macro_variables_long_array_1d_5(ai1)=macro_variables_long_array_1d_3(ai1)
									Case "6"
										macro_variables_long_array_1d_6(ai1)=macro_variables_long_array_1d_3(ai1)
									Case "7"
										macro_variables_long_array_1d_7(ai1)=macro_variables_long_array_1d_3(ai1)
									Case "8"
										macro_variables_long_array_1d_8(ai1)=macro_variables_long_array_1d_3(ai1)
									Case "9"
										macro_variables_long_array_1d_9(ai1)=macro_variables_long_array_1d_3(ai1)
								End Select
							Next
						Case "4"
							For ai1=LBound(macro_variables_long_array_1d_4) To UBound(macro_variables_long_array_1d_4)
								Select Case array_index
									Case "1"
										macro_variables_long_array_1d_1(ai1)=macro_variables_long_array_1d_4(ai1)
									Case "2"
										macro_variables_long_array_1d_2(ai1)=macro_variables_long_array_1d_4(ai1)
									Case "3"
										macro_variables_long_array_1d_3(ai1)=macro_variables_long_array_1d_4(ai1)
									Case "4"
										macro_variables_long_array_1d_4(ai1)=macro_variables_long_array_1d_4(ai1)
									Case "5"
										macro_variables_long_array_1d_5(ai1)=macro_variables_long_array_1d_4(ai1)
									Case "6"
										macro_variables_long_array_1d_6(ai1)=macro_variables_long_array_1d_4(ai1)
									Case "7"
										macro_variables_long_array_1d_7(ai1)=macro_variables_long_array_1d_4(ai1)
									Case "8"
										macro_variables_long_array_1d_8(ai1)=macro_variables_long_array_1d_4(ai1)
									Case "9"
										macro_variables_long_array_1d_9(ai1)=macro_variables_long_array_1d_4(ai1)
								End Select
							Next
						Case "5"
							For ai1=LBound(macro_variables_long_array_1d_5) To UBound(macro_variables_long_array_1d_5)
								Select Case array_index
									Case "1"
										macro_variables_long_array_1d_1(ai1)=macro_variables_long_array_1d_5(ai1)
									Case "2"
										macro_variables_long_array_1d_2(ai1)=macro_variables_long_array_1d_5(ai1)
									Case "3"
										macro_variables_long_array_1d_3(ai1)=macro_variables_long_array_1d_5(ai1)
									Case "4"
										macro_variables_long_array_1d_4(ai1)=macro_variables_long_array_1d_5(ai1)
									Case "5"
										macro_variables_long_array_1d_5(ai1)=macro_variables_long_array_1d_5(ai1)
									Case "6"
										macro_variables_long_array_1d_6(ai1)=macro_variables_long_array_1d_5(ai1)
									Case "7"
										macro_variables_long_array_1d_7(ai1)=macro_variables_long_array_1d_5(ai1)
									Case "8"
										macro_variables_long_array_1d_8(ai1)=macro_variables_long_array_1d_5(ai1)
									Case "9"
										macro_variables_long_array_1d_9(ai1)=macro_variables_long_array_1d_5(ai1)
								End Select
							Next
						Case "6"
							For ai1=LBound(macro_variables_long_array_1d_6) To UBound(macro_variables_long_array_1d_6)
								Select Case array_index
									Case "1"
										macro_variables_long_array_1d_1(ai1)=macro_variables_long_array_1d_6(ai1)
									Case "2"
										macro_variables_long_array_1d_2(ai1)=macro_variables_long_array_1d_6(ai1)
									Case "3"
										macro_variables_long_array_1d_3(ai1)=macro_variables_long_array_1d_6(ai1)
									Case "4"
										macro_variables_long_array_1d_4(ai1)=macro_variables_long_array_1d_6(ai1)
									Case "5"
										macro_variables_long_array_1d_5(ai1)=macro_variables_long_array_1d_6(ai1)
									Case "6"
										macro_variables_long_array_1d_6(ai1)=macro_variables_long_array_1d_6(ai1)
									Case "7"
										macro_variables_long_array_1d_7(ai1)=macro_variables_long_array_1d_6(ai1)
									Case "8"
										macro_variables_long_array_1d_8(ai1)=macro_variables_long_array_1d_6(ai1)
									Case "9"
										macro_variables_long_array_1d_9(ai1)=macro_variables_long_array_1d_6(ai1)
								End Select
							Next
						Case "7"
							For ai1=LBound(macro_variables_long_array_1d_7) To UBound(macro_variables_long_array_1d_7)
								Select Case array_index
									Case "1"
										macro_variables_long_array_1d_1(ai1)=macro_variables_long_array_1d_7(ai1)
									Case "2"
										macro_variables_long_array_1d_2(ai1)=macro_variables_long_array_1d_7(ai1)
									Case "3"
										macro_variables_long_array_1d_3(ai1)=macro_variables_long_array_1d_7(ai1)
									Case "4"
										macro_variables_long_array_1d_4(ai1)=macro_variables_long_array_1d_7(ai1)
									Case "5"
										macro_variables_long_array_1d_5(ai1)=macro_variables_long_array_1d_7(ai1)
									Case "6"
										macro_variables_long_array_1d_6(ai1)=macro_variables_long_array_1d_7(ai1)
									Case "7"
										macro_variables_long_array_1d_7(ai1)=macro_variables_long_array_1d_7(ai1)
									Case "8"
										macro_variables_long_array_1d_8(ai1)=macro_variables_long_array_1d_7(ai1)
									Case "9"
										macro_variables_long_array_1d_9(ai1)=macro_variables_long_array_1d_7(ai1)
								End Select
							Next
						Case "8"
							For ai1=LBound(macro_variables_long_array_1d_8) To UBound(macro_variables_long_array_1d_8)
								Select Case array_index
									Case "1"
										macro_variables_long_array_1d_1(ai1)=macro_variables_long_array_1d_8(ai1)
									Case "2"
										macro_variables_long_array_1d_2(ai1)=macro_variables_long_array_1d_8(ai1)
									Case "3"
										macro_variables_long_array_1d_3(ai1)=macro_variables_long_array_1d_8(ai1)
									Case "4"
										macro_variables_long_array_1d_4(ai1)=macro_variables_long_array_1d_8(ai1)
									Case "5"
										macro_variables_long_array_1d_5(ai1)=macro_variables_long_array_1d_8(ai1)
									Case "6"
										macro_variables_long_array_1d_6(ai1)=macro_variables_long_array_1d_8(ai1)
									Case "7"
										macro_variables_long_array_1d_7(ai1)=macro_variables_long_array_1d_8(ai1)
									Case "8"
										macro_variables_long_array_1d_8(ai1)=macro_variables_long_array_1d_8(ai1)
									Case "9"
										macro_variables_long_array_1d_9(ai1)=macro_variables_long_array_1d_8(ai1)
								End Select
							Next
						Case "9"
							For ai1=LBound(macro_variables_long_array_1d_9) To UBound(macro_variables_long_array_1d_9)
								Select Case array_index
									Case "1"
										macro_variables_long_array_1d_1(ai1)=macro_variables_long_array_1d_9(ai1)
									Case "2"
										macro_variables_long_array_1d_2(ai1)=macro_variables_long_array_1d_9(ai1)
									Case "3"
										macro_variables_long_array_1d_3(ai1)=macro_variables_long_array_1d_9(ai1)
									Case "4"
										macro_variables_long_array_1d_4(ai1)=macro_variables_long_array_1d_9(ai1)
									Case "5"
										macro_variables_long_array_1d_5(ai1)=macro_variables_long_array_1d_9(ai1)
									Case "6"
										macro_variables_long_array_1d_6(ai1)=macro_variables_long_array_1d_9(ai1)
									Case "7"
										macro_variables_long_array_1d_7(ai1)=macro_variables_long_array_1d_9(ai1)
									Case "8"
										macro_variables_long_array_1d_8(ai1)=macro_variables_long_array_1d_9(ai1)
									Case "9"
										macro_variables_long_array_1d_9(ai1)=macro_variables_long_array_1d_9(ai1)
								End Select
							Next
					End Select
				Case "2d"
					Select Case macro_variables_info(a,3)
						Case "1"
							For ai1=LBound(macro_variables_long_array_2d_1) To UBound(macro_variables_long_array_2d_1)
								For ai2=LBound(macro_variables_long_array_2d_1,2) To UBound(macro_variables_long_array_2d_1,2)
									Select Case array_index
										Case "1"
											macro_variables_long_array_2d_1(ai1,ai2)=macro_variables_long_array_2d_1(ai1,ai2)
										Case "2"
											macro_variables_long_array_2d_2(ai1,ai2)=macro_variables_long_array_2d_1(ai1,ai2)
										Case "3"
											macro_variables_long_array_2d_3(ai1,ai2)=macro_variables_long_array_2d_1(ai1,ai2)
										Case "4"
											macro_variables_long_array_2d_4(ai1,ai2)=macro_variables_long_array_2d_1(ai1,ai2)
										Case "5"
											macro_variables_long_array_2d_5(ai1,ai2)=macro_variables_long_array_2d_1(ai1,ai2)
										Case "6"
											macro_variables_long_array_2d_6(ai1,ai2)=macro_variables_long_array_2d_1(ai1,ai2)
										Case "7"
											macro_variables_long_array_2d_7(ai1,ai2)=macro_variables_long_array_2d_1(ai1,ai2)
										Case "8"
											macro_variables_long_array_2d_8(ai1,ai2)=macro_variables_long_array_2d_1(ai1,ai2)
										Case "9"
											macro_variables_long_array_2d_9(ai1,ai2)=macro_variables_long_array_2d_1(ai1,ai2)
									End Select
								Next
							Next
						Case "2"
							For ai1=LBound(macro_variables_long_array_2d_2) To UBound(macro_variables_long_array_2d_2)
								For ai2=LBound(macro_variables_long_array_2d_2,2) To UBound(macro_variables_long_array_2d_2,2)
									Select Case array_index
										Case "1"
											macro_variables_long_array_2d_1(ai1,ai2)=macro_variables_long_array_2d_2(ai1,ai2)
										Case "2"
											macro_variables_long_array_2d_2(ai1,ai2)=macro_variables_long_array_2d_2(ai1,ai2)
										Case "3"
											macro_variables_long_array_2d_3(ai1,ai2)=macro_variables_long_array_2d_2(ai1,ai2)
										Case "4"
											macro_variables_long_array_2d_4(ai1,ai2)=macro_variables_long_array_2d_2(ai1,ai2)
										Case "5"
											macro_variables_long_array_2d_5(ai1,ai2)=macro_variables_long_array_2d_2(ai1,ai2)
										Case "6"
											macro_variables_long_array_2d_6(ai1,ai2)=macro_variables_long_array_2d_2(ai1,ai2)
										Case "7"
											macro_variables_long_array_2d_7(ai1,ai2)=macro_variables_long_array_2d_2(ai1,ai2)
										Case "8"
											macro_variables_long_array_2d_8(ai1,ai2)=macro_variables_long_array_2d_2(ai1,ai2)
										Case "9"
											macro_variables_long_array_2d_9(ai1,ai2)=macro_variables_long_array_2d_2(ai1,ai2)
									End Select
								Next
							Next
						Case "3"
							For ai1=LBound(macro_variables_long_array_2d_3) To UBound(macro_variables_long_array_2d_3)
								For ai2=LBound(macro_variables_long_array_2d_3,2) To UBound(macro_variables_long_array_2d_3,2)
									Select Case array_index
										Case "1"
											macro_variables_long_array_2d_1(ai1,ai2)=macro_variables_long_array_2d_3(ai1,ai2)
										Case "2"
											macro_variables_long_array_2d_2(ai1,ai2)=macro_variables_long_array_2d_3(ai1,ai2)
										Case "3"
											macro_variables_long_array_2d_3(ai1,ai2)=macro_variables_long_array_2d_3(ai1,ai2)
										Case "4"
											macro_variables_long_array_2d_4(ai1,ai2)=macro_variables_long_array_2d_3(ai1,ai2)
										Case "5"
											macro_variables_long_array_2d_5(ai1,ai2)=macro_variables_long_array_2d_3(ai1,ai2)
										Case "6"
											macro_variables_long_array_2d_6(ai1,ai2)=macro_variables_long_array_2d_3(ai1,ai2)
										Case "7"
											macro_variables_long_array_2d_7(ai1,ai2)=macro_variables_long_array_2d_3(ai1,ai2)
										Case "8"
											macro_variables_long_array_2d_8(ai1,ai2)=macro_variables_long_array_2d_3(ai1,ai2)
										Case "9"
											macro_variables_long_array_2d_9(ai1,ai2)=macro_variables_long_array_2d_3(ai1,ai2)
									End Select
								Next
							Next
						Case "4"
							For ai1=LBound(macro_variables_long_array_2d_4) To UBound(macro_variables_long_array_2d_4)
								For ai2=LBound(macro_variables_long_array_2d_4,2) To UBound(macro_variables_long_array_2d_4,2)
									Select Case array_index
										Case "1"
											macro_variables_long_array_2d_1(ai1,ai2)=macro_variables_long_array_2d_4(ai1,ai2)
										Case "2"
											macro_variables_long_array_2d_2(ai1,ai2)=macro_variables_long_array_2d_4(ai1,ai2)
										Case "3"
											macro_variables_long_array_2d_3(ai1,ai2)=macro_variables_long_array_2d_4(ai1,ai2)
										Case "4"
											macro_variables_long_array_2d_4(ai1,ai2)=macro_variables_long_array_2d_4(ai1,ai2)
										Case "5"
											macro_variables_long_array_2d_5(ai1,ai2)=macro_variables_long_array_2d_4(ai1,ai2)
										Case "6"
											macro_variables_long_array_2d_6(ai1,ai2)=macro_variables_long_array_2d_4(ai1,ai2)
										Case "7"
											macro_variables_long_array_2d_7(ai1,ai2)=macro_variables_long_array_2d_4(ai1,ai2)
										Case "8"
											macro_variables_long_array_2d_8(ai1,ai2)=macro_variables_long_array_2d_4(ai1,ai2)
										Case "9"
											macro_variables_long_array_2d_9(ai1,ai2)=macro_variables_long_array_2d_4(ai1,ai2)
									End Select
								Next
							Next
						Case "5"
							For ai1=LBound(macro_variables_long_array_2d_5) To UBound(macro_variables_long_array_2d_5)
								For ai2=LBound(macro_variables_long_array_2d_5,2) To UBound(macro_variables_long_array_2d_5,2)
									Select Case array_index
										Case "1"
											macro_variables_long_array_2d_1(ai1,ai2)=macro_variables_long_array_2d_5(ai1,ai2)
										Case "2"
											macro_variables_long_array_2d_2(ai1,ai2)=macro_variables_long_array_2d_5(ai1,ai2)
										Case "3"
											macro_variables_long_array_2d_3(ai1,ai2)=macro_variables_long_array_2d_5(ai1,ai2)
										Case "4"
											macro_variables_long_array_2d_4(ai1,ai2)=macro_variables_long_array_2d_5(ai1,ai2)
										Case "5"
											macro_variables_long_array_2d_5(ai1,ai2)=macro_variables_long_array_2d_5(ai1,ai2)
										Case "6"
											macro_variables_long_array_2d_6(ai1,ai2)=macro_variables_long_array_2d_5(ai1,ai2)
										Case "7"
											macro_variables_long_array_2d_7(ai1,ai2)=macro_variables_long_array_2d_5(ai1,ai2)
										Case "8"
											macro_variables_long_array_2d_8(ai1,ai2)=macro_variables_long_array_2d_5(ai1,ai2)
										Case "9"
											macro_variables_long_array_2d_9(ai1,ai2)=macro_variables_long_array_2d_5(ai1,ai2)
									End Select
								Next
							Next
						Case "6"
							For ai1=LBound(macro_variables_long_array_2d_6) To UBound(macro_variables_long_array_2d_6)
								For ai2=LBound(macro_variables_long_array_2d_6,2) To UBound(macro_variables_long_array_2d_6,2)
									Select Case array_index
										Case "1"
											macro_variables_long_array_2d_1(ai1,ai2)=macro_variables_long_array_2d_6(ai1,ai2)
										Case "2"
											macro_variables_long_array_2d_2(ai1,ai2)=macro_variables_long_array_2d_6(ai1,ai2)
										Case "3"
											macro_variables_long_array_2d_3(ai1,ai2)=macro_variables_long_array_2d_6(ai1,ai2)
										Case "4"
											macro_variables_long_array_2d_4(ai1,ai2)=macro_variables_long_array_2d_6(ai1,ai2)
										Case "5"
											macro_variables_long_array_2d_5(ai1,ai2)=macro_variables_long_array_2d_6(ai1,ai2)
										Case "6"
											macro_variables_long_array_2d_6(ai1,ai2)=macro_variables_long_array_2d_6(ai1,ai2)
										Case "7"
											macro_variables_long_array_2d_7(ai1,ai2)=macro_variables_long_array_2d_6(ai1,ai2)
										Case "8"
											macro_variables_long_array_2d_8(ai1,ai2)=macro_variables_long_array_2d_6(ai1,ai2)
										Case "9"
											macro_variables_long_array_2d_9(ai1,ai2)=macro_variables_long_array_2d_6(ai1,ai2)
									End Select
								Next
							Next
						Case "7"
							For ai1=LBound(macro_variables_long_array_2d_7) To UBound(macro_variables_long_array_2d_7)
								For ai2=LBound(macro_variables_long_array_2d_7,2) To UBound(macro_variables_long_array_2d_7,2)
									Select Case array_index
										Case "1"
											macro_variables_long_array_2d_1(ai1,ai2)=macro_variables_long_array_2d_7(ai1,ai2)
										Case "2"
											macro_variables_long_array_2d_2(ai1,ai2)=macro_variables_long_array_2d_7(ai1,ai2)
										Case "3"
											macro_variables_long_array_2d_3(ai1,ai2)=macro_variables_long_array_2d_7(ai1,ai2)
										Case "4"
											macro_variables_long_array_2d_4(ai1,ai2)=macro_variables_long_array_2d_7(ai1,ai2)
										Case "5"
											macro_variables_long_array_2d_5(ai1,ai2)=macro_variables_long_array_2d_7(ai1,ai2)
										Case "6"
											macro_variables_long_array_2d_6(ai1,ai2)=macro_variables_long_array_2d_7(ai1,ai2)
										Case "7"
											macro_variables_long_array_2d_7(ai1,ai2)=macro_variables_long_array_2d_7(ai1,ai2)
										Case "8"
											macro_variables_long_array_2d_8(ai1,ai2)=macro_variables_long_array_2d_7(ai1,ai2)
										Case "9"
											macro_variables_long_array_2d_9(ai1,ai2)=macro_variables_long_array_2d_7(ai1,ai2)
									End Select
								Next
							Next
						Case "8"
							For ai1=LBound(macro_variables_long_array_2d_8) To UBound(macro_variables_long_array_2d_8)
								For ai2=LBound(macro_variables_long_array_2d_8,2) To UBound(macro_variables_long_array_2d_8,2)
									Select Case array_index
										Case "1"
											macro_variables_long_array_2d_1(ai1,ai2)=macro_variables_long_array_2d_8(ai1,ai2)
										Case "2"
											macro_variables_long_array_2d_2(ai1,ai2)=macro_variables_long_array_2d_8(ai1,ai2)
										Case "3"
											macro_variables_long_array_2d_3(ai1,ai2)=macro_variables_long_array_2d_8(ai1,ai2)
										Case "4"
											macro_variables_long_array_2d_4(ai1,ai2)=macro_variables_long_array_2d_8(ai1,ai2)
										Case "5"
											macro_variables_long_array_2d_5(ai1,ai2)=macro_variables_long_array_2d_8(ai1,ai2)
										Case "6"
											macro_variables_long_array_2d_6(ai1,ai2)=macro_variables_long_array_2d_8(ai1,ai2)
										Case "7"
											macro_variables_long_array_2d_7(ai1,ai2)=macro_variables_long_array_2d_8(ai1,ai2)
										Case "8"
											macro_variables_long_array_2d_8(ai1,ai2)=macro_variables_long_array_2d_8(ai1,ai2)
										Case "9"
											macro_variables_long_array_2d_9(ai1,ai2)=macro_variables_long_array_2d_8(ai1,ai2)
									End Select
								Next
							Next
						Case "9"
							For ai1=LBound(macro_variables_long_array_2d_9) To UBound(macro_variables_long_array_2d_9)
								For ai2=LBound(macro_variables_long_array_2d_9,2) To UBound(macro_variables_long_array_2d_9,2)
									Select Case array_index
										Case "1"
											macro_variables_long_array_2d_1(ai1,ai2)=macro_variables_long_array_2d_9(ai1,ai2)
										Case "2"
											macro_variables_long_array_2d_2(ai1,ai2)=macro_variables_long_array_2d_9(ai1,ai2)
										Case "3"
											macro_variables_long_array_2d_3(ai1,ai2)=macro_variables_long_array_2d_9(ai1,ai2)
										Case "4"
											macro_variables_long_array_2d_4(ai1,ai2)=macro_variables_long_array_2d_9(ai1,ai2)
										Case "5"
											macro_variables_long_array_2d_5(ai1,ai2)=macro_variables_long_array_2d_9(ai1,ai2)
										Case "6"
											macro_variables_long_array_2d_6(ai1,ai2)=macro_variables_long_array_2d_9(ai1,ai2)
										Case "7"
											macro_variables_long_array_2d_7(ai1,ai2)=macro_variables_long_array_2d_9(ai1,ai2)
										Case "8"
											macro_variables_long_array_2d_8(ai1,ai2)=macro_variables_long_array_2d_9(ai1,ai2)
										Case "9"
											macro_variables_long_array_2d_9(ai1,ai2)=macro_variables_long_array_2d_9(ai1,ai2)
									End Select
								Next
							Next
					End Select
				Case "3d"
					Select Case macro_variables_info(a,3)
						Case "1"
							For ai1=LBound(macro_variables_long_array_3d_1) To UBound(macro_variables_long_array_3d_1)
								For ai2=LBound(macro_variables_long_array_3d_1,2) To UBound(macro_variables_long_array_3d_1,2)
									For ai3=LBound(macro_variables_long_array_3d_1,3) To UBound(macro_variables_long_array_3d_1,3)
										Select Case array_index
											Case "1"
												macro_variables_long_array_3d_1(ai1,ai2,ai3)=macro_variables_long_array_3d_1(ai1,ai2,ai3)
											Case "2"
												macro_variables_long_array_3d_2(ai1,ai2,ai3)=macro_variables_long_array_3d_1(ai1,ai2,ai3)
											Case "3"
												macro_variables_long_array_3d_3(ai1,ai2,ai3)=macro_variables_long_array_3d_1(ai1,ai2,ai3)
											Case "4"
												macro_variables_long_array_3d_4(ai1,ai2,ai3)=macro_variables_long_array_3d_1(ai1,ai2,ai3)
											Case "5"
												macro_variables_long_array_3d_5(ai1,ai2,ai3)=macro_variables_long_array_3d_1(ai1,ai2,ai3)
											Case "6"
												macro_variables_long_array_3d_6(ai1,ai2,ai3)=macro_variables_long_array_3d_1(ai1,ai2,ai3)
											Case "7"
												macro_variables_long_array_3d_7(ai1,ai2,ai3)=macro_variables_long_array_3d_1(ai1,ai2,ai3)
											Case "8"
												macro_variables_long_array_3d_8(ai1,ai2,ai3)=macro_variables_long_array_3d_1(ai1,ai2,ai3)
											Case "9"
												macro_variables_long_array_3d_9(ai1,ai2,ai3)=macro_variables_long_array_3d_1(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "2"
							For ai1=LBound(macro_variables_long_array_3d_2) To UBound(macro_variables_long_array_3d_2)
								For ai2=LBound(macro_variables_long_array_3d_2,2) To UBound(macro_variables_long_array_3d_2,2)
									For ai3=LBound(macro_variables_long_array_3d_2,3) To UBound(macro_variables_long_array_3d_2,3)
										Select Case array_index
											Case "1"
												macro_variables_long_array_3d_1(ai1,ai2,ai3)=macro_variables_long_array_3d_2(ai1,ai2,ai3)
											Case "2"
												macro_variables_long_array_3d_2(ai1,ai2,ai3)=macro_variables_long_array_3d_2(ai1,ai2,ai3)
											Case "3"
												macro_variables_long_array_3d_3(ai1,ai2,ai3)=macro_variables_long_array_3d_2(ai1,ai2,ai3)
											Case "4"
												macro_variables_long_array_3d_4(ai1,ai2,ai3)=macro_variables_long_array_3d_2(ai1,ai2,ai3)
											Case "5"
												macro_variables_long_array_3d_5(ai1,ai2,ai3)=macro_variables_long_array_3d_2(ai1,ai2,ai3)
											Case "6"
												macro_variables_long_array_3d_6(ai1,ai2,ai3)=macro_variables_long_array_3d_2(ai1,ai2,ai3)
											Case "7"
												macro_variables_long_array_3d_7(ai1,ai2,ai3)=macro_variables_long_array_3d_2(ai1,ai2,ai3)
											Case "8"
												macro_variables_long_array_3d_8(ai1,ai2,ai3)=macro_variables_long_array_3d_2(ai1,ai2,ai3)
											Case "9"
												macro_variables_long_array_3d_9(ai1,ai2,ai3)=macro_variables_long_array_3d_2(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "3"
							For ai1=LBound(macro_variables_long_array_3d_3) To UBound(macro_variables_long_array_3d_3)
								For ai2=LBound(macro_variables_long_array_3d_3,2) To UBound(macro_variables_long_array_3d_3,2)
									For ai3=LBound(macro_variables_long_array_3d_3,3) To UBound(macro_variables_long_array_3d_3,3)
										Select Case array_index
											Case "1"
												macro_variables_long_array_3d_1(ai1,ai2,ai3)=macro_variables_long_array_3d_3(ai1,ai2,ai3)
											Case "2"
												macro_variables_long_array_3d_2(ai1,ai2,ai3)=macro_variables_long_array_3d_3(ai1,ai2,ai3)
											Case "3"
												macro_variables_long_array_3d_3(ai1,ai2,ai3)=macro_variables_long_array_3d_3(ai1,ai2,ai3)
											Case "4"
												macro_variables_long_array_3d_4(ai1,ai2,ai3)=macro_variables_long_array_3d_3(ai1,ai2,ai3)
											Case "5"
												macro_variables_long_array_3d_5(ai1,ai2,ai3)=macro_variables_long_array_3d_3(ai1,ai2,ai3)
											Case "6"
												macro_variables_long_array_3d_6(ai1,ai2,ai3)=macro_variables_long_array_3d_3(ai1,ai2,ai3)
											Case "7"
												macro_variables_long_array_3d_7(ai1,ai2,ai3)=macro_variables_long_array_3d_3(ai1,ai2,ai3)
											Case "8"
												macro_variables_long_array_3d_8(ai1,ai2,ai3)=macro_variables_long_array_3d_3(ai1,ai2,ai3)
											Case "9"
												macro_variables_long_array_3d_9(ai1,ai2,ai3)=macro_variables_long_array_3d_3(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "4"
							For ai1=LBound(macro_variables_long_array_3d_4) To UBound(macro_variables_long_array_3d_4)
								For ai2=LBound(macro_variables_long_array_3d_4,2) To UBound(macro_variables_long_array_3d_4,2)
									For ai3=LBound(macro_variables_long_array_3d_4,3) To UBound(macro_variables_long_array_3d_4,3)
										Select Case array_index
											Case "1"
												macro_variables_long_array_3d_1(ai1,ai2,ai3)=macro_variables_long_array_3d_4(ai1,ai2,ai3)
											Case "2"
												macro_variables_long_array_3d_2(ai1,ai2,ai3)=macro_variables_long_array_3d_4(ai1,ai2,ai3)
											Case "3"
												macro_variables_long_array_3d_3(ai1,ai2,ai3)=macro_variables_long_array_3d_4(ai1,ai2,ai3)
											Case "4"
												macro_variables_long_array_3d_4(ai1,ai2,ai3)=macro_variables_long_array_3d_4(ai1,ai2,ai3)
											Case "5"
												macro_variables_long_array_3d_5(ai1,ai2,ai3)=macro_variables_long_array_3d_4(ai1,ai2,ai3)
											Case "6"
												macro_variables_long_array_3d_6(ai1,ai2,ai3)=macro_variables_long_array_3d_4(ai1,ai2,ai3)
											Case "7"
												macro_variables_long_array_3d_7(ai1,ai2,ai3)=macro_variables_long_array_3d_4(ai1,ai2,ai3)
											Case "8"
												macro_variables_long_array_3d_8(ai1,ai2,ai3)=macro_variables_long_array_3d_4(ai1,ai2,ai3)
											Case "9"
												macro_variables_long_array_3d_9(ai1,ai2,ai3)=macro_variables_long_array_3d_4(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "5"
							For ai1=LBound(macro_variables_long_array_3d_5) To UBound(macro_variables_long_array_3d_5)
								For ai2=LBound(macro_variables_long_array_3d_5,2) To UBound(macro_variables_long_array_3d_5,2)
									For ai3=LBound(macro_variables_long_array_3d_5,3) To UBound(macro_variables_long_array_3d_5,3)
										Select Case array_index
											Case "1"
												macro_variables_long_array_3d_1(ai1,ai2,ai3)=macro_variables_long_array_3d_5(ai1,ai2,ai3)
											Case "2"
												macro_variables_long_array_3d_2(ai1,ai2,ai3)=macro_variables_long_array_3d_5(ai1,ai2,ai3)
											Case "3"
												macro_variables_long_array_3d_3(ai1,ai2,ai3)=macro_variables_long_array_3d_5(ai1,ai2,ai3)
											Case "4"
												macro_variables_long_array_3d_4(ai1,ai2,ai3)=macro_variables_long_array_3d_5(ai1,ai2,ai3)
											Case "5"
												macro_variables_long_array_3d_5(ai1,ai2,ai3)=macro_variables_long_array_3d_5(ai1,ai2,ai3)
											Case "6"
												macro_variables_long_array_3d_6(ai1,ai2,ai3)=macro_variables_long_array_3d_5(ai1,ai2,ai3)
											Case "7"
												macro_variables_long_array_3d_7(ai1,ai2,ai3)=macro_variables_long_array_3d_5(ai1,ai2,ai3)
											Case "8"
												macro_variables_long_array_3d_8(ai1,ai2,ai3)=macro_variables_long_array_3d_5(ai1,ai2,ai3)
											Case "9"
												macro_variables_long_array_3d_9(ai1,ai2,ai3)=macro_variables_long_array_3d_5(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "6"
							For ai1=LBound(macro_variables_long_array_3d_6) To UBound(macro_variables_long_array_3d_6)
								For ai2=LBound(macro_variables_long_array_3d_6,2) To UBound(macro_variables_long_array_3d_6,2)
									For ai3=LBound(macro_variables_long_array_3d_6,3) To UBound(macro_variables_long_array_3d_6,3)
										Select Case array_index
											Case "1"
												macro_variables_long_array_3d_1(ai1,ai2,ai3)=macro_variables_long_array_3d_6(ai1,ai2,ai3)
											Case "2"
												macro_variables_long_array_3d_2(ai1,ai2,ai3)=macro_variables_long_array_3d_6(ai1,ai2,ai3)
											Case "3"
												macro_variables_long_array_3d_3(ai1,ai2,ai3)=macro_variables_long_array_3d_6(ai1,ai2,ai3)
											Case "4"
												macro_variables_long_array_3d_4(ai1,ai2,ai3)=macro_variables_long_array_3d_6(ai1,ai2,ai3)
											Case "5"
												macro_variables_long_array_3d_5(ai1,ai2,ai3)=macro_variables_long_array_3d_6(ai1,ai2,ai3)
											Case "6"
												macro_variables_long_array_3d_6(ai1,ai2,ai3)=macro_variables_long_array_3d_6(ai1,ai2,ai3)
											Case "7"
												macro_variables_long_array_3d_7(ai1,ai2,ai3)=macro_variables_long_array_3d_6(ai1,ai2,ai3)
											Case "8"
												macro_variables_long_array_3d_8(ai1,ai2,ai3)=macro_variables_long_array_3d_6(ai1,ai2,ai3)
											Case "9"
												macro_variables_long_array_3d_9(ai1,ai2,ai3)=macro_variables_long_array_3d_6(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "7"
							For ai1=LBound(macro_variables_long_array_3d_7) To UBound(macro_variables_long_array_3d_7)
								For ai2=LBound(macro_variables_long_array_3d_7,2) To UBound(macro_variables_long_array_3d_7,2)
									For ai3=LBound(macro_variables_long_array_3d_7,3) To UBound(macro_variables_long_array_3d_7,3)
										Select Case array_index
											Case "1"
												macro_variables_long_array_3d_1(ai1,ai2,ai3)=macro_variables_long_array_3d_7(ai1,ai2,ai3)
											Case "2"
												macro_variables_long_array_3d_2(ai1,ai2,ai3)=macro_variables_long_array_3d_7(ai1,ai2,ai3)
											Case "3"
												macro_variables_long_array_3d_3(ai1,ai2,ai3)=macro_variables_long_array_3d_7(ai1,ai2,ai3)
											Case "4"
												macro_variables_long_array_3d_4(ai1,ai2,ai3)=macro_variables_long_array_3d_7(ai1,ai2,ai3)
											Case "5"
												macro_variables_long_array_3d_5(ai1,ai2,ai3)=macro_variables_long_array_3d_7(ai1,ai2,ai3)
											Case "6"
												macro_variables_long_array_3d_6(ai1,ai2,ai3)=macro_variables_long_array_3d_7(ai1,ai2,ai3)
											Case "7"
												macro_variables_long_array_3d_7(ai1,ai2,ai3)=macro_variables_long_array_3d_7(ai1,ai2,ai3)
											Case "8"
												macro_variables_long_array_3d_8(ai1,ai2,ai3)=macro_variables_long_array_3d_7(ai1,ai2,ai3)
											Case "9"
												macro_variables_long_array_3d_9(ai1,ai2,ai3)=macro_variables_long_array_3d_7(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "8"
							For ai1=LBound(macro_variables_long_array_3d_8) To UBound(macro_variables_long_array_3d_8)
								For ai2=LBound(macro_variables_long_array_3d_8,2) To UBound(macro_variables_long_array_3d_8,2)
									For ai3=LBound(macro_variables_long_array_3d_8,3) To UBound(macro_variables_long_array_3d_8,3)
										Select Case array_index
											Case "1"
												macro_variables_long_array_3d_1(ai1,ai2,ai3)=macro_variables_long_array_3d_8(ai1,ai2,ai3)
											Case "2"
												macro_variables_long_array_3d_2(ai1,ai2,ai3)=macro_variables_long_array_3d_8(ai1,ai2,ai3)
											Case "3"
												macro_variables_long_array_3d_3(ai1,ai2,ai3)=macro_variables_long_array_3d_8(ai1,ai2,ai3)
											Case "4"
												macro_variables_long_array_3d_4(ai1,ai2,ai3)=macro_variables_long_array_3d_8(ai1,ai2,ai3)
											Case "5"
												macro_variables_long_array_3d_5(ai1,ai2,ai3)=macro_variables_long_array_3d_8(ai1,ai2,ai3)
											Case "6"
												macro_variables_long_array_3d_6(ai1,ai2,ai3)=macro_variables_long_array_3d_8(ai1,ai2,ai3)
											Case "7"
												macro_variables_long_array_3d_7(ai1,ai2,ai3)=macro_variables_long_array_3d_8(ai1,ai2,ai3)
											Case "8"
												macro_variables_long_array_3d_8(ai1,ai2,ai3)=macro_variables_long_array_3d_8(ai1,ai2,ai3)
											Case "9"
												macro_variables_long_array_3d_9(ai1,ai2,ai3)=macro_variables_long_array_3d_8(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "9"
							For ai1=LBound(macro_variables_long_array_3d_9) To UBound(macro_variables_long_array_3d_9)
								For ai2=LBound(macro_variables_long_array_3d_9,2) To UBound(macro_variables_long_array_3d_9,2)
									For ai3=LBound(macro_variables_long_array_3d_9,3) To UBound(macro_variables_long_array_3d_9,3)
										Select Case array_index
											Case "1"
												macro_variables_long_array_3d_1(ai1,ai2,ai3)=macro_variables_long_array_3d_9(ai1,ai2,ai3)
											Case "2"
												macro_variables_long_array_3d_2(ai1,ai2,ai3)=macro_variables_long_array_3d_9(ai1,ai2,ai3)
											Case "3"
												macro_variables_long_array_3d_3(ai1,ai2,ai3)=macro_variables_long_array_3d_9(ai1,ai2,ai3)
											Case "4"
												macro_variables_long_array_3d_4(ai1,ai2,ai3)=macro_variables_long_array_3d_9(ai1,ai2,ai3)
											Case "5"
												macro_variables_long_array_3d_5(ai1,ai2,ai3)=macro_variables_long_array_3d_9(ai1,ai2,ai3)
											Case "6"
												macro_variables_long_array_3d_6(ai1,ai2,ai3)=macro_variables_long_array_3d_9(ai1,ai2,ai3)
											Case "7"
												macro_variables_long_array_3d_7(ai1,ai2,ai3)=macro_variables_long_array_3d_9(ai1,ai2,ai3)
											Case "8"
												macro_variables_long_array_3d_8(ai1,ai2,ai3)=macro_variables_long_array_3d_9(ai1,ai2,ai3)
											Case "9"
												macro_variables_long_array_3d_9(ai1,ai2,ai3)=macro_variables_long_array_3d_9(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
					End Select
			End Select
		Case "ULONG_ARRAY"
			Select Case macro_variables_info(a,5)
				Case "1d"
					Select Case macro_variables_info(a,3)
						Case "1"
							For ai1=LBound(macro_variables_ulong_array_1d_1) To UBound(macro_variables_ulong_array_1d_1)
								Select Case array_index
									Case "1"
										macro_variables_ulong_array_1d_1(ai1)=macro_variables_ulong_array_1d_1(ai1)
									Case "2"
										macro_variables_ulong_array_1d_2(ai1)=macro_variables_ulong_array_1d_1(ai1)
									Case "3"
										macro_variables_ulong_array_1d_3(ai1)=macro_variables_ulong_array_1d_1(ai1)
									Case "4"
										macro_variables_ulong_array_1d_4(ai1)=macro_variables_ulong_array_1d_1(ai1)
									Case "5"
										macro_variables_ulong_array_1d_5(ai1)=macro_variables_ulong_array_1d_1(ai1)
									Case "6"
										macro_variables_ulong_array_1d_6(ai1)=macro_variables_ulong_array_1d_1(ai1)
									Case "7"
										macro_variables_ulong_array_1d_7(ai1)=macro_variables_ulong_array_1d_1(ai1)
									Case "8"
										macro_variables_ulong_array_1d_8(ai1)=macro_variables_ulong_array_1d_1(ai1)
									Case "9"
										macro_variables_ulong_array_1d_9(ai1)=macro_variables_ulong_array_1d_1(ai1)
								End Select
							Next
						Case "2"
							For ai1=LBound(macro_variables_ulong_array_1d_2) To UBound(macro_variables_ulong_array_1d_2)
								Select Case array_index
									Case "1"
										macro_variables_ulong_array_1d_1(ai1)=macro_variables_ulong_array_1d_2(ai1)
									Case "2"
										macro_variables_ulong_array_1d_2(ai1)=macro_variables_ulong_array_1d_2(ai1)
									Case "3"
										macro_variables_ulong_array_1d_3(ai1)=macro_variables_ulong_array_1d_2(ai1)
									Case "4"
										macro_variables_ulong_array_1d_4(ai1)=macro_variables_ulong_array_1d_2(ai1)
									Case "5"
										macro_variables_ulong_array_1d_5(ai1)=macro_variables_ulong_array_1d_2(ai1)
									Case "6"
										macro_variables_ulong_array_1d_6(ai1)=macro_variables_ulong_array_1d_2(ai1)
									Case "7"
										macro_variables_ulong_array_1d_7(ai1)=macro_variables_ulong_array_1d_2(ai1)
									Case "8"
										macro_variables_ulong_array_1d_8(ai1)=macro_variables_ulong_array_1d_2(ai1)
									Case "9"
										macro_variables_ulong_array_1d_9(ai1)=macro_variables_ulong_array_1d_2(ai1)
								End Select
							Next
						Case "3"
							For ai1=LBound(macro_variables_ulong_array_1d_3) To UBound(macro_variables_ulong_array_1d_3)
								Select Case array_index
									Case "1"
										macro_variables_ulong_array_1d_1(ai1)=macro_variables_ulong_array_1d_3(ai1)
									Case "2"
										macro_variables_ulong_array_1d_2(ai1)=macro_variables_ulong_array_1d_3(ai1)
									Case "3"
										macro_variables_ulong_array_1d_3(ai1)=macro_variables_ulong_array_1d_3(ai1)
									Case "4"
										macro_variables_ulong_array_1d_4(ai1)=macro_variables_ulong_array_1d_3(ai1)
									Case "5"
										macro_variables_ulong_array_1d_5(ai1)=macro_variables_ulong_array_1d_3(ai1)
									Case "6"
										macro_variables_ulong_array_1d_6(ai1)=macro_variables_ulong_array_1d_3(ai1)
									Case "7"
										macro_variables_ulong_array_1d_7(ai1)=macro_variables_ulong_array_1d_3(ai1)
									Case "8"
										macro_variables_ulong_array_1d_8(ai1)=macro_variables_ulong_array_1d_3(ai1)
									Case "9"
										macro_variables_ulong_array_1d_9(ai1)=macro_variables_ulong_array_1d_3(ai1)
								End Select
							Next
						Case "4"
							For ai1=LBound(macro_variables_ulong_array_1d_4) To UBound(macro_variables_ulong_array_1d_4)
								Select Case array_index
									Case "1"
										macro_variables_ulong_array_1d_1(ai1)=macro_variables_ulong_array_1d_4(ai1)
									Case "2"
										macro_variables_ulong_array_1d_2(ai1)=macro_variables_ulong_array_1d_4(ai1)
									Case "3"
										macro_variables_ulong_array_1d_3(ai1)=macro_variables_ulong_array_1d_4(ai1)
									Case "4"
										macro_variables_ulong_array_1d_4(ai1)=macro_variables_ulong_array_1d_4(ai1)
									Case "5"
										macro_variables_ulong_array_1d_5(ai1)=macro_variables_ulong_array_1d_4(ai1)
									Case "6"
										macro_variables_ulong_array_1d_6(ai1)=macro_variables_ulong_array_1d_4(ai1)
									Case "7"
										macro_variables_ulong_array_1d_7(ai1)=macro_variables_ulong_array_1d_4(ai1)
									Case "8"
										macro_variables_ulong_array_1d_8(ai1)=macro_variables_ulong_array_1d_4(ai1)
									Case "9"
										macro_variables_ulong_array_1d_9(ai1)=macro_variables_ulong_array_1d_4(ai1)
								End Select
							Next
						Case "5"
							For ai1=LBound(macro_variables_ulong_array_1d_5) To UBound(macro_variables_ulong_array_1d_5)
								Select Case array_index
									Case "1"
										macro_variables_ulong_array_1d_1(ai1)=macro_variables_ulong_array_1d_5(ai1)
									Case "2"
										macro_variables_ulong_array_1d_2(ai1)=macro_variables_ulong_array_1d_5(ai1)
									Case "3"
										macro_variables_ulong_array_1d_3(ai1)=macro_variables_ulong_array_1d_5(ai1)
									Case "4"
										macro_variables_ulong_array_1d_4(ai1)=macro_variables_ulong_array_1d_5(ai1)
									Case "5"
										macro_variables_ulong_array_1d_5(ai1)=macro_variables_ulong_array_1d_5(ai1)
									Case "6"
										macro_variables_ulong_array_1d_6(ai1)=macro_variables_ulong_array_1d_5(ai1)
									Case "7"
										macro_variables_ulong_array_1d_7(ai1)=macro_variables_ulong_array_1d_5(ai1)
									Case "8"
										macro_variables_ulong_array_1d_8(ai1)=macro_variables_ulong_array_1d_5(ai1)
									Case "9"
										macro_variables_ulong_array_1d_9(ai1)=macro_variables_ulong_array_1d_5(ai1)
								End Select
							Next
						Case "6"
							For ai1=LBound(macro_variables_ulong_array_1d_6) To UBound(macro_variables_ulong_array_1d_6)
								Select Case array_index
									Case "1"
										macro_variables_ulong_array_1d_1(ai1)=macro_variables_ulong_array_1d_6(ai1)
									Case "2"
										macro_variables_ulong_array_1d_2(ai1)=macro_variables_ulong_array_1d_6(ai1)
									Case "3"
										macro_variables_ulong_array_1d_3(ai1)=macro_variables_ulong_array_1d_6(ai1)
									Case "4"
										macro_variables_ulong_array_1d_4(ai1)=macro_variables_ulong_array_1d_6(ai1)
									Case "5"
										macro_variables_ulong_array_1d_5(ai1)=macro_variables_ulong_array_1d_6(ai1)
									Case "6"
										macro_variables_ulong_array_1d_6(ai1)=macro_variables_ulong_array_1d_6(ai1)
									Case "7"
										macro_variables_ulong_array_1d_7(ai1)=macro_variables_ulong_array_1d_6(ai1)
									Case "8"
										macro_variables_ulong_array_1d_8(ai1)=macro_variables_ulong_array_1d_6(ai1)
									Case "9"
										macro_variables_ulong_array_1d_9(ai1)=macro_variables_ulong_array_1d_6(ai1)
								End Select
							Next
						Case "7"
							For ai1=LBound(macro_variables_ulong_array_1d_7) To UBound(macro_variables_ulong_array_1d_7)
								Select Case array_index
									Case "1"
										macro_variables_ulong_array_1d_1(ai1)=macro_variables_ulong_array_1d_7(ai1)
									Case "2"
										macro_variables_ulong_array_1d_2(ai1)=macro_variables_ulong_array_1d_7(ai1)
									Case "3"
										macro_variables_ulong_array_1d_3(ai1)=macro_variables_ulong_array_1d_7(ai1)
									Case "4"
										macro_variables_ulong_array_1d_4(ai1)=macro_variables_ulong_array_1d_7(ai1)
									Case "5"
										macro_variables_ulong_array_1d_5(ai1)=macro_variables_ulong_array_1d_7(ai1)
									Case "6"
										macro_variables_ulong_array_1d_6(ai1)=macro_variables_ulong_array_1d_7(ai1)
									Case "7"
										macro_variables_ulong_array_1d_7(ai1)=macro_variables_ulong_array_1d_7(ai1)
									Case "8"
										macro_variables_ulong_array_1d_8(ai1)=macro_variables_ulong_array_1d_7(ai1)
									Case "9"
										macro_variables_ulong_array_1d_9(ai1)=macro_variables_ulong_array_1d_7(ai1)
								End Select
							Next
						Case "8"
							For ai1=LBound(macro_variables_ulong_array_1d_8) To UBound(macro_variables_ulong_array_1d_8)
								Select Case array_index
									Case "1"
										macro_variables_ulong_array_1d_1(ai1)=macro_variables_ulong_array_1d_8(ai1)
									Case "2"
										macro_variables_ulong_array_1d_2(ai1)=macro_variables_ulong_array_1d_8(ai1)
									Case "3"
										macro_variables_ulong_array_1d_3(ai1)=macro_variables_ulong_array_1d_8(ai1)
									Case "4"
										macro_variables_ulong_array_1d_4(ai1)=macro_variables_ulong_array_1d_8(ai1)
									Case "5"
										macro_variables_ulong_array_1d_5(ai1)=macro_variables_ulong_array_1d_8(ai1)
									Case "6"
										macro_variables_ulong_array_1d_6(ai1)=macro_variables_ulong_array_1d_8(ai1)
									Case "7"
										macro_variables_ulong_array_1d_7(ai1)=macro_variables_ulong_array_1d_8(ai1)
									Case "8"
										macro_variables_ulong_array_1d_8(ai1)=macro_variables_ulong_array_1d_8(ai1)
									Case "9"
										macro_variables_ulong_array_1d_9(ai1)=macro_variables_ulong_array_1d_8(ai1)
								End Select
							Next
						Case "9"
							For ai1=LBound(macro_variables_ulong_array_1d_9) To UBound(macro_variables_ulong_array_1d_9)
								Select Case array_index
									Case "1"
										macro_variables_ulong_array_1d_1(ai1)=macro_variables_ulong_array_1d_9(ai1)
									Case "2"
										macro_variables_ulong_array_1d_2(ai1)=macro_variables_ulong_array_1d_9(ai1)
									Case "3"
										macro_variables_ulong_array_1d_3(ai1)=macro_variables_ulong_array_1d_9(ai1)
									Case "4"
										macro_variables_ulong_array_1d_4(ai1)=macro_variables_ulong_array_1d_9(ai1)
									Case "5"
										macro_variables_ulong_array_1d_5(ai1)=macro_variables_ulong_array_1d_9(ai1)
									Case "6"
										macro_variables_ulong_array_1d_6(ai1)=macro_variables_ulong_array_1d_9(ai1)
									Case "7"
										macro_variables_ulong_array_1d_7(ai1)=macro_variables_ulong_array_1d_9(ai1)
									Case "8"
										macro_variables_ulong_array_1d_8(ai1)=macro_variables_ulong_array_1d_9(ai1)
									Case "9"
										macro_variables_ulong_array_1d_9(ai1)=macro_variables_ulong_array_1d_9(ai1)
								End Select
							Next
					End Select
				Case "2d"
					Select Case macro_variables_info(a,3)
						Case "1"
							For ai1=LBound(macro_variables_ulong_array_2d_1) To UBound(macro_variables_ulong_array_2d_1)
								For ai2=LBound(macro_variables_ulong_array_2d_1,2) To UBound(macro_variables_ulong_array_2d_1,2)
									Select Case array_index
										Case "1"
											macro_variables_ulong_array_2d_1(ai1,ai2)=macro_variables_ulong_array_2d_1(ai1,ai2)
										Case "2"
											macro_variables_ulong_array_2d_2(ai1,ai2)=macro_variables_ulong_array_2d_1(ai1,ai2)
										Case "3"
											macro_variables_ulong_array_2d_3(ai1,ai2)=macro_variables_ulong_array_2d_1(ai1,ai2)
										Case "4"
											macro_variables_ulong_array_2d_4(ai1,ai2)=macro_variables_ulong_array_2d_1(ai1,ai2)
										Case "5"
											macro_variables_ulong_array_2d_5(ai1,ai2)=macro_variables_ulong_array_2d_1(ai1,ai2)
										Case "6"
											macro_variables_ulong_array_2d_6(ai1,ai2)=macro_variables_ulong_array_2d_1(ai1,ai2)
										Case "7"
											macro_variables_ulong_array_2d_7(ai1,ai2)=macro_variables_ulong_array_2d_1(ai1,ai2)
										Case "8"
											macro_variables_ulong_array_2d_8(ai1,ai2)=macro_variables_ulong_array_2d_1(ai1,ai2)
										Case "9"
											macro_variables_ulong_array_2d_9(ai1,ai2)=macro_variables_ulong_array_2d_1(ai1,ai2)
									End Select
								Next
							Next
						Case "2"
							For ai1=LBound(macro_variables_ulong_array_2d_2) To UBound(macro_variables_ulong_array_2d_2)
								For ai2=LBound(macro_variables_ulong_array_2d_2,2) To UBound(macro_variables_ulong_array_2d_2,2)
									Select Case array_index
										Case "1"
											macro_variables_ulong_array_2d_1(ai1,ai2)=macro_variables_ulong_array_2d_2(ai1,ai2)
										Case "2"
											macro_variables_ulong_array_2d_2(ai1,ai2)=macro_variables_ulong_array_2d_2(ai1,ai2)
										Case "3"
											macro_variables_ulong_array_2d_3(ai1,ai2)=macro_variables_ulong_array_2d_2(ai1,ai2)
										Case "4"
											macro_variables_ulong_array_2d_4(ai1,ai2)=macro_variables_ulong_array_2d_2(ai1,ai2)
										Case "5"
											macro_variables_ulong_array_2d_5(ai1,ai2)=macro_variables_ulong_array_2d_2(ai1,ai2)
										Case "6"
											macro_variables_ulong_array_2d_6(ai1,ai2)=macro_variables_ulong_array_2d_2(ai1,ai2)
										Case "7"
											macro_variables_ulong_array_2d_7(ai1,ai2)=macro_variables_ulong_array_2d_2(ai1,ai2)
										Case "8"
											macro_variables_ulong_array_2d_8(ai1,ai2)=macro_variables_ulong_array_2d_2(ai1,ai2)
										Case "9"
											macro_variables_ulong_array_2d_9(ai1,ai2)=macro_variables_ulong_array_2d_2(ai1,ai2)
									End Select
								Next
							Next
						Case "3"
							For ai1=LBound(macro_variables_ulong_array_2d_3) To UBound(macro_variables_ulong_array_2d_3)
								For ai2=LBound(macro_variables_ulong_array_2d_3,2) To UBound(macro_variables_ulong_array_2d_3,2)
									Select Case array_index
										Case "1"
											macro_variables_ulong_array_2d_1(ai1,ai2)=macro_variables_ulong_array_2d_3(ai1,ai2)
										Case "2"
											macro_variables_ulong_array_2d_2(ai1,ai2)=macro_variables_ulong_array_2d_3(ai1,ai2)
										Case "3"
											macro_variables_ulong_array_2d_3(ai1,ai2)=macro_variables_ulong_array_2d_3(ai1,ai2)
										Case "4"
											macro_variables_ulong_array_2d_4(ai1,ai2)=macro_variables_ulong_array_2d_3(ai1,ai2)
										Case "5"
											macro_variables_ulong_array_2d_5(ai1,ai2)=macro_variables_ulong_array_2d_3(ai1,ai2)
										Case "6"
											macro_variables_ulong_array_2d_6(ai1,ai2)=macro_variables_ulong_array_2d_3(ai1,ai2)
										Case "7"
											macro_variables_ulong_array_2d_7(ai1,ai2)=macro_variables_ulong_array_2d_3(ai1,ai2)
										Case "8"
											macro_variables_ulong_array_2d_8(ai1,ai2)=macro_variables_ulong_array_2d_3(ai1,ai2)
										Case "9"
											macro_variables_ulong_array_2d_9(ai1,ai2)=macro_variables_ulong_array_2d_3(ai1,ai2)
									End Select
								Next
							Next
						Case "4"
							For ai1=LBound(macro_variables_ulong_array_2d_4) To UBound(macro_variables_ulong_array_2d_4)
								For ai2=LBound(macro_variables_ulong_array_2d_4,2) To UBound(macro_variables_ulong_array_2d_4,2)
									Select Case array_index
										Case "1"
											macro_variables_ulong_array_2d_1(ai1,ai2)=macro_variables_ulong_array_2d_4(ai1,ai2)
										Case "2"
											macro_variables_ulong_array_2d_2(ai1,ai2)=macro_variables_ulong_array_2d_4(ai1,ai2)
										Case "3"
											macro_variables_ulong_array_2d_3(ai1,ai2)=macro_variables_ulong_array_2d_4(ai1,ai2)
										Case "4"
											macro_variables_ulong_array_2d_4(ai1,ai2)=macro_variables_ulong_array_2d_4(ai1,ai2)
										Case "5"
											macro_variables_ulong_array_2d_5(ai1,ai2)=macro_variables_ulong_array_2d_4(ai1,ai2)
										Case "6"
											macro_variables_ulong_array_2d_6(ai1,ai2)=macro_variables_ulong_array_2d_4(ai1,ai2)
										Case "7"
											macro_variables_ulong_array_2d_7(ai1,ai2)=macro_variables_ulong_array_2d_4(ai1,ai2)
										Case "8"
											macro_variables_ulong_array_2d_8(ai1,ai2)=macro_variables_ulong_array_2d_4(ai1,ai2)
										Case "9"
											macro_variables_ulong_array_2d_9(ai1,ai2)=macro_variables_ulong_array_2d_4(ai1,ai2)
									End Select
								Next
							Next
						Case "5"
							For ai1=LBound(macro_variables_ulong_array_2d_5) To UBound(macro_variables_ulong_array_2d_5)
								For ai2=LBound(macro_variables_ulong_array_2d_5,2) To UBound(macro_variables_ulong_array_2d_5,2)
									Select Case array_index
										Case "1"
											macro_variables_ulong_array_2d_1(ai1,ai2)=macro_variables_ulong_array_2d_5(ai1,ai2)
										Case "2"
											macro_variables_ulong_array_2d_2(ai1,ai2)=macro_variables_ulong_array_2d_5(ai1,ai2)
										Case "3"
											macro_variables_ulong_array_2d_3(ai1,ai2)=macro_variables_ulong_array_2d_5(ai1,ai2)
										Case "4"
											macro_variables_ulong_array_2d_4(ai1,ai2)=macro_variables_ulong_array_2d_5(ai1,ai2)
										Case "5"
											macro_variables_ulong_array_2d_5(ai1,ai2)=macro_variables_ulong_array_2d_5(ai1,ai2)
										Case "6"
											macro_variables_ulong_array_2d_6(ai1,ai2)=macro_variables_ulong_array_2d_5(ai1,ai2)
										Case "7"
											macro_variables_ulong_array_2d_7(ai1,ai2)=macro_variables_ulong_array_2d_5(ai1,ai2)
										Case "8"
											macro_variables_ulong_array_2d_8(ai1,ai2)=macro_variables_ulong_array_2d_5(ai1,ai2)
										Case "9"
											macro_variables_ulong_array_2d_9(ai1,ai2)=macro_variables_ulong_array_2d_5(ai1,ai2)
									End Select
								Next
							Next
						Case "6"
							For ai1=LBound(macro_variables_ulong_array_2d_6) To UBound(macro_variables_ulong_array_2d_6)
								For ai2=LBound(macro_variables_ulong_array_2d_6,2) To UBound(macro_variables_ulong_array_2d_6,2)
									Select Case array_index
										Case "1"
											macro_variables_ulong_array_2d_1(ai1,ai2)=macro_variables_ulong_array_2d_6(ai1,ai2)
										Case "2"
											macro_variables_ulong_array_2d_2(ai1,ai2)=macro_variables_ulong_array_2d_6(ai1,ai2)
										Case "3"
											macro_variables_ulong_array_2d_3(ai1,ai2)=macro_variables_ulong_array_2d_6(ai1,ai2)
										Case "4"
											macro_variables_ulong_array_2d_4(ai1,ai2)=macro_variables_ulong_array_2d_6(ai1,ai2)
										Case "5"
											macro_variables_ulong_array_2d_5(ai1,ai2)=macro_variables_ulong_array_2d_6(ai1,ai2)
										Case "6"
											macro_variables_ulong_array_2d_6(ai1,ai2)=macro_variables_ulong_array_2d_6(ai1,ai2)
										Case "7"
											macro_variables_ulong_array_2d_7(ai1,ai2)=macro_variables_ulong_array_2d_6(ai1,ai2)
										Case "8"
											macro_variables_ulong_array_2d_8(ai1,ai2)=macro_variables_ulong_array_2d_6(ai1,ai2)
										Case "9"
											macro_variables_ulong_array_2d_9(ai1,ai2)=macro_variables_ulong_array_2d_6(ai1,ai2)
									End Select
								Next
							Next
						Case "7"
							For ai1=LBound(macro_variables_ulong_array_2d_7) To UBound(macro_variables_ulong_array_2d_7)
								For ai2=LBound(macro_variables_ulong_array_2d_7,2) To UBound(macro_variables_ulong_array_2d_7,2)
									Select Case array_index
										Case "1"
											macro_variables_ulong_array_2d_1(ai1,ai2)=macro_variables_ulong_array_2d_7(ai1,ai2)
										Case "2"
											macro_variables_ulong_array_2d_2(ai1,ai2)=macro_variables_ulong_array_2d_7(ai1,ai2)
										Case "3"
											macro_variables_ulong_array_2d_3(ai1,ai2)=macro_variables_ulong_array_2d_7(ai1,ai2)
										Case "4"
											macro_variables_ulong_array_2d_4(ai1,ai2)=macro_variables_ulong_array_2d_7(ai1,ai2)
										Case "5"
											macro_variables_ulong_array_2d_5(ai1,ai2)=macro_variables_ulong_array_2d_7(ai1,ai2)
										Case "6"
											macro_variables_ulong_array_2d_6(ai1,ai2)=macro_variables_ulong_array_2d_7(ai1,ai2)
										Case "7"
											macro_variables_ulong_array_2d_7(ai1,ai2)=macro_variables_ulong_array_2d_7(ai1,ai2)
										Case "8"
											macro_variables_ulong_array_2d_8(ai1,ai2)=macro_variables_ulong_array_2d_7(ai1,ai2)
										Case "9"
											macro_variables_ulong_array_2d_9(ai1,ai2)=macro_variables_ulong_array_2d_7(ai1,ai2)
									End Select
								Next
							Next
						Case "8"
							For ai1=LBound(macro_variables_ulong_array_2d_8) To UBound(macro_variables_ulong_array_2d_8)
								For ai2=LBound(macro_variables_ulong_array_2d_8,2) To UBound(macro_variables_ulong_array_2d_8,2)
									Select Case array_index
										Case "1"
											macro_variables_ulong_array_2d_1(ai1,ai2)=macro_variables_ulong_array_2d_8(ai1,ai2)
										Case "2"
											macro_variables_ulong_array_2d_2(ai1,ai2)=macro_variables_ulong_array_2d_8(ai1,ai2)
										Case "3"
											macro_variables_ulong_array_2d_3(ai1,ai2)=macro_variables_ulong_array_2d_8(ai1,ai2)
										Case "4"
											macro_variables_ulong_array_2d_4(ai1,ai2)=macro_variables_ulong_array_2d_8(ai1,ai2)
										Case "5"
											macro_variables_ulong_array_2d_5(ai1,ai2)=macro_variables_ulong_array_2d_8(ai1,ai2)
										Case "6"
											macro_variables_ulong_array_2d_6(ai1,ai2)=macro_variables_ulong_array_2d_8(ai1,ai2)
										Case "7"
											macro_variables_ulong_array_2d_7(ai1,ai2)=macro_variables_ulong_array_2d_8(ai1,ai2)
										Case "8"
											macro_variables_ulong_array_2d_8(ai1,ai2)=macro_variables_ulong_array_2d_8(ai1,ai2)
										Case "9"
											macro_variables_ulong_array_2d_9(ai1,ai2)=macro_variables_ulong_array_2d_8(ai1,ai2)
									End Select
								Next
							Next
						Case "9"
							For ai1=LBound(macro_variables_ulong_array_2d_9) To UBound(macro_variables_ulong_array_2d_9)
								For ai2=LBound(macro_variables_ulong_array_2d_9,2) To UBound(macro_variables_ulong_array_2d_9,2)
									Select Case array_index
										Case "1"
											macro_variables_ulong_array_2d_1(ai1,ai2)=macro_variables_ulong_array_2d_9(ai1,ai2)
										Case "2"
											macro_variables_ulong_array_2d_2(ai1,ai2)=macro_variables_ulong_array_2d_9(ai1,ai2)
										Case "3"
											macro_variables_ulong_array_2d_3(ai1,ai2)=macro_variables_ulong_array_2d_9(ai1,ai2)
										Case "4"
											macro_variables_ulong_array_2d_4(ai1,ai2)=macro_variables_ulong_array_2d_9(ai1,ai2)
										Case "5"
											macro_variables_ulong_array_2d_5(ai1,ai2)=macro_variables_ulong_array_2d_9(ai1,ai2)
										Case "6"
											macro_variables_ulong_array_2d_6(ai1,ai2)=macro_variables_ulong_array_2d_9(ai1,ai2)
										Case "7"
											macro_variables_ulong_array_2d_7(ai1,ai2)=macro_variables_ulong_array_2d_9(ai1,ai2)
										Case "8"
											macro_variables_ulong_array_2d_8(ai1,ai2)=macro_variables_ulong_array_2d_9(ai1,ai2)
										Case "9"
											macro_variables_ulong_array_2d_9(ai1,ai2)=macro_variables_ulong_array_2d_9(ai1,ai2)
									End Select
								Next
							Next
					End Select
				Case "3d"
					Select Case macro_variables_info(a,3)
						Case "1"
							For ai1=LBound(macro_variables_ulong_array_3d_1) To UBound(macro_variables_ulong_array_3d_1)
								For ai2=LBound(macro_variables_ulong_array_3d_1,2) To UBound(macro_variables_ulong_array_3d_1,2)
									For ai3=LBound(macro_variables_ulong_array_3d_1,3) To UBound(macro_variables_ulong_array_3d_1,3)
										Select Case array_index
											Case "1"
												macro_variables_ulong_array_3d_1(ai1,ai2,ai3)=macro_variables_ulong_array_3d_1(ai1,ai2,ai3)
											Case "2"
												macro_variables_ulong_array_3d_2(ai1,ai2,ai3)=macro_variables_ulong_array_3d_1(ai1,ai2,ai3)
											Case "3"
												macro_variables_ulong_array_3d_3(ai1,ai2,ai3)=macro_variables_ulong_array_3d_1(ai1,ai2,ai3)
											Case "4"
												macro_variables_ulong_array_3d_4(ai1,ai2,ai3)=macro_variables_ulong_array_3d_1(ai1,ai2,ai3)
											Case "5"
												macro_variables_ulong_array_3d_5(ai1,ai2,ai3)=macro_variables_ulong_array_3d_1(ai1,ai2,ai3)
											Case "6"
												macro_variables_ulong_array_3d_6(ai1,ai2,ai3)=macro_variables_ulong_array_3d_1(ai1,ai2,ai3)
											Case "7"
												macro_variables_ulong_array_3d_7(ai1,ai2,ai3)=macro_variables_ulong_array_3d_1(ai1,ai2,ai3)
											Case "8"
												macro_variables_ulong_array_3d_8(ai1,ai2,ai3)=macro_variables_ulong_array_3d_1(ai1,ai2,ai3)
											Case "9"
												macro_variables_ulong_array_3d_9(ai1,ai2,ai3)=macro_variables_ulong_array_3d_1(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "2"
							For ai1=LBound(macro_variables_ulong_array_3d_2) To UBound(macro_variables_ulong_array_3d_2)
								For ai2=LBound(macro_variables_ulong_array_3d_2,2) To UBound(macro_variables_ulong_array_3d_2,2)
									For ai3=LBound(macro_variables_ulong_array_3d_2,3) To UBound(macro_variables_ulong_array_3d_2,3)
										Select Case array_index
											Case "1"
												macro_variables_ulong_array_3d_1(ai1,ai2,ai3)=macro_variables_ulong_array_3d_2(ai1,ai2,ai3)
											Case "2"
												macro_variables_ulong_array_3d_2(ai1,ai2,ai3)=macro_variables_ulong_array_3d_2(ai1,ai2,ai3)
											Case "3"
												macro_variables_ulong_array_3d_3(ai1,ai2,ai3)=macro_variables_ulong_array_3d_2(ai1,ai2,ai3)
											Case "4"
												macro_variables_ulong_array_3d_4(ai1,ai2,ai3)=macro_variables_ulong_array_3d_2(ai1,ai2,ai3)
											Case "5"
												macro_variables_ulong_array_3d_5(ai1,ai2,ai3)=macro_variables_ulong_array_3d_2(ai1,ai2,ai3)
											Case "6"
												macro_variables_ulong_array_3d_6(ai1,ai2,ai3)=macro_variables_ulong_array_3d_2(ai1,ai2,ai3)
											Case "7"
												macro_variables_ulong_array_3d_7(ai1,ai2,ai3)=macro_variables_ulong_array_3d_2(ai1,ai2,ai3)
											Case "8"
												macro_variables_ulong_array_3d_8(ai1,ai2,ai3)=macro_variables_ulong_array_3d_2(ai1,ai2,ai3)
											Case "9"
												macro_variables_ulong_array_3d_9(ai1,ai2,ai3)=macro_variables_ulong_array_3d_2(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "3"
							For ai1=LBound(macro_variables_ulong_array_3d_3) To UBound(macro_variables_ulong_array_3d_3)
								For ai2=LBound(macro_variables_ulong_array_3d_3,2) To UBound(macro_variables_ulong_array_3d_3,2)
									For ai3=LBound(macro_variables_ulong_array_3d_3,3) To UBound(macro_variables_ulong_array_3d_3,3)
										Select Case array_index
											Case "1"
												macro_variables_ulong_array_3d_1(ai1,ai2,ai3)=macro_variables_ulong_array_3d_3(ai1,ai2,ai3)
											Case "2"
												macro_variables_ulong_array_3d_2(ai1,ai2,ai3)=macro_variables_ulong_array_3d_3(ai1,ai2,ai3)
											Case "3"
												macro_variables_ulong_array_3d_3(ai1,ai2,ai3)=macro_variables_ulong_array_3d_3(ai1,ai2,ai3)
											Case "4"
												macro_variables_ulong_array_3d_4(ai1,ai2,ai3)=macro_variables_ulong_array_3d_3(ai1,ai2,ai3)
											Case "5"
												macro_variables_ulong_array_3d_5(ai1,ai2,ai3)=macro_variables_ulong_array_3d_3(ai1,ai2,ai3)
											Case "6"
												macro_variables_ulong_array_3d_6(ai1,ai2,ai3)=macro_variables_ulong_array_3d_3(ai1,ai2,ai3)
											Case "7"
												macro_variables_ulong_array_3d_7(ai1,ai2,ai3)=macro_variables_ulong_array_3d_3(ai1,ai2,ai3)
											Case "8"
												macro_variables_ulong_array_3d_8(ai1,ai2,ai3)=macro_variables_ulong_array_3d_3(ai1,ai2,ai3)
											Case "9"
												macro_variables_ulong_array_3d_9(ai1,ai2,ai3)=macro_variables_ulong_array_3d_3(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "4"
							For ai1=LBound(macro_variables_ulong_array_3d_4) To UBound(macro_variables_ulong_array_3d_4)
								For ai2=LBound(macro_variables_ulong_array_3d_4,2) To UBound(macro_variables_ulong_array_3d_4,2)
									For ai3=LBound(macro_variables_ulong_array_3d_4,3) To UBound(macro_variables_ulong_array_3d_4,3)
										Select Case array_index
											Case "1"
												macro_variables_ulong_array_3d_1(ai1,ai2,ai3)=macro_variables_ulong_array_3d_4(ai1,ai2,ai3)
											Case "2"
												macro_variables_ulong_array_3d_2(ai1,ai2,ai3)=macro_variables_ulong_array_3d_4(ai1,ai2,ai3)
											Case "3"
												macro_variables_ulong_array_3d_3(ai1,ai2,ai3)=macro_variables_ulong_array_3d_4(ai1,ai2,ai3)
											Case "4"
												macro_variables_ulong_array_3d_4(ai1,ai2,ai3)=macro_variables_ulong_array_3d_4(ai1,ai2,ai3)
											Case "5"
												macro_variables_ulong_array_3d_5(ai1,ai2,ai3)=macro_variables_ulong_array_3d_4(ai1,ai2,ai3)
											Case "6"
												macro_variables_ulong_array_3d_6(ai1,ai2,ai3)=macro_variables_ulong_array_3d_4(ai1,ai2,ai3)
											Case "7"
												macro_variables_ulong_array_3d_7(ai1,ai2,ai3)=macro_variables_ulong_array_3d_4(ai1,ai2,ai3)
											Case "8"
												macro_variables_ulong_array_3d_8(ai1,ai2,ai3)=macro_variables_ulong_array_3d_4(ai1,ai2,ai3)
											Case "9"
												macro_variables_ulong_array_3d_9(ai1,ai2,ai3)=macro_variables_ulong_array_3d_4(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "5"
							For ai1=LBound(macro_variables_ulong_array_3d_5) To UBound(macro_variables_ulong_array_3d_5)
								For ai2=LBound(macro_variables_ulong_array_3d_5,2) To UBound(macro_variables_ulong_array_3d_5,2)
									For ai3=LBound(macro_variables_ulong_array_3d_5,3) To UBound(macro_variables_ulong_array_3d_5,3)
										Select Case array_index
											Case "1"
												macro_variables_ulong_array_3d_1(ai1,ai2,ai3)=macro_variables_ulong_array_3d_5(ai1,ai2,ai3)
											Case "2"
												macro_variables_ulong_array_3d_2(ai1,ai2,ai3)=macro_variables_ulong_array_3d_5(ai1,ai2,ai3)
											Case "3"
												macro_variables_ulong_array_3d_3(ai1,ai2,ai3)=macro_variables_ulong_array_3d_5(ai1,ai2,ai3)
											Case "4"
												macro_variables_ulong_array_3d_4(ai1,ai2,ai3)=macro_variables_ulong_array_3d_5(ai1,ai2,ai3)
											Case "5"
												macro_variables_ulong_array_3d_5(ai1,ai2,ai3)=macro_variables_ulong_array_3d_5(ai1,ai2,ai3)
											Case "6"
												macro_variables_ulong_array_3d_6(ai1,ai2,ai3)=macro_variables_ulong_array_3d_5(ai1,ai2,ai3)
											Case "7"
												macro_variables_ulong_array_3d_7(ai1,ai2,ai3)=macro_variables_ulong_array_3d_5(ai1,ai2,ai3)
											Case "8"
												macro_variables_ulong_array_3d_8(ai1,ai2,ai3)=macro_variables_ulong_array_3d_5(ai1,ai2,ai3)
											Case "9"
												macro_variables_ulong_array_3d_9(ai1,ai2,ai3)=macro_variables_ulong_array_3d_5(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "6"
							For ai1=LBound(macro_variables_ulong_array_3d_6) To UBound(macro_variables_ulong_array_3d_6)
								For ai2=LBound(macro_variables_ulong_array_3d_6,2) To UBound(macro_variables_ulong_array_3d_6,2)
									For ai3=LBound(macro_variables_ulong_array_3d_6,3) To UBound(macro_variables_ulong_array_3d_6,3)
										Select Case array_index
											Case "1"
												macro_variables_ulong_array_3d_1(ai1,ai2,ai3)=macro_variables_ulong_array_3d_6(ai1,ai2,ai3)
											Case "2"
												macro_variables_ulong_array_3d_2(ai1,ai2,ai3)=macro_variables_ulong_array_3d_6(ai1,ai2,ai3)
											Case "3"
												macro_variables_ulong_array_3d_3(ai1,ai2,ai3)=macro_variables_ulong_array_3d_6(ai1,ai2,ai3)
											Case "4"
												macro_variables_ulong_array_3d_4(ai1,ai2,ai3)=macro_variables_ulong_array_3d_6(ai1,ai2,ai3)
											Case "5"
												macro_variables_ulong_array_3d_5(ai1,ai2,ai3)=macro_variables_ulong_array_3d_6(ai1,ai2,ai3)
											Case "6"
												macro_variables_ulong_array_3d_6(ai1,ai2,ai3)=macro_variables_ulong_array_3d_6(ai1,ai2,ai3)
											Case "7"
												macro_variables_ulong_array_3d_7(ai1,ai2,ai3)=macro_variables_ulong_array_3d_6(ai1,ai2,ai3)
											Case "8"
												macro_variables_ulong_array_3d_8(ai1,ai2,ai3)=macro_variables_ulong_array_3d_6(ai1,ai2,ai3)
											Case "9"
												macro_variables_ulong_array_3d_9(ai1,ai2,ai3)=macro_variables_ulong_array_3d_6(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "7"
							For ai1=LBound(macro_variables_ulong_array_3d_7) To UBound(macro_variables_ulong_array_3d_7)
								For ai2=LBound(macro_variables_ulong_array_3d_7,2) To UBound(macro_variables_ulong_array_3d_7,2)
									For ai3=LBound(macro_variables_ulong_array_3d_7,3) To UBound(macro_variables_ulong_array_3d_7,3)
										Select Case array_index
											Case "1"
												macro_variables_ulong_array_3d_1(ai1,ai2,ai3)=macro_variables_ulong_array_3d_7(ai1,ai2,ai3)
											Case "2"
												macro_variables_ulong_array_3d_2(ai1,ai2,ai3)=macro_variables_ulong_array_3d_7(ai1,ai2,ai3)
											Case "3"
												macro_variables_ulong_array_3d_3(ai1,ai2,ai3)=macro_variables_ulong_array_3d_7(ai1,ai2,ai3)
											Case "4"
												macro_variables_ulong_array_3d_4(ai1,ai2,ai3)=macro_variables_ulong_array_3d_7(ai1,ai2,ai3)
											Case "5"
												macro_variables_ulong_array_3d_5(ai1,ai2,ai3)=macro_variables_ulong_array_3d_7(ai1,ai2,ai3)
											Case "6"
												macro_variables_ulong_array_3d_6(ai1,ai2,ai3)=macro_variables_ulong_array_3d_7(ai1,ai2,ai3)
											Case "7"
												macro_variables_ulong_array_3d_7(ai1,ai2,ai3)=macro_variables_ulong_array_3d_7(ai1,ai2,ai3)
											Case "8"
												macro_variables_ulong_array_3d_8(ai1,ai2,ai3)=macro_variables_ulong_array_3d_7(ai1,ai2,ai3)
											Case "9"
												macro_variables_ulong_array_3d_9(ai1,ai2,ai3)=macro_variables_ulong_array_3d_7(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "8"
							For ai1=LBound(macro_variables_ulong_array_3d_8) To UBound(macro_variables_ulong_array_3d_8)
								For ai2=LBound(macro_variables_ulong_array_3d_8,2) To UBound(macro_variables_ulong_array_3d_8,2)
									For ai3=LBound(macro_variables_ulong_array_3d_8,3) To UBound(macro_variables_ulong_array_3d_8,3)
										Select Case array_index
											Case "1"
												macro_variables_ulong_array_3d_1(ai1,ai2,ai3)=macro_variables_ulong_array_3d_8(ai1,ai2,ai3)
											Case "2"
												macro_variables_ulong_array_3d_2(ai1,ai2,ai3)=macro_variables_ulong_array_3d_8(ai1,ai2,ai3)
											Case "3"
												macro_variables_ulong_array_3d_3(ai1,ai2,ai3)=macro_variables_ulong_array_3d_8(ai1,ai2,ai3)
											Case "4"
												macro_variables_ulong_array_3d_4(ai1,ai2,ai3)=macro_variables_ulong_array_3d_8(ai1,ai2,ai3)
											Case "5"
												macro_variables_ulong_array_3d_5(ai1,ai2,ai3)=macro_variables_ulong_array_3d_8(ai1,ai2,ai3)
											Case "6"
												macro_variables_ulong_array_3d_6(ai1,ai2,ai3)=macro_variables_ulong_array_3d_8(ai1,ai2,ai3)
											Case "7"
												macro_variables_ulong_array_3d_7(ai1,ai2,ai3)=macro_variables_ulong_array_3d_8(ai1,ai2,ai3)
											Case "8"
												macro_variables_ulong_array_3d_8(ai1,ai2,ai3)=macro_variables_ulong_array_3d_8(ai1,ai2,ai3)
											Case "9"
												macro_variables_ulong_array_3d_9(ai1,ai2,ai3)=macro_variables_ulong_array_3d_8(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "9"
							For ai1=LBound(macro_variables_ulong_array_3d_9) To UBound(macro_variables_ulong_array_3d_9)
								For ai2=LBound(macro_variables_ulong_array_3d_9,2) To UBound(macro_variables_ulong_array_3d_9,2)
									For ai3=LBound(macro_variables_ulong_array_3d_9,3) To UBound(macro_variables_ulong_array_3d_9,3)
										Select Case array_index
											Case "1"
												macro_variables_ulong_array_3d_1(ai1,ai2,ai3)=macro_variables_ulong_array_3d_9(ai1,ai2,ai3)
											Case "2"
												macro_variables_ulong_array_3d_2(ai1,ai2,ai3)=macro_variables_ulong_array_3d_9(ai1,ai2,ai3)
											Case "3"
												macro_variables_ulong_array_3d_3(ai1,ai2,ai3)=macro_variables_ulong_array_3d_9(ai1,ai2,ai3)
											Case "4"
												macro_variables_ulong_array_3d_4(ai1,ai2,ai3)=macro_variables_ulong_array_3d_9(ai1,ai2,ai3)
											Case "5"
												macro_variables_ulong_array_3d_5(ai1,ai2,ai3)=macro_variables_ulong_array_3d_9(ai1,ai2,ai3)
											Case "6"
												macro_variables_ulong_array_3d_6(ai1,ai2,ai3)=macro_variables_ulong_array_3d_9(ai1,ai2,ai3)
											Case "7"
												macro_variables_ulong_array_3d_7(ai1,ai2,ai3)=macro_variables_ulong_array_3d_9(ai1,ai2,ai3)
											Case "8"
												macro_variables_ulong_array_3d_8(ai1,ai2,ai3)=macro_variables_ulong_array_3d_9(ai1,ai2,ai3)
											Case "9"
												macro_variables_ulong_array_3d_9(ai1,ai2,ai3)=macro_variables_ulong_array_3d_9(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
					End Select
			End Select
		Case "INTEGER_ARRAY"
			Select Case macro_variables_info(a,5)
				Case "1d"
					Select Case macro_variables_info(a,3)
						Case "1"
							For ai1=LBound(macro_variables_integer_array_1d_1) To UBound(macro_variables_integer_array_1d_1)
								Select Case array_index
									Case "1"
										macro_variables_integer_array_1d_1(ai1)=macro_variables_integer_array_1d_1(ai1)
									Case "2"
										macro_variables_integer_array_1d_2(ai1)=macro_variables_integer_array_1d_1(ai1)
									Case "3"
										macro_variables_integer_array_1d_3(ai1)=macro_variables_integer_array_1d_1(ai1)
									Case "4"
										macro_variables_integer_array_1d_4(ai1)=macro_variables_integer_array_1d_1(ai1)
									Case "5"
										macro_variables_integer_array_1d_5(ai1)=macro_variables_integer_array_1d_1(ai1)
									Case "6"
										macro_variables_integer_array_1d_6(ai1)=macro_variables_integer_array_1d_1(ai1)
									Case "7"
										macro_variables_integer_array_1d_7(ai1)=macro_variables_integer_array_1d_1(ai1)
									Case "8"
										macro_variables_integer_array_1d_8(ai1)=macro_variables_integer_array_1d_1(ai1)
									Case "9"
										macro_variables_integer_array_1d_9(ai1)=macro_variables_integer_array_1d_1(ai1)
								End Select
							Next
						Case "2"
							For ai1=LBound(macro_variables_integer_array_1d_2) To UBound(macro_variables_integer_array_1d_2)
								Select Case array_index
									Case "1"
										macro_variables_integer_array_1d_1(ai1)=macro_variables_integer_array_1d_2(ai1)
									Case "2"
										macro_variables_integer_array_1d_2(ai1)=macro_variables_integer_array_1d_2(ai1)
									Case "3"
										macro_variables_integer_array_1d_3(ai1)=macro_variables_integer_array_1d_2(ai1)
									Case "4"
										macro_variables_integer_array_1d_4(ai1)=macro_variables_integer_array_1d_2(ai1)
									Case "5"
										macro_variables_integer_array_1d_5(ai1)=macro_variables_integer_array_1d_2(ai1)
									Case "6"
										macro_variables_integer_array_1d_6(ai1)=macro_variables_integer_array_1d_2(ai1)
									Case "7"
										macro_variables_integer_array_1d_7(ai1)=macro_variables_integer_array_1d_2(ai1)
									Case "8"
										macro_variables_integer_array_1d_8(ai1)=macro_variables_integer_array_1d_2(ai1)
									Case "9"
										macro_variables_integer_array_1d_9(ai1)=macro_variables_integer_array_1d_2(ai1)
								End Select
							Next
						Case "3"
							For ai1=LBound(macro_variables_integer_array_1d_3) To UBound(macro_variables_integer_array_1d_3)
								Select Case array_index
									Case "1"
										macro_variables_integer_array_1d_1(ai1)=macro_variables_integer_array_1d_3(ai1)
									Case "2"
										macro_variables_integer_array_1d_2(ai1)=macro_variables_integer_array_1d_3(ai1)
									Case "3"
										macro_variables_integer_array_1d_3(ai1)=macro_variables_integer_array_1d_3(ai1)
									Case "4"
										macro_variables_integer_array_1d_4(ai1)=macro_variables_integer_array_1d_3(ai1)
									Case "5"
										macro_variables_integer_array_1d_5(ai1)=macro_variables_integer_array_1d_3(ai1)
									Case "6"
										macro_variables_integer_array_1d_6(ai1)=macro_variables_integer_array_1d_3(ai1)
									Case "7"
										macro_variables_integer_array_1d_7(ai1)=macro_variables_integer_array_1d_3(ai1)
									Case "8"
										macro_variables_integer_array_1d_8(ai1)=macro_variables_integer_array_1d_3(ai1)
									Case "9"
										macro_variables_integer_array_1d_9(ai1)=macro_variables_integer_array_1d_3(ai1)
								End Select
							Next
						Case "4"
							For ai1=LBound(macro_variables_integer_array_1d_4) To UBound(macro_variables_integer_array_1d_4)
								Select Case array_index
									Case "1"
										macro_variables_integer_array_1d_1(ai1)=macro_variables_integer_array_1d_4(ai1)
									Case "2"
										macro_variables_integer_array_1d_2(ai1)=macro_variables_integer_array_1d_4(ai1)
									Case "3"
										macro_variables_integer_array_1d_3(ai1)=macro_variables_integer_array_1d_4(ai1)
									Case "4"
										macro_variables_integer_array_1d_4(ai1)=macro_variables_integer_array_1d_4(ai1)
									Case "5"
										macro_variables_integer_array_1d_5(ai1)=macro_variables_integer_array_1d_4(ai1)
									Case "6"
										macro_variables_integer_array_1d_6(ai1)=macro_variables_integer_array_1d_4(ai1)
									Case "7"
										macro_variables_integer_array_1d_7(ai1)=macro_variables_integer_array_1d_4(ai1)
									Case "8"
										macro_variables_integer_array_1d_8(ai1)=macro_variables_integer_array_1d_4(ai1)
									Case "9"
										macro_variables_integer_array_1d_9(ai1)=macro_variables_integer_array_1d_4(ai1)
								End Select
							Next
						Case "5"
							For ai1=LBound(macro_variables_integer_array_1d_5) To UBound(macro_variables_integer_array_1d_5)
								Select Case array_index
									Case "1"
										macro_variables_integer_array_1d_1(ai1)=macro_variables_integer_array_1d_5(ai1)
									Case "2"
										macro_variables_integer_array_1d_2(ai1)=macro_variables_integer_array_1d_5(ai1)
									Case "3"
										macro_variables_integer_array_1d_3(ai1)=macro_variables_integer_array_1d_5(ai1)
									Case "4"
										macro_variables_integer_array_1d_4(ai1)=macro_variables_integer_array_1d_5(ai1)
									Case "5"
										macro_variables_integer_array_1d_5(ai1)=macro_variables_integer_array_1d_5(ai1)
									Case "6"
										macro_variables_integer_array_1d_6(ai1)=macro_variables_integer_array_1d_5(ai1)
									Case "7"
										macro_variables_integer_array_1d_7(ai1)=macro_variables_integer_array_1d_5(ai1)
									Case "8"
										macro_variables_integer_array_1d_8(ai1)=macro_variables_integer_array_1d_5(ai1)
									Case "9"
										macro_variables_integer_array_1d_9(ai1)=macro_variables_integer_array_1d_5(ai1)
								End Select
							Next
						Case "6"
							For ai1=LBound(macro_variables_integer_array_1d_6) To UBound(macro_variables_integer_array_1d_6)
								Select Case array_index
									Case "1"
										macro_variables_integer_array_1d_1(ai1)=macro_variables_integer_array_1d_6(ai1)
									Case "2"
										macro_variables_integer_array_1d_2(ai1)=macro_variables_integer_array_1d_6(ai1)
									Case "3"
										macro_variables_integer_array_1d_3(ai1)=macro_variables_integer_array_1d_6(ai1)
									Case "4"
										macro_variables_integer_array_1d_4(ai1)=macro_variables_integer_array_1d_6(ai1)
									Case "5"
										macro_variables_integer_array_1d_5(ai1)=macro_variables_integer_array_1d_6(ai1)
									Case "6"
										macro_variables_integer_array_1d_6(ai1)=macro_variables_integer_array_1d_6(ai1)
									Case "7"
										macro_variables_integer_array_1d_7(ai1)=macro_variables_integer_array_1d_6(ai1)
									Case "8"
										macro_variables_integer_array_1d_8(ai1)=macro_variables_integer_array_1d_6(ai1)
									Case "9"
										macro_variables_integer_array_1d_9(ai1)=macro_variables_integer_array_1d_6(ai1)
								End Select
							Next
						Case "7"
							For ai1=LBound(macro_variables_integer_array_1d_7) To UBound(macro_variables_integer_array_1d_7)
								Select Case array_index
									Case "1"
										macro_variables_integer_array_1d_1(ai1)=macro_variables_integer_array_1d_7(ai1)
									Case "2"
										macro_variables_integer_array_1d_2(ai1)=macro_variables_integer_array_1d_7(ai1)
									Case "3"
										macro_variables_integer_array_1d_3(ai1)=macro_variables_integer_array_1d_7(ai1)
									Case "4"
										macro_variables_integer_array_1d_4(ai1)=macro_variables_integer_array_1d_7(ai1)
									Case "5"
										macro_variables_integer_array_1d_5(ai1)=macro_variables_integer_array_1d_7(ai1)
									Case "6"
										macro_variables_integer_array_1d_6(ai1)=macro_variables_integer_array_1d_7(ai1)
									Case "7"
										macro_variables_integer_array_1d_7(ai1)=macro_variables_integer_array_1d_7(ai1)
									Case "8"
										macro_variables_integer_array_1d_8(ai1)=macro_variables_integer_array_1d_7(ai1)
									Case "9"
										macro_variables_integer_array_1d_9(ai1)=macro_variables_integer_array_1d_7(ai1)
								End Select
							Next
						Case "8"
							For ai1=LBound(macro_variables_integer_array_1d_8) To UBound(macro_variables_integer_array_1d_8)
								Select Case array_index
									Case "1"
										macro_variables_integer_array_1d_1(ai1)=macro_variables_integer_array_1d_8(ai1)
									Case "2"
										macro_variables_integer_array_1d_2(ai1)=macro_variables_integer_array_1d_8(ai1)
									Case "3"
										macro_variables_integer_array_1d_3(ai1)=macro_variables_integer_array_1d_8(ai1)
									Case "4"
										macro_variables_integer_array_1d_4(ai1)=macro_variables_integer_array_1d_8(ai1)
									Case "5"
										macro_variables_integer_array_1d_5(ai1)=macro_variables_integer_array_1d_8(ai1)
									Case "6"
										macro_variables_integer_array_1d_6(ai1)=macro_variables_integer_array_1d_8(ai1)
									Case "7"
										macro_variables_integer_array_1d_7(ai1)=macro_variables_integer_array_1d_8(ai1)
									Case "8"
										macro_variables_integer_array_1d_8(ai1)=macro_variables_integer_array_1d_8(ai1)
									Case "9"
										macro_variables_integer_array_1d_9(ai1)=macro_variables_integer_array_1d_8(ai1)
								End Select
							Next
						Case "9"
							For ai1=LBound(macro_variables_integer_array_1d_9) To UBound(macro_variables_integer_array_1d_9)
								Select Case array_index
									Case "1"
										macro_variables_integer_array_1d_1(ai1)=macro_variables_integer_array_1d_9(ai1)
									Case "2"
										macro_variables_integer_array_1d_2(ai1)=macro_variables_integer_array_1d_9(ai1)
									Case "3"
										macro_variables_integer_array_1d_3(ai1)=macro_variables_integer_array_1d_9(ai1)
									Case "4"
										macro_variables_integer_array_1d_4(ai1)=macro_variables_integer_array_1d_9(ai1)
									Case "5"
										macro_variables_integer_array_1d_5(ai1)=macro_variables_integer_array_1d_9(ai1)
									Case "6"
										macro_variables_integer_array_1d_6(ai1)=macro_variables_integer_array_1d_9(ai1)
									Case "7"
										macro_variables_integer_array_1d_7(ai1)=macro_variables_integer_array_1d_9(ai1)
									Case "8"
										macro_variables_integer_array_1d_8(ai1)=macro_variables_integer_array_1d_9(ai1)
									Case "9"
										macro_variables_integer_array_1d_9(ai1)=macro_variables_integer_array_1d_9(ai1)
								End Select
							Next
					End Select
				Case "2d"
					Select Case macro_variables_info(a,3)
						Case "1"
							For ai1=LBound(macro_variables_integer_array_2d_1) To UBound(macro_variables_integer_array_2d_1)
								For ai2=LBound(macro_variables_integer_array_2d_1,2) To UBound(macro_variables_integer_array_2d_1,2)
									Select Case array_index
										Case "1"
											macro_variables_integer_array_2d_1(ai1,ai2)=macro_variables_integer_array_2d_1(ai1,ai2)
										Case "2"
											macro_variables_integer_array_2d_2(ai1,ai2)=macro_variables_integer_array_2d_1(ai1,ai2)
										Case "3"
											macro_variables_integer_array_2d_3(ai1,ai2)=macro_variables_integer_array_2d_1(ai1,ai2)
										Case "4"
											macro_variables_integer_array_2d_4(ai1,ai2)=macro_variables_integer_array_2d_1(ai1,ai2)
										Case "5"
											macro_variables_integer_array_2d_5(ai1,ai2)=macro_variables_integer_array_2d_1(ai1,ai2)
										Case "6"
											macro_variables_integer_array_2d_6(ai1,ai2)=macro_variables_integer_array_2d_1(ai1,ai2)
										Case "7"
											macro_variables_integer_array_2d_7(ai1,ai2)=macro_variables_integer_array_2d_1(ai1,ai2)
										Case "8"
											macro_variables_integer_array_2d_8(ai1,ai2)=macro_variables_integer_array_2d_1(ai1,ai2)
										Case "9"
											macro_variables_integer_array_2d_9(ai1,ai2)=macro_variables_integer_array_2d_1(ai1,ai2)
									End Select
								Next
							Next
						Case "2"
							For ai1=LBound(macro_variables_integer_array_2d_2) To UBound(macro_variables_integer_array_2d_2)
								For ai2=LBound(macro_variables_integer_array_2d_2,2) To UBound(macro_variables_integer_array_2d_2,2)
									Select Case array_index
										Case "1"
											macro_variables_integer_array_2d_1(ai1,ai2)=macro_variables_integer_array_2d_2(ai1,ai2)
										Case "2"
											macro_variables_integer_array_2d_2(ai1,ai2)=macro_variables_integer_array_2d_2(ai1,ai2)
										Case "3"
											macro_variables_integer_array_2d_3(ai1,ai2)=macro_variables_integer_array_2d_2(ai1,ai2)
										Case "4"
											macro_variables_integer_array_2d_4(ai1,ai2)=macro_variables_integer_array_2d_2(ai1,ai2)
										Case "5"
											macro_variables_integer_array_2d_5(ai1,ai2)=macro_variables_integer_array_2d_2(ai1,ai2)
										Case "6"
											macro_variables_integer_array_2d_6(ai1,ai2)=macro_variables_integer_array_2d_2(ai1,ai2)
										Case "7"
											macro_variables_integer_array_2d_7(ai1,ai2)=macro_variables_integer_array_2d_2(ai1,ai2)
										Case "8"
											macro_variables_integer_array_2d_8(ai1,ai2)=macro_variables_integer_array_2d_2(ai1,ai2)
										Case "9"
											macro_variables_integer_array_2d_9(ai1,ai2)=macro_variables_integer_array_2d_2(ai1,ai2)
									End Select
								Next
							Next
						Case "3"
							For ai1=LBound(macro_variables_integer_array_2d_3) To UBound(macro_variables_integer_array_2d_3)
								For ai2=LBound(macro_variables_integer_array_2d_3,2) To UBound(macro_variables_integer_array_2d_3,2)
									Select Case array_index
										Case "1"
											macro_variables_integer_array_2d_1(ai1,ai2)=macro_variables_integer_array_2d_3(ai1,ai2)
										Case "2"
											macro_variables_integer_array_2d_2(ai1,ai2)=macro_variables_integer_array_2d_3(ai1,ai2)
										Case "3"
											macro_variables_integer_array_2d_3(ai1,ai2)=macro_variables_integer_array_2d_3(ai1,ai2)
										Case "4"
											macro_variables_integer_array_2d_4(ai1,ai2)=macro_variables_integer_array_2d_3(ai1,ai2)
										Case "5"
											macro_variables_integer_array_2d_5(ai1,ai2)=macro_variables_integer_array_2d_3(ai1,ai2)
										Case "6"
											macro_variables_integer_array_2d_6(ai1,ai2)=macro_variables_integer_array_2d_3(ai1,ai2)
										Case "7"
											macro_variables_integer_array_2d_7(ai1,ai2)=macro_variables_integer_array_2d_3(ai1,ai2)
										Case "8"
											macro_variables_integer_array_2d_8(ai1,ai2)=macro_variables_integer_array_2d_3(ai1,ai2)
										Case "9"
											macro_variables_integer_array_2d_9(ai1,ai2)=macro_variables_integer_array_2d_3(ai1,ai2)
									End Select
								Next
							Next
						Case "4"
							For ai1=LBound(macro_variables_integer_array_2d_4) To UBound(macro_variables_integer_array_2d_4)
								For ai2=LBound(macro_variables_integer_array_2d_4,2) To UBound(macro_variables_integer_array_2d_4,2)
									Select Case array_index
										Case "1"
											macro_variables_integer_array_2d_1(ai1,ai2)=macro_variables_integer_array_2d_4(ai1,ai2)
										Case "2"
											macro_variables_integer_array_2d_2(ai1,ai2)=macro_variables_integer_array_2d_4(ai1,ai2)
										Case "3"
											macro_variables_integer_array_2d_3(ai1,ai2)=macro_variables_integer_array_2d_4(ai1,ai2)
										Case "4"
											macro_variables_integer_array_2d_4(ai1,ai2)=macro_variables_integer_array_2d_4(ai1,ai2)
										Case "5"
											macro_variables_integer_array_2d_5(ai1,ai2)=macro_variables_integer_array_2d_4(ai1,ai2)
										Case "6"
											macro_variables_integer_array_2d_6(ai1,ai2)=macro_variables_integer_array_2d_4(ai1,ai2)
										Case "7"
											macro_variables_integer_array_2d_7(ai1,ai2)=macro_variables_integer_array_2d_4(ai1,ai2)
										Case "8"
											macro_variables_integer_array_2d_8(ai1,ai2)=macro_variables_integer_array_2d_4(ai1,ai2)
										Case "9"
											macro_variables_integer_array_2d_9(ai1,ai2)=macro_variables_integer_array_2d_4(ai1,ai2)
									End Select
								Next
							Next
						Case "5"
							For ai1=LBound(macro_variables_integer_array_2d_5) To UBound(macro_variables_integer_array_2d_5)
								For ai2=LBound(macro_variables_integer_array_2d_5,2) To UBound(macro_variables_integer_array_2d_5,2)
									Select Case array_index
										Case "1"
											macro_variables_integer_array_2d_1(ai1,ai2)=macro_variables_integer_array_2d_5(ai1,ai2)
										Case "2"
											macro_variables_integer_array_2d_2(ai1,ai2)=macro_variables_integer_array_2d_5(ai1,ai2)
										Case "3"
											macro_variables_integer_array_2d_3(ai1,ai2)=macro_variables_integer_array_2d_5(ai1,ai2)
										Case "4"
											macro_variables_integer_array_2d_4(ai1,ai2)=macro_variables_integer_array_2d_5(ai1,ai2)
										Case "5"
											macro_variables_integer_array_2d_5(ai1,ai2)=macro_variables_integer_array_2d_5(ai1,ai2)
										Case "6"
											macro_variables_integer_array_2d_6(ai1,ai2)=macro_variables_integer_array_2d_5(ai1,ai2)
										Case "7"
											macro_variables_integer_array_2d_7(ai1,ai2)=macro_variables_integer_array_2d_5(ai1,ai2)
										Case "8"
											macro_variables_integer_array_2d_8(ai1,ai2)=macro_variables_integer_array_2d_5(ai1,ai2)
										Case "9"
											macro_variables_integer_array_2d_9(ai1,ai2)=macro_variables_integer_array_2d_5(ai1,ai2)
									End Select
								Next
							Next
						Case "6"
							For ai1=LBound(macro_variables_integer_array_2d_6) To UBound(macro_variables_integer_array_2d_6)
								For ai2=LBound(macro_variables_integer_array_2d_6,2) To UBound(macro_variables_integer_array_2d_6,2)
									Select Case array_index
										Case "1"
											macro_variables_integer_array_2d_1(ai1,ai2)=macro_variables_integer_array_2d_6(ai1,ai2)
										Case "2"
											macro_variables_integer_array_2d_2(ai1,ai2)=macro_variables_integer_array_2d_6(ai1,ai2)
										Case "3"
											macro_variables_integer_array_2d_3(ai1,ai2)=macro_variables_integer_array_2d_6(ai1,ai2)
										Case "4"
											macro_variables_integer_array_2d_4(ai1,ai2)=macro_variables_integer_array_2d_6(ai1,ai2)
										Case "5"
											macro_variables_integer_array_2d_5(ai1,ai2)=macro_variables_integer_array_2d_6(ai1,ai2)
										Case "6"
											macro_variables_integer_array_2d_6(ai1,ai2)=macro_variables_integer_array_2d_6(ai1,ai2)
										Case "7"
											macro_variables_integer_array_2d_7(ai1,ai2)=macro_variables_integer_array_2d_6(ai1,ai2)
										Case "8"
											macro_variables_integer_array_2d_8(ai1,ai2)=macro_variables_integer_array_2d_6(ai1,ai2)
										Case "9"
											macro_variables_integer_array_2d_9(ai1,ai2)=macro_variables_integer_array_2d_6(ai1,ai2)
									End Select
								Next
							Next
						Case "7"
							For ai1=LBound(macro_variables_integer_array_2d_7) To UBound(macro_variables_integer_array_2d_7)
								For ai2=LBound(macro_variables_integer_array_2d_7,2) To UBound(macro_variables_integer_array_2d_7,2)
									Select Case array_index
										Case "1"
											macro_variables_integer_array_2d_1(ai1,ai2)=macro_variables_integer_array_2d_7(ai1,ai2)
										Case "2"
											macro_variables_integer_array_2d_2(ai1,ai2)=macro_variables_integer_array_2d_7(ai1,ai2)
										Case "3"
											macro_variables_integer_array_2d_3(ai1,ai2)=macro_variables_integer_array_2d_7(ai1,ai2)
										Case "4"
											macro_variables_integer_array_2d_4(ai1,ai2)=macro_variables_integer_array_2d_7(ai1,ai2)
										Case "5"
											macro_variables_integer_array_2d_5(ai1,ai2)=macro_variables_integer_array_2d_7(ai1,ai2)
										Case "6"
											macro_variables_integer_array_2d_6(ai1,ai2)=macro_variables_integer_array_2d_7(ai1,ai2)
										Case "7"
											macro_variables_integer_array_2d_7(ai1,ai2)=macro_variables_integer_array_2d_7(ai1,ai2)
										Case "8"
											macro_variables_integer_array_2d_8(ai1,ai2)=macro_variables_integer_array_2d_7(ai1,ai2)
										Case "9"
											macro_variables_integer_array_2d_9(ai1,ai2)=macro_variables_integer_array_2d_7(ai1,ai2)
									End Select
								Next
							Next
						Case "8"
							For ai1=LBound(macro_variables_integer_array_2d_8) To UBound(macro_variables_integer_array_2d_8)
								For ai2=LBound(macro_variables_integer_array_2d_8,2) To UBound(macro_variables_integer_array_2d_8,2)
									Select Case array_index
										Case "1"
											macro_variables_integer_array_2d_1(ai1,ai2)=macro_variables_integer_array_2d_8(ai1,ai2)
										Case "2"
											macro_variables_integer_array_2d_2(ai1,ai2)=macro_variables_integer_array_2d_8(ai1,ai2)
										Case "3"
											macro_variables_integer_array_2d_3(ai1,ai2)=macro_variables_integer_array_2d_8(ai1,ai2)
										Case "4"
											macro_variables_integer_array_2d_4(ai1,ai2)=macro_variables_integer_array_2d_8(ai1,ai2)
										Case "5"
											macro_variables_integer_array_2d_5(ai1,ai2)=macro_variables_integer_array_2d_8(ai1,ai2)
										Case "6"
											macro_variables_integer_array_2d_6(ai1,ai2)=macro_variables_integer_array_2d_8(ai1,ai2)
										Case "7"
											macro_variables_integer_array_2d_7(ai1,ai2)=macro_variables_integer_array_2d_8(ai1,ai2)
										Case "8"
											macro_variables_integer_array_2d_8(ai1,ai2)=macro_variables_integer_array_2d_8(ai1,ai2)
										Case "9"
											macro_variables_integer_array_2d_9(ai1,ai2)=macro_variables_integer_array_2d_8(ai1,ai2)
									End Select
								Next
							Next
						Case "9"
							For ai1=LBound(macro_variables_integer_array_2d_9) To UBound(macro_variables_integer_array_2d_9)
								For ai2=LBound(macro_variables_integer_array_2d_9,2) To UBound(macro_variables_integer_array_2d_9,2)
									Select Case array_index
										Case "1"
											macro_variables_integer_array_2d_1(ai1,ai2)=macro_variables_integer_array_2d_9(ai1,ai2)
										Case "2"
											macro_variables_integer_array_2d_2(ai1,ai2)=macro_variables_integer_array_2d_9(ai1,ai2)
										Case "3"
											macro_variables_integer_array_2d_3(ai1,ai2)=macro_variables_integer_array_2d_9(ai1,ai2)
										Case "4"
											macro_variables_integer_array_2d_4(ai1,ai2)=macro_variables_integer_array_2d_9(ai1,ai2)
										Case "5"
											macro_variables_integer_array_2d_5(ai1,ai2)=macro_variables_integer_array_2d_9(ai1,ai2)
										Case "6"
											macro_variables_integer_array_2d_6(ai1,ai2)=macro_variables_integer_array_2d_9(ai1,ai2)
										Case "7"
											macro_variables_integer_array_2d_7(ai1,ai2)=macro_variables_integer_array_2d_9(ai1,ai2)
										Case "8"
											macro_variables_integer_array_2d_8(ai1,ai2)=macro_variables_integer_array_2d_9(ai1,ai2)
										Case "9"
											macro_variables_integer_array_2d_9(ai1,ai2)=macro_variables_integer_array_2d_9(ai1,ai2)
									End Select
								Next
							Next
					End Select
				Case "3d"
					Select Case macro_variables_info(a,3)
						Case "1"
							For ai1=LBound(macro_variables_integer_array_3d_1) To UBound(macro_variables_integer_array_3d_1)
								For ai2=LBound(macro_variables_integer_array_3d_1,2) To UBound(macro_variables_integer_array_3d_1,2)
									For ai3=LBound(macro_variables_integer_array_3d_1,3) To UBound(macro_variables_integer_array_3d_1,3)
										Select Case array_index
											Case "1"
												macro_variables_integer_array_3d_1(ai1,ai2,ai3)=macro_variables_integer_array_3d_1(ai1,ai2,ai3)
											Case "2"
												macro_variables_integer_array_3d_2(ai1,ai2,ai3)=macro_variables_integer_array_3d_1(ai1,ai2,ai3)
											Case "3"
												macro_variables_integer_array_3d_3(ai1,ai2,ai3)=macro_variables_integer_array_3d_1(ai1,ai2,ai3)
											Case "4"
												macro_variables_integer_array_3d_4(ai1,ai2,ai3)=macro_variables_integer_array_3d_1(ai1,ai2,ai3)
											Case "5"
												macro_variables_integer_array_3d_5(ai1,ai2,ai3)=macro_variables_integer_array_3d_1(ai1,ai2,ai3)
											Case "6"
												macro_variables_integer_array_3d_6(ai1,ai2,ai3)=macro_variables_integer_array_3d_1(ai1,ai2,ai3)
											Case "7"
												macro_variables_integer_array_3d_7(ai1,ai2,ai3)=macro_variables_integer_array_3d_1(ai1,ai2,ai3)
											Case "8"
												macro_variables_integer_array_3d_8(ai1,ai2,ai3)=macro_variables_integer_array_3d_1(ai1,ai2,ai3)
											Case "9"
												macro_variables_integer_array_3d_9(ai1,ai2,ai3)=macro_variables_integer_array_3d_1(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "2"
							For ai1=LBound(macro_variables_integer_array_3d_2) To UBound(macro_variables_integer_array_3d_2)
								For ai2=LBound(macro_variables_integer_array_3d_2,2) To UBound(macro_variables_integer_array_3d_2,2)
									For ai3=LBound(macro_variables_integer_array_3d_2,3) To UBound(macro_variables_integer_array_3d_2,3)
										Select Case array_index
											Case "1"
												macro_variables_integer_array_3d_1(ai1,ai2,ai3)=macro_variables_integer_array_3d_2(ai1,ai2,ai3)
											Case "2"
												macro_variables_integer_array_3d_2(ai1,ai2,ai3)=macro_variables_integer_array_3d_2(ai1,ai2,ai3)
											Case "3"
												macro_variables_integer_array_3d_3(ai1,ai2,ai3)=macro_variables_integer_array_3d_2(ai1,ai2,ai3)
											Case "4"
												macro_variables_integer_array_3d_4(ai1,ai2,ai3)=macro_variables_integer_array_3d_2(ai1,ai2,ai3)
											Case "5"
												macro_variables_integer_array_3d_5(ai1,ai2,ai3)=macro_variables_integer_array_3d_2(ai1,ai2,ai3)
											Case "6"
												macro_variables_integer_array_3d_6(ai1,ai2,ai3)=macro_variables_integer_array_3d_2(ai1,ai2,ai3)
											Case "7"
												macro_variables_integer_array_3d_7(ai1,ai2,ai3)=macro_variables_integer_array_3d_2(ai1,ai2,ai3)
											Case "8"
												macro_variables_integer_array_3d_8(ai1,ai2,ai3)=macro_variables_integer_array_3d_2(ai1,ai2,ai3)
											Case "9"
												macro_variables_integer_array_3d_9(ai1,ai2,ai3)=macro_variables_integer_array_3d_2(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "3"
							For ai1=LBound(macro_variables_integer_array_3d_3) To UBound(macro_variables_integer_array_3d_3)
								For ai2=LBound(macro_variables_integer_array_3d_3,2) To UBound(macro_variables_integer_array_3d_3,2)
									For ai3=LBound(macro_variables_integer_array_3d_3,3) To UBound(macro_variables_integer_array_3d_3,3)
										Select Case array_index
											Case "1"
												macro_variables_integer_array_3d_1(ai1,ai2,ai3)=macro_variables_integer_array_3d_3(ai1,ai2,ai3)
											Case "2"
												macro_variables_integer_array_3d_2(ai1,ai2,ai3)=macro_variables_integer_array_3d_3(ai1,ai2,ai3)
											Case "3"
												macro_variables_integer_array_3d_3(ai1,ai2,ai3)=macro_variables_integer_array_3d_3(ai1,ai2,ai3)
											Case "4"
												macro_variables_integer_array_3d_4(ai1,ai2,ai3)=macro_variables_integer_array_3d_3(ai1,ai2,ai3)
											Case "5"
												macro_variables_integer_array_3d_5(ai1,ai2,ai3)=macro_variables_integer_array_3d_3(ai1,ai2,ai3)
											Case "6"
												macro_variables_integer_array_3d_6(ai1,ai2,ai3)=macro_variables_integer_array_3d_3(ai1,ai2,ai3)
											Case "7"
												macro_variables_integer_array_3d_7(ai1,ai2,ai3)=macro_variables_integer_array_3d_3(ai1,ai2,ai3)
											Case "8"
												macro_variables_integer_array_3d_8(ai1,ai2,ai3)=macro_variables_integer_array_3d_3(ai1,ai2,ai3)
											Case "9"
												macro_variables_integer_array_3d_9(ai1,ai2,ai3)=macro_variables_integer_array_3d_3(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "4"
							For ai1=LBound(macro_variables_integer_array_3d_4) To UBound(macro_variables_integer_array_3d_4)
								For ai2=LBound(macro_variables_integer_array_3d_4,2) To UBound(macro_variables_integer_array_3d_4,2)
									For ai3=LBound(macro_variables_integer_array_3d_4,3) To UBound(macro_variables_integer_array_3d_4,3)
										Select Case array_index
											Case "1"
												macro_variables_integer_array_3d_1(ai1,ai2,ai3)=macro_variables_integer_array_3d_4(ai1,ai2,ai3)
											Case "2"
												macro_variables_integer_array_3d_2(ai1,ai2,ai3)=macro_variables_integer_array_3d_4(ai1,ai2,ai3)
											Case "3"
												macro_variables_integer_array_3d_3(ai1,ai2,ai3)=macro_variables_integer_array_3d_4(ai1,ai2,ai3)
											Case "4"
												macro_variables_integer_array_3d_4(ai1,ai2,ai3)=macro_variables_integer_array_3d_4(ai1,ai2,ai3)
											Case "5"
												macro_variables_integer_array_3d_5(ai1,ai2,ai3)=macro_variables_integer_array_3d_4(ai1,ai2,ai3)
											Case "6"
												macro_variables_integer_array_3d_6(ai1,ai2,ai3)=macro_variables_integer_array_3d_4(ai1,ai2,ai3)
											Case "7"
												macro_variables_integer_array_3d_7(ai1,ai2,ai3)=macro_variables_integer_array_3d_4(ai1,ai2,ai3)
											Case "8"
												macro_variables_integer_array_3d_8(ai1,ai2,ai3)=macro_variables_integer_array_3d_4(ai1,ai2,ai3)
											Case "9"
												macro_variables_integer_array_3d_9(ai1,ai2,ai3)=macro_variables_integer_array_3d_4(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "5"
							For ai1=LBound(macro_variables_integer_array_3d_5) To UBound(macro_variables_integer_array_3d_5)
								For ai2=LBound(macro_variables_integer_array_3d_5,2) To UBound(macro_variables_integer_array_3d_5,2)
									For ai3=LBound(macro_variables_integer_array_3d_5,3) To UBound(macro_variables_integer_array_3d_5,3)
										Select Case array_index
											Case "1"
												macro_variables_integer_array_3d_1(ai1,ai2,ai3)=macro_variables_integer_array_3d_5(ai1,ai2,ai3)
											Case "2"
												macro_variables_integer_array_3d_2(ai1,ai2,ai3)=macro_variables_integer_array_3d_5(ai1,ai2,ai3)
											Case "3"
												macro_variables_integer_array_3d_3(ai1,ai2,ai3)=macro_variables_integer_array_3d_5(ai1,ai2,ai3)
											Case "4"
												macro_variables_integer_array_3d_4(ai1,ai2,ai3)=macro_variables_integer_array_3d_5(ai1,ai2,ai3)
											Case "5"
												macro_variables_integer_array_3d_5(ai1,ai2,ai3)=macro_variables_integer_array_3d_5(ai1,ai2,ai3)
											Case "6"
												macro_variables_integer_array_3d_6(ai1,ai2,ai3)=macro_variables_integer_array_3d_5(ai1,ai2,ai3)
											Case "7"
												macro_variables_integer_array_3d_7(ai1,ai2,ai3)=macro_variables_integer_array_3d_5(ai1,ai2,ai3)
											Case "8"
												macro_variables_integer_array_3d_8(ai1,ai2,ai3)=macro_variables_integer_array_3d_5(ai1,ai2,ai3)
											Case "9"
												macro_variables_integer_array_3d_9(ai1,ai2,ai3)=macro_variables_integer_array_3d_5(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "6"
							For ai1=LBound(macro_variables_integer_array_3d_6) To UBound(macro_variables_integer_array_3d_6)
								For ai2=LBound(macro_variables_integer_array_3d_6,2) To UBound(macro_variables_integer_array_3d_6,2)
									For ai3=LBound(macro_variables_integer_array_3d_6,3) To UBound(macro_variables_integer_array_3d_6,3)
										Select Case array_index
											Case "1"
												macro_variables_integer_array_3d_1(ai1,ai2,ai3)=macro_variables_integer_array_3d_6(ai1,ai2,ai3)
											Case "2"
												macro_variables_integer_array_3d_2(ai1,ai2,ai3)=macro_variables_integer_array_3d_6(ai1,ai2,ai3)
											Case "3"
												macro_variables_integer_array_3d_3(ai1,ai2,ai3)=macro_variables_integer_array_3d_6(ai1,ai2,ai3)
											Case "4"
												macro_variables_integer_array_3d_4(ai1,ai2,ai3)=macro_variables_integer_array_3d_6(ai1,ai2,ai3)
											Case "5"
												macro_variables_integer_array_3d_5(ai1,ai2,ai3)=macro_variables_integer_array_3d_6(ai1,ai2,ai3)
											Case "6"
												macro_variables_integer_array_3d_6(ai1,ai2,ai3)=macro_variables_integer_array_3d_6(ai1,ai2,ai3)
											Case "7"
												macro_variables_integer_array_3d_7(ai1,ai2,ai3)=macro_variables_integer_array_3d_6(ai1,ai2,ai3)
											Case "8"
												macro_variables_integer_array_3d_8(ai1,ai2,ai3)=macro_variables_integer_array_3d_6(ai1,ai2,ai3)
											Case "9"
												macro_variables_integer_array_3d_9(ai1,ai2,ai3)=macro_variables_integer_array_3d_6(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "7"
							For ai1=LBound(macro_variables_integer_array_3d_7) To UBound(macro_variables_integer_array_3d_7)
								For ai2=LBound(macro_variables_integer_array_3d_7,2) To UBound(macro_variables_integer_array_3d_7,2)
									For ai3=LBound(macro_variables_integer_array_3d_7,3) To UBound(macro_variables_integer_array_3d_7,3)
										Select Case array_index
											Case "1"
												macro_variables_integer_array_3d_1(ai1,ai2,ai3)=macro_variables_integer_array_3d_7(ai1,ai2,ai3)
											Case "2"
												macro_variables_integer_array_3d_2(ai1,ai2,ai3)=macro_variables_integer_array_3d_7(ai1,ai2,ai3)
											Case "3"
												macro_variables_integer_array_3d_3(ai1,ai2,ai3)=macro_variables_integer_array_3d_7(ai1,ai2,ai3)
											Case "4"
												macro_variables_integer_array_3d_4(ai1,ai2,ai3)=macro_variables_integer_array_3d_7(ai1,ai2,ai3)
											Case "5"
												macro_variables_integer_array_3d_5(ai1,ai2,ai3)=macro_variables_integer_array_3d_7(ai1,ai2,ai3)
											Case "6"
												macro_variables_integer_array_3d_6(ai1,ai2,ai3)=macro_variables_integer_array_3d_7(ai1,ai2,ai3)
											Case "7"
												macro_variables_integer_array_3d_7(ai1,ai2,ai3)=macro_variables_integer_array_3d_7(ai1,ai2,ai3)
											Case "8"
												macro_variables_integer_array_3d_8(ai1,ai2,ai3)=macro_variables_integer_array_3d_7(ai1,ai2,ai3)
											Case "9"
												macro_variables_integer_array_3d_9(ai1,ai2,ai3)=macro_variables_integer_array_3d_7(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "8"
							For ai1=LBound(macro_variables_integer_array_3d_8) To UBound(macro_variables_integer_array_3d_8)
								For ai2=LBound(macro_variables_integer_array_3d_8,2) To UBound(macro_variables_integer_array_3d_8,2)
									For ai3=LBound(macro_variables_integer_array_3d_8,3) To UBound(macro_variables_integer_array_3d_8,3)
										Select Case array_index
											Case "1"
												macro_variables_integer_array_3d_1(ai1,ai2,ai3)=macro_variables_integer_array_3d_8(ai1,ai2,ai3)
											Case "2"
												macro_variables_integer_array_3d_2(ai1,ai2,ai3)=macro_variables_integer_array_3d_8(ai1,ai2,ai3)
											Case "3"
												macro_variables_integer_array_3d_3(ai1,ai2,ai3)=macro_variables_integer_array_3d_8(ai1,ai2,ai3)
											Case "4"
												macro_variables_integer_array_3d_4(ai1,ai2,ai3)=macro_variables_integer_array_3d_8(ai1,ai2,ai3)
											Case "5"
												macro_variables_integer_array_3d_5(ai1,ai2,ai3)=macro_variables_integer_array_3d_8(ai1,ai2,ai3)
											Case "6"
												macro_variables_integer_array_3d_6(ai1,ai2,ai3)=macro_variables_integer_array_3d_8(ai1,ai2,ai3)
											Case "7"
												macro_variables_integer_array_3d_7(ai1,ai2,ai3)=macro_variables_integer_array_3d_8(ai1,ai2,ai3)
											Case "8"
												macro_variables_integer_array_3d_8(ai1,ai2,ai3)=macro_variables_integer_array_3d_8(ai1,ai2,ai3)
											Case "9"
												macro_variables_integer_array_3d_9(ai1,ai2,ai3)=macro_variables_integer_array_3d_8(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "9"
							For ai1=LBound(macro_variables_integer_array_3d_9) To UBound(macro_variables_integer_array_3d_9)
								For ai2=LBound(macro_variables_integer_array_3d_9,2) To UBound(macro_variables_integer_array_3d_9,2)
									For ai3=LBound(macro_variables_integer_array_3d_9,3) To UBound(macro_variables_integer_array_3d_9,3)
										Select Case array_index
											Case "1"
												macro_variables_integer_array_3d_1(ai1,ai2,ai3)=macro_variables_integer_array_3d_9(ai1,ai2,ai3)
											Case "2"
												macro_variables_integer_array_3d_2(ai1,ai2,ai3)=macro_variables_integer_array_3d_9(ai1,ai2,ai3)
											Case "3"
												macro_variables_integer_array_3d_3(ai1,ai2,ai3)=macro_variables_integer_array_3d_9(ai1,ai2,ai3)
											Case "4"
												macro_variables_integer_array_3d_4(ai1,ai2,ai3)=macro_variables_integer_array_3d_9(ai1,ai2,ai3)
											Case "5"
												macro_variables_integer_array_3d_5(ai1,ai2,ai3)=macro_variables_integer_array_3d_9(ai1,ai2,ai3)
											Case "6"
												macro_variables_integer_array_3d_6(ai1,ai2,ai3)=macro_variables_integer_array_3d_9(ai1,ai2,ai3)
											Case "7"
												macro_variables_integer_array_3d_7(ai1,ai2,ai3)=macro_variables_integer_array_3d_9(ai1,ai2,ai3)
											Case "8"
												macro_variables_integer_array_3d_8(ai1,ai2,ai3)=macro_variables_integer_array_3d_9(ai1,ai2,ai3)
											Case "9"
												macro_variables_integer_array_3d_9(ai1,ai2,ai3)=macro_variables_integer_array_3d_9(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
					End Select
			End Select
		Case "UINTEGER_ARRAY"
			Select Case macro_variables_info(a,5)
				Case "1d"
					Select Case macro_variables_info(a,3)
						Case "1"
							For ai1=LBound(macro_variables_uinteger_array_1d_1) To UBound(macro_variables_uinteger_array_1d_1)
								Select Case array_index
									Case "1"
										macro_variables_uinteger_array_1d_1(ai1)=macro_variables_uinteger_array_1d_1(ai1)
									Case "2"
										macro_variables_uinteger_array_1d_2(ai1)=macro_variables_uinteger_array_1d_1(ai1)
									Case "3"
										macro_variables_uinteger_array_1d_3(ai1)=macro_variables_uinteger_array_1d_1(ai1)
									Case "4"
										macro_variables_uinteger_array_1d_4(ai1)=macro_variables_uinteger_array_1d_1(ai1)
									Case "5"
										macro_variables_uinteger_array_1d_5(ai1)=macro_variables_uinteger_array_1d_1(ai1)
									Case "6"
										macro_variables_uinteger_array_1d_6(ai1)=macro_variables_uinteger_array_1d_1(ai1)
									Case "7"
										macro_variables_uinteger_array_1d_7(ai1)=macro_variables_uinteger_array_1d_1(ai1)
									Case "8"
										macro_variables_uinteger_array_1d_8(ai1)=macro_variables_uinteger_array_1d_1(ai1)
									Case "9"
										macro_variables_uinteger_array_1d_9(ai1)=macro_variables_uinteger_array_1d_1(ai1)
								End Select
							Next
						Case "2"
							For ai1=LBound(macro_variables_uinteger_array_1d_2) To UBound(macro_variables_uinteger_array_1d_2)
								Select Case array_index
									Case "1"
										macro_variables_uinteger_array_1d_1(ai1)=macro_variables_uinteger_array_1d_2(ai1)
									Case "2"
										macro_variables_uinteger_array_1d_2(ai1)=macro_variables_uinteger_array_1d_2(ai1)
									Case "3"
										macro_variables_uinteger_array_1d_3(ai1)=macro_variables_uinteger_array_1d_2(ai1)
									Case "4"
										macro_variables_uinteger_array_1d_4(ai1)=macro_variables_uinteger_array_1d_2(ai1)
									Case "5"
										macro_variables_uinteger_array_1d_5(ai1)=macro_variables_uinteger_array_1d_2(ai1)
									Case "6"
										macro_variables_uinteger_array_1d_6(ai1)=macro_variables_uinteger_array_1d_2(ai1)
									Case "7"
										macro_variables_uinteger_array_1d_7(ai1)=macro_variables_uinteger_array_1d_2(ai1)
									Case "8"
										macro_variables_uinteger_array_1d_8(ai1)=macro_variables_uinteger_array_1d_2(ai1)
									Case "9"
										macro_variables_uinteger_array_1d_9(ai1)=macro_variables_uinteger_array_1d_2(ai1)
								End Select
							Next
						Case "3"
							For ai1=LBound(macro_variables_uinteger_array_1d_3) To UBound(macro_variables_uinteger_array_1d_3)
								Select Case array_index
									Case "1"
										macro_variables_uinteger_array_1d_1(ai1)=macro_variables_uinteger_array_1d_3(ai1)
									Case "2"
										macro_variables_uinteger_array_1d_2(ai1)=macro_variables_uinteger_array_1d_3(ai1)
									Case "3"
										macro_variables_uinteger_array_1d_3(ai1)=macro_variables_uinteger_array_1d_3(ai1)
									Case "4"
										macro_variables_uinteger_array_1d_4(ai1)=macro_variables_uinteger_array_1d_3(ai1)
									Case "5"
										macro_variables_uinteger_array_1d_5(ai1)=macro_variables_uinteger_array_1d_3(ai1)
									Case "6"
										macro_variables_uinteger_array_1d_6(ai1)=macro_variables_uinteger_array_1d_3(ai1)
									Case "7"
										macro_variables_uinteger_array_1d_7(ai1)=macro_variables_uinteger_array_1d_3(ai1)
									Case "8"
										macro_variables_uinteger_array_1d_8(ai1)=macro_variables_uinteger_array_1d_3(ai1)
									Case "9"
										macro_variables_uinteger_array_1d_9(ai1)=macro_variables_uinteger_array_1d_3(ai1)
								End Select
							Next
						Case "4"
							For ai1=LBound(macro_variables_uinteger_array_1d_4) To UBound(macro_variables_uinteger_array_1d_4)
								Select Case array_index
									Case "1"
										macro_variables_uinteger_array_1d_1(ai1)=macro_variables_uinteger_array_1d_4(ai1)
									Case "2"
										macro_variables_uinteger_array_1d_2(ai1)=macro_variables_uinteger_array_1d_4(ai1)
									Case "3"
										macro_variables_uinteger_array_1d_3(ai1)=macro_variables_uinteger_array_1d_4(ai1)
									Case "4"
										macro_variables_uinteger_array_1d_4(ai1)=macro_variables_uinteger_array_1d_4(ai1)
									Case "5"
										macro_variables_uinteger_array_1d_5(ai1)=macro_variables_uinteger_array_1d_4(ai1)
									Case "6"
										macro_variables_uinteger_array_1d_6(ai1)=macro_variables_uinteger_array_1d_4(ai1)
									Case "7"
										macro_variables_uinteger_array_1d_7(ai1)=macro_variables_uinteger_array_1d_4(ai1)
									Case "8"
										macro_variables_uinteger_array_1d_8(ai1)=macro_variables_uinteger_array_1d_4(ai1)
									Case "9"
										macro_variables_uinteger_array_1d_9(ai1)=macro_variables_uinteger_array_1d_4(ai1)
								End Select
							Next
						Case "5"
							For ai1=LBound(macro_variables_uinteger_array_1d_5) To UBound(macro_variables_uinteger_array_1d_5)
								Select Case array_index
									Case "1"
										macro_variables_uinteger_array_1d_1(ai1)=macro_variables_uinteger_array_1d_5(ai1)
									Case "2"
										macro_variables_uinteger_array_1d_2(ai1)=macro_variables_uinteger_array_1d_5(ai1)
									Case "3"
										macro_variables_uinteger_array_1d_3(ai1)=macro_variables_uinteger_array_1d_5(ai1)
									Case "4"
										macro_variables_uinteger_array_1d_4(ai1)=macro_variables_uinteger_array_1d_5(ai1)
									Case "5"
										macro_variables_uinteger_array_1d_5(ai1)=macro_variables_uinteger_array_1d_5(ai1)
									Case "6"
										macro_variables_uinteger_array_1d_6(ai1)=macro_variables_uinteger_array_1d_5(ai1)
									Case "7"
										macro_variables_uinteger_array_1d_7(ai1)=macro_variables_uinteger_array_1d_5(ai1)
									Case "8"
										macro_variables_uinteger_array_1d_8(ai1)=macro_variables_uinteger_array_1d_5(ai1)
									Case "9"
										macro_variables_uinteger_array_1d_9(ai1)=macro_variables_uinteger_array_1d_5(ai1)
								End Select
							Next
						Case "6"
							For ai1=LBound(macro_variables_uinteger_array_1d_6) To UBound(macro_variables_uinteger_array_1d_6)
								Select Case array_index
									Case "1"
										macro_variables_uinteger_array_1d_1(ai1)=macro_variables_uinteger_array_1d_6(ai1)
									Case "2"
										macro_variables_uinteger_array_1d_2(ai1)=macro_variables_uinteger_array_1d_6(ai1)
									Case "3"
										macro_variables_uinteger_array_1d_3(ai1)=macro_variables_uinteger_array_1d_6(ai1)
									Case "4"
										macro_variables_uinteger_array_1d_4(ai1)=macro_variables_uinteger_array_1d_6(ai1)
									Case "5"
										macro_variables_uinteger_array_1d_5(ai1)=macro_variables_uinteger_array_1d_6(ai1)
									Case "6"
										macro_variables_uinteger_array_1d_6(ai1)=macro_variables_uinteger_array_1d_6(ai1)
									Case "7"
										macro_variables_uinteger_array_1d_7(ai1)=macro_variables_uinteger_array_1d_6(ai1)
									Case "8"
										macro_variables_uinteger_array_1d_8(ai1)=macro_variables_uinteger_array_1d_6(ai1)
									Case "9"
										macro_variables_uinteger_array_1d_9(ai1)=macro_variables_uinteger_array_1d_6(ai1)
								End Select
							Next
						Case "7"
							For ai1=LBound(macro_variables_uinteger_array_1d_7) To UBound(macro_variables_uinteger_array_1d_7)
								Select Case array_index
									Case "1"
										macro_variables_uinteger_array_1d_1(ai1)=macro_variables_uinteger_array_1d_7(ai1)
									Case "2"
										macro_variables_uinteger_array_1d_2(ai1)=macro_variables_uinteger_array_1d_7(ai1)
									Case "3"
										macro_variables_uinteger_array_1d_3(ai1)=macro_variables_uinteger_array_1d_7(ai1)
									Case "4"
										macro_variables_uinteger_array_1d_4(ai1)=macro_variables_uinteger_array_1d_7(ai1)
									Case "5"
										macro_variables_uinteger_array_1d_5(ai1)=macro_variables_uinteger_array_1d_7(ai1)
									Case "6"
										macro_variables_uinteger_array_1d_6(ai1)=macro_variables_uinteger_array_1d_7(ai1)
									Case "7"
										macro_variables_uinteger_array_1d_7(ai1)=macro_variables_uinteger_array_1d_7(ai1)
									Case "8"
										macro_variables_uinteger_array_1d_8(ai1)=macro_variables_uinteger_array_1d_7(ai1)
									Case "9"
										macro_variables_uinteger_array_1d_9(ai1)=macro_variables_uinteger_array_1d_7(ai1)
								End Select
							Next
						Case "8"
							For ai1=LBound(macro_variables_uinteger_array_1d_8) To UBound(macro_variables_uinteger_array_1d_8)
								Select Case array_index
									Case "1"
										macro_variables_uinteger_array_1d_1(ai1)=macro_variables_uinteger_array_1d_8(ai1)
									Case "2"
										macro_variables_uinteger_array_1d_2(ai1)=macro_variables_uinteger_array_1d_8(ai1)
									Case "3"
										macro_variables_uinteger_array_1d_3(ai1)=macro_variables_uinteger_array_1d_8(ai1)
									Case "4"
										macro_variables_uinteger_array_1d_4(ai1)=macro_variables_uinteger_array_1d_8(ai1)
									Case "5"
										macro_variables_uinteger_array_1d_5(ai1)=macro_variables_uinteger_array_1d_8(ai1)
									Case "6"
										macro_variables_uinteger_array_1d_6(ai1)=macro_variables_uinteger_array_1d_8(ai1)
									Case "7"
										macro_variables_uinteger_array_1d_7(ai1)=macro_variables_uinteger_array_1d_8(ai1)
									Case "8"
										macro_variables_uinteger_array_1d_8(ai1)=macro_variables_uinteger_array_1d_8(ai1)
									Case "9"
										macro_variables_uinteger_array_1d_9(ai1)=macro_variables_uinteger_array_1d_8(ai1)
								End Select
							Next
						Case "9"
							For ai1=LBound(macro_variables_uinteger_array_1d_9) To UBound(macro_variables_uinteger_array_1d_9)
								Select Case array_index
									Case "1"
										macro_variables_uinteger_array_1d_1(ai1)=macro_variables_uinteger_array_1d_9(ai1)
									Case "2"
										macro_variables_uinteger_array_1d_2(ai1)=macro_variables_uinteger_array_1d_9(ai1)
									Case "3"
										macro_variables_uinteger_array_1d_3(ai1)=macro_variables_uinteger_array_1d_9(ai1)
									Case "4"
										macro_variables_uinteger_array_1d_4(ai1)=macro_variables_uinteger_array_1d_9(ai1)
									Case "5"
										macro_variables_uinteger_array_1d_5(ai1)=macro_variables_uinteger_array_1d_9(ai1)
									Case "6"
										macro_variables_uinteger_array_1d_6(ai1)=macro_variables_uinteger_array_1d_9(ai1)
									Case "7"
										macro_variables_uinteger_array_1d_7(ai1)=macro_variables_uinteger_array_1d_9(ai1)
									Case "8"
										macro_variables_uinteger_array_1d_8(ai1)=macro_variables_uinteger_array_1d_9(ai1)
									Case "9"
										macro_variables_uinteger_array_1d_9(ai1)=macro_variables_uinteger_array_1d_9(ai1)
								End Select
							Next
					End Select
				Case "2d"
					Select Case macro_variables_info(a,3)
						Case "1"
							For ai1=LBound(macro_variables_uinteger_array_2d_1) To UBound(macro_variables_uinteger_array_2d_1)
								For ai2=LBound(macro_variables_uinteger_array_2d_1,2) To UBound(macro_variables_uinteger_array_2d_1,2)
									Select Case array_index
										Case "1"
											macro_variables_uinteger_array_2d_1(ai1,ai2)=macro_variables_uinteger_array_2d_1(ai1,ai2)
										Case "2"
											macro_variables_uinteger_array_2d_2(ai1,ai2)=macro_variables_uinteger_array_2d_1(ai1,ai2)
										Case "3"
											macro_variables_uinteger_array_2d_3(ai1,ai2)=macro_variables_uinteger_array_2d_1(ai1,ai2)
										Case "4"
											macro_variables_uinteger_array_2d_4(ai1,ai2)=macro_variables_uinteger_array_2d_1(ai1,ai2)
										Case "5"
											macro_variables_uinteger_array_2d_5(ai1,ai2)=macro_variables_uinteger_array_2d_1(ai1,ai2)
										Case "6"
											macro_variables_uinteger_array_2d_6(ai1,ai2)=macro_variables_uinteger_array_2d_1(ai1,ai2)
										Case "7"
											macro_variables_uinteger_array_2d_7(ai1,ai2)=macro_variables_uinteger_array_2d_1(ai1,ai2)
										Case "8"
											macro_variables_uinteger_array_2d_8(ai1,ai2)=macro_variables_uinteger_array_2d_1(ai1,ai2)
										Case "9"
											macro_variables_uinteger_array_2d_9(ai1,ai2)=macro_variables_uinteger_array_2d_1(ai1,ai2)
									End Select
								Next
							Next
						Case "2"
							For ai1=LBound(macro_variables_uinteger_array_2d_2) To UBound(macro_variables_uinteger_array_2d_2)
								For ai2=LBound(macro_variables_uinteger_array_2d_2,2) To UBound(macro_variables_uinteger_array_2d_2,2)
									Select Case array_index
										Case "1"
											macro_variables_uinteger_array_2d_1(ai1,ai2)=macro_variables_uinteger_array_2d_2(ai1,ai2)
										Case "2"
											macro_variables_uinteger_array_2d_2(ai1,ai2)=macro_variables_uinteger_array_2d_2(ai1,ai2)
										Case "3"
											macro_variables_uinteger_array_2d_3(ai1,ai2)=macro_variables_uinteger_array_2d_2(ai1,ai2)
										Case "4"
											macro_variables_uinteger_array_2d_4(ai1,ai2)=macro_variables_uinteger_array_2d_2(ai1,ai2)
										Case "5"
											macro_variables_uinteger_array_2d_5(ai1,ai2)=macro_variables_uinteger_array_2d_2(ai1,ai2)
										Case "6"
											macro_variables_uinteger_array_2d_6(ai1,ai2)=macro_variables_uinteger_array_2d_2(ai1,ai2)
										Case "7"
											macro_variables_uinteger_array_2d_7(ai1,ai2)=macro_variables_uinteger_array_2d_2(ai1,ai2)
										Case "8"
											macro_variables_uinteger_array_2d_8(ai1,ai2)=macro_variables_uinteger_array_2d_2(ai1,ai2)
										Case "9"
											macro_variables_uinteger_array_2d_9(ai1,ai2)=macro_variables_uinteger_array_2d_2(ai1,ai2)
									End Select
								Next
							Next
						Case "3"
							For ai1=LBound(macro_variables_uinteger_array_2d_3) To UBound(macro_variables_uinteger_array_2d_3)
								For ai2=LBound(macro_variables_uinteger_array_2d_3,2) To UBound(macro_variables_uinteger_array_2d_3,2)
									Select Case array_index
										Case "1"
											macro_variables_uinteger_array_2d_1(ai1,ai2)=macro_variables_uinteger_array_2d_3(ai1,ai2)
										Case "2"
											macro_variables_uinteger_array_2d_2(ai1,ai2)=macro_variables_uinteger_array_2d_3(ai1,ai2)
										Case "3"
											macro_variables_uinteger_array_2d_3(ai1,ai2)=macro_variables_uinteger_array_2d_3(ai1,ai2)
										Case "4"
											macro_variables_uinteger_array_2d_4(ai1,ai2)=macro_variables_uinteger_array_2d_3(ai1,ai2)
										Case "5"
											macro_variables_uinteger_array_2d_5(ai1,ai2)=macro_variables_uinteger_array_2d_3(ai1,ai2)
										Case "6"
											macro_variables_uinteger_array_2d_6(ai1,ai2)=macro_variables_uinteger_array_2d_3(ai1,ai2)
										Case "7"
											macro_variables_uinteger_array_2d_7(ai1,ai2)=macro_variables_uinteger_array_2d_3(ai1,ai2)
										Case "8"
											macro_variables_uinteger_array_2d_8(ai1,ai2)=macro_variables_uinteger_array_2d_3(ai1,ai2)
										Case "9"
											macro_variables_uinteger_array_2d_9(ai1,ai2)=macro_variables_uinteger_array_2d_3(ai1,ai2)
									End Select
								Next
							Next
						Case "4"
							For ai1=LBound(macro_variables_uinteger_array_2d_4) To UBound(macro_variables_uinteger_array_2d_4)
								For ai2=LBound(macro_variables_uinteger_array_2d_4,2) To UBound(macro_variables_uinteger_array_2d_4,2)
									Select Case array_index
										Case "1"
											macro_variables_uinteger_array_2d_1(ai1,ai2)=macro_variables_uinteger_array_2d_4(ai1,ai2)
										Case "2"
											macro_variables_uinteger_array_2d_2(ai1,ai2)=macro_variables_uinteger_array_2d_4(ai1,ai2)
										Case "3"
											macro_variables_uinteger_array_2d_3(ai1,ai2)=macro_variables_uinteger_array_2d_4(ai1,ai2)
										Case "4"
											macro_variables_uinteger_array_2d_4(ai1,ai2)=macro_variables_uinteger_array_2d_4(ai1,ai2)
										Case "5"
											macro_variables_uinteger_array_2d_5(ai1,ai2)=macro_variables_uinteger_array_2d_4(ai1,ai2)
										Case "6"
											macro_variables_uinteger_array_2d_6(ai1,ai2)=macro_variables_uinteger_array_2d_4(ai1,ai2)
										Case "7"
											macro_variables_uinteger_array_2d_7(ai1,ai2)=macro_variables_uinteger_array_2d_4(ai1,ai2)
										Case "8"
											macro_variables_uinteger_array_2d_8(ai1,ai2)=macro_variables_uinteger_array_2d_4(ai1,ai2)
										Case "9"
											macro_variables_uinteger_array_2d_9(ai1,ai2)=macro_variables_uinteger_array_2d_4(ai1,ai2)
									End Select
								Next
							Next
						Case "5"
							For ai1=LBound(macro_variables_uinteger_array_2d_5) To UBound(macro_variables_uinteger_array_2d_5)
								For ai2=LBound(macro_variables_uinteger_array_2d_5,2) To UBound(macro_variables_uinteger_array_2d_5,2)
									Select Case array_index
										Case "1"
											macro_variables_uinteger_array_2d_1(ai1,ai2)=macro_variables_uinteger_array_2d_5(ai1,ai2)
										Case "2"
											macro_variables_uinteger_array_2d_2(ai1,ai2)=macro_variables_uinteger_array_2d_5(ai1,ai2)
										Case "3"
											macro_variables_uinteger_array_2d_3(ai1,ai2)=macro_variables_uinteger_array_2d_5(ai1,ai2)
										Case "4"
											macro_variables_uinteger_array_2d_4(ai1,ai2)=macro_variables_uinteger_array_2d_5(ai1,ai2)
										Case "5"
											macro_variables_uinteger_array_2d_5(ai1,ai2)=macro_variables_uinteger_array_2d_5(ai1,ai2)
										Case "6"
											macro_variables_uinteger_array_2d_6(ai1,ai2)=macro_variables_uinteger_array_2d_5(ai1,ai2)
										Case "7"
											macro_variables_uinteger_array_2d_7(ai1,ai2)=macro_variables_uinteger_array_2d_5(ai1,ai2)
										Case "8"
											macro_variables_uinteger_array_2d_8(ai1,ai2)=macro_variables_uinteger_array_2d_5(ai1,ai2)
										Case "9"
											macro_variables_uinteger_array_2d_9(ai1,ai2)=macro_variables_uinteger_array_2d_5(ai1,ai2)
									End Select
								Next
							Next
						Case "6"
							For ai1=LBound(macro_variables_uinteger_array_2d_6) To UBound(macro_variables_uinteger_array_2d_6)
								For ai2=LBound(macro_variables_uinteger_array_2d_6,2) To UBound(macro_variables_uinteger_array_2d_6,2)
									Select Case array_index
										Case "1"
											macro_variables_uinteger_array_2d_1(ai1,ai2)=macro_variables_uinteger_array_2d_6(ai1,ai2)
										Case "2"
											macro_variables_uinteger_array_2d_2(ai1,ai2)=macro_variables_uinteger_array_2d_6(ai1,ai2)
										Case "3"
											macro_variables_uinteger_array_2d_3(ai1,ai2)=macro_variables_uinteger_array_2d_6(ai1,ai2)
										Case "4"
											macro_variables_uinteger_array_2d_4(ai1,ai2)=macro_variables_uinteger_array_2d_6(ai1,ai2)
										Case "5"
											macro_variables_uinteger_array_2d_5(ai1,ai2)=macro_variables_uinteger_array_2d_6(ai1,ai2)
										Case "6"
											macro_variables_uinteger_array_2d_6(ai1,ai2)=macro_variables_uinteger_array_2d_6(ai1,ai2)
										Case "7"
											macro_variables_uinteger_array_2d_7(ai1,ai2)=macro_variables_uinteger_array_2d_6(ai1,ai2)
										Case "8"
											macro_variables_uinteger_array_2d_8(ai1,ai2)=macro_variables_uinteger_array_2d_6(ai1,ai2)
										Case "9"
											macro_variables_uinteger_array_2d_9(ai1,ai2)=macro_variables_uinteger_array_2d_6(ai1,ai2)
									End Select
								Next
							Next
						Case "7"
							For ai1=LBound(macro_variables_uinteger_array_2d_7) To UBound(macro_variables_uinteger_array_2d_7)
								For ai2=LBound(macro_variables_uinteger_array_2d_7,2) To UBound(macro_variables_uinteger_array_2d_7,2)
									Select Case array_index
										Case "1"
											macro_variables_uinteger_array_2d_1(ai1,ai2)=macro_variables_uinteger_array_2d_7(ai1,ai2)
										Case "2"
											macro_variables_uinteger_array_2d_2(ai1,ai2)=macro_variables_uinteger_array_2d_7(ai1,ai2)
										Case "3"
											macro_variables_uinteger_array_2d_3(ai1,ai2)=macro_variables_uinteger_array_2d_7(ai1,ai2)
										Case "4"
											macro_variables_uinteger_array_2d_4(ai1,ai2)=macro_variables_uinteger_array_2d_7(ai1,ai2)
										Case "5"
											macro_variables_uinteger_array_2d_5(ai1,ai2)=macro_variables_uinteger_array_2d_7(ai1,ai2)
										Case "6"
											macro_variables_uinteger_array_2d_6(ai1,ai2)=macro_variables_uinteger_array_2d_7(ai1,ai2)
										Case "7"
											macro_variables_uinteger_array_2d_7(ai1,ai2)=macro_variables_uinteger_array_2d_7(ai1,ai2)
										Case "8"
											macro_variables_uinteger_array_2d_8(ai1,ai2)=macro_variables_uinteger_array_2d_7(ai1,ai2)
										Case "9"
											macro_variables_uinteger_array_2d_9(ai1,ai2)=macro_variables_uinteger_array_2d_7(ai1,ai2)
									End Select
								Next
							Next
						Case "8"
							For ai1=LBound(macro_variables_uinteger_array_2d_8) To UBound(macro_variables_uinteger_array_2d_8)
								For ai2=LBound(macro_variables_uinteger_array_2d_8,2) To UBound(macro_variables_uinteger_array_2d_8,2)
									Select Case array_index
										Case "1"
											macro_variables_uinteger_array_2d_1(ai1,ai2)=macro_variables_uinteger_array_2d_8(ai1,ai2)
										Case "2"
											macro_variables_uinteger_array_2d_2(ai1,ai2)=macro_variables_uinteger_array_2d_8(ai1,ai2)
										Case "3"
											macro_variables_uinteger_array_2d_3(ai1,ai2)=macro_variables_uinteger_array_2d_8(ai1,ai2)
										Case "4"
											macro_variables_uinteger_array_2d_4(ai1,ai2)=macro_variables_uinteger_array_2d_8(ai1,ai2)
										Case "5"
											macro_variables_uinteger_array_2d_5(ai1,ai2)=macro_variables_uinteger_array_2d_8(ai1,ai2)
										Case "6"
											macro_variables_uinteger_array_2d_6(ai1,ai2)=macro_variables_uinteger_array_2d_8(ai1,ai2)
										Case "7"
											macro_variables_uinteger_array_2d_7(ai1,ai2)=macro_variables_uinteger_array_2d_8(ai1,ai2)
										Case "8"
											macro_variables_uinteger_array_2d_8(ai1,ai2)=macro_variables_uinteger_array_2d_8(ai1,ai2)
										Case "9"
											macro_variables_uinteger_array_2d_9(ai1,ai2)=macro_variables_uinteger_array_2d_8(ai1,ai2)
									End Select
								Next
							Next
						Case "9"
							For ai1=LBound(macro_variables_uinteger_array_2d_9) To UBound(macro_variables_uinteger_array_2d_9)
								For ai2=LBound(macro_variables_uinteger_array_2d_9,2) To UBound(macro_variables_uinteger_array_2d_9,2)
									Select Case array_index
										Case "1"
											macro_variables_uinteger_array_2d_1(ai1,ai2)=macro_variables_uinteger_array_2d_9(ai1,ai2)
										Case "2"
											macro_variables_uinteger_array_2d_2(ai1,ai2)=macro_variables_uinteger_array_2d_9(ai1,ai2)
										Case "3"
											macro_variables_uinteger_array_2d_3(ai1,ai2)=macro_variables_uinteger_array_2d_9(ai1,ai2)
										Case "4"
											macro_variables_uinteger_array_2d_4(ai1,ai2)=macro_variables_uinteger_array_2d_9(ai1,ai2)
										Case "5"
											macro_variables_uinteger_array_2d_5(ai1,ai2)=macro_variables_uinteger_array_2d_9(ai1,ai2)
										Case "6"
											macro_variables_uinteger_array_2d_6(ai1,ai2)=macro_variables_uinteger_array_2d_9(ai1,ai2)
										Case "7"
											macro_variables_uinteger_array_2d_7(ai1,ai2)=macro_variables_uinteger_array_2d_9(ai1,ai2)
										Case "8"
											macro_variables_uinteger_array_2d_8(ai1,ai2)=macro_variables_uinteger_array_2d_9(ai1,ai2)
										Case "9"
											macro_variables_uinteger_array_2d_9(ai1,ai2)=macro_variables_uinteger_array_2d_9(ai1,ai2)
									End Select
								Next
							Next
					End Select
				Case "3d"
					Select Case macro_variables_info(a,3)
						Case "1"
							For ai1=LBound(macro_variables_uinteger_array_3d_1) To UBound(macro_variables_uinteger_array_3d_1)
								For ai2=LBound(macro_variables_uinteger_array_3d_1,2) To UBound(macro_variables_uinteger_array_3d_1,2)
									For ai3=LBound(macro_variables_uinteger_array_3d_1,3) To UBound(macro_variables_uinteger_array_3d_1,3)
										Select Case array_index
											Case "1"
												macro_variables_uinteger_array_3d_1(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_1(ai1,ai2,ai3)
											Case "2"
												macro_variables_uinteger_array_3d_2(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_1(ai1,ai2,ai3)
											Case "3"
												macro_variables_uinteger_array_3d_3(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_1(ai1,ai2,ai3)
											Case "4"
												macro_variables_uinteger_array_3d_4(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_1(ai1,ai2,ai3)
											Case "5"
												macro_variables_uinteger_array_3d_5(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_1(ai1,ai2,ai3)
											Case "6"
												macro_variables_uinteger_array_3d_6(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_1(ai1,ai2,ai3)
											Case "7"
												macro_variables_uinteger_array_3d_7(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_1(ai1,ai2,ai3)
											Case "8"
												macro_variables_uinteger_array_3d_8(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_1(ai1,ai2,ai3)
											Case "9"
												macro_variables_uinteger_array_3d_9(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_1(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "2"
							For ai1=LBound(macro_variables_uinteger_array_3d_2) To UBound(macro_variables_uinteger_array_3d_2)
								For ai2=LBound(macro_variables_uinteger_array_3d_2,2) To UBound(macro_variables_uinteger_array_3d_2,2)
									For ai3=LBound(macro_variables_uinteger_array_3d_2,3) To UBound(macro_variables_uinteger_array_3d_2,3)
										Select Case array_index
											Case "1"
												macro_variables_uinteger_array_3d_1(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_2(ai1,ai2,ai3)
											Case "2"
												macro_variables_uinteger_array_3d_2(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_2(ai1,ai2,ai3)
											Case "3"
												macro_variables_uinteger_array_3d_3(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_2(ai1,ai2,ai3)
											Case "4"
												macro_variables_uinteger_array_3d_4(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_2(ai1,ai2,ai3)
											Case "5"
												macro_variables_uinteger_array_3d_5(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_2(ai1,ai2,ai3)
											Case "6"
												macro_variables_uinteger_array_3d_6(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_2(ai1,ai2,ai3)
											Case "7"
												macro_variables_uinteger_array_3d_7(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_2(ai1,ai2,ai3)
											Case "8"
												macro_variables_uinteger_array_3d_8(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_2(ai1,ai2,ai3)
											Case "9"
												macro_variables_uinteger_array_3d_9(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_2(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "3"
							For ai1=LBound(macro_variables_uinteger_array_3d_3) To UBound(macro_variables_uinteger_array_3d_3)
								For ai2=LBound(macro_variables_uinteger_array_3d_3,2) To UBound(macro_variables_uinteger_array_3d_3,2)
									For ai3=LBound(macro_variables_uinteger_array_3d_3,3) To UBound(macro_variables_uinteger_array_3d_3,3)
										Select Case array_index
											Case "1"
												macro_variables_uinteger_array_3d_1(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_3(ai1,ai2,ai3)
											Case "2"
												macro_variables_uinteger_array_3d_2(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_3(ai1,ai2,ai3)
											Case "3"
												macro_variables_uinteger_array_3d_3(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_3(ai1,ai2,ai3)
											Case "4"
												macro_variables_uinteger_array_3d_4(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_3(ai1,ai2,ai3)
											Case "5"
												macro_variables_uinteger_array_3d_5(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_3(ai1,ai2,ai3)
											Case "6"
												macro_variables_uinteger_array_3d_6(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_3(ai1,ai2,ai3)
											Case "7"
												macro_variables_uinteger_array_3d_7(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_3(ai1,ai2,ai3)
											Case "8"
												macro_variables_uinteger_array_3d_8(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_3(ai1,ai2,ai3)
											Case "9"
												macro_variables_uinteger_array_3d_9(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_3(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "4"
							For ai1=LBound(macro_variables_uinteger_array_3d_4) To UBound(macro_variables_uinteger_array_3d_4)
								For ai2=LBound(macro_variables_uinteger_array_3d_4,2) To UBound(macro_variables_uinteger_array_3d_4,2)
									For ai3=LBound(macro_variables_uinteger_array_3d_4,3) To UBound(macro_variables_uinteger_array_3d_4,3)
										Select Case array_index
											Case "1"
												macro_variables_uinteger_array_3d_1(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_4(ai1,ai2,ai3)
											Case "2"
												macro_variables_uinteger_array_3d_2(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_4(ai1,ai2,ai3)
											Case "3"
												macro_variables_uinteger_array_3d_3(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_4(ai1,ai2,ai3)
											Case "4"
												macro_variables_uinteger_array_3d_4(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_4(ai1,ai2,ai3)
											Case "5"
												macro_variables_uinteger_array_3d_5(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_4(ai1,ai2,ai3)
											Case "6"
												macro_variables_uinteger_array_3d_6(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_4(ai1,ai2,ai3)
											Case "7"
												macro_variables_uinteger_array_3d_7(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_4(ai1,ai2,ai3)
											Case "8"
												macro_variables_uinteger_array_3d_8(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_4(ai1,ai2,ai3)
											Case "9"
												macro_variables_uinteger_array_3d_9(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_4(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "5"
							For ai1=LBound(macro_variables_uinteger_array_3d_5) To UBound(macro_variables_uinteger_array_3d_5)
								For ai2=LBound(macro_variables_uinteger_array_3d_5,2) To UBound(macro_variables_uinteger_array_3d_5,2)
									For ai3=LBound(macro_variables_uinteger_array_3d_5,3) To UBound(macro_variables_uinteger_array_3d_5,3)
										Select Case array_index
											Case "1"
												macro_variables_uinteger_array_3d_1(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_5(ai1,ai2,ai3)
											Case "2"
												macro_variables_uinteger_array_3d_2(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_5(ai1,ai2,ai3)
											Case "3"
												macro_variables_uinteger_array_3d_3(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_5(ai1,ai2,ai3)
											Case "4"
												macro_variables_uinteger_array_3d_4(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_5(ai1,ai2,ai3)
											Case "5"
												macro_variables_uinteger_array_3d_5(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_5(ai1,ai2,ai3)
											Case "6"
												macro_variables_uinteger_array_3d_6(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_5(ai1,ai2,ai3)
											Case "7"
												macro_variables_uinteger_array_3d_7(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_5(ai1,ai2,ai3)
											Case "8"
												macro_variables_uinteger_array_3d_8(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_5(ai1,ai2,ai3)
											Case "9"
												macro_variables_uinteger_array_3d_9(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_5(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "6"
							For ai1=LBound(macro_variables_uinteger_array_3d_6) To UBound(macro_variables_uinteger_array_3d_6)
								For ai2=LBound(macro_variables_uinteger_array_3d_6,2) To UBound(macro_variables_uinteger_array_3d_6,2)
									For ai3=LBound(macro_variables_uinteger_array_3d_6,3) To UBound(macro_variables_uinteger_array_3d_6,3)
										Select Case array_index
											Case "1"
												macro_variables_uinteger_array_3d_1(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_6(ai1,ai2,ai3)
											Case "2"
												macro_variables_uinteger_array_3d_2(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_6(ai1,ai2,ai3)
											Case "3"
												macro_variables_uinteger_array_3d_3(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_6(ai1,ai2,ai3)
											Case "4"
												macro_variables_uinteger_array_3d_4(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_6(ai1,ai2,ai3)
											Case "5"
												macro_variables_uinteger_array_3d_5(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_6(ai1,ai2,ai3)
											Case "6"
												macro_variables_uinteger_array_3d_6(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_6(ai1,ai2,ai3)
											Case "7"
												macro_variables_uinteger_array_3d_7(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_6(ai1,ai2,ai3)
											Case "8"
												macro_variables_uinteger_array_3d_8(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_6(ai1,ai2,ai3)
											Case "9"
												macro_variables_uinteger_array_3d_9(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_6(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "7"
							For ai1=LBound(macro_variables_uinteger_array_3d_7) To UBound(macro_variables_uinteger_array_3d_7)
								For ai2=LBound(macro_variables_uinteger_array_3d_7,2) To UBound(macro_variables_uinteger_array_3d_7,2)
									For ai3=LBound(macro_variables_uinteger_array_3d_7,3) To UBound(macro_variables_uinteger_array_3d_7,3)
										Select Case array_index
											Case "1"
												macro_variables_uinteger_array_3d_1(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_7(ai1,ai2,ai3)
											Case "2"
												macro_variables_uinteger_array_3d_2(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_7(ai1,ai2,ai3)
											Case "3"
												macro_variables_uinteger_array_3d_3(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_7(ai1,ai2,ai3)
											Case "4"
												macro_variables_uinteger_array_3d_4(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_7(ai1,ai2,ai3)
											Case "5"
												macro_variables_uinteger_array_3d_5(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_7(ai1,ai2,ai3)
											Case "6"
												macro_variables_uinteger_array_3d_6(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_7(ai1,ai2,ai3)
											Case "7"
												macro_variables_uinteger_array_3d_7(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_7(ai1,ai2,ai3)
											Case "8"
												macro_variables_uinteger_array_3d_8(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_7(ai1,ai2,ai3)
											Case "9"
												macro_variables_uinteger_array_3d_9(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_7(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "8"
							For ai1=LBound(macro_variables_uinteger_array_3d_8) To UBound(macro_variables_uinteger_array_3d_8)
								For ai2=LBound(macro_variables_uinteger_array_3d_8,2) To UBound(macro_variables_uinteger_array_3d_8,2)
									For ai3=LBound(macro_variables_uinteger_array_3d_8,3) To UBound(macro_variables_uinteger_array_3d_8,3)
										Select Case array_index
											Case "1"
												macro_variables_uinteger_array_3d_1(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_8(ai1,ai2,ai3)
											Case "2"
												macro_variables_uinteger_array_3d_2(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_8(ai1,ai2,ai3)
											Case "3"
												macro_variables_uinteger_array_3d_3(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_8(ai1,ai2,ai3)
											Case "4"
												macro_variables_uinteger_array_3d_4(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_8(ai1,ai2,ai3)
											Case "5"
												macro_variables_uinteger_array_3d_5(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_8(ai1,ai2,ai3)
											Case "6"
												macro_variables_uinteger_array_3d_6(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_8(ai1,ai2,ai3)
											Case "7"
												macro_variables_uinteger_array_3d_7(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_8(ai1,ai2,ai3)
											Case "8"
												macro_variables_uinteger_array_3d_8(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_8(ai1,ai2,ai3)
											Case "9"
												macro_variables_uinteger_array_3d_9(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_8(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "9"
							For ai1=LBound(macro_variables_uinteger_array_3d_9) To UBound(macro_variables_uinteger_array_3d_9)
								For ai2=LBound(macro_variables_uinteger_array_3d_9,2) To UBound(macro_variables_uinteger_array_3d_9,2)
									For ai3=LBound(macro_variables_uinteger_array_3d_9,3) To UBound(macro_variables_uinteger_array_3d_9,3)
										Select Case array_index
											Case "1"
												macro_variables_uinteger_array_3d_1(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_9(ai1,ai2,ai3)
											Case "2"
												macro_variables_uinteger_array_3d_2(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_9(ai1,ai2,ai3)
											Case "3"
												macro_variables_uinteger_array_3d_3(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_9(ai1,ai2,ai3)
											Case "4"
												macro_variables_uinteger_array_3d_4(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_9(ai1,ai2,ai3)
											Case "5"
												macro_variables_uinteger_array_3d_5(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_9(ai1,ai2,ai3)
											Case "6"
												macro_variables_uinteger_array_3d_6(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_9(ai1,ai2,ai3)
											Case "7"
												macro_variables_uinteger_array_3d_7(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_9(ai1,ai2,ai3)
											Case "8"
												macro_variables_uinteger_array_3d_8(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_9(ai1,ai2,ai3)
											Case "9"
												macro_variables_uinteger_array_3d_9(ai1,ai2,ai3)=macro_variables_uinteger_array_3d_9(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
					End Select
			End Select
		Case "LONGINT_ARRAY"
			Select Case macro_variables_info(a,5)
				Case "1d"
					Select Case macro_variables_info(a,3)
						Case "1"
							For ai1=LBound(macro_variables_longint_array_1d_1) To UBound(macro_variables_longint_array_1d_1)
								Select Case array_index
									Case "1"
										macro_variables_longint_array_1d_1(ai1)=macro_variables_longint_array_1d_1(ai1)
									Case "2"
										macro_variables_longint_array_1d_2(ai1)=macro_variables_longint_array_1d_1(ai1)
									Case "3"
										macro_variables_longint_array_1d_3(ai1)=macro_variables_longint_array_1d_1(ai1)
									Case "4"
										macro_variables_longint_array_1d_4(ai1)=macro_variables_longint_array_1d_1(ai1)
									Case "5"
										macro_variables_longint_array_1d_5(ai1)=macro_variables_longint_array_1d_1(ai1)
									Case "6"
										macro_variables_longint_array_1d_6(ai1)=macro_variables_longint_array_1d_1(ai1)
									Case "7"
										macro_variables_longint_array_1d_7(ai1)=macro_variables_longint_array_1d_1(ai1)
									Case "8"
										macro_variables_longint_array_1d_8(ai1)=macro_variables_longint_array_1d_1(ai1)
									Case "9"
										macro_variables_longint_array_1d_9(ai1)=macro_variables_longint_array_1d_1(ai1)
								End Select
							Next
						Case "2"
							For ai1=LBound(macro_variables_longint_array_1d_2) To UBound(macro_variables_longint_array_1d_2)
								Select Case array_index
									Case "1"
										macro_variables_longint_array_1d_1(ai1)=macro_variables_longint_array_1d_2(ai1)
									Case "2"
										macro_variables_longint_array_1d_2(ai1)=macro_variables_longint_array_1d_2(ai1)
									Case "3"
										macro_variables_longint_array_1d_3(ai1)=macro_variables_longint_array_1d_2(ai1)
									Case "4"
										macro_variables_longint_array_1d_4(ai1)=macro_variables_longint_array_1d_2(ai1)
									Case "5"
										macro_variables_longint_array_1d_5(ai1)=macro_variables_longint_array_1d_2(ai1)
									Case "6"
										macro_variables_longint_array_1d_6(ai1)=macro_variables_longint_array_1d_2(ai1)
									Case "7"
										macro_variables_longint_array_1d_7(ai1)=macro_variables_longint_array_1d_2(ai1)
									Case "8"
										macro_variables_longint_array_1d_8(ai1)=macro_variables_longint_array_1d_2(ai1)
									Case "9"
										macro_variables_longint_array_1d_9(ai1)=macro_variables_longint_array_1d_2(ai1)
								End Select
							Next
						Case "3"
							For ai1=LBound(macro_variables_longint_array_1d_3) To UBound(macro_variables_longint_array_1d_3)
								Select Case array_index
									Case "1"
										macro_variables_longint_array_1d_1(ai1)=macro_variables_longint_array_1d_3(ai1)
									Case "2"
										macro_variables_longint_array_1d_2(ai1)=macro_variables_longint_array_1d_3(ai1)
									Case "3"
										macro_variables_longint_array_1d_3(ai1)=macro_variables_longint_array_1d_3(ai1)
									Case "4"
										macro_variables_longint_array_1d_4(ai1)=macro_variables_longint_array_1d_3(ai1)
									Case "5"
										macro_variables_longint_array_1d_5(ai1)=macro_variables_longint_array_1d_3(ai1)
									Case "6"
										macro_variables_longint_array_1d_6(ai1)=macro_variables_longint_array_1d_3(ai1)
									Case "7"
										macro_variables_longint_array_1d_7(ai1)=macro_variables_longint_array_1d_3(ai1)
									Case "8"
										macro_variables_longint_array_1d_8(ai1)=macro_variables_longint_array_1d_3(ai1)
									Case "9"
										macro_variables_longint_array_1d_9(ai1)=macro_variables_longint_array_1d_3(ai1)
								End Select
							Next
						Case "4"
							For ai1=LBound(macro_variables_longint_array_1d_4) To UBound(macro_variables_longint_array_1d_4)
								Select Case array_index
									Case "1"
										macro_variables_longint_array_1d_1(ai1)=macro_variables_longint_array_1d_4(ai1)
									Case "2"
										macro_variables_longint_array_1d_2(ai1)=macro_variables_longint_array_1d_4(ai1)
									Case "3"
										macro_variables_longint_array_1d_3(ai1)=macro_variables_longint_array_1d_4(ai1)
									Case "4"
										macro_variables_longint_array_1d_4(ai1)=macro_variables_longint_array_1d_4(ai1)
									Case "5"
										macro_variables_longint_array_1d_5(ai1)=macro_variables_longint_array_1d_4(ai1)
									Case "6"
										macro_variables_longint_array_1d_6(ai1)=macro_variables_longint_array_1d_4(ai1)
									Case "7"
										macro_variables_longint_array_1d_7(ai1)=macro_variables_longint_array_1d_4(ai1)
									Case "8"
										macro_variables_longint_array_1d_8(ai1)=macro_variables_longint_array_1d_4(ai1)
									Case "9"
										macro_variables_longint_array_1d_9(ai1)=macro_variables_longint_array_1d_4(ai1)
								End Select
							Next
						Case "5"
							For ai1=LBound(macro_variables_longint_array_1d_5) To UBound(macro_variables_longint_array_1d_5)
								Select Case array_index
									Case "1"
										macro_variables_longint_array_1d_1(ai1)=macro_variables_longint_array_1d_5(ai1)
									Case "2"
										macro_variables_longint_array_1d_2(ai1)=macro_variables_longint_array_1d_5(ai1)
									Case "3"
										macro_variables_longint_array_1d_3(ai1)=macro_variables_longint_array_1d_5(ai1)
									Case "4"
										macro_variables_longint_array_1d_4(ai1)=macro_variables_longint_array_1d_5(ai1)
									Case "5"
										macro_variables_longint_array_1d_5(ai1)=macro_variables_longint_array_1d_5(ai1)
									Case "6"
										macro_variables_longint_array_1d_6(ai1)=macro_variables_longint_array_1d_5(ai1)
									Case "7"
										macro_variables_longint_array_1d_7(ai1)=macro_variables_longint_array_1d_5(ai1)
									Case "8"
										macro_variables_longint_array_1d_8(ai1)=macro_variables_longint_array_1d_5(ai1)
									Case "9"
										macro_variables_longint_array_1d_9(ai1)=macro_variables_longint_array_1d_5(ai1)
								End Select
							Next
						Case "6"
							For ai1=LBound(macro_variables_longint_array_1d_6) To UBound(macro_variables_longint_array_1d_6)
								Select Case array_index
									Case "1"
										macro_variables_longint_array_1d_1(ai1)=macro_variables_longint_array_1d_6(ai1)
									Case "2"
										macro_variables_longint_array_1d_2(ai1)=macro_variables_longint_array_1d_6(ai1)
									Case "3"
										macro_variables_longint_array_1d_3(ai1)=macro_variables_longint_array_1d_6(ai1)
									Case "4"
										macro_variables_longint_array_1d_4(ai1)=macro_variables_longint_array_1d_6(ai1)
									Case "5"
										macro_variables_longint_array_1d_5(ai1)=macro_variables_longint_array_1d_6(ai1)
									Case "6"
										macro_variables_longint_array_1d_6(ai1)=macro_variables_longint_array_1d_6(ai1)
									Case "7"
										macro_variables_longint_array_1d_7(ai1)=macro_variables_longint_array_1d_6(ai1)
									Case "8"
										macro_variables_longint_array_1d_8(ai1)=macro_variables_longint_array_1d_6(ai1)
									Case "9"
										macro_variables_longint_array_1d_9(ai1)=macro_variables_longint_array_1d_6(ai1)
								End Select
							Next
						Case "7"
							For ai1=LBound(macro_variables_longint_array_1d_7) To UBound(macro_variables_longint_array_1d_7)
								Select Case array_index
									Case "1"
										macro_variables_longint_array_1d_1(ai1)=macro_variables_longint_array_1d_7(ai1)
									Case "2"
										macro_variables_longint_array_1d_2(ai1)=macro_variables_longint_array_1d_7(ai1)
									Case "3"
										macro_variables_longint_array_1d_3(ai1)=macro_variables_longint_array_1d_7(ai1)
									Case "4"
										macro_variables_longint_array_1d_4(ai1)=macro_variables_longint_array_1d_7(ai1)
									Case "5"
										macro_variables_longint_array_1d_5(ai1)=macro_variables_longint_array_1d_7(ai1)
									Case "6"
										macro_variables_longint_array_1d_6(ai1)=macro_variables_longint_array_1d_7(ai1)
									Case "7"
										macro_variables_longint_array_1d_7(ai1)=macro_variables_longint_array_1d_7(ai1)
									Case "8"
										macro_variables_longint_array_1d_8(ai1)=macro_variables_longint_array_1d_7(ai1)
									Case "9"
										macro_variables_longint_array_1d_9(ai1)=macro_variables_longint_array_1d_7(ai1)
								End Select
							Next
						Case "8"
							For ai1=LBound(macro_variables_longint_array_1d_8) To UBound(macro_variables_longint_array_1d_8)
								Select Case array_index
									Case "1"
										macro_variables_longint_array_1d_1(ai1)=macro_variables_longint_array_1d_8(ai1)
									Case "2"
										macro_variables_longint_array_1d_2(ai1)=macro_variables_longint_array_1d_8(ai1)
									Case "3"
										macro_variables_longint_array_1d_3(ai1)=macro_variables_longint_array_1d_8(ai1)
									Case "4"
										macro_variables_longint_array_1d_4(ai1)=macro_variables_longint_array_1d_8(ai1)
									Case "5"
										macro_variables_longint_array_1d_5(ai1)=macro_variables_longint_array_1d_8(ai1)
									Case "6"
										macro_variables_longint_array_1d_6(ai1)=macro_variables_longint_array_1d_8(ai1)
									Case "7"
										macro_variables_longint_array_1d_7(ai1)=macro_variables_longint_array_1d_8(ai1)
									Case "8"
										macro_variables_longint_array_1d_8(ai1)=macro_variables_longint_array_1d_8(ai1)
									Case "9"
										macro_variables_longint_array_1d_9(ai1)=macro_variables_longint_array_1d_8(ai1)
								End Select
							Next
						Case "9"
							For ai1=LBound(macro_variables_longint_array_1d_9) To UBound(macro_variables_longint_array_1d_9)
								Select Case array_index
									Case "1"
										macro_variables_longint_array_1d_1(ai1)=macro_variables_longint_array_1d_9(ai1)
									Case "2"
										macro_variables_longint_array_1d_2(ai1)=macro_variables_longint_array_1d_9(ai1)
									Case "3"
										macro_variables_longint_array_1d_3(ai1)=macro_variables_longint_array_1d_9(ai1)
									Case "4"
										macro_variables_longint_array_1d_4(ai1)=macro_variables_longint_array_1d_9(ai1)
									Case "5"
										macro_variables_longint_array_1d_5(ai1)=macro_variables_longint_array_1d_9(ai1)
									Case "6"
										macro_variables_longint_array_1d_6(ai1)=macro_variables_longint_array_1d_9(ai1)
									Case "7"
										macro_variables_longint_array_1d_7(ai1)=macro_variables_longint_array_1d_9(ai1)
									Case "8"
										macro_variables_longint_array_1d_8(ai1)=macro_variables_longint_array_1d_9(ai1)
									Case "9"
										macro_variables_longint_array_1d_9(ai1)=macro_variables_longint_array_1d_9(ai1)
								End Select
							Next
					End Select
				Case "2d"
					Select Case macro_variables_info(a,3)
						Case "1"
							For ai1=LBound(macro_variables_longint_array_2d_1) To UBound(macro_variables_longint_array_2d_1)
								For ai2=LBound(macro_variables_longint_array_2d_1,2) To UBound(macro_variables_longint_array_2d_1,2)
									Select Case array_index
										Case "1"
											macro_variables_longint_array_2d_1(ai1,ai2)=macro_variables_longint_array_2d_1(ai1,ai2)
										Case "2"
											macro_variables_longint_array_2d_2(ai1,ai2)=macro_variables_longint_array_2d_1(ai1,ai2)
										Case "3"
											macro_variables_longint_array_2d_3(ai1,ai2)=macro_variables_longint_array_2d_1(ai1,ai2)
										Case "4"
											macro_variables_longint_array_2d_4(ai1,ai2)=macro_variables_longint_array_2d_1(ai1,ai2)
										Case "5"
											macro_variables_longint_array_2d_5(ai1,ai2)=macro_variables_longint_array_2d_1(ai1,ai2)
										Case "6"
											macro_variables_longint_array_2d_6(ai1,ai2)=macro_variables_longint_array_2d_1(ai1,ai2)
										Case "7"
											macro_variables_longint_array_2d_7(ai1,ai2)=macro_variables_longint_array_2d_1(ai1,ai2)
										Case "8"
											macro_variables_longint_array_2d_8(ai1,ai2)=macro_variables_longint_array_2d_1(ai1,ai2)
										Case "9"
											macro_variables_longint_array_2d_9(ai1,ai2)=macro_variables_longint_array_2d_1(ai1,ai2)
									End Select
								Next
							Next
						Case "2"
							For ai1=LBound(macro_variables_longint_array_2d_2) To UBound(macro_variables_longint_array_2d_2)
								For ai2=LBound(macro_variables_longint_array_2d_2,2) To UBound(macro_variables_longint_array_2d_2,2)
									Select Case array_index
										Case "1"
											macro_variables_longint_array_2d_1(ai1,ai2)=macro_variables_longint_array_2d_2(ai1,ai2)
										Case "2"
											macro_variables_longint_array_2d_2(ai1,ai2)=macro_variables_longint_array_2d_2(ai1,ai2)
										Case "3"
											macro_variables_longint_array_2d_3(ai1,ai2)=macro_variables_longint_array_2d_2(ai1,ai2)
										Case "4"
											macro_variables_longint_array_2d_4(ai1,ai2)=macro_variables_longint_array_2d_2(ai1,ai2)
										Case "5"
											macro_variables_longint_array_2d_5(ai1,ai2)=macro_variables_longint_array_2d_2(ai1,ai2)
										Case "6"
											macro_variables_longint_array_2d_6(ai1,ai2)=macro_variables_longint_array_2d_2(ai1,ai2)
										Case "7"
											macro_variables_longint_array_2d_7(ai1,ai2)=macro_variables_longint_array_2d_2(ai1,ai2)
										Case "8"
											macro_variables_longint_array_2d_8(ai1,ai2)=macro_variables_longint_array_2d_2(ai1,ai2)
										Case "9"
											macro_variables_longint_array_2d_9(ai1,ai2)=macro_variables_longint_array_2d_2(ai1,ai2)
									End Select
								Next
							Next
						Case "3"
							For ai1=LBound(macro_variables_longint_array_2d_3) To UBound(macro_variables_longint_array_2d_3)
								For ai2=LBound(macro_variables_longint_array_2d_3,2) To UBound(macro_variables_longint_array_2d_3,2)
									Select Case array_index
										Case "1"
											macro_variables_longint_array_2d_1(ai1,ai2)=macro_variables_longint_array_2d_3(ai1,ai2)
										Case "2"
											macro_variables_longint_array_2d_2(ai1,ai2)=macro_variables_longint_array_2d_3(ai1,ai2)
										Case "3"
											macro_variables_longint_array_2d_3(ai1,ai2)=macro_variables_longint_array_2d_3(ai1,ai2)
										Case "4"
											macro_variables_longint_array_2d_4(ai1,ai2)=macro_variables_longint_array_2d_3(ai1,ai2)
										Case "5"
											macro_variables_longint_array_2d_5(ai1,ai2)=macro_variables_longint_array_2d_3(ai1,ai2)
										Case "6"
											macro_variables_longint_array_2d_6(ai1,ai2)=macro_variables_longint_array_2d_3(ai1,ai2)
										Case "7"
											macro_variables_longint_array_2d_7(ai1,ai2)=macro_variables_longint_array_2d_3(ai1,ai2)
										Case "8"
											macro_variables_longint_array_2d_8(ai1,ai2)=macro_variables_longint_array_2d_3(ai1,ai2)
										Case "9"
											macro_variables_longint_array_2d_9(ai1,ai2)=macro_variables_longint_array_2d_3(ai1,ai2)
									End Select
								Next
							Next
						Case "4"
							For ai1=LBound(macro_variables_longint_array_2d_4) To UBound(macro_variables_longint_array_2d_4)
								For ai2=LBound(macro_variables_longint_array_2d_4,2) To UBound(macro_variables_longint_array_2d_4,2)
									Select Case array_index
										Case "1"
											macro_variables_longint_array_2d_1(ai1,ai2)=macro_variables_longint_array_2d_4(ai1,ai2)
										Case "2"
											macro_variables_longint_array_2d_2(ai1,ai2)=macro_variables_longint_array_2d_4(ai1,ai2)
										Case "3"
											macro_variables_longint_array_2d_3(ai1,ai2)=macro_variables_longint_array_2d_4(ai1,ai2)
										Case "4"
											macro_variables_longint_array_2d_4(ai1,ai2)=macro_variables_longint_array_2d_4(ai1,ai2)
										Case "5"
											macro_variables_longint_array_2d_5(ai1,ai2)=macro_variables_longint_array_2d_4(ai1,ai2)
										Case "6"
											macro_variables_longint_array_2d_6(ai1,ai2)=macro_variables_longint_array_2d_4(ai1,ai2)
										Case "7"
											macro_variables_longint_array_2d_7(ai1,ai2)=macro_variables_longint_array_2d_4(ai1,ai2)
										Case "8"
											macro_variables_longint_array_2d_8(ai1,ai2)=macro_variables_longint_array_2d_4(ai1,ai2)
										Case "9"
											macro_variables_longint_array_2d_9(ai1,ai2)=macro_variables_longint_array_2d_4(ai1,ai2)
									End Select
								Next
							Next
						Case "5"
							For ai1=LBound(macro_variables_longint_array_2d_5) To UBound(macro_variables_longint_array_2d_5)
								For ai2=LBound(macro_variables_longint_array_2d_5,2) To UBound(macro_variables_longint_array_2d_5,2)
									Select Case array_index
										Case "1"
											macro_variables_longint_array_2d_1(ai1,ai2)=macro_variables_longint_array_2d_5(ai1,ai2)
										Case "2"
											macro_variables_longint_array_2d_2(ai1,ai2)=macro_variables_longint_array_2d_5(ai1,ai2)
										Case "3"
											macro_variables_longint_array_2d_3(ai1,ai2)=macro_variables_longint_array_2d_5(ai1,ai2)
										Case "4"
											macro_variables_longint_array_2d_4(ai1,ai2)=macro_variables_longint_array_2d_5(ai1,ai2)
										Case "5"
											macro_variables_longint_array_2d_5(ai1,ai2)=macro_variables_longint_array_2d_5(ai1,ai2)
										Case "6"
											macro_variables_longint_array_2d_6(ai1,ai2)=macro_variables_longint_array_2d_5(ai1,ai2)
										Case "7"
											macro_variables_longint_array_2d_7(ai1,ai2)=macro_variables_longint_array_2d_5(ai1,ai2)
										Case "8"
											macro_variables_longint_array_2d_8(ai1,ai2)=macro_variables_longint_array_2d_5(ai1,ai2)
										Case "9"
											macro_variables_longint_array_2d_9(ai1,ai2)=macro_variables_longint_array_2d_5(ai1,ai2)
									End Select
								Next
							Next
						Case "6"
							For ai1=LBound(macro_variables_longint_array_2d_6) To UBound(macro_variables_longint_array_2d_6)
								For ai2=LBound(macro_variables_longint_array_2d_6,2) To UBound(macro_variables_longint_array_2d_6,2)
									Select Case array_index
										Case "1"
											macro_variables_longint_array_2d_1(ai1,ai2)=macro_variables_longint_array_2d_6(ai1,ai2)
										Case "2"
											macro_variables_longint_array_2d_2(ai1,ai2)=macro_variables_longint_array_2d_6(ai1,ai2)
										Case "3"
											macro_variables_longint_array_2d_3(ai1,ai2)=macro_variables_longint_array_2d_6(ai1,ai2)
										Case "4"
											macro_variables_longint_array_2d_4(ai1,ai2)=macro_variables_longint_array_2d_6(ai1,ai2)
										Case "5"
											macro_variables_longint_array_2d_5(ai1,ai2)=macro_variables_longint_array_2d_6(ai1,ai2)
										Case "6"
											macro_variables_longint_array_2d_6(ai1,ai2)=macro_variables_longint_array_2d_6(ai1,ai2)
										Case "7"
											macro_variables_longint_array_2d_7(ai1,ai2)=macro_variables_longint_array_2d_6(ai1,ai2)
										Case "8"
											macro_variables_longint_array_2d_8(ai1,ai2)=macro_variables_longint_array_2d_6(ai1,ai2)
										Case "9"
											macro_variables_longint_array_2d_9(ai1,ai2)=macro_variables_longint_array_2d_6(ai1,ai2)
									End Select
								Next
							Next
						Case "7"
							For ai1=LBound(macro_variables_longint_array_2d_7) To UBound(macro_variables_longint_array_2d_7)
								For ai2=LBound(macro_variables_longint_array_2d_7,2) To UBound(macro_variables_longint_array_2d_7,2)
									Select Case array_index
										Case "1"
											macro_variables_longint_array_2d_1(ai1,ai2)=macro_variables_longint_array_2d_7(ai1,ai2)
										Case "2"
											macro_variables_longint_array_2d_2(ai1,ai2)=macro_variables_longint_array_2d_7(ai1,ai2)
										Case "3"
											macro_variables_longint_array_2d_3(ai1,ai2)=macro_variables_longint_array_2d_7(ai1,ai2)
										Case "4"
											macro_variables_longint_array_2d_4(ai1,ai2)=macro_variables_longint_array_2d_7(ai1,ai2)
										Case "5"
											macro_variables_longint_array_2d_5(ai1,ai2)=macro_variables_longint_array_2d_7(ai1,ai2)
										Case "6"
											macro_variables_longint_array_2d_6(ai1,ai2)=macro_variables_longint_array_2d_7(ai1,ai2)
										Case "7"
											macro_variables_longint_array_2d_7(ai1,ai2)=macro_variables_longint_array_2d_7(ai1,ai2)
										Case "8"
											macro_variables_longint_array_2d_8(ai1,ai2)=macro_variables_longint_array_2d_7(ai1,ai2)
										Case "9"
											macro_variables_longint_array_2d_9(ai1,ai2)=macro_variables_longint_array_2d_7(ai1,ai2)
									End Select
								Next
							Next
						Case "8"
							For ai1=LBound(macro_variables_longint_array_2d_8) To UBound(macro_variables_longint_array_2d_8)
								For ai2=LBound(macro_variables_longint_array_2d_8,2) To UBound(macro_variables_longint_array_2d_8,2)
									Select Case array_index
										Case "1"
											macro_variables_longint_array_2d_1(ai1,ai2)=macro_variables_longint_array_2d_8(ai1,ai2)
										Case "2"
											macro_variables_longint_array_2d_2(ai1,ai2)=macro_variables_longint_array_2d_8(ai1,ai2)
										Case "3"
											macro_variables_longint_array_2d_3(ai1,ai2)=macro_variables_longint_array_2d_8(ai1,ai2)
										Case "4"
											macro_variables_longint_array_2d_4(ai1,ai2)=macro_variables_longint_array_2d_8(ai1,ai2)
										Case "5"
											macro_variables_longint_array_2d_5(ai1,ai2)=macro_variables_longint_array_2d_8(ai1,ai2)
										Case "6"
											macro_variables_longint_array_2d_6(ai1,ai2)=macro_variables_longint_array_2d_8(ai1,ai2)
										Case "7"
											macro_variables_longint_array_2d_7(ai1,ai2)=macro_variables_longint_array_2d_8(ai1,ai2)
										Case "8"
											macro_variables_longint_array_2d_8(ai1,ai2)=macro_variables_longint_array_2d_8(ai1,ai2)
										Case "9"
											macro_variables_longint_array_2d_9(ai1,ai2)=macro_variables_longint_array_2d_8(ai1,ai2)
									End Select
								Next
							Next
						Case "9"
							For ai1=LBound(macro_variables_longint_array_2d_9) To UBound(macro_variables_longint_array_2d_9)
								For ai2=LBound(macro_variables_longint_array_2d_9,2) To UBound(macro_variables_longint_array_2d_9,2)
									Select Case array_index
										Case "1"
											macro_variables_longint_array_2d_1(ai1,ai2)=macro_variables_longint_array_2d_9(ai1,ai2)
										Case "2"
											macro_variables_longint_array_2d_2(ai1,ai2)=macro_variables_longint_array_2d_9(ai1,ai2)
										Case "3"
											macro_variables_longint_array_2d_3(ai1,ai2)=macro_variables_longint_array_2d_9(ai1,ai2)
										Case "4"
											macro_variables_longint_array_2d_4(ai1,ai2)=macro_variables_longint_array_2d_9(ai1,ai2)
										Case "5"
											macro_variables_longint_array_2d_5(ai1,ai2)=macro_variables_longint_array_2d_9(ai1,ai2)
										Case "6"
											macro_variables_longint_array_2d_6(ai1,ai2)=macro_variables_longint_array_2d_9(ai1,ai2)
										Case "7"
											macro_variables_longint_array_2d_7(ai1,ai2)=macro_variables_longint_array_2d_9(ai1,ai2)
										Case "8"
											macro_variables_longint_array_2d_8(ai1,ai2)=macro_variables_longint_array_2d_9(ai1,ai2)
										Case "9"
											macro_variables_longint_array_2d_9(ai1,ai2)=macro_variables_longint_array_2d_9(ai1,ai2)
									End Select
								Next
							Next
					End Select
				Case "3d"
					Select Case macro_variables_info(a,3)
						Case "1"
							For ai1=LBound(macro_variables_longint_array_3d_1) To UBound(macro_variables_longint_array_3d_1)
								For ai2=LBound(macro_variables_longint_array_3d_1,2) To UBound(macro_variables_longint_array_3d_1,2)
									For ai3=LBound(macro_variables_longint_array_3d_1,3) To UBound(macro_variables_longint_array_3d_1,3)
										Select Case array_index
											Case "1"
												macro_variables_longint_array_3d_1(ai1,ai2,ai3)=macro_variables_longint_array_3d_1(ai1,ai2,ai3)
											Case "2"
												macro_variables_longint_array_3d_2(ai1,ai2,ai3)=macro_variables_longint_array_3d_1(ai1,ai2,ai3)
											Case "3"
												macro_variables_longint_array_3d_3(ai1,ai2,ai3)=macro_variables_longint_array_3d_1(ai1,ai2,ai3)
											Case "4"
												macro_variables_longint_array_3d_4(ai1,ai2,ai3)=macro_variables_longint_array_3d_1(ai1,ai2,ai3)
											Case "5"
												macro_variables_longint_array_3d_5(ai1,ai2,ai3)=macro_variables_longint_array_3d_1(ai1,ai2,ai3)
											Case "6"
												macro_variables_longint_array_3d_6(ai1,ai2,ai3)=macro_variables_longint_array_3d_1(ai1,ai2,ai3)
											Case "7"
												macro_variables_longint_array_3d_7(ai1,ai2,ai3)=macro_variables_longint_array_3d_1(ai1,ai2,ai3)
											Case "8"
												macro_variables_longint_array_3d_8(ai1,ai2,ai3)=macro_variables_longint_array_3d_1(ai1,ai2,ai3)
											Case "9"
												macro_variables_longint_array_3d_9(ai1,ai2,ai3)=macro_variables_longint_array_3d_1(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "2"
							For ai1=LBound(macro_variables_longint_array_3d_2) To UBound(macro_variables_longint_array_3d_2)
								For ai2=LBound(macro_variables_longint_array_3d_2,2) To UBound(macro_variables_longint_array_3d_2,2)
									For ai3=LBound(macro_variables_longint_array_3d_2,3) To UBound(macro_variables_longint_array_3d_2,3)
										Select Case array_index
											Case "1"
												macro_variables_longint_array_3d_1(ai1,ai2,ai3)=macro_variables_longint_array_3d_2(ai1,ai2,ai3)
											Case "2"
												macro_variables_longint_array_3d_2(ai1,ai2,ai3)=macro_variables_longint_array_3d_2(ai1,ai2,ai3)
											Case "3"
												macro_variables_longint_array_3d_3(ai1,ai2,ai3)=macro_variables_longint_array_3d_2(ai1,ai2,ai3)
											Case "4"
												macro_variables_longint_array_3d_4(ai1,ai2,ai3)=macro_variables_longint_array_3d_2(ai1,ai2,ai3)
											Case "5"
												macro_variables_longint_array_3d_5(ai1,ai2,ai3)=macro_variables_longint_array_3d_2(ai1,ai2,ai3)
											Case "6"
												macro_variables_longint_array_3d_6(ai1,ai2,ai3)=macro_variables_longint_array_3d_2(ai1,ai2,ai3)
											Case "7"
												macro_variables_longint_array_3d_7(ai1,ai2,ai3)=macro_variables_longint_array_3d_2(ai1,ai2,ai3)
											Case "8"
												macro_variables_longint_array_3d_8(ai1,ai2,ai3)=macro_variables_longint_array_3d_2(ai1,ai2,ai3)
											Case "9"
												macro_variables_longint_array_3d_9(ai1,ai2,ai3)=macro_variables_longint_array_3d_2(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "3"
							For ai1=LBound(macro_variables_longint_array_3d_3) To UBound(macro_variables_longint_array_3d_3)
								For ai2=LBound(macro_variables_longint_array_3d_3,2) To UBound(macro_variables_longint_array_3d_3,2)
									For ai3=LBound(macro_variables_longint_array_3d_3,3) To UBound(macro_variables_longint_array_3d_3,3)
										Select Case array_index
											Case "1"
												macro_variables_longint_array_3d_1(ai1,ai2,ai3)=macro_variables_longint_array_3d_3(ai1,ai2,ai3)
											Case "2"
												macro_variables_longint_array_3d_2(ai1,ai2,ai3)=macro_variables_longint_array_3d_3(ai1,ai2,ai3)
											Case "3"
												macro_variables_longint_array_3d_3(ai1,ai2,ai3)=macro_variables_longint_array_3d_3(ai1,ai2,ai3)
											Case "4"
												macro_variables_longint_array_3d_4(ai1,ai2,ai3)=macro_variables_longint_array_3d_3(ai1,ai2,ai3)
											Case "5"
												macro_variables_longint_array_3d_5(ai1,ai2,ai3)=macro_variables_longint_array_3d_3(ai1,ai2,ai3)
											Case "6"
												macro_variables_longint_array_3d_6(ai1,ai2,ai3)=macro_variables_longint_array_3d_3(ai1,ai2,ai3)
											Case "7"
												macro_variables_longint_array_3d_7(ai1,ai2,ai3)=macro_variables_longint_array_3d_3(ai1,ai2,ai3)
											Case "8"
												macro_variables_longint_array_3d_8(ai1,ai2,ai3)=macro_variables_longint_array_3d_3(ai1,ai2,ai3)
											Case "9"
												macro_variables_longint_array_3d_9(ai1,ai2,ai3)=macro_variables_longint_array_3d_3(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "4"
							For ai1=LBound(macro_variables_longint_array_3d_4) To UBound(macro_variables_longint_array_3d_4)
								For ai2=LBound(macro_variables_longint_array_3d_4,2) To UBound(macro_variables_longint_array_3d_4,2)
									For ai3=LBound(macro_variables_longint_array_3d_4,3) To UBound(macro_variables_longint_array_3d_4,3)
										Select Case array_index
											Case "1"
												macro_variables_longint_array_3d_1(ai1,ai2,ai3)=macro_variables_longint_array_3d_4(ai1,ai2,ai3)
											Case "2"
												macro_variables_longint_array_3d_2(ai1,ai2,ai3)=macro_variables_longint_array_3d_4(ai1,ai2,ai3)
											Case "3"
												macro_variables_longint_array_3d_3(ai1,ai2,ai3)=macro_variables_longint_array_3d_4(ai1,ai2,ai3)
											Case "4"
												macro_variables_longint_array_3d_4(ai1,ai2,ai3)=macro_variables_longint_array_3d_4(ai1,ai2,ai3)
											Case "5"
												macro_variables_longint_array_3d_5(ai1,ai2,ai3)=macro_variables_longint_array_3d_4(ai1,ai2,ai3)
											Case "6"
												macro_variables_longint_array_3d_6(ai1,ai2,ai3)=macro_variables_longint_array_3d_4(ai1,ai2,ai3)
											Case "7"
												macro_variables_longint_array_3d_7(ai1,ai2,ai3)=macro_variables_longint_array_3d_4(ai1,ai2,ai3)
											Case "8"
												macro_variables_longint_array_3d_8(ai1,ai2,ai3)=macro_variables_longint_array_3d_4(ai1,ai2,ai3)
											Case "9"
												macro_variables_longint_array_3d_9(ai1,ai2,ai3)=macro_variables_longint_array_3d_4(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "5"
							For ai1=LBound(macro_variables_longint_array_3d_5) To UBound(macro_variables_longint_array_3d_5)
								For ai2=LBound(macro_variables_longint_array_3d_5,2) To UBound(macro_variables_longint_array_3d_5,2)
									For ai3=LBound(macro_variables_longint_array_3d_5,3) To UBound(macro_variables_longint_array_3d_5,3)
										Select Case array_index
											Case "1"
												macro_variables_longint_array_3d_1(ai1,ai2,ai3)=macro_variables_longint_array_3d_5(ai1,ai2,ai3)
											Case "2"
												macro_variables_longint_array_3d_2(ai1,ai2,ai3)=macro_variables_longint_array_3d_5(ai1,ai2,ai3)
											Case "3"
												macro_variables_longint_array_3d_3(ai1,ai2,ai3)=macro_variables_longint_array_3d_5(ai1,ai2,ai3)
											Case "4"
												macro_variables_longint_array_3d_4(ai1,ai2,ai3)=macro_variables_longint_array_3d_5(ai1,ai2,ai3)
											Case "5"
												macro_variables_longint_array_3d_5(ai1,ai2,ai3)=macro_variables_longint_array_3d_5(ai1,ai2,ai3)
											Case "6"
												macro_variables_longint_array_3d_6(ai1,ai2,ai3)=macro_variables_longint_array_3d_5(ai1,ai2,ai3)
											Case "7"
												macro_variables_longint_array_3d_7(ai1,ai2,ai3)=macro_variables_longint_array_3d_5(ai1,ai2,ai3)
											Case "8"
												macro_variables_longint_array_3d_8(ai1,ai2,ai3)=macro_variables_longint_array_3d_5(ai1,ai2,ai3)
											Case "9"
												macro_variables_longint_array_3d_9(ai1,ai2,ai3)=macro_variables_longint_array_3d_5(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "6"
							For ai1=LBound(macro_variables_longint_array_3d_6) To UBound(macro_variables_longint_array_3d_6)
								For ai2=LBound(macro_variables_longint_array_3d_6,2) To UBound(macro_variables_longint_array_3d_6,2)
									For ai3=LBound(macro_variables_longint_array_3d_6,3) To UBound(macro_variables_longint_array_3d_6,3)
										Select Case array_index
											Case "1"
												macro_variables_longint_array_3d_1(ai1,ai2,ai3)=macro_variables_longint_array_3d_6(ai1,ai2,ai3)
											Case "2"
												macro_variables_longint_array_3d_2(ai1,ai2,ai3)=macro_variables_longint_array_3d_6(ai1,ai2,ai3)
											Case "3"
												macro_variables_longint_array_3d_3(ai1,ai2,ai3)=macro_variables_longint_array_3d_6(ai1,ai2,ai3)
											Case "4"
												macro_variables_longint_array_3d_4(ai1,ai2,ai3)=macro_variables_longint_array_3d_6(ai1,ai2,ai3)
											Case "5"
												macro_variables_longint_array_3d_5(ai1,ai2,ai3)=macro_variables_longint_array_3d_6(ai1,ai2,ai3)
											Case "6"
												macro_variables_longint_array_3d_6(ai1,ai2,ai3)=macro_variables_longint_array_3d_6(ai1,ai2,ai3)
											Case "7"
												macro_variables_longint_array_3d_7(ai1,ai2,ai3)=macro_variables_longint_array_3d_6(ai1,ai2,ai3)
											Case "8"
												macro_variables_longint_array_3d_8(ai1,ai2,ai3)=macro_variables_longint_array_3d_6(ai1,ai2,ai3)
											Case "9"
												macro_variables_longint_array_3d_9(ai1,ai2,ai3)=macro_variables_longint_array_3d_6(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "7"
							For ai1=LBound(macro_variables_longint_array_3d_7) To UBound(macro_variables_longint_array_3d_7)
								For ai2=LBound(macro_variables_longint_array_3d_7,2) To UBound(macro_variables_longint_array_3d_7,2)
									For ai3=LBound(macro_variables_longint_array_3d_7,3) To UBound(macro_variables_longint_array_3d_7,3)
										Select Case array_index
											Case "1"
												macro_variables_longint_array_3d_1(ai1,ai2,ai3)=macro_variables_longint_array_3d_7(ai1,ai2,ai3)
											Case "2"
												macro_variables_longint_array_3d_2(ai1,ai2,ai3)=macro_variables_longint_array_3d_7(ai1,ai2,ai3)
											Case "3"
												macro_variables_longint_array_3d_3(ai1,ai2,ai3)=macro_variables_longint_array_3d_7(ai1,ai2,ai3)
											Case "4"
												macro_variables_longint_array_3d_4(ai1,ai2,ai3)=macro_variables_longint_array_3d_7(ai1,ai2,ai3)
											Case "5"
												macro_variables_longint_array_3d_5(ai1,ai2,ai3)=macro_variables_longint_array_3d_7(ai1,ai2,ai3)
											Case "6"
												macro_variables_longint_array_3d_6(ai1,ai2,ai3)=macro_variables_longint_array_3d_7(ai1,ai2,ai3)
											Case "7"
												macro_variables_longint_array_3d_7(ai1,ai2,ai3)=macro_variables_longint_array_3d_7(ai1,ai2,ai3)
											Case "8"
												macro_variables_longint_array_3d_8(ai1,ai2,ai3)=macro_variables_longint_array_3d_7(ai1,ai2,ai3)
											Case "9"
												macro_variables_longint_array_3d_9(ai1,ai2,ai3)=macro_variables_longint_array_3d_7(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "8"
							For ai1=LBound(macro_variables_longint_array_3d_8) To UBound(macro_variables_longint_array_3d_8)
								For ai2=LBound(macro_variables_longint_array_3d_8,2) To UBound(macro_variables_longint_array_3d_8,2)
									For ai3=LBound(macro_variables_longint_array_3d_8,3) To UBound(macro_variables_longint_array_3d_8,3)
										Select Case array_index
											Case "1"
												macro_variables_longint_array_3d_1(ai1,ai2,ai3)=macro_variables_longint_array_3d_8(ai1,ai2,ai3)
											Case "2"
												macro_variables_longint_array_3d_2(ai1,ai2,ai3)=macro_variables_longint_array_3d_8(ai1,ai2,ai3)
											Case "3"
												macro_variables_longint_array_3d_3(ai1,ai2,ai3)=macro_variables_longint_array_3d_8(ai1,ai2,ai3)
											Case "4"
												macro_variables_longint_array_3d_4(ai1,ai2,ai3)=macro_variables_longint_array_3d_8(ai1,ai2,ai3)
											Case "5"
												macro_variables_longint_array_3d_5(ai1,ai2,ai3)=macro_variables_longint_array_3d_8(ai1,ai2,ai3)
											Case "6"
												macro_variables_longint_array_3d_6(ai1,ai2,ai3)=macro_variables_longint_array_3d_8(ai1,ai2,ai3)
											Case "7"
												macro_variables_longint_array_3d_7(ai1,ai2,ai3)=macro_variables_longint_array_3d_8(ai1,ai2,ai3)
											Case "8"
												macro_variables_longint_array_3d_8(ai1,ai2,ai3)=macro_variables_longint_array_3d_8(ai1,ai2,ai3)
											Case "9"
												macro_variables_longint_array_3d_9(ai1,ai2,ai3)=macro_variables_longint_array_3d_8(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "9"
							For ai1=LBound(macro_variables_longint_array_3d_9) To UBound(macro_variables_longint_array_3d_9)
								For ai2=LBound(macro_variables_longint_array_3d_9,2) To UBound(macro_variables_longint_array_3d_9,2)
									For ai3=LBound(macro_variables_longint_array_3d_9,3) To UBound(macro_variables_longint_array_3d_9,3)
										Select Case array_index
											Case "1"
												macro_variables_longint_array_3d_1(ai1,ai2,ai3)=macro_variables_longint_array_3d_9(ai1,ai2,ai3)
											Case "2"
												macro_variables_longint_array_3d_2(ai1,ai2,ai3)=macro_variables_longint_array_3d_9(ai1,ai2,ai3)
											Case "3"
												macro_variables_longint_array_3d_3(ai1,ai2,ai3)=macro_variables_longint_array_3d_9(ai1,ai2,ai3)
											Case "4"
												macro_variables_longint_array_3d_4(ai1,ai2,ai3)=macro_variables_longint_array_3d_9(ai1,ai2,ai3)
											Case "5"
												macro_variables_longint_array_3d_5(ai1,ai2,ai3)=macro_variables_longint_array_3d_9(ai1,ai2,ai3)
											Case "6"
												macro_variables_longint_array_3d_6(ai1,ai2,ai3)=macro_variables_longint_array_3d_9(ai1,ai2,ai3)
											Case "7"
												macro_variables_longint_array_3d_7(ai1,ai2,ai3)=macro_variables_longint_array_3d_9(ai1,ai2,ai3)
											Case "8"
												macro_variables_longint_array_3d_8(ai1,ai2,ai3)=macro_variables_longint_array_3d_9(ai1,ai2,ai3)
											Case "9"
												macro_variables_longint_array_3d_9(ai1,ai2,ai3)=macro_variables_longint_array_3d_9(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
					End Select
			End Select
		Case "ULONGINT_ARRAY"
			Select Case macro_variables_info(a,5)
				Case "1d"
					Select Case macro_variables_info(a,3)
						Case "1"
							For ai1=LBound(macro_variables_ulongint_array_1d_1) To UBound(macro_variables_ulongint_array_1d_1)
								Select Case array_index
									Case "1"
										macro_variables_ulongint_array_1d_1(ai1)=macro_variables_ulongint_array_1d_1(ai1)
									Case "2"
										macro_variables_ulongint_array_1d_2(ai1)=macro_variables_ulongint_array_1d_1(ai1)
									Case "3"
										macro_variables_ulongint_array_1d_3(ai1)=macro_variables_ulongint_array_1d_1(ai1)
									Case "4"
										macro_variables_ulongint_array_1d_4(ai1)=macro_variables_ulongint_array_1d_1(ai1)
									Case "5"
										macro_variables_ulongint_array_1d_5(ai1)=macro_variables_ulongint_array_1d_1(ai1)
									Case "6"
										macro_variables_ulongint_array_1d_6(ai1)=macro_variables_ulongint_array_1d_1(ai1)
									Case "7"
										macro_variables_ulongint_array_1d_7(ai1)=macro_variables_ulongint_array_1d_1(ai1)
									Case "8"
										macro_variables_ulongint_array_1d_8(ai1)=macro_variables_ulongint_array_1d_1(ai1)
									Case "9"
										macro_variables_ulongint_array_1d_9(ai1)=macro_variables_ulongint_array_1d_1(ai1)
								End Select
							Next
						Case "2"
							For ai1=LBound(macro_variables_ulongint_array_1d_2) To UBound(macro_variables_ulongint_array_1d_2)
								Select Case array_index
									Case "1"
										macro_variables_ulongint_array_1d_1(ai1)=macro_variables_ulongint_array_1d_2(ai1)
									Case "2"
										macro_variables_ulongint_array_1d_2(ai1)=macro_variables_ulongint_array_1d_2(ai1)
									Case "3"
										macro_variables_ulongint_array_1d_3(ai1)=macro_variables_ulongint_array_1d_2(ai1)
									Case "4"
										macro_variables_ulongint_array_1d_4(ai1)=macro_variables_ulongint_array_1d_2(ai1)
									Case "5"
										macro_variables_ulongint_array_1d_5(ai1)=macro_variables_ulongint_array_1d_2(ai1)
									Case "6"
										macro_variables_ulongint_array_1d_6(ai1)=macro_variables_ulongint_array_1d_2(ai1)
									Case "7"
										macro_variables_ulongint_array_1d_7(ai1)=macro_variables_ulongint_array_1d_2(ai1)
									Case "8"
										macro_variables_ulongint_array_1d_8(ai1)=macro_variables_ulongint_array_1d_2(ai1)
									Case "9"
										macro_variables_ulongint_array_1d_9(ai1)=macro_variables_ulongint_array_1d_2(ai1)
								End Select
							Next
						Case "3"
							For ai1=LBound(macro_variables_ulongint_array_1d_3) To UBound(macro_variables_ulongint_array_1d_3)
								Select Case array_index
									Case "1"
										macro_variables_ulongint_array_1d_1(ai1)=macro_variables_ulongint_array_1d_3(ai1)
									Case "2"
										macro_variables_ulongint_array_1d_2(ai1)=macro_variables_ulongint_array_1d_3(ai1)
									Case "3"
										macro_variables_ulongint_array_1d_3(ai1)=macro_variables_ulongint_array_1d_3(ai1)
									Case "4"
										macro_variables_ulongint_array_1d_4(ai1)=macro_variables_ulongint_array_1d_3(ai1)
									Case "5"
										macro_variables_ulongint_array_1d_5(ai1)=macro_variables_ulongint_array_1d_3(ai1)
									Case "6"
										macro_variables_ulongint_array_1d_6(ai1)=macro_variables_ulongint_array_1d_3(ai1)
									Case "7"
										macro_variables_ulongint_array_1d_7(ai1)=macro_variables_ulongint_array_1d_3(ai1)
									Case "8"
										macro_variables_ulongint_array_1d_8(ai1)=macro_variables_ulongint_array_1d_3(ai1)
									Case "9"
										macro_variables_ulongint_array_1d_9(ai1)=macro_variables_ulongint_array_1d_3(ai1)
								End Select
							Next
						Case "4"
							For ai1=LBound(macro_variables_ulongint_array_1d_4) To UBound(macro_variables_ulongint_array_1d_4)
								Select Case array_index
									Case "1"
										macro_variables_ulongint_array_1d_1(ai1)=macro_variables_ulongint_array_1d_4(ai1)
									Case "2"
										macro_variables_ulongint_array_1d_2(ai1)=macro_variables_ulongint_array_1d_4(ai1)
									Case "3"
										macro_variables_ulongint_array_1d_3(ai1)=macro_variables_ulongint_array_1d_4(ai1)
									Case "4"
										macro_variables_ulongint_array_1d_4(ai1)=macro_variables_ulongint_array_1d_4(ai1)
									Case "5"
										macro_variables_ulongint_array_1d_5(ai1)=macro_variables_ulongint_array_1d_4(ai1)
									Case "6"
										macro_variables_ulongint_array_1d_6(ai1)=macro_variables_ulongint_array_1d_4(ai1)
									Case "7"
										macro_variables_ulongint_array_1d_7(ai1)=macro_variables_ulongint_array_1d_4(ai1)
									Case "8"
										macro_variables_ulongint_array_1d_8(ai1)=macro_variables_ulongint_array_1d_4(ai1)
									Case "9"
										macro_variables_ulongint_array_1d_9(ai1)=macro_variables_ulongint_array_1d_4(ai1)
								End Select
							Next
						Case "5"
							For ai1=LBound(macro_variables_ulongint_array_1d_5) To UBound(macro_variables_ulongint_array_1d_5)
								Select Case array_index
									Case "1"
										macro_variables_ulongint_array_1d_1(ai1)=macro_variables_ulongint_array_1d_5(ai1)
									Case "2"
										macro_variables_ulongint_array_1d_2(ai1)=macro_variables_ulongint_array_1d_5(ai1)
									Case "3"
										macro_variables_ulongint_array_1d_3(ai1)=macro_variables_ulongint_array_1d_5(ai1)
									Case "4"
										macro_variables_ulongint_array_1d_4(ai1)=macro_variables_ulongint_array_1d_5(ai1)
									Case "5"
										macro_variables_ulongint_array_1d_5(ai1)=macro_variables_ulongint_array_1d_5(ai1)
									Case "6"
										macro_variables_ulongint_array_1d_6(ai1)=macro_variables_ulongint_array_1d_5(ai1)
									Case "7"
										macro_variables_ulongint_array_1d_7(ai1)=macro_variables_ulongint_array_1d_5(ai1)
									Case "8"
										macro_variables_ulongint_array_1d_8(ai1)=macro_variables_ulongint_array_1d_5(ai1)
									Case "9"
										macro_variables_ulongint_array_1d_9(ai1)=macro_variables_ulongint_array_1d_5(ai1)
								End Select
							Next
						Case "6"
							For ai1=LBound(macro_variables_ulongint_array_1d_6) To UBound(macro_variables_ulongint_array_1d_6)
								Select Case array_index
									Case "1"
										macro_variables_ulongint_array_1d_1(ai1)=macro_variables_ulongint_array_1d_6(ai1)
									Case "2"
										macro_variables_ulongint_array_1d_2(ai1)=macro_variables_ulongint_array_1d_6(ai1)
									Case "3"
										macro_variables_ulongint_array_1d_3(ai1)=macro_variables_ulongint_array_1d_6(ai1)
									Case "4"
										macro_variables_ulongint_array_1d_4(ai1)=macro_variables_ulongint_array_1d_6(ai1)
									Case "5"
										macro_variables_ulongint_array_1d_5(ai1)=macro_variables_ulongint_array_1d_6(ai1)
									Case "6"
										macro_variables_ulongint_array_1d_6(ai1)=macro_variables_ulongint_array_1d_6(ai1)
									Case "7"
										macro_variables_ulongint_array_1d_7(ai1)=macro_variables_ulongint_array_1d_6(ai1)
									Case "8"
										macro_variables_ulongint_array_1d_8(ai1)=macro_variables_ulongint_array_1d_6(ai1)
									Case "9"
										macro_variables_ulongint_array_1d_9(ai1)=macro_variables_ulongint_array_1d_6(ai1)
								End Select
							Next
						Case "7"
							For ai1=LBound(macro_variables_ulongint_array_1d_7) To UBound(macro_variables_ulongint_array_1d_7)
								Select Case array_index
									Case "1"
										macro_variables_ulongint_array_1d_1(ai1)=macro_variables_ulongint_array_1d_7(ai1)
									Case "2"
										macro_variables_ulongint_array_1d_2(ai1)=macro_variables_ulongint_array_1d_7(ai1)
									Case "3"
										macro_variables_ulongint_array_1d_3(ai1)=macro_variables_ulongint_array_1d_7(ai1)
									Case "4"
										macro_variables_ulongint_array_1d_4(ai1)=macro_variables_ulongint_array_1d_7(ai1)
									Case "5"
										macro_variables_ulongint_array_1d_5(ai1)=macro_variables_ulongint_array_1d_7(ai1)
									Case "6"
										macro_variables_ulongint_array_1d_6(ai1)=macro_variables_ulongint_array_1d_7(ai1)
									Case "7"
										macro_variables_ulongint_array_1d_7(ai1)=macro_variables_ulongint_array_1d_7(ai1)
									Case "8"
										macro_variables_ulongint_array_1d_8(ai1)=macro_variables_ulongint_array_1d_7(ai1)
									Case "9"
										macro_variables_ulongint_array_1d_9(ai1)=macro_variables_ulongint_array_1d_7(ai1)
								End Select
							Next
						Case "8"
							For ai1=LBound(macro_variables_ulongint_array_1d_8) To UBound(macro_variables_ulongint_array_1d_8)
								Select Case array_index
									Case "1"
										macro_variables_ulongint_array_1d_1(ai1)=macro_variables_ulongint_array_1d_8(ai1)
									Case "2"
										macro_variables_ulongint_array_1d_2(ai1)=macro_variables_ulongint_array_1d_8(ai1)
									Case "3"
										macro_variables_ulongint_array_1d_3(ai1)=macro_variables_ulongint_array_1d_8(ai1)
									Case "4"
										macro_variables_ulongint_array_1d_4(ai1)=macro_variables_ulongint_array_1d_8(ai1)
									Case "5"
										macro_variables_ulongint_array_1d_5(ai1)=macro_variables_ulongint_array_1d_8(ai1)
									Case "6"
										macro_variables_ulongint_array_1d_6(ai1)=macro_variables_ulongint_array_1d_8(ai1)
									Case "7"
										macro_variables_ulongint_array_1d_7(ai1)=macro_variables_ulongint_array_1d_8(ai1)
									Case "8"
										macro_variables_ulongint_array_1d_8(ai1)=macro_variables_ulongint_array_1d_8(ai1)
									Case "9"
										macro_variables_ulongint_array_1d_9(ai1)=macro_variables_ulongint_array_1d_8(ai1)
								End Select
							Next
						Case "9"
							For ai1=LBound(macro_variables_ulongint_array_1d_9) To UBound(macro_variables_ulongint_array_1d_9)
								Select Case array_index
									Case "1"
										macro_variables_ulongint_array_1d_1(ai1)=macro_variables_ulongint_array_1d_9(ai1)
									Case "2"
										macro_variables_ulongint_array_1d_2(ai1)=macro_variables_ulongint_array_1d_9(ai1)
									Case "3"
										macro_variables_ulongint_array_1d_3(ai1)=macro_variables_ulongint_array_1d_9(ai1)
									Case "4"
										macro_variables_ulongint_array_1d_4(ai1)=macro_variables_ulongint_array_1d_9(ai1)
									Case "5"
										macro_variables_ulongint_array_1d_5(ai1)=macro_variables_ulongint_array_1d_9(ai1)
									Case "6"
										macro_variables_ulongint_array_1d_6(ai1)=macro_variables_ulongint_array_1d_9(ai1)
									Case "7"
										macro_variables_ulongint_array_1d_7(ai1)=macro_variables_ulongint_array_1d_9(ai1)
									Case "8"
										macro_variables_ulongint_array_1d_8(ai1)=macro_variables_ulongint_array_1d_9(ai1)
									Case "9"
										macro_variables_ulongint_array_1d_9(ai1)=macro_variables_ulongint_array_1d_9(ai1)
								End Select
							Next
					End Select
				Case "2d"
					Select Case macro_variables_info(a,3)
						Case "1"
							For ai1=LBound(macro_variables_ulongint_array_2d_1) To UBound(macro_variables_ulongint_array_2d_1)
								For ai2=LBound(macro_variables_ulongint_array_2d_1,2) To UBound(macro_variables_ulongint_array_2d_1,2)
									Select Case array_index
										Case "1"
											macro_variables_ulongint_array_2d_1(ai1,ai2)=macro_variables_ulongint_array_2d_1(ai1,ai2)
										Case "2"
											macro_variables_ulongint_array_2d_2(ai1,ai2)=macro_variables_ulongint_array_2d_1(ai1,ai2)
										Case "3"
											macro_variables_ulongint_array_2d_3(ai1,ai2)=macro_variables_ulongint_array_2d_1(ai1,ai2)
										Case "4"
											macro_variables_ulongint_array_2d_4(ai1,ai2)=macro_variables_ulongint_array_2d_1(ai1,ai2)
										Case "5"
											macro_variables_ulongint_array_2d_5(ai1,ai2)=macro_variables_ulongint_array_2d_1(ai1,ai2)
										Case "6"
											macro_variables_ulongint_array_2d_6(ai1,ai2)=macro_variables_ulongint_array_2d_1(ai1,ai2)
										Case "7"
											macro_variables_ulongint_array_2d_7(ai1,ai2)=macro_variables_ulongint_array_2d_1(ai1,ai2)
										Case "8"
											macro_variables_ulongint_array_2d_8(ai1,ai2)=macro_variables_ulongint_array_2d_1(ai1,ai2)
										Case "9"
											macro_variables_ulongint_array_2d_9(ai1,ai2)=macro_variables_ulongint_array_2d_1(ai1,ai2)
									End Select
								Next
							Next
						Case "2"
							For ai1=LBound(macro_variables_ulongint_array_2d_2) To UBound(macro_variables_ulongint_array_2d_2)
								For ai2=LBound(macro_variables_ulongint_array_2d_2,2) To UBound(macro_variables_ulongint_array_2d_2,2)
									Select Case array_index
										Case "1"
											macro_variables_ulongint_array_2d_1(ai1,ai2)=macro_variables_ulongint_array_2d_2(ai1,ai2)
										Case "2"
											macro_variables_ulongint_array_2d_2(ai1,ai2)=macro_variables_ulongint_array_2d_2(ai1,ai2)
										Case "3"
											macro_variables_ulongint_array_2d_3(ai1,ai2)=macro_variables_ulongint_array_2d_2(ai1,ai2)
										Case "4"
											macro_variables_ulongint_array_2d_4(ai1,ai2)=macro_variables_ulongint_array_2d_2(ai1,ai2)
										Case "5"
											macro_variables_ulongint_array_2d_5(ai1,ai2)=macro_variables_ulongint_array_2d_2(ai1,ai2)
										Case "6"
											macro_variables_ulongint_array_2d_6(ai1,ai2)=macro_variables_ulongint_array_2d_2(ai1,ai2)
										Case "7"
											macro_variables_ulongint_array_2d_7(ai1,ai2)=macro_variables_ulongint_array_2d_2(ai1,ai2)
										Case "8"
											macro_variables_ulongint_array_2d_8(ai1,ai2)=macro_variables_ulongint_array_2d_2(ai1,ai2)
										Case "9"
											macro_variables_ulongint_array_2d_9(ai1,ai2)=macro_variables_ulongint_array_2d_2(ai1,ai2)
									End Select
								Next
							Next
						Case "3"
							For ai1=LBound(macro_variables_ulongint_array_2d_3) To UBound(macro_variables_ulongint_array_2d_3)
								For ai2=LBound(macro_variables_ulongint_array_2d_3,2) To UBound(macro_variables_ulongint_array_2d_3,2)
									Select Case array_index
										Case "1"
											macro_variables_ulongint_array_2d_1(ai1,ai2)=macro_variables_ulongint_array_2d_3(ai1,ai2)
										Case "2"
											macro_variables_ulongint_array_2d_2(ai1,ai2)=macro_variables_ulongint_array_2d_3(ai1,ai2)
										Case "3"
											macro_variables_ulongint_array_2d_3(ai1,ai2)=macro_variables_ulongint_array_2d_3(ai1,ai2)
										Case "4"
											macro_variables_ulongint_array_2d_4(ai1,ai2)=macro_variables_ulongint_array_2d_3(ai1,ai2)
										Case "5"
											macro_variables_ulongint_array_2d_5(ai1,ai2)=macro_variables_ulongint_array_2d_3(ai1,ai2)
										Case "6"
											macro_variables_ulongint_array_2d_6(ai1,ai2)=macro_variables_ulongint_array_2d_3(ai1,ai2)
										Case "7"
											macro_variables_ulongint_array_2d_7(ai1,ai2)=macro_variables_ulongint_array_2d_3(ai1,ai2)
										Case "8"
											macro_variables_ulongint_array_2d_8(ai1,ai2)=macro_variables_ulongint_array_2d_3(ai1,ai2)
										Case "9"
											macro_variables_ulongint_array_2d_9(ai1,ai2)=macro_variables_ulongint_array_2d_3(ai1,ai2)
									End Select
								Next
							Next
						Case "4"
							For ai1=LBound(macro_variables_ulongint_array_2d_4) To UBound(macro_variables_ulongint_array_2d_4)
								For ai2=LBound(macro_variables_ulongint_array_2d_4,2) To UBound(macro_variables_ulongint_array_2d_4,2)
									Select Case array_index
										Case "1"
											macro_variables_ulongint_array_2d_1(ai1,ai2)=macro_variables_ulongint_array_2d_4(ai1,ai2)
										Case "2"
											macro_variables_ulongint_array_2d_2(ai1,ai2)=macro_variables_ulongint_array_2d_4(ai1,ai2)
										Case "3"
											macro_variables_ulongint_array_2d_3(ai1,ai2)=macro_variables_ulongint_array_2d_4(ai1,ai2)
										Case "4"
											macro_variables_ulongint_array_2d_4(ai1,ai2)=macro_variables_ulongint_array_2d_4(ai1,ai2)
										Case "5"
											macro_variables_ulongint_array_2d_5(ai1,ai2)=macro_variables_ulongint_array_2d_4(ai1,ai2)
										Case "6"
											macro_variables_ulongint_array_2d_6(ai1,ai2)=macro_variables_ulongint_array_2d_4(ai1,ai2)
										Case "7"
											macro_variables_ulongint_array_2d_7(ai1,ai2)=macro_variables_ulongint_array_2d_4(ai1,ai2)
										Case "8"
											macro_variables_ulongint_array_2d_8(ai1,ai2)=macro_variables_ulongint_array_2d_4(ai1,ai2)
										Case "9"
											macro_variables_ulongint_array_2d_9(ai1,ai2)=macro_variables_ulongint_array_2d_4(ai1,ai2)
									End Select
								Next
							Next
						Case "5"
							For ai1=LBound(macro_variables_ulongint_array_2d_5) To UBound(macro_variables_ulongint_array_2d_5)
								For ai2=LBound(macro_variables_ulongint_array_2d_5,2) To UBound(macro_variables_ulongint_array_2d_5,2)
									Select Case array_index
										Case "1"
											macro_variables_ulongint_array_2d_1(ai1,ai2)=macro_variables_ulongint_array_2d_5(ai1,ai2)
										Case "2"
											macro_variables_ulongint_array_2d_2(ai1,ai2)=macro_variables_ulongint_array_2d_5(ai1,ai2)
										Case "3"
											macro_variables_ulongint_array_2d_3(ai1,ai2)=macro_variables_ulongint_array_2d_5(ai1,ai2)
										Case "4"
											macro_variables_ulongint_array_2d_4(ai1,ai2)=macro_variables_ulongint_array_2d_5(ai1,ai2)
										Case "5"
											macro_variables_ulongint_array_2d_5(ai1,ai2)=macro_variables_ulongint_array_2d_5(ai1,ai2)
										Case "6"
											macro_variables_ulongint_array_2d_6(ai1,ai2)=macro_variables_ulongint_array_2d_5(ai1,ai2)
										Case "7"
											macro_variables_ulongint_array_2d_7(ai1,ai2)=macro_variables_ulongint_array_2d_5(ai1,ai2)
										Case "8"
											macro_variables_ulongint_array_2d_8(ai1,ai2)=macro_variables_ulongint_array_2d_5(ai1,ai2)
										Case "9"
											macro_variables_ulongint_array_2d_9(ai1,ai2)=macro_variables_ulongint_array_2d_5(ai1,ai2)
									End Select
								Next
							Next
						Case "6"
							For ai1=LBound(macro_variables_ulongint_array_2d_6) To UBound(macro_variables_ulongint_array_2d_6)
								For ai2=LBound(macro_variables_ulongint_array_2d_6,2) To UBound(macro_variables_ulongint_array_2d_6,2)
									Select Case array_index
										Case "1"
											macro_variables_ulongint_array_2d_1(ai1,ai2)=macro_variables_ulongint_array_2d_6(ai1,ai2)
										Case "2"
											macro_variables_ulongint_array_2d_2(ai1,ai2)=macro_variables_ulongint_array_2d_6(ai1,ai2)
										Case "3"
											macro_variables_ulongint_array_2d_3(ai1,ai2)=macro_variables_ulongint_array_2d_6(ai1,ai2)
										Case "4"
											macro_variables_ulongint_array_2d_4(ai1,ai2)=macro_variables_ulongint_array_2d_6(ai1,ai2)
										Case "5"
											macro_variables_ulongint_array_2d_5(ai1,ai2)=macro_variables_ulongint_array_2d_6(ai1,ai2)
										Case "6"
											macro_variables_ulongint_array_2d_6(ai1,ai2)=macro_variables_ulongint_array_2d_6(ai1,ai2)
										Case "7"
											macro_variables_ulongint_array_2d_7(ai1,ai2)=macro_variables_ulongint_array_2d_6(ai1,ai2)
										Case "8"
											macro_variables_ulongint_array_2d_8(ai1,ai2)=macro_variables_ulongint_array_2d_6(ai1,ai2)
										Case "9"
											macro_variables_ulongint_array_2d_9(ai1,ai2)=macro_variables_ulongint_array_2d_6(ai1,ai2)
									End Select
								Next
							Next
						Case "7"
							For ai1=LBound(macro_variables_ulongint_array_2d_7) To UBound(macro_variables_ulongint_array_2d_7)
								For ai2=LBound(macro_variables_ulongint_array_2d_7,2) To UBound(macro_variables_ulongint_array_2d_7,2)
									Select Case array_index
										Case "1"
											macro_variables_ulongint_array_2d_1(ai1,ai2)=macro_variables_ulongint_array_2d_7(ai1,ai2)
										Case "2"
											macro_variables_ulongint_array_2d_2(ai1,ai2)=macro_variables_ulongint_array_2d_7(ai1,ai2)
										Case "3"
											macro_variables_ulongint_array_2d_3(ai1,ai2)=macro_variables_ulongint_array_2d_7(ai1,ai2)
										Case "4"
											macro_variables_ulongint_array_2d_4(ai1,ai2)=macro_variables_ulongint_array_2d_7(ai1,ai2)
										Case "5"
											macro_variables_ulongint_array_2d_5(ai1,ai2)=macro_variables_ulongint_array_2d_7(ai1,ai2)
										Case "6"
											macro_variables_ulongint_array_2d_6(ai1,ai2)=macro_variables_ulongint_array_2d_7(ai1,ai2)
										Case "7"
											macro_variables_ulongint_array_2d_7(ai1,ai2)=macro_variables_ulongint_array_2d_7(ai1,ai2)
										Case "8"
											macro_variables_ulongint_array_2d_8(ai1,ai2)=macro_variables_ulongint_array_2d_7(ai1,ai2)
										Case "9"
											macro_variables_ulongint_array_2d_9(ai1,ai2)=macro_variables_ulongint_array_2d_7(ai1,ai2)
									End Select
								Next
							Next
						Case "8"
							For ai1=LBound(macro_variables_ulongint_array_2d_8) To UBound(macro_variables_ulongint_array_2d_8)
								For ai2=LBound(macro_variables_ulongint_array_2d_8,2) To UBound(macro_variables_ulongint_array_2d_8,2)
									Select Case array_index
										Case "1"
											macro_variables_ulongint_array_2d_1(ai1,ai2)=macro_variables_ulongint_array_2d_8(ai1,ai2)
										Case "2"
											macro_variables_ulongint_array_2d_2(ai1,ai2)=macro_variables_ulongint_array_2d_8(ai1,ai2)
										Case "3"
											macro_variables_ulongint_array_2d_3(ai1,ai2)=macro_variables_ulongint_array_2d_8(ai1,ai2)
										Case "4"
											macro_variables_ulongint_array_2d_4(ai1,ai2)=macro_variables_ulongint_array_2d_8(ai1,ai2)
										Case "5"
											macro_variables_ulongint_array_2d_5(ai1,ai2)=macro_variables_ulongint_array_2d_8(ai1,ai2)
										Case "6"
											macro_variables_ulongint_array_2d_6(ai1,ai2)=macro_variables_ulongint_array_2d_8(ai1,ai2)
										Case "7"
											macro_variables_ulongint_array_2d_7(ai1,ai2)=macro_variables_ulongint_array_2d_8(ai1,ai2)
										Case "8"
											macro_variables_ulongint_array_2d_8(ai1,ai2)=macro_variables_ulongint_array_2d_8(ai1,ai2)
										Case "9"
											macro_variables_ulongint_array_2d_9(ai1,ai2)=macro_variables_ulongint_array_2d_8(ai1,ai2)
									End Select
								Next
							Next
						Case "9"
							For ai1=LBound(macro_variables_ulongint_array_2d_9) To UBound(macro_variables_ulongint_array_2d_9)
								For ai2=LBound(macro_variables_ulongint_array_2d_9,2) To UBound(macro_variables_ulongint_array_2d_9,2)
									Select Case array_index
										Case "1"
											macro_variables_ulongint_array_2d_1(ai1,ai2)=macro_variables_ulongint_array_2d_9(ai1,ai2)
										Case "2"
											macro_variables_ulongint_array_2d_2(ai1,ai2)=macro_variables_ulongint_array_2d_9(ai1,ai2)
										Case "3"
											macro_variables_ulongint_array_2d_3(ai1,ai2)=macro_variables_ulongint_array_2d_9(ai1,ai2)
										Case "4"
											macro_variables_ulongint_array_2d_4(ai1,ai2)=macro_variables_ulongint_array_2d_9(ai1,ai2)
										Case "5"
											macro_variables_ulongint_array_2d_5(ai1,ai2)=macro_variables_ulongint_array_2d_9(ai1,ai2)
										Case "6"
											macro_variables_ulongint_array_2d_6(ai1,ai2)=macro_variables_ulongint_array_2d_9(ai1,ai2)
										Case "7"
											macro_variables_ulongint_array_2d_7(ai1,ai2)=macro_variables_ulongint_array_2d_9(ai1,ai2)
										Case "8"
											macro_variables_ulongint_array_2d_8(ai1,ai2)=macro_variables_ulongint_array_2d_9(ai1,ai2)
										Case "9"
											macro_variables_ulongint_array_2d_9(ai1,ai2)=macro_variables_ulongint_array_2d_9(ai1,ai2)
									End Select
								Next
							Next
					End Select
				Case "3d"
					Select Case macro_variables_info(a,3)
						Case "1"
							For ai1=LBound(macro_variables_ulongint_array_3d_1) To UBound(macro_variables_ulongint_array_3d_1)
								For ai2=LBound(macro_variables_ulongint_array_3d_1,2) To UBound(macro_variables_ulongint_array_3d_1,2)
									For ai3=LBound(macro_variables_ulongint_array_3d_1,3) To UBound(macro_variables_ulongint_array_3d_1,3)
										Select Case array_index
											Case "1"
												macro_variables_ulongint_array_3d_1(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_1(ai1,ai2,ai3)
											Case "2"
												macro_variables_ulongint_array_3d_2(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_1(ai1,ai2,ai3)
											Case "3"
												macro_variables_ulongint_array_3d_3(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_1(ai1,ai2,ai3)
											Case "4"
												macro_variables_ulongint_array_3d_4(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_1(ai1,ai2,ai3)
											Case "5"
												macro_variables_ulongint_array_3d_5(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_1(ai1,ai2,ai3)
											Case "6"
												macro_variables_ulongint_array_3d_6(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_1(ai1,ai2,ai3)
											Case "7"
												macro_variables_ulongint_array_3d_7(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_1(ai1,ai2,ai3)
											Case "8"
												macro_variables_ulongint_array_3d_8(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_1(ai1,ai2,ai3)
											Case "9"
												macro_variables_ulongint_array_3d_9(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_1(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "2"
							For ai1=LBound(macro_variables_ulongint_array_3d_2) To UBound(macro_variables_ulongint_array_3d_2)
								For ai2=LBound(macro_variables_ulongint_array_3d_2,2) To UBound(macro_variables_ulongint_array_3d_2,2)
									For ai3=LBound(macro_variables_ulongint_array_3d_2,3) To UBound(macro_variables_ulongint_array_3d_2,3)
										Select Case array_index
											Case "1"
												macro_variables_ulongint_array_3d_1(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_2(ai1,ai2,ai3)
											Case "2"
												macro_variables_ulongint_array_3d_2(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_2(ai1,ai2,ai3)
											Case "3"
												macro_variables_ulongint_array_3d_3(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_2(ai1,ai2,ai3)
											Case "4"
												macro_variables_ulongint_array_3d_4(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_2(ai1,ai2,ai3)
											Case "5"
												macro_variables_ulongint_array_3d_5(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_2(ai1,ai2,ai3)
											Case "6"
												macro_variables_ulongint_array_3d_6(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_2(ai1,ai2,ai3)
											Case "7"
												macro_variables_ulongint_array_3d_7(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_2(ai1,ai2,ai3)
											Case "8"
												macro_variables_ulongint_array_3d_8(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_2(ai1,ai2,ai3)
											Case "9"
												macro_variables_ulongint_array_3d_9(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_2(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "3"
							For ai1=LBound(macro_variables_ulongint_array_3d_3) To UBound(macro_variables_ulongint_array_3d_3)
								For ai2=LBound(macro_variables_ulongint_array_3d_3,2) To UBound(macro_variables_ulongint_array_3d_3,2)
									For ai3=LBound(macro_variables_ulongint_array_3d_3,3) To UBound(macro_variables_ulongint_array_3d_3,3)
										Select Case array_index
											Case "1"
												macro_variables_ulongint_array_3d_1(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_3(ai1,ai2,ai3)
											Case "2"
												macro_variables_ulongint_array_3d_2(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_3(ai1,ai2,ai3)
											Case "3"
												macro_variables_ulongint_array_3d_3(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_3(ai1,ai2,ai3)
											Case "4"
												macro_variables_ulongint_array_3d_4(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_3(ai1,ai2,ai3)
											Case "5"
												macro_variables_ulongint_array_3d_5(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_3(ai1,ai2,ai3)
											Case "6"
												macro_variables_ulongint_array_3d_6(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_3(ai1,ai2,ai3)
											Case "7"
												macro_variables_ulongint_array_3d_7(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_3(ai1,ai2,ai3)
											Case "8"
												macro_variables_ulongint_array_3d_8(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_3(ai1,ai2,ai3)
											Case "9"
												macro_variables_ulongint_array_3d_9(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_3(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "4"
							For ai1=LBound(macro_variables_ulongint_array_3d_4) To UBound(macro_variables_ulongint_array_3d_4)
								For ai2=LBound(macro_variables_ulongint_array_3d_4,2) To UBound(macro_variables_ulongint_array_3d_4,2)
									For ai3=LBound(macro_variables_ulongint_array_3d_4,3) To UBound(macro_variables_ulongint_array_3d_4,3)
										Select Case array_index
											Case "1"
												macro_variables_ulongint_array_3d_1(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_4(ai1,ai2,ai3)
											Case "2"
												macro_variables_ulongint_array_3d_2(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_4(ai1,ai2,ai3)
											Case "3"
												macro_variables_ulongint_array_3d_3(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_4(ai1,ai2,ai3)
											Case "4"
												macro_variables_ulongint_array_3d_4(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_4(ai1,ai2,ai3)
											Case "5"
												macro_variables_ulongint_array_3d_5(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_4(ai1,ai2,ai3)
											Case "6"
												macro_variables_ulongint_array_3d_6(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_4(ai1,ai2,ai3)
											Case "7"
												macro_variables_ulongint_array_3d_7(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_4(ai1,ai2,ai3)
											Case "8"
												macro_variables_ulongint_array_3d_8(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_4(ai1,ai2,ai3)
											Case "9"
												macro_variables_ulongint_array_3d_9(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_4(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "5"
							For ai1=LBound(macro_variables_ulongint_array_3d_5) To UBound(macro_variables_ulongint_array_3d_5)
								For ai2=LBound(macro_variables_ulongint_array_3d_5,2) To UBound(macro_variables_ulongint_array_3d_5,2)
									For ai3=LBound(macro_variables_ulongint_array_3d_5,3) To UBound(macro_variables_ulongint_array_3d_5,3)
										Select Case array_index
											Case "1"
												macro_variables_ulongint_array_3d_1(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_5(ai1,ai2,ai3)
											Case "2"
												macro_variables_ulongint_array_3d_2(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_5(ai1,ai2,ai3)
											Case "3"
												macro_variables_ulongint_array_3d_3(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_5(ai1,ai2,ai3)
											Case "4"
												macro_variables_ulongint_array_3d_4(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_5(ai1,ai2,ai3)
											Case "5"
												macro_variables_ulongint_array_3d_5(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_5(ai1,ai2,ai3)
											Case "6"
												macro_variables_ulongint_array_3d_6(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_5(ai1,ai2,ai3)
											Case "7"
												macro_variables_ulongint_array_3d_7(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_5(ai1,ai2,ai3)
											Case "8"
												macro_variables_ulongint_array_3d_8(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_5(ai1,ai2,ai3)
											Case "9"
												macro_variables_ulongint_array_3d_9(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_5(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "6"
							For ai1=LBound(macro_variables_ulongint_array_3d_6) To UBound(macro_variables_ulongint_array_3d_6)
								For ai2=LBound(macro_variables_ulongint_array_3d_6,2) To UBound(macro_variables_ulongint_array_3d_6,2)
									For ai3=LBound(macro_variables_ulongint_array_3d_6,3) To UBound(macro_variables_ulongint_array_3d_6,3)
										Select Case array_index
											Case "1"
												macro_variables_ulongint_array_3d_1(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_6(ai1,ai2,ai3)
											Case "2"
												macro_variables_ulongint_array_3d_2(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_6(ai1,ai2,ai3)
											Case "3"
												macro_variables_ulongint_array_3d_3(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_6(ai1,ai2,ai3)
											Case "4"
												macro_variables_ulongint_array_3d_4(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_6(ai1,ai2,ai3)
											Case "5"
												macro_variables_ulongint_array_3d_5(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_6(ai1,ai2,ai3)
											Case "6"
												macro_variables_ulongint_array_3d_6(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_6(ai1,ai2,ai3)
											Case "7"
												macro_variables_ulongint_array_3d_7(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_6(ai1,ai2,ai3)
											Case "8"
												macro_variables_ulongint_array_3d_8(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_6(ai1,ai2,ai3)
											Case "9"
												macro_variables_ulongint_array_3d_9(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_6(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "7"
							For ai1=LBound(macro_variables_ulongint_array_3d_7) To UBound(macro_variables_ulongint_array_3d_7)
								For ai2=LBound(macro_variables_ulongint_array_3d_7,2) To UBound(macro_variables_ulongint_array_3d_7,2)
									For ai3=LBound(macro_variables_ulongint_array_3d_7,3) To UBound(macro_variables_ulongint_array_3d_7,3)
										Select Case array_index
											Case "1"
												macro_variables_ulongint_array_3d_1(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_7(ai1,ai2,ai3)
											Case "2"
												macro_variables_ulongint_array_3d_2(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_7(ai1,ai2,ai3)
											Case "3"
												macro_variables_ulongint_array_3d_3(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_7(ai1,ai2,ai3)
											Case "4"
												macro_variables_ulongint_array_3d_4(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_7(ai1,ai2,ai3)
											Case "5"
												macro_variables_ulongint_array_3d_5(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_7(ai1,ai2,ai3)
											Case "6"
												macro_variables_ulongint_array_3d_6(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_7(ai1,ai2,ai3)
											Case "7"
												macro_variables_ulongint_array_3d_7(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_7(ai1,ai2,ai3)
											Case "8"
												macro_variables_ulongint_array_3d_8(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_7(ai1,ai2,ai3)
											Case "9"
												macro_variables_ulongint_array_3d_9(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_7(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "8"
							For ai1=LBound(macro_variables_ulongint_array_3d_8) To UBound(macro_variables_ulongint_array_3d_8)
								For ai2=LBound(macro_variables_ulongint_array_3d_8,2) To UBound(macro_variables_ulongint_array_3d_8,2)
									For ai3=LBound(macro_variables_ulongint_array_3d_8,3) To UBound(macro_variables_ulongint_array_3d_8,3)
										Select Case array_index
											Case "1"
												macro_variables_ulongint_array_3d_1(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_8(ai1,ai2,ai3)
											Case "2"
												macro_variables_ulongint_array_3d_2(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_8(ai1,ai2,ai3)
											Case "3"
												macro_variables_ulongint_array_3d_3(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_8(ai1,ai2,ai3)
											Case "4"
												macro_variables_ulongint_array_3d_4(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_8(ai1,ai2,ai3)
											Case "5"
												macro_variables_ulongint_array_3d_5(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_8(ai1,ai2,ai3)
											Case "6"
												macro_variables_ulongint_array_3d_6(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_8(ai1,ai2,ai3)
											Case "7"
												macro_variables_ulongint_array_3d_7(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_8(ai1,ai2,ai3)
											Case "8"
												macro_variables_ulongint_array_3d_8(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_8(ai1,ai2,ai3)
											Case "9"
												macro_variables_ulongint_array_3d_9(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_8(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "9"
							For ai1=LBound(macro_variables_ulongint_array_3d_9) To UBound(macro_variables_ulongint_array_3d_9)
								For ai2=LBound(macro_variables_ulongint_array_3d_9,2) To UBound(macro_variables_ulongint_array_3d_9,2)
									For ai3=LBound(macro_variables_ulongint_array_3d_9,3) To UBound(macro_variables_ulongint_array_3d_9,3)
										Select Case array_index
											Case "1"
												macro_variables_ulongint_array_3d_1(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_9(ai1,ai2,ai3)
											Case "2"
												macro_variables_ulongint_array_3d_2(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_9(ai1,ai2,ai3)
											Case "3"
												macro_variables_ulongint_array_3d_3(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_9(ai1,ai2,ai3)
											Case "4"
												macro_variables_ulongint_array_3d_4(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_9(ai1,ai2,ai3)
											Case "5"
												macro_variables_ulongint_array_3d_5(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_9(ai1,ai2,ai3)
											Case "6"
												macro_variables_ulongint_array_3d_6(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_9(ai1,ai2,ai3)
											Case "7"
												macro_variables_ulongint_array_3d_7(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_9(ai1,ai2,ai3)
											Case "8"
												macro_variables_ulongint_array_3d_8(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_9(ai1,ai2,ai3)
											Case "9"
												macro_variables_ulongint_array_3d_9(ai1,ai2,ai3)=macro_variables_ulongint_array_3d_9(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
					End Select
			End Select
		Case "SINGLE_ARRAY"
			Select Case macro_variables_info(a,5)
				Case "1d"
					Select Case macro_variables_info(a,3)
						Case "1"
							For ai1=LBound(macro_variables_single_array_1d_1) To UBound(macro_variables_single_array_1d_1)
								Select Case array_index
									Case "1"
										macro_variables_single_array_1d_1(ai1)=macro_variables_single_array_1d_1(ai1)
									Case "2"
										macro_variables_single_array_1d_2(ai1)=macro_variables_single_array_1d_1(ai1)
									Case "3"
										macro_variables_single_array_1d_3(ai1)=macro_variables_single_array_1d_1(ai1)
									Case "4"
										macro_variables_single_array_1d_4(ai1)=macro_variables_single_array_1d_1(ai1)
									Case "5"
										macro_variables_single_array_1d_5(ai1)=macro_variables_single_array_1d_1(ai1)
									Case "6"
										macro_variables_single_array_1d_6(ai1)=macro_variables_single_array_1d_1(ai1)
									Case "7"
										macro_variables_single_array_1d_7(ai1)=macro_variables_single_array_1d_1(ai1)
									Case "8"
										macro_variables_single_array_1d_8(ai1)=macro_variables_single_array_1d_1(ai1)
									Case "9"
										macro_variables_single_array_1d_9(ai1)=macro_variables_single_array_1d_1(ai1)
								End Select
							Next
						Case "2"
							For ai1=LBound(macro_variables_single_array_1d_2) To UBound(macro_variables_single_array_1d_2)
								Select Case array_index
									Case "1"
										macro_variables_single_array_1d_1(ai1)=macro_variables_single_array_1d_2(ai1)
									Case "2"
										macro_variables_single_array_1d_2(ai1)=macro_variables_single_array_1d_2(ai1)
									Case "3"
										macro_variables_single_array_1d_3(ai1)=macro_variables_single_array_1d_2(ai1)
									Case "4"
										macro_variables_single_array_1d_4(ai1)=macro_variables_single_array_1d_2(ai1)
									Case "5"
										macro_variables_single_array_1d_5(ai1)=macro_variables_single_array_1d_2(ai1)
									Case "6"
										macro_variables_single_array_1d_6(ai1)=macro_variables_single_array_1d_2(ai1)
									Case "7"
										macro_variables_single_array_1d_7(ai1)=macro_variables_single_array_1d_2(ai1)
									Case "8"
										macro_variables_single_array_1d_8(ai1)=macro_variables_single_array_1d_2(ai1)
									Case "9"
										macro_variables_single_array_1d_9(ai1)=macro_variables_single_array_1d_2(ai1)
								End Select
							Next
						Case "3"
							For ai1=LBound(macro_variables_single_array_1d_3) To UBound(macro_variables_single_array_1d_3)
								Select Case array_index
									Case "1"
										macro_variables_single_array_1d_1(ai1)=macro_variables_single_array_1d_3(ai1)
									Case "2"
										macro_variables_single_array_1d_2(ai1)=macro_variables_single_array_1d_3(ai1)
									Case "3"
										macro_variables_single_array_1d_3(ai1)=macro_variables_single_array_1d_3(ai1)
									Case "4"
										macro_variables_single_array_1d_4(ai1)=macro_variables_single_array_1d_3(ai1)
									Case "5"
										macro_variables_single_array_1d_5(ai1)=macro_variables_single_array_1d_3(ai1)
									Case "6"
										macro_variables_single_array_1d_6(ai1)=macro_variables_single_array_1d_3(ai1)
									Case "7"
										macro_variables_single_array_1d_7(ai1)=macro_variables_single_array_1d_3(ai1)
									Case "8"
										macro_variables_single_array_1d_8(ai1)=macro_variables_single_array_1d_3(ai1)
									Case "9"
										macro_variables_single_array_1d_9(ai1)=macro_variables_single_array_1d_3(ai1)
								End Select
							Next
						Case "4"
							For ai1=LBound(macro_variables_single_array_1d_4) To UBound(macro_variables_single_array_1d_4)
								Select Case array_index
									Case "1"
										macro_variables_single_array_1d_1(ai1)=macro_variables_single_array_1d_4(ai1)
									Case "2"
										macro_variables_single_array_1d_2(ai1)=macro_variables_single_array_1d_4(ai1)
									Case "3"
										macro_variables_single_array_1d_3(ai1)=macro_variables_single_array_1d_4(ai1)
									Case "4"
										macro_variables_single_array_1d_4(ai1)=macro_variables_single_array_1d_4(ai1)
									Case "5"
										macro_variables_single_array_1d_5(ai1)=macro_variables_single_array_1d_4(ai1)
									Case "6"
										macro_variables_single_array_1d_6(ai1)=macro_variables_single_array_1d_4(ai1)
									Case "7"
										macro_variables_single_array_1d_7(ai1)=macro_variables_single_array_1d_4(ai1)
									Case "8"
										macro_variables_single_array_1d_8(ai1)=macro_variables_single_array_1d_4(ai1)
									Case "9"
										macro_variables_single_array_1d_9(ai1)=macro_variables_single_array_1d_4(ai1)
								End Select
							Next
						Case "5"
							For ai1=LBound(macro_variables_single_array_1d_5) To UBound(macro_variables_single_array_1d_5)
								Select Case array_index
									Case "1"
										macro_variables_single_array_1d_1(ai1)=macro_variables_single_array_1d_5(ai1)
									Case "2"
										macro_variables_single_array_1d_2(ai1)=macro_variables_single_array_1d_5(ai1)
									Case "3"
										macro_variables_single_array_1d_3(ai1)=macro_variables_single_array_1d_5(ai1)
									Case "4"
										macro_variables_single_array_1d_4(ai1)=macro_variables_single_array_1d_5(ai1)
									Case "5"
										macro_variables_single_array_1d_5(ai1)=macro_variables_single_array_1d_5(ai1)
									Case "6"
										macro_variables_single_array_1d_6(ai1)=macro_variables_single_array_1d_5(ai1)
									Case "7"
										macro_variables_single_array_1d_7(ai1)=macro_variables_single_array_1d_5(ai1)
									Case "8"
										macro_variables_single_array_1d_8(ai1)=macro_variables_single_array_1d_5(ai1)
									Case "9"
										macro_variables_single_array_1d_9(ai1)=macro_variables_single_array_1d_5(ai1)
								End Select
							Next
						Case "6"
							For ai1=LBound(macro_variables_single_array_1d_6) To UBound(macro_variables_single_array_1d_6)
								Select Case array_index
									Case "1"
										macro_variables_single_array_1d_1(ai1)=macro_variables_single_array_1d_6(ai1)
									Case "2"
										macro_variables_single_array_1d_2(ai1)=macro_variables_single_array_1d_6(ai1)
									Case "3"
										macro_variables_single_array_1d_3(ai1)=macro_variables_single_array_1d_6(ai1)
									Case "4"
										macro_variables_single_array_1d_4(ai1)=macro_variables_single_array_1d_6(ai1)
									Case "5"
										macro_variables_single_array_1d_5(ai1)=macro_variables_single_array_1d_6(ai1)
									Case "6"
										macro_variables_single_array_1d_6(ai1)=macro_variables_single_array_1d_6(ai1)
									Case "7"
										macro_variables_single_array_1d_7(ai1)=macro_variables_single_array_1d_6(ai1)
									Case "8"
										macro_variables_single_array_1d_8(ai1)=macro_variables_single_array_1d_6(ai1)
									Case "9"
										macro_variables_single_array_1d_9(ai1)=macro_variables_single_array_1d_6(ai1)
								End Select
							Next
						Case "7"
							For ai1=LBound(macro_variables_single_array_1d_7) To UBound(macro_variables_single_array_1d_7)
								Select Case array_index
									Case "1"
										macro_variables_single_array_1d_1(ai1)=macro_variables_single_array_1d_7(ai1)
									Case "2"
										macro_variables_single_array_1d_2(ai1)=macro_variables_single_array_1d_7(ai1)
									Case "3"
										macro_variables_single_array_1d_3(ai1)=macro_variables_single_array_1d_7(ai1)
									Case "4"
										macro_variables_single_array_1d_4(ai1)=macro_variables_single_array_1d_7(ai1)
									Case "5"
										macro_variables_single_array_1d_5(ai1)=macro_variables_single_array_1d_7(ai1)
									Case "6"
										macro_variables_single_array_1d_6(ai1)=macro_variables_single_array_1d_7(ai1)
									Case "7"
										macro_variables_single_array_1d_7(ai1)=macro_variables_single_array_1d_7(ai1)
									Case "8"
										macro_variables_single_array_1d_8(ai1)=macro_variables_single_array_1d_7(ai1)
									Case "9"
										macro_variables_single_array_1d_9(ai1)=macro_variables_single_array_1d_7(ai1)
								End Select
							Next
						Case "8"
							For ai1=LBound(macro_variables_single_array_1d_8) To UBound(macro_variables_single_array_1d_8)
								Select Case array_index
									Case "1"
										macro_variables_single_array_1d_1(ai1)=macro_variables_single_array_1d_8(ai1)
									Case "2"
										macro_variables_single_array_1d_2(ai1)=macro_variables_single_array_1d_8(ai1)
									Case "3"
										macro_variables_single_array_1d_3(ai1)=macro_variables_single_array_1d_8(ai1)
									Case "4"
										macro_variables_single_array_1d_4(ai1)=macro_variables_single_array_1d_8(ai1)
									Case "5"
										macro_variables_single_array_1d_5(ai1)=macro_variables_single_array_1d_8(ai1)
									Case "6"
										macro_variables_single_array_1d_6(ai1)=macro_variables_single_array_1d_8(ai1)
									Case "7"
										macro_variables_single_array_1d_7(ai1)=macro_variables_single_array_1d_8(ai1)
									Case "8"
										macro_variables_single_array_1d_8(ai1)=macro_variables_single_array_1d_8(ai1)
									Case "9"
										macro_variables_single_array_1d_9(ai1)=macro_variables_single_array_1d_8(ai1)
								End Select
							Next
						Case "9"
							For ai1=LBound(macro_variables_single_array_1d_9) To UBound(macro_variables_single_array_1d_9)
								Select Case array_index
									Case "1"
										macro_variables_single_array_1d_1(ai1)=macro_variables_single_array_1d_9(ai1)
									Case "2"
										macro_variables_single_array_1d_2(ai1)=macro_variables_single_array_1d_9(ai1)
									Case "3"
										macro_variables_single_array_1d_3(ai1)=macro_variables_single_array_1d_9(ai1)
									Case "4"
										macro_variables_single_array_1d_4(ai1)=macro_variables_single_array_1d_9(ai1)
									Case "5"
										macro_variables_single_array_1d_5(ai1)=macro_variables_single_array_1d_9(ai1)
									Case "6"
										macro_variables_single_array_1d_6(ai1)=macro_variables_single_array_1d_9(ai1)
									Case "7"
										macro_variables_single_array_1d_7(ai1)=macro_variables_single_array_1d_9(ai1)
									Case "8"
										macro_variables_single_array_1d_8(ai1)=macro_variables_single_array_1d_9(ai1)
									Case "9"
										macro_variables_single_array_1d_9(ai1)=macro_variables_single_array_1d_9(ai1)
								End Select
							Next
					End Select
				Case "2d"
					Select Case macro_variables_info(a,3)
						Case "1"
							For ai1=LBound(macro_variables_single_array_2d_1) To UBound(macro_variables_single_array_2d_1)
								For ai2=LBound(macro_variables_single_array_2d_1,2) To UBound(macro_variables_single_array_2d_1,2)
									Select Case array_index
										Case "1"
											macro_variables_single_array_2d_1(ai1,ai2)=macro_variables_single_array_2d_1(ai1,ai2)
										Case "2"
											macro_variables_single_array_2d_2(ai1,ai2)=macro_variables_single_array_2d_1(ai1,ai2)
										Case "3"
											macro_variables_single_array_2d_3(ai1,ai2)=macro_variables_single_array_2d_1(ai1,ai2)
										Case "4"
											macro_variables_single_array_2d_4(ai1,ai2)=macro_variables_single_array_2d_1(ai1,ai2)
										Case "5"
											macro_variables_single_array_2d_5(ai1,ai2)=macro_variables_single_array_2d_1(ai1,ai2)
										Case "6"
											macro_variables_single_array_2d_6(ai1,ai2)=macro_variables_single_array_2d_1(ai1,ai2)
										Case "7"
											macro_variables_single_array_2d_7(ai1,ai2)=macro_variables_single_array_2d_1(ai1,ai2)
										Case "8"
											macro_variables_single_array_2d_8(ai1,ai2)=macro_variables_single_array_2d_1(ai1,ai2)
										Case "9"
											macro_variables_single_array_2d_9(ai1,ai2)=macro_variables_single_array_2d_1(ai1,ai2)
									End Select
								Next
							Next
						Case "2"
							For ai1=LBound(macro_variables_single_array_2d_2) To UBound(macro_variables_single_array_2d_2)
								For ai2=LBound(macro_variables_single_array_2d_2,2) To UBound(macro_variables_single_array_2d_2,2)
									Select Case array_index
										Case "1"
											macro_variables_single_array_2d_1(ai1,ai2)=macro_variables_single_array_2d_2(ai1,ai2)
										Case "2"
											macro_variables_single_array_2d_2(ai1,ai2)=macro_variables_single_array_2d_2(ai1,ai2)
										Case "3"
											macro_variables_single_array_2d_3(ai1,ai2)=macro_variables_single_array_2d_2(ai1,ai2)
										Case "4"
											macro_variables_single_array_2d_4(ai1,ai2)=macro_variables_single_array_2d_2(ai1,ai2)
										Case "5"
											macro_variables_single_array_2d_5(ai1,ai2)=macro_variables_single_array_2d_2(ai1,ai2)
										Case "6"
											macro_variables_single_array_2d_6(ai1,ai2)=macro_variables_single_array_2d_2(ai1,ai2)
										Case "7"
											macro_variables_single_array_2d_7(ai1,ai2)=macro_variables_single_array_2d_2(ai1,ai2)
										Case "8"
											macro_variables_single_array_2d_8(ai1,ai2)=macro_variables_single_array_2d_2(ai1,ai2)
										Case "9"
											macro_variables_single_array_2d_9(ai1,ai2)=macro_variables_single_array_2d_2(ai1,ai2)
									End Select
								Next
							Next
						Case "3"
							For ai1=LBound(macro_variables_single_array_2d_3) To UBound(macro_variables_single_array_2d_3)
								For ai2=LBound(macro_variables_single_array_2d_3,2) To UBound(macro_variables_single_array_2d_3,2)
									Select Case array_index
										Case "1"
											macro_variables_single_array_2d_1(ai1,ai2)=macro_variables_single_array_2d_3(ai1,ai2)
										Case "2"
											macro_variables_single_array_2d_2(ai1,ai2)=macro_variables_single_array_2d_3(ai1,ai2)
										Case "3"
											macro_variables_single_array_2d_3(ai1,ai2)=macro_variables_single_array_2d_3(ai1,ai2)
										Case "4"
											macro_variables_single_array_2d_4(ai1,ai2)=macro_variables_single_array_2d_3(ai1,ai2)
										Case "5"
											macro_variables_single_array_2d_5(ai1,ai2)=macro_variables_single_array_2d_3(ai1,ai2)
										Case "6"
											macro_variables_single_array_2d_6(ai1,ai2)=macro_variables_single_array_2d_3(ai1,ai2)
										Case "7"
											macro_variables_single_array_2d_7(ai1,ai2)=macro_variables_single_array_2d_3(ai1,ai2)
										Case "8"
											macro_variables_single_array_2d_8(ai1,ai2)=macro_variables_single_array_2d_3(ai1,ai2)
										Case "9"
											macro_variables_single_array_2d_9(ai1,ai2)=macro_variables_single_array_2d_3(ai1,ai2)
									End Select
								Next
							Next
						Case "4"
							For ai1=LBound(macro_variables_single_array_2d_4) To UBound(macro_variables_single_array_2d_4)
								For ai2=LBound(macro_variables_single_array_2d_4,2) To UBound(macro_variables_single_array_2d_4,2)
									Select Case array_index
										Case "1"
											macro_variables_single_array_2d_1(ai1,ai2)=macro_variables_single_array_2d_4(ai1,ai2)
										Case "2"
											macro_variables_single_array_2d_2(ai1,ai2)=macro_variables_single_array_2d_4(ai1,ai2)
										Case "3"
											macro_variables_single_array_2d_3(ai1,ai2)=macro_variables_single_array_2d_4(ai1,ai2)
										Case "4"
											macro_variables_single_array_2d_4(ai1,ai2)=macro_variables_single_array_2d_4(ai1,ai2)
										Case "5"
											macro_variables_single_array_2d_5(ai1,ai2)=macro_variables_single_array_2d_4(ai1,ai2)
										Case "6"
											macro_variables_single_array_2d_6(ai1,ai2)=macro_variables_single_array_2d_4(ai1,ai2)
										Case "7"
											macro_variables_single_array_2d_7(ai1,ai2)=macro_variables_single_array_2d_4(ai1,ai2)
										Case "8"
											macro_variables_single_array_2d_8(ai1,ai2)=macro_variables_single_array_2d_4(ai1,ai2)
										Case "9"
											macro_variables_single_array_2d_9(ai1,ai2)=macro_variables_single_array_2d_4(ai1,ai2)
									End Select
								Next
							Next
						Case "5"
							For ai1=LBound(macro_variables_single_array_2d_5) To UBound(macro_variables_single_array_2d_5)
								For ai2=LBound(macro_variables_single_array_2d_5,2) To UBound(macro_variables_single_array_2d_5,2)
									Select Case array_index
										Case "1"
											macro_variables_single_array_2d_1(ai1,ai2)=macro_variables_single_array_2d_5(ai1,ai2)
										Case "2"
											macro_variables_single_array_2d_2(ai1,ai2)=macro_variables_single_array_2d_5(ai1,ai2)
										Case "3"
											macro_variables_single_array_2d_3(ai1,ai2)=macro_variables_single_array_2d_5(ai1,ai2)
										Case "4"
											macro_variables_single_array_2d_4(ai1,ai2)=macro_variables_single_array_2d_5(ai1,ai2)
										Case "5"
											macro_variables_single_array_2d_5(ai1,ai2)=macro_variables_single_array_2d_5(ai1,ai2)
										Case "6"
											macro_variables_single_array_2d_6(ai1,ai2)=macro_variables_single_array_2d_5(ai1,ai2)
										Case "7"
											macro_variables_single_array_2d_7(ai1,ai2)=macro_variables_single_array_2d_5(ai1,ai2)
										Case "8"
											macro_variables_single_array_2d_8(ai1,ai2)=macro_variables_single_array_2d_5(ai1,ai2)
										Case "9"
											macro_variables_single_array_2d_9(ai1,ai2)=macro_variables_single_array_2d_5(ai1,ai2)
									End Select
								Next
							Next
						Case "6"
							For ai1=LBound(macro_variables_single_array_2d_6) To UBound(macro_variables_single_array_2d_6)
								For ai2=LBound(macro_variables_single_array_2d_6,2) To UBound(macro_variables_single_array_2d_6,2)
									Select Case array_index
										Case "1"
											macro_variables_single_array_2d_1(ai1,ai2)=macro_variables_single_array_2d_6(ai1,ai2)
										Case "2"
											macro_variables_single_array_2d_2(ai1,ai2)=macro_variables_single_array_2d_6(ai1,ai2)
										Case "3"
											macro_variables_single_array_2d_3(ai1,ai2)=macro_variables_single_array_2d_6(ai1,ai2)
										Case "4"
											macro_variables_single_array_2d_4(ai1,ai2)=macro_variables_single_array_2d_6(ai1,ai2)
										Case "5"
											macro_variables_single_array_2d_5(ai1,ai2)=macro_variables_single_array_2d_6(ai1,ai2)
										Case "6"
											macro_variables_single_array_2d_6(ai1,ai2)=macro_variables_single_array_2d_6(ai1,ai2)
										Case "7"
											macro_variables_single_array_2d_7(ai1,ai2)=macro_variables_single_array_2d_6(ai1,ai2)
										Case "8"
											macro_variables_single_array_2d_8(ai1,ai2)=macro_variables_single_array_2d_6(ai1,ai2)
										Case "9"
											macro_variables_single_array_2d_9(ai1,ai2)=macro_variables_single_array_2d_6(ai1,ai2)
									End Select
								Next
							Next
						Case "7"
							For ai1=LBound(macro_variables_single_array_2d_7) To UBound(macro_variables_single_array_2d_7)
								For ai2=LBound(macro_variables_single_array_2d_7,2) To UBound(macro_variables_single_array_2d_7,2)
									Select Case array_index
										Case "1"
											macro_variables_single_array_2d_1(ai1,ai2)=macro_variables_single_array_2d_7(ai1,ai2)
										Case "2"
											macro_variables_single_array_2d_2(ai1,ai2)=macro_variables_single_array_2d_7(ai1,ai2)
										Case "3"
											macro_variables_single_array_2d_3(ai1,ai2)=macro_variables_single_array_2d_7(ai1,ai2)
										Case "4"
											macro_variables_single_array_2d_4(ai1,ai2)=macro_variables_single_array_2d_7(ai1,ai2)
										Case "5"
											macro_variables_single_array_2d_5(ai1,ai2)=macro_variables_single_array_2d_7(ai1,ai2)
										Case "6"
											macro_variables_single_array_2d_6(ai1,ai2)=macro_variables_single_array_2d_7(ai1,ai2)
										Case "7"
											macro_variables_single_array_2d_7(ai1,ai2)=macro_variables_single_array_2d_7(ai1,ai2)
										Case "8"
											macro_variables_single_array_2d_8(ai1,ai2)=macro_variables_single_array_2d_7(ai1,ai2)
										Case "9"
											macro_variables_single_array_2d_9(ai1,ai2)=macro_variables_single_array_2d_7(ai1,ai2)
									End Select
								Next
							Next
						Case "8"
							For ai1=LBound(macro_variables_single_array_2d_8) To UBound(macro_variables_single_array_2d_8)
								For ai2=LBound(macro_variables_single_array_2d_8,2) To UBound(macro_variables_single_array_2d_8,2)
									Select Case array_index
										Case "1"
											macro_variables_single_array_2d_1(ai1,ai2)=macro_variables_single_array_2d_8(ai1,ai2)
										Case "2"
											macro_variables_single_array_2d_2(ai1,ai2)=macro_variables_single_array_2d_8(ai1,ai2)
										Case "3"
											macro_variables_single_array_2d_3(ai1,ai2)=macro_variables_single_array_2d_8(ai1,ai2)
										Case "4"
											macro_variables_single_array_2d_4(ai1,ai2)=macro_variables_single_array_2d_8(ai1,ai2)
										Case "5"
											macro_variables_single_array_2d_5(ai1,ai2)=macro_variables_single_array_2d_8(ai1,ai2)
										Case "6"
											macro_variables_single_array_2d_6(ai1,ai2)=macro_variables_single_array_2d_8(ai1,ai2)
										Case "7"
											macro_variables_single_array_2d_7(ai1,ai2)=macro_variables_single_array_2d_8(ai1,ai2)
										Case "8"
											macro_variables_single_array_2d_8(ai1,ai2)=macro_variables_single_array_2d_8(ai1,ai2)
										Case "9"
											macro_variables_single_array_2d_9(ai1,ai2)=macro_variables_single_array_2d_8(ai1,ai2)
									End Select
								Next
							Next
						Case "9"
							For ai1=LBound(macro_variables_single_array_2d_9) To UBound(macro_variables_single_array_2d_9)
								For ai2=LBound(macro_variables_single_array_2d_9,2) To UBound(macro_variables_single_array_2d_9,2)
									Select Case array_index
										Case "1"
											macro_variables_single_array_2d_1(ai1,ai2)=macro_variables_single_array_2d_9(ai1,ai2)
										Case "2"
											macro_variables_single_array_2d_2(ai1,ai2)=macro_variables_single_array_2d_9(ai1,ai2)
										Case "3"
											macro_variables_single_array_2d_3(ai1,ai2)=macro_variables_single_array_2d_9(ai1,ai2)
										Case "4"
											macro_variables_single_array_2d_4(ai1,ai2)=macro_variables_single_array_2d_9(ai1,ai2)
										Case "5"
											macro_variables_single_array_2d_5(ai1,ai2)=macro_variables_single_array_2d_9(ai1,ai2)
										Case "6"
											macro_variables_single_array_2d_6(ai1,ai2)=macro_variables_single_array_2d_9(ai1,ai2)
										Case "7"
											macro_variables_single_array_2d_7(ai1,ai2)=macro_variables_single_array_2d_9(ai1,ai2)
										Case "8"
											macro_variables_single_array_2d_8(ai1,ai2)=macro_variables_single_array_2d_9(ai1,ai2)
										Case "9"
											macro_variables_single_array_2d_9(ai1,ai2)=macro_variables_single_array_2d_9(ai1,ai2)
									End Select
								Next
							Next
					End Select
				Case "3d"
					Select Case macro_variables_info(a,3)
						Case "1"
							For ai1=LBound(macro_variables_single_array_3d_1) To UBound(macro_variables_single_array_3d_1)
								For ai2=LBound(macro_variables_single_array_3d_1,2) To UBound(macro_variables_single_array_3d_1,2)
									For ai3=LBound(macro_variables_single_array_3d_1,3) To UBound(macro_variables_single_array_3d_1,3)
										Select Case array_index
											Case "1"
												macro_variables_single_array_3d_1(ai1,ai2,ai3)=macro_variables_single_array_3d_1(ai1,ai2,ai3)
											Case "2"
												macro_variables_single_array_3d_2(ai1,ai2,ai3)=macro_variables_single_array_3d_1(ai1,ai2,ai3)
											Case "3"
												macro_variables_single_array_3d_3(ai1,ai2,ai3)=macro_variables_single_array_3d_1(ai1,ai2,ai3)
											Case "4"
												macro_variables_single_array_3d_4(ai1,ai2,ai3)=macro_variables_single_array_3d_1(ai1,ai2,ai3)
											Case "5"
												macro_variables_single_array_3d_5(ai1,ai2,ai3)=macro_variables_single_array_3d_1(ai1,ai2,ai3)
											Case "6"
												macro_variables_single_array_3d_6(ai1,ai2,ai3)=macro_variables_single_array_3d_1(ai1,ai2,ai3)
											Case "7"
												macro_variables_single_array_3d_7(ai1,ai2,ai3)=macro_variables_single_array_3d_1(ai1,ai2,ai3)
											Case "8"
												macro_variables_single_array_3d_8(ai1,ai2,ai3)=macro_variables_single_array_3d_1(ai1,ai2,ai3)
											Case "9"
												macro_variables_single_array_3d_9(ai1,ai2,ai3)=macro_variables_single_array_3d_1(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "2"
							For ai1=LBound(macro_variables_single_array_3d_2) To UBound(macro_variables_single_array_3d_2)
								For ai2=LBound(macro_variables_single_array_3d_2,2) To UBound(macro_variables_single_array_3d_2,2)
									For ai3=LBound(macro_variables_single_array_3d_2,3) To UBound(macro_variables_single_array_3d_2,3)
										Select Case array_index
											Case "1"
												macro_variables_single_array_3d_1(ai1,ai2,ai3)=macro_variables_single_array_3d_2(ai1,ai2,ai3)
											Case "2"
												macro_variables_single_array_3d_2(ai1,ai2,ai3)=macro_variables_single_array_3d_2(ai1,ai2,ai3)
											Case "3"
												macro_variables_single_array_3d_3(ai1,ai2,ai3)=macro_variables_single_array_3d_2(ai1,ai2,ai3)
											Case "4"
												macro_variables_single_array_3d_4(ai1,ai2,ai3)=macro_variables_single_array_3d_2(ai1,ai2,ai3)
											Case "5"
												macro_variables_single_array_3d_5(ai1,ai2,ai3)=macro_variables_single_array_3d_2(ai1,ai2,ai3)
											Case "6"
												macro_variables_single_array_3d_6(ai1,ai2,ai3)=macro_variables_single_array_3d_2(ai1,ai2,ai3)
											Case "7"
												macro_variables_single_array_3d_7(ai1,ai2,ai3)=macro_variables_single_array_3d_2(ai1,ai2,ai3)
											Case "8"
												macro_variables_single_array_3d_8(ai1,ai2,ai3)=macro_variables_single_array_3d_2(ai1,ai2,ai3)
											Case "9"
												macro_variables_single_array_3d_9(ai1,ai2,ai3)=macro_variables_single_array_3d_2(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "3"
							For ai1=LBound(macro_variables_single_array_3d_3) To UBound(macro_variables_single_array_3d_3)
								For ai2=LBound(macro_variables_single_array_3d_3,2) To UBound(macro_variables_single_array_3d_3,2)
									For ai3=LBound(macro_variables_single_array_3d_3,3) To UBound(macro_variables_single_array_3d_3,3)
										Select Case array_index
											Case "1"
												macro_variables_single_array_3d_1(ai1,ai2,ai3)=macro_variables_single_array_3d_3(ai1,ai2,ai3)
											Case "2"
												macro_variables_single_array_3d_2(ai1,ai2,ai3)=macro_variables_single_array_3d_3(ai1,ai2,ai3)
											Case "3"
												macro_variables_single_array_3d_3(ai1,ai2,ai3)=macro_variables_single_array_3d_3(ai1,ai2,ai3)
											Case "4"
												macro_variables_single_array_3d_4(ai1,ai2,ai3)=macro_variables_single_array_3d_3(ai1,ai2,ai3)
											Case "5"
												macro_variables_single_array_3d_5(ai1,ai2,ai3)=macro_variables_single_array_3d_3(ai1,ai2,ai3)
											Case "6"
												macro_variables_single_array_3d_6(ai1,ai2,ai3)=macro_variables_single_array_3d_3(ai1,ai2,ai3)
											Case "7"
												macro_variables_single_array_3d_7(ai1,ai2,ai3)=macro_variables_single_array_3d_3(ai1,ai2,ai3)
											Case "8"
												macro_variables_single_array_3d_8(ai1,ai2,ai3)=macro_variables_single_array_3d_3(ai1,ai2,ai3)
											Case "9"
												macro_variables_single_array_3d_9(ai1,ai2,ai3)=macro_variables_single_array_3d_3(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "4"
							For ai1=LBound(macro_variables_single_array_3d_4) To UBound(macro_variables_single_array_3d_4)
								For ai2=LBound(macro_variables_single_array_3d_4,2) To UBound(macro_variables_single_array_3d_4,2)
									For ai3=LBound(macro_variables_single_array_3d_4,3) To UBound(macro_variables_single_array_3d_4,3)
										Select Case array_index
											Case "1"
												macro_variables_single_array_3d_1(ai1,ai2,ai3)=macro_variables_single_array_3d_4(ai1,ai2,ai3)
											Case "2"
												macro_variables_single_array_3d_2(ai1,ai2,ai3)=macro_variables_single_array_3d_4(ai1,ai2,ai3)
											Case "3"
												macro_variables_single_array_3d_3(ai1,ai2,ai3)=macro_variables_single_array_3d_4(ai1,ai2,ai3)
											Case "4"
												macro_variables_single_array_3d_4(ai1,ai2,ai3)=macro_variables_single_array_3d_4(ai1,ai2,ai3)
											Case "5"
												macro_variables_single_array_3d_5(ai1,ai2,ai3)=macro_variables_single_array_3d_4(ai1,ai2,ai3)
											Case "6"
												macro_variables_single_array_3d_6(ai1,ai2,ai3)=macro_variables_single_array_3d_4(ai1,ai2,ai3)
											Case "7"
												macro_variables_single_array_3d_7(ai1,ai2,ai3)=macro_variables_single_array_3d_4(ai1,ai2,ai3)
											Case "8"
												macro_variables_single_array_3d_8(ai1,ai2,ai3)=macro_variables_single_array_3d_4(ai1,ai2,ai3)
											Case "9"
												macro_variables_single_array_3d_9(ai1,ai2,ai3)=macro_variables_single_array_3d_4(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "5"
							For ai1=LBound(macro_variables_single_array_3d_5) To UBound(macro_variables_single_array_3d_5)
								For ai2=LBound(macro_variables_single_array_3d_5,2) To UBound(macro_variables_single_array_3d_5,2)
									For ai3=LBound(macro_variables_single_array_3d_5,3) To UBound(macro_variables_single_array_3d_5,3)
										Select Case array_index
											Case "1"
												macro_variables_single_array_3d_1(ai1,ai2,ai3)=macro_variables_single_array_3d_5(ai1,ai2,ai3)
											Case "2"
												macro_variables_single_array_3d_2(ai1,ai2,ai3)=macro_variables_single_array_3d_5(ai1,ai2,ai3)
											Case "3"
												macro_variables_single_array_3d_3(ai1,ai2,ai3)=macro_variables_single_array_3d_5(ai1,ai2,ai3)
											Case "4"
												macro_variables_single_array_3d_4(ai1,ai2,ai3)=macro_variables_single_array_3d_5(ai1,ai2,ai3)
											Case "5"
												macro_variables_single_array_3d_5(ai1,ai2,ai3)=macro_variables_single_array_3d_5(ai1,ai2,ai3)
											Case "6"
												macro_variables_single_array_3d_6(ai1,ai2,ai3)=macro_variables_single_array_3d_5(ai1,ai2,ai3)
											Case "7"
												macro_variables_single_array_3d_7(ai1,ai2,ai3)=macro_variables_single_array_3d_5(ai1,ai2,ai3)
											Case "8"
												macro_variables_single_array_3d_8(ai1,ai2,ai3)=macro_variables_single_array_3d_5(ai1,ai2,ai3)
											Case "9"
												macro_variables_single_array_3d_9(ai1,ai2,ai3)=macro_variables_single_array_3d_5(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "6"
							For ai1=LBound(macro_variables_single_array_3d_6) To UBound(macro_variables_single_array_3d_6)
								For ai2=LBound(macro_variables_single_array_3d_6,2) To UBound(macro_variables_single_array_3d_6,2)
									For ai3=LBound(macro_variables_single_array_3d_6,3) To UBound(macro_variables_single_array_3d_6,3)
										Select Case array_index
											Case "1"
												macro_variables_single_array_3d_1(ai1,ai2,ai3)=macro_variables_single_array_3d_6(ai1,ai2,ai3)
											Case "2"
												macro_variables_single_array_3d_2(ai1,ai2,ai3)=macro_variables_single_array_3d_6(ai1,ai2,ai3)
											Case "3"
												macro_variables_single_array_3d_3(ai1,ai2,ai3)=macro_variables_single_array_3d_6(ai1,ai2,ai3)
											Case "4"
												macro_variables_single_array_3d_4(ai1,ai2,ai3)=macro_variables_single_array_3d_6(ai1,ai2,ai3)
											Case "5"
												macro_variables_single_array_3d_5(ai1,ai2,ai3)=macro_variables_single_array_3d_6(ai1,ai2,ai3)
											Case "6"
												macro_variables_single_array_3d_6(ai1,ai2,ai3)=macro_variables_single_array_3d_6(ai1,ai2,ai3)
											Case "7"
												macro_variables_single_array_3d_7(ai1,ai2,ai3)=macro_variables_single_array_3d_6(ai1,ai2,ai3)
											Case "8"
												macro_variables_single_array_3d_8(ai1,ai2,ai3)=macro_variables_single_array_3d_6(ai1,ai2,ai3)
											Case "9"
												macro_variables_single_array_3d_9(ai1,ai2,ai3)=macro_variables_single_array_3d_6(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "7"
							For ai1=LBound(macro_variables_single_array_3d_7) To UBound(macro_variables_single_array_3d_7)
								For ai2=LBound(macro_variables_single_array_3d_7,2) To UBound(macro_variables_single_array_3d_7,2)
									For ai3=LBound(macro_variables_single_array_3d_7,3) To UBound(macro_variables_single_array_3d_7,3)
										Select Case array_index
											Case "1"
												macro_variables_single_array_3d_1(ai1,ai2,ai3)=macro_variables_single_array_3d_7(ai1,ai2,ai3)
											Case "2"
												macro_variables_single_array_3d_2(ai1,ai2,ai3)=macro_variables_single_array_3d_7(ai1,ai2,ai3)
											Case "3"
												macro_variables_single_array_3d_3(ai1,ai2,ai3)=macro_variables_single_array_3d_7(ai1,ai2,ai3)
											Case "4"
												macro_variables_single_array_3d_4(ai1,ai2,ai3)=macro_variables_single_array_3d_7(ai1,ai2,ai3)
											Case "5"
												macro_variables_single_array_3d_5(ai1,ai2,ai3)=macro_variables_single_array_3d_7(ai1,ai2,ai3)
											Case "6"
												macro_variables_single_array_3d_6(ai1,ai2,ai3)=macro_variables_single_array_3d_7(ai1,ai2,ai3)
											Case "7"
												macro_variables_single_array_3d_7(ai1,ai2,ai3)=macro_variables_single_array_3d_7(ai1,ai2,ai3)
											Case "8"
												macro_variables_single_array_3d_8(ai1,ai2,ai3)=macro_variables_single_array_3d_7(ai1,ai2,ai3)
											Case "9"
												macro_variables_single_array_3d_9(ai1,ai2,ai3)=macro_variables_single_array_3d_7(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "8"
							For ai1=LBound(macro_variables_single_array_3d_8) To UBound(macro_variables_single_array_3d_8)
								For ai2=LBound(macro_variables_single_array_3d_8,2) To UBound(macro_variables_single_array_3d_8,2)
									For ai3=LBound(macro_variables_single_array_3d_8,3) To UBound(macro_variables_single_array_3d_8,3)
										Select Case array_index
											Case "1"
												macro_variables_single_array_3d_1(ai1,ai2,ai3)=macro_variables_single_array_3d_8(ai1,ai2,ai3)
											Case "2"
												macro_variables_single_array_3d_2(ai1,ai2,ai3)=macro_variables_single_array_3d_8(ai1,ai2,ai3)
											Case "3"
												macro_variables_single_array_3d_3(ai1,ai2,ai3)=macro_variables_single_array_3d_8(ai1,ai2,ai3)
											Case "4"
												macro_variables_single_array_3d_4(ai1,ai2,ai3)=macro_variables_single_array_3d_8(ai1,ai2,ai3)
											Case "5"
												macro_variables_single_array_3d_5(ai1,ai2,ai3)=macro_variables_single_array_3d_8(ai1,ai2,ai3)
											Case "6"
												macro_variables_single_array_3d_6(ai1,ai2,ai3)=macro_variables_single_array_3d_8(ai1,ai2,ai3)
											Case "7"
												macro_variables_single_array_3d_7(ai1,ai2,ai3)=macro_variables_single_array_3d_8(ai1,ai2,ai3)
											Case "8"
												macro_variables_single_array_3d_8(ai1,ai2,ai3)=macro_variables_single_array_3d_8(ai1,ai2,ai3)
											Case "9"
												macro_variables_single_array_3d_9(ai1,ai2,ai3)=macro_variables_single_array_3d_8(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "9"
							For ai1=LBound(macro_variables_single_array_3d_9) To UBound(macro_variables_single_array_3d_9)
								For ai2=LBound(macro_variables_single_array_3d_9,2) To UBound(macro_variables_single_array_3d_9,2)
									For ai3=LBound(macro_variables_single_array_3d_9,3) To UBound(macro_variables_single_array_3d_9,3)
										Select Case array_index
											Case "1"
												macro_variables_single_array_3d_1(ai1,ai2,ai3)=macro_variables_single_array_3d_9(ai1,ai2,ai3)
											Case "2"
												macro_variables_single_array_3d_2(ai1,ai2,ai3)=macro_variables_single_array_3d_9(ai1,ai2,ai3)
											Case "3"
												macro_variables_single_array_3d_3(ai1,ai2,ai3)=macro_variables_single_array_3d_9(ai1,ai2,ai3)
											Case "4"
												macro_variables_single_array_3d_4(ai1,ai2,ai3)=macro_variables_single_array_3d_9(ai1,ai2,ai3)
											Case "5"
												macro_variables_single_array_3d_5(ai1,ai2,ai3)=macro_variables_single_array_3d_9(ai1,ai2,ai3)
											Case "6"
												macro_variables_single_array_3d_6(ai1,ai2,ai3)=macro_variables_single_array_3d_9(ai1,ai2,ai3)
											Case "7"
												macro_variables_single_array_3d_7(ai1,ai2,ai3)=macro_variables_single_array_3d_9(ai1,ai2,ai3)
											Case "8"
												macro_variables_single_array_3d_8(ai1,ai2,ai3)=macro_variables_single_array_3d_9(ai1,ai2,ai3)
											Case "9"
												macro_variables_single_array_3d_9(ai1,ai2,ai3)=macro_variables_single_array_3d_9(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
					End Select
			End Select
		Case "DOUBLE_ARRAY"
			Select Case macro_variables_info(a,5)
				Case "1d"
					Select Case macro_variables_info(a,3)
						Case "1"
							For ai1=LBound(macro_variables_double_array_1d_1) To UBound(macro_variables_double_array_1d_1)
								Select Case array_index
									Case "1"
										macro_variables_double_array_1d_1(ai1)=macro_variables_double_array_1d_1(ai1)
									Case "2"
										macro_variables_double_array_1d_2(ai1)=macro_variables_double_array_1d_1(ai1)
									Case "3"
										macro_variables_double_array_1d_3(ai1)=macro_variables_double_array_1d_1(ai1)
									Case "4"
										macro_variables_double_array_1d_4(ai1)=macro_variables_double_array_1d_1(ai1)
									Case "5"
										macro_variables_double_array_1d_5(ai1)=macro_variables_double_array_1d_1(ai1)
									Case "6"
										macro_variables_double_array_1d_6(ai1)=macro_variables_double_array_1d_1(ai1)
									Case "7"
										macro_variables_double_array_1d_7(ai1)=macro_variables_double_array_1d_1(ai1)
									Case "8"
										macro_variables_double_array_1d_8(ai1)=macro_variables_double_array_1d_1(ai1)
									Case "9"
										macro_variables_double_array_1d_9(ai1)=macro_variables_double_array_1d_1(ai1)
								End Select
							Next
						Case "2"
							For ai1=LBound(macro_variables_double_array_1d_2) To UBound(macro_variables_double_array_1d_2)
								Select Case array_index
									Case "1"
										macro_variables_double_array_1d_1(ai1)=macro_variables_double_array_1d_2(ai1)
									Case "2"
										macro_variables_double_array_1d_2(ai1)=macro_variables_double_array_1d_2(ai1)
									Case "3"
										macro_variables_double_array_1d_3(ai1)=macro_variables_double_array_1d_2(ai1)
									Case "4"
										macro_variables_double_array_1d_4(ai1)=macro_variables_double_array_1d_2(ai1)
									Case "5"
										macro_variables_double_array_1d_5(ai1)=macro_variables_double_array_1d_2(ai1)
									Case "6"
										macro_variables_double_array_1d_6(ai1)=macro_variables_double_array_1d_2(ai1)
									Case "7"
										macro_variables_double_array_1d_7(ai1)=macro_variables_double_array_1d_2(ai1)
									Case "8"
										macro_variables_double_array_1d_8(ai1)=macro_variables_double_array_1d_2(ai1)
									Case "9"
										macro_variables_double_array_1d_9(ai1)=macro_variables_double_array_1d_2(ai1)
								End Select
							Next
						Case "3"
							For ai1=LBound(macro_variables_double_array_1d_3) To UBound(macro_variables_double_array_1d_3)
								Select Case array_index
									Case "1"
										macro_variables_double_array_1d_1(ai1)=macro_variables_double_array_1d_3(ai1)
									Case "2"
										macro_variables_double_array_1d_2(ai1)=macro_variables_double_array_1d_3(ai1)
									Case "3"
										macro_variables_double_array_1d_3(ai1)=macro_variables_double_array_1d_3(ai1)
									Case "4"
										macro_variables_double_array_1d_4(ai1)=macro_variables_double_array_1d_3(ai1)
									Case "5"
										macro_variables_double_array_1d_5(ai1)=macro_variables_double_array_1d_3(ai1)
									Case "6"
										macro_variables_double_array_1d_6(ai1)=macro_variables_double_array_1d_3(ai1)
									Case "7"
										macro_variables_double_array_1d_7(ai1)=macro_variables_double_array_1d_3(ai1)
									Case "8"
										macro_variables_double_array_1d_8(ai1)=macro_variables_double_array_1d_3(ai1)
									Case "9"
										macro_variables_double_array_1d_9(ai1)=macro_variables_double_array_1d_3(ai1)
								End Select
							Next
						Case "4"
							For ai1=LBound(macro_variables_double_array_1d_4) To UBound(macro_variables_double_array_1d_4)
								Select Case array_index
									Case "1"
										macro_variables_double_array_1d_1(ai1)=macro_variables_double_array_1d_4(ai1)
									Case "2"
										macro_variables_double_array_1d_2(ai1)=macro_variables_double_array_1d_4(ai1)
									Case "3"
										macro_variables_double_array_1d_3(ai1)=macro_variables_double_array_1d_4(ai1)
									Case "4"
										macro_variables_double_array_1d_4(ai1)=macro_variables_double_array_1d_4(ai1)
									Case "5"
										macro_variables_double_array_1d_5(ai1)=macro_variables_double_array_1d_4(ai1)
									Case "6"
										macro_variables_double_array_1d_6(ai1)=macro_variables_double_array_1d_4(ai1)
									Case "7"
										macro_variables_double_array_1d_7(ai1)=macro_variables_double_array_1d_4(ai1)
									Case "8"
										macro_variables_double_array_1d_8(ai1)=macro_variables_double_array_1d_4(ai1)
									Case "9"
										macro_variables_double_array_1d_9(ai1)=macro_variables_double_array_1d_4(ai1)
								End Select
							Next
						Case "5"
							For ai1=LBound(macro_variables_double_array_1d_5) To UBound(macro_variables_double_array_1d_5)
								Select Case array_index
									Case "1"
										macro_variables_double_array_1d_1(ai1)=macro_variables_double_array_1d_5(ai1)
									Case "2"
										macro_variables_double_array_1d_2(ai1)=macro_variables_double_array_1d_5(ai1)
									Case "3"
										macro_variables_double_array_1d_3(ai1)=macro_variables_double_array_1d_5(ai1)
									Case "4"
										macro_variables_double_array_1d_4(ai1)=macro_variables_double_array_1d_5(ai1)
									Case "5"
										macro_variables_double_array_1d_5(ai1)=macro_variables_double_array_1d_5(ai1)
									Case "6"
										macro_variables_double_array_1d_6(ai1)=macro_variables_double_array_1d_5(ai1)
									Case "7"
										macro_variables_double_array_1d_7(ai1)=macro_variables_double_array_1d_5(ai1)
									Case "8"
										macro_variables_double_array_1d_8(ai1)=macro_variables_double_array_1d_5(ai1)
									Case "9"
										macro_variables_double_array_1d_9(ai1)=macro_variables_double_array_1d_5(ai1)
								End Select
							Next
						Case "6"
							For ai1=LBound(macro_variables_double_array_1d_6) To UBound(macro_variables_double_array_1d_6)
								Select Case array_index
									Case "1"
										macro_variables_double_array_1d_1(ai1)=macro_variables_double_array_1d_6(ai1)
									Case "2"
										macro_variables_double_array_1d_2(ai1)=macro_variables_double_array_1d_6(ai1)
									Case "3"
										macro_variables_double_array_1d_3(ai1)=macro_variables_double_array_1d_6(ai1)
									Case "4"
										macro_variables_double_array_1d_4(ai1)=macro_variables_double_array_1d_6(ai1)
									Case "5"
										macro_variables_double_array_1d_5(ai1)=macro_variables_double_array_1d_6(ai1)
									Case "6"
										macro_variables_double_array_1d_6(ai1)=macro_variables_double_array_1d_6(ai1)
									Case "7"
										macro_variables_double_array_1d_7(ai1)=macro_variables_double_array_1d_6(ai1)
									Case "8"
										macro_variables_double_array_1d_8(ai1)=macro_variables_double_array_1d_6(ai1)
									Case "9"
										macro_variables_double_array_1d_9(ai1)=macro_variables_double_array_1d_6(ai1)
								End Select
							Next
						Case "7"
							For ai1=LBound(macro_variables_double_array_1d_7) To UBound(macro_variables_double_array_1d_7)
								Select Case array_index
									Case "1"
										macro_variables_double_array_1d_1(ai1)=macro_variables_double_array_1d_7(ai1)
									Case "2"
										macro_variables_double_array_1d_2(ai1)=macro_variables_double_array_1d_7(ai1)
									Case "3"
										macro_variables_double_array_1d_3(ai1)=macro_variables_double_array_1d_7(ai1)
									Case "4"
										macro_variables_double_array_1d_4(ai1)=macro_variables_double_array_1d_7(ai1)
									Case "5"
										macro_variables_double_array_1d_5(ai1)=macro_variables_double_array_1d_7(ai1)
									Case "6"
										macro_variables_double_array_1d_6(ai1)=macro_variables_double_array_1d_7(ai1)
									Case "7"
										macro_variables_double_array_1d_7(ai1)=macro_variables_double_array_1d_7(ai1)
									Case "8"
										macro_variables_double_array_1d_8(ai1)=macro_variables_double_array_1d_7(ai1)
									Case "9"
										macro_variables_double_array_1d_9(ai1)=macro_variables_double_array_1d_7(ai1)
								End Select
							Next
						Case "8"
							For ai1=LBound(macro_variables_double_array_1d_8) To UBound(macro_variables_double_array_1d_8)
								Select Case array_index
									Case "1"
										macro_variables_double_array_1d_1(ai1)=macro_variables_double_array_1d_8(ai1)
									Case "2"
										macro_variables_double_array_1d_2(ai1)=macro_variables_double_array_1d_8(ai1)
									Case "3"
										macro_variables_double_array_1d_3(ai1)=macro_variables_double_array_1d_8(ai1)
									Case "4"
										macro_variables_double_array_1d_4(ai1)=macro_variables_double_array_1d_8(ai1)
									Case "5"
										macro_variables_double_array_1d_5(ai1)=macro_variables_double_array_1d_8(ai1)
									Case "6"
										macro_variables_double_array_1d_6(ai1)=macro_variables_double_array_1d_8(ai1)
									Case "7"
										macro_variables_double_array_1d_7(ai1)=macro_variables_double_array_1d_8(ai1)
									Case "8"
										macro_variables_double_array_1d_8(ai1)=macro_variables_double_array_1d_8(ai1)
									Case "9"
										macro_variables_double_array_1d_9(ai1)=macro_variables_double_array_1d_8(ai1)
								End Select
							Next
						Case "9"
							For ai1=LBound(macro_variables_double_array_1d_9) To UBound(macro_variables_double_array_1d_9)
								Select Case array_index
									Case "1"
										macro_variables_double_array_1d_1(ai1)=macro_variables_double_array_1d_9(ai1)
									Case "2"
										macro_variables_double_array_1d_2(ai1)=macro_variables_double_array_1d_9(ai1)
									Case "3"
										macro_variables_double_array_1d_3(ai1)=macro_variables_double_array_1d_9(ai1)
									Case "4"
										macro_variables_double_array_1d_4(ai1)=macro_variables_double_array_1d_9(ai1)
									Case "5"
										macro_variables_double_array_1d_5(ai1)=macro_variables_double_array_1d_9(ai1)
									Case "6"
										macro_variables_double_array_1d_6(ai1)=macro_variables_double_array_1d_9(ai1)
									Case "7"
										macro_variables_double_array_1d_7(ai1)=macro_variables_double_array_1d_9(ai1)
									Case "8"
										macro_variables_double_array_1d_8(ai1)=macro_variables_double_array_1d_9(ai1)
									Case "9"
										macro_variables_double_array_1d_9(ai1)=macro_variables_double_array_1d_9(ai1)
								End Select
							Next
					End Select
				Case "2d"
					Select Case macro_variables_info(a,3)
						Case "1"
							For ai1=LBound(macro_variables_double_array_2d_1) To UBound(macro_variables_double_array_2d_1)
								For ai2=LBound(macro_variables_double_array_2d_1,2) To UBound(macro_variables_double_array_2d_1,2)
									Select Case array_index
										Case "1"
											macro_variables_double_array_2d_1(ai1,ai2)=macro_variables_double_array_2d_1(ai1,ai2)
										Case "2"
											macro_variables_double_array_2d_2(ai1,ai2)=macro_variables_double_array_2d_1(ai1,ai2)
										Case "3"
											macro_variables_double_array_2d_3(ai1,ai2)=macro_variables_double_array_2d_1(ai1,ai2)
										Case "4"
											macro_variables_double_array_2d_4(ai1,ai2)=macro_variables_double_array_2d_1(ai1,ai2)
										Case "5"
											macro_variables_double_array_2d_5(ai1,ai2)=macro_variables_double_array_2d_1(ai1,ai2)
										Case "6"
											macro_variables_double_array_2d_6(ai1,ai2)=macro_variables_double_array_2d_1(ai1,ai2)
										Case "7"
											macro_variables_double_array_2d_7(ai1,ai2)=macro_variables_double_array_2d_1(ai1,ai2)
										Case "8"
											macro_variables_double_array_2d_8(ai1,ai2)=macro_variables_double_array_2d_1(ai1,ai2)
										Case "9"
											macro_variables_double_array_2d_9(ai1,ai2)=macro_variables_double_array_2d_1(ai1,ai2)
									End Select
								Next
							Next
						Case "2"
							For ai1=LBound(macro_variables_double_array_2d_2) To UBound(macro_variables_double_array_2d_2)
								For ai2=LBound(macro_variables_double_array_2d_2,2) To UBound(macro_variables_double_array_2d_2,2)
									Select Case array_index
										Case "1"
											macro_variables_double_array_2d_1(ai1,ai2)=macro_variables_double_array_2d_2(ai1,ai2)
										Case "2"
											macro_variables_double_array_2d_2(ai1,ai2)=macro_variables_double_array_2d_2(ai1,ai2)
										Case "3"
											macro_variables_double_array_2d_3(ai1,ai2)=macro_variables_double_array_2d_2(ai1,ai2)
										Case "4"
											macro_variables_double_array_2d_4(ai1,ai2)=macro_variables_double_array_2d_2(ai1,ai2)
										Case "5"
											macro_variables_double_array_2d_5(ai1,ai2)=macro_variables_double_array_2d_2(ai1,ai2)
										Case "6"
											macro_variables_double_array_2d_6(ai1,ai2)=macro_variables_double_array_2d_2(ai1,ai2)
										Case "7"
											macro_variables_double_array_2d_7(ai1,ai2)=macro_variables_double_array_2d_2(ai1,ai2)
										Case "8"
											macro_variables_double_array_2d_8(ai1,ai2)=macro_variables_double_array_2d_2(ai1,ai2)
										Case "9"
											macro_variables_double_array_2d_9(ai1,ai2)=macro_variables_double_array_2d_2(ai1,ai2)
									End Select
								Next
							Next
						Case "3"
							For ai1=LBound(macro_variables_double_array_2d_3) To UBound(macro_variables_double_array_2d_3)
								For ai2=LBound(macro_variables_double_array_2d_3,2) To UBound(macro_variables_double_array_2d_3,2)
									Select Case array_index
										Case "1"
											macro_variables_double_array_2d_1(ai1,ai2)=macro_variables_double_array_2d_3(ai1,ai2)
										Case "2"
											macro_variables_double_array_2d_2(ai1,ai2)=macro_variables_double_array_2d_3(ai1,ai2)
										Case "3"
											macro_variables_double_array_2d_3(ai1,ai2)=macro_variables_double_array_2d_3(ai1,ai2)
										Case "4"
											macro_variables_double_array_2d_4(ai1,ai2)=macro_variables_double_array_2d_3(ai1,ai2)
										Case "5"
											macro_variables_double_array_2d_5(ai1,ai2)=macro_variables_double_array_2d_3(ai1,ai2)
										Case "6"
											macro_variables_double_array_2d_6(ai1,ai2)=macro_variables_double_array_2d_3(ai1,ai2)
										Case "7"
											macro_variables_double_array_2d_7(ai1,ai2)=macro_variables_double_array_2d_3(ai1,ai2)
										Case "8"
											macro_variables_double_array_2d_8(ai1,ai2)=macro_variables_double_array_2d_3(ai1,ai2)
										Case "9"
											macro_variables_double_array_2d_9(ai1,ai2)=macro_variables_double_array_2d_3(ai1,ai2)
									End Select
								Next
							Next
						Case "4"
							For ai1=LBound(macro_variables_double_array_2d_4) To UBound(macro_variables_double_array_2d_4)
								For ai2=LBound(macro_variables_double_array_2d_4,2) To UBound(macro_variables_double_array_2d_4,2)
									Select Case array_index
										Case "1"
											macro_variables_double_array_2d_1(ai1,ai2)=macro_variables_double_array_2d_4(ai1,ai2)
										Case "2"
											macro_variables_double_array_2d_2(ai1,ai2)=macro_variables_double_array_2d_4(ai1,ai2)
										Case "3"
											macro_variables_double_array_2d_3(ai1,ai2)=macro_variables_double_array_2d_4(ai1,ai2)
										Case "4"
											macro_variables_double_array_2d_4(ai1,ai2)=macro_variables_double_array_2d_4(ai1,ai2)
										Case "5"
											macro_variables_double_array_2d_5(ai1,ai2)=macro_variables_double_array_2d_4(ai1,ai2)
										Case "6"
											macro_variables_double_array_2d_6(ai1,ai2)=macro_variables_double_array_2d_4(ai1,ai2)
										Case "7"
											macro_variables_double_array_2d_7(ai1,ai2)=macro_variables_double_array_2d_4(ai1,ai2)
										Case "8"
											macro_variables_double_array_2d_8(ai1,ai2)=macro_variables_double_array_2d_4(ai1,ai2)
										Case "9"
											macro_variables_double_array_2d_9(ai1,ai2)=macro_variables_double_array_2d_4(ai1,ai2)
									End Select
								Next
							Next
						Case "5"
							For ai1=LBound(macro_variables_double_array_2d_5) To UBound(macro_variables_double_array_2d_5)
								For ai2=LBound(macro_variables_double_array_2d_5,2) To UBound(macro_variables_double_array_2d_5,2)
									Select Case array_index
										Case "1"
											macro_variables_double_array_2d_1(ai1,ai2)=macro_variables_double_array_2d_5(ai1,ai2)
										Case "2"
											macro_variables_double_array_2d_2(ai1,ai2)=macro_variables_double_array_2d_5(ai1,ai2)
										Case "3"
											macro_variables_double_array_2d_3(ai1,ai2)=macro_variables_double_array_2d_5(ai1,ai2)
										Case "4"
											macro_variables_double_array_2d_4(ai1,ai2)=macro_variables_double_array_2d_5(ai1,ai2)
										Case "5"
											macro_variables_double_array_2d_5(ai1,ai2)=macro_variables_double_array_2d_5(ai1,ai2)
										Case "6"
											macro_variables_double_array_2d_6(ai1,ai2)=macro_variables_double_array_2d_5(ai1,ai2)
										Case "7"
											macro_variables_double_array_2d_7(ai1,ai2)=macro_variables_double_array_2d_5(ai1,ai2)
										Case "8"
											macro_variables_double_array_2d_8(ai1,ai2)=macro_variables_double_array_2d_5(ai1,ai2)
										Case "9"
											macro_variables_double_array_2d_9(ai1,ai2)=macro_variables_double_array_2d_5(ai1,ai2)
									End Select
								Next
							Next
						Case "6"
							For ai1=LBound(macro_variables_double_array_2d_6) To UBound(macro_variables_double_array_2d_6)
								For ai2=LBound(macro_variables_double_array_2d_6,2) To UBound(macro_variables_double_array_2d_6,2)
									Select Case array_index
										Case "1"
											macro_variables_double_array_2d_1(ai1,ai2)=macro_variables_double_array_2d_6(ai1,ai2)
										Case "2"
											macro_variables_double_array_2d_2(ai1,ai2)=macro_variables_double_array_2d_6(ai1,ai2)
										Case "3"
											macro_variables_double_array_2d_3(ai1,ai2)=macro_variables_double_array_2d_6(ai1,ai2)
										Case "4"
											macro_variables_double_array_2d_4(ai1,ai2)=macro_variables_double_array_2d_6(ai1,ai2)
										Case "5"
											macro_variables_double_array_2d_5(ai1,ai2)=macro_variables_double_array_2d_6(ai1,ai2)
										Case "6"
											macro_variables_double_array_2d_6(ai1,ai2)=macro_variables_double_array_2d_6(ai1,ai2)
										Case "7"
											macro_variables_double_array_2d_7(ai1,ai2)=macro_variables_double_array_2d_6(ai1,ai2)
										Case "8"
											macro_variables_double_array_2d_8(ai1,ai2)=macro_variables_double_array_2d_6(ai1,ai2)
										Case "9"
											macro_variables_double_array_2d_9(ai1,ai2)=macro_variables_double_array_2d_6(ai1,ai2)
									End Select
								Next
							Next
						Case "7"
							For ai1=LBound(macro_variables_double_array_2d_7) To UBound(macro_variables_double_array_2d_7)
								For ai2=LBound(macro_variables_double_array_2d_7,2) To UBound(macro_variables_double_array_2d_7,2)
									Select Case array_index
										Case "1"
											macro_variables_double_array_2d_1(ai1,ai2)=macro_variables_double_array_2d_7(ai1,ai2)
										Case "2"
											macro_variables_double_array_2d_2(ai1,ai2)=macro_variables_double_array_2d_7(ai1,ai2)
										Case "3"
											macro_variables_double_array_2d_3(ai1,ai2)=macro_variables_double_array_2d_7(ai1,ai2)
										Case "4"
											macro_variables_double_array_2d_4(ai1,ai2)=macro_variables_double_array_2d_7(ai1,ai2)
										Case "5"
											macro_variables_double_array_2d_5(ai1,ai2)=macro_variables_double_array_2d_7(ai1,ai2)
										Case "6"
											macro_variables_double_array_2d_6(ai1,ai2)=macro_variables_double_array_2d_7(ai1,ai2)
										Case "7"
											macro_variables_double_array_2d_7(ai1,ai2)=macro_variables_double_array_2d_7(ai1,ai2)
										Case "8"
											macro_variables_double_array_2d_8(ai1,ai2)=macro_variables_double_array_2d_7(ai1,ai2)
										Case "9"
											macro_variables_double_array_2d_9(ai1,ai2)=macro_variables_double_array_2d_7(ai1,ai2)
									End Select
								Next
							Next
						Case "8"
							For ai1=LBound(macro_variables_double_array_2d_8) To UBound(macro_variables_double_array_2d_8)
								For ai2=LBound(macro_variables_double_array_2d_8,2) To UBound(macro_variables_double_array_2d_8,2)
									Select Case array_index
										Case "1"
											macro_variables_double_array_2d_1(ai1,ai2)=macro_variables_double_array_2d_8(ai1,ai2)
										Case "2"
											macro_variables_double_array_2d_2(ai1,ai2)=macro_variables_double_array_2d_8(ai1,ai2)
										Case "3"
											macro_variables_double_array_2d_3(ai1,ai2)=macro_variables_double_array_2d_8(ai1,ai2)
										Case "4"
											macro_variables_double_array_2d_4(ai1,ai2)=macro_variables_double_array_2d_8(ai1,ai2)
										Case "5"
											macro_variables_double_array_2d_5(ai1,ai2)=macro_variables_double_array_2d_8(ai1,ai2)
										Case "6"
											macro_variables_double_array_2d_6(ai1,ai2)=macro_variables_double_array_2d_8(ai1,ai2)
										Case "7"
											macro_variables_double_array_2d_7(ai1,ai2)=macro_variables_double_array_2d_8(ai1,ai2)
										Case "8"
											macro_variables_double_array_2d_8(ai1,ai2)=macro_variables_double_array_2d_8(ai1,ai2)
										Case "9"
											macro_variables_double_array_2d_9(ai1,ai2)=macro_variables_double_array_2d_8(ai1,ai2)
									End Select
								Next
							Next
						Case "9"
							For ai1=LBound(macro_variables_double_array_2d_9) To UBound(macro_variables_double_array_2d_9)
								For ai2=LBound(macro_variables_double_array_2d_9,2) To UBound(macro_variables_double_array_2d_9,2)
									Select Case array_index
										Case "1"
											macro_variables_double_array_2d_1(ai1,ai2)=macro_variables_double_array_2d_9(ai1,ai2)
										Case "2"
											macro_variables_double_array_2d_2(ai1,ai2)=macro_variables_double_array_2d_9(ai1,ai2)
										Case "3"
											macro_variables_double_array_2d_3(ai1,ai2)=macro_variables_double_array_2d_9(ai1,ai2)
										Case "4"
											macro_variables_double_array_2d_4(ai1,ai2)=macro_variables_double_array_2d_9(ai1,ai2)
										Case "5"
											macro_variables_double_array_2d_5(ai1,ai2)=macro_variables_double_array_2d_9(ai1,ai2)
										Case "6"
											macro_variables_double_array_2d_6(ai1,ai2)=macro_variables_double_array_2d_9(ai1,ai2)
										Case "7"
											macro_variables_double_array_2d_7(ai1,ai2)=macro_variables_double_array_2d_9(ai1,ai2)
										Case "8"
											macro_variables_double_array_2d_8(ai1,ai2)=macro_variables_double_array_2d_9(ai1,ai2)
										Case "9"
											macro_variables_double_array_2d_9(ai1,ai2)=macro_variables_double_array_2d_9(ai1,ai2)
									End Select
								Next
							Next
					End Select
				Case "3d"
					Select Case macro_variables_info(a,3)
						Case "1"
							For ai1=LBound(macro_variables_double_array_3d_1) To UBound(macro_variables_double_array_3d_1)
								For ai2=LBound(macro_variables_double_array_3d_1,2) To UBound(macro_variables_double_array_3d_1,2)
									For ai3=LBound(macro_variables_double_array_3d_1,3) To UBound(macro_variables_double_array_3d_1,3)
										Select Case array_index
											Case "1"
												macro_variables_double_array_3d_1(ai1,ai2,ai3)=macro_variables_double_array_3d_1(ai1,ai2,ai3)
											Case "2"
												macro_variables_double_array_3d_2(ai1,ai2,ai3)=macro_variables_double_array_3d_1(ai1,ai2,ai3)
											Case "3"
												macro_variables_double_array_3d_3(ai1,ai2,ai3)=macro_variables_double_array_3d_1(ai1,ai2,ai3)
											Case "4"
												macro_variables_double_array_3d_4(ai1,ai2,ai3)=macro_variables_double_array_3d_1(ai1,ai2,ai3)
											Case "5"
												macro_variables_double_array_3d_5(ai1,ai2,ai3)=macro_variables_double_array_3d_1(ai1,ai2,ai3)
											Case "6"
												macro_variables_double_array_3d_6(ai1,ai2,ai3)=macro_variables_double_array_3d_1(ai1,ai2,ai3)
											Case "7"
												macro_variables_double_array_3d_7(ai1,ai2,ai3)=macro_variables_double_array_3d_1(ai1,ai2,ai3)
											Case "8"
												macro_variables_double_array_3d_8(ai1,ai2,ai3)=macro_variables_double_array_3d_1(ai1,ai2,ai3)
											Case "9"
												macro_variables_double_array_3d_9(ai1,ai2,ai3)=macro_variables_double_array_3d_1(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "2"
							For ai1=LBound(macro_variables_double_array_3d_2) To UBound(macro_variables_double_array_3d_2)
								For ai2=LBound(macro_variables_double_array_3d_2,2) To UBound(macro_variables_double_array_3d_2,2)
									For ai3=LBound(macro_variables_double_array_3d_2,3) To UBound(macro_variables_double_array_3d_2,3)
										Select Case array_index
											Case "1"
												macro_variables_double_array_3d_1(ai1,ai2,ai3)=macro_variables_double_array_3d_2(ai1,ai2,ai3)
											Case "2"
												macro_variables_double_array_3d_2(ai1,ai2,ai3)=macro_variables_double_array_3d_2(ai1,ai2,ai3)
											Case "3"
												macro_variables_double_array_3d_3(ai1,ai2,ai3)=macro_variables_double_array_3d_2(ai1,ai2,ai3)
											Case "4"
												macro_variables_double_array_3d_4(ai1,ai2,ai3)=macro_variables_double_array_3d_2(ai1,ai2,ai3)
											Case "5"
												macro_variables_double_array_3d_5(ai1,ai2,ai3)=macro_variables_double_array_3d_2(ai1,ai2,ai3)
											Case "6"
												macro_variables_double_array_3d_6(ai1,ai2,ai3)=macro_variables_double_array_3d_2(ai1,ai2,ai3)
											Case "7"
												macro_variables_double_array_3d_7(ai1,ai2,ai3)=macro_variables_double_array_3d_2(ai1,ai2,ai3)
											Case "8"
												macro_variables_double_array_3d_8(ai1,ai2,ai3)=macro_variables_double_array_3d_2(ai1,ai2,ai3)
											Case "9"
												macro_variables_double_array_3d_9(ai1,ai2,ai3)=macro_variables_double_array_3d_2(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "3"
							For ai1=LBound(macro_variables_double_array_3d_3) To UBound(macro_variables_double_array_3d_3)
								For ai2=LBound(macro_variables_double_array_3d_3,2) To UBound(macro_variables_double_array_3d_3,2)
									For ai3=LBound(macro_variables_double_array_3d_3,3) To UBound(macro_variables_double_array_3d_3,3)
										Select Case array_index
											Case "1"
												macro_variables_double_array_3d_1(ai1,ai2,ai3)=macro_variables_double_array_3d_3(ai1,ai2,ai3)
											Case "2"
												macro_variables_double_array_3d_2(ai1,ai2,ai3)=macro_variables_double_array_3d_3(ai1,ai2,ai3)
											Case "3"
												macro_variables_double_array_3d_3(ai1,ai2,ai3)=macro_variables_double_array_3d_3(ai1,ai2,ai3)
											Case "4"
												macro_variables_double_array_3d_4(ai1,ai2,ai3)=macro_variables_double_array_3d_3(ai1,ai2,ai3)
											Case "5"
												macro_variables_double_array_3d_5(ai1,ai2,ai3)=macro_variables_double_array_3d_3(ai1,ai2,ai3)
											Case "6"
												macro_variables_double_array_3d_6(ai1,ai2,ai3)=macro_variables_double_array_3d_3(ai1,ai2,ai3)
											Case "7"
												macro_variables_double_array_3d_7(ai1,ai2,ai3)=macro_variables_double_array_3d_3(ai1,ai2,ai3)
											Case "8"
												macro_variables_double_array_3d_8(ai1,ai2,ai3)=macro_variables_double_array_3d_3(ai1,ai2,ai3)
											Case "9"
												macro_variables_double_array_3d_9(ai1,ai2,ai3)=macro_variables_double_array_3d_3(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "4"
							For ai1=LBound(macro_variables_double_array_3d_4) To UBound(macro_variables_double_array_3d_4)
								For ai2=LBound(macro_variables_double_array_3d_4,2) To UBound(macro_variables_double_array_3d_4,2)
									For ai3=LBound(macro_variables_double_array_3d_4,3) To UBound(macro_variables_double_array_3d_4,3)
										Select Case array_index
											Case "1"
												macro_variables_double_array_3d_1(ai1,ai2,ai3)=macro_variables_double_array_3d_4(ai1,ai2,ai3)
											Case "2"
												macro_variables_double_array_3d_2(ai1,ai2,ai3)=macro_variables_double_array_3d_4(ai1,ai2,ai3)
											Case "3"
												macro_variables_double_array_3d_3(ai1,ai2,ai3)=macro_variables_double_array_3d_4(ai1,ai2,ai3)
											Case "4"
												macro_variables_double_array_3d_4(ai1,ai2,ai3)=macro_variables_double_array_3d_4(ai1,ai2,ai3)
											Case "5"
												macro_variables_double_array_3d_5(ai1,ai2,ai3)=macro_variables_double_array_3d_4(ai1,ai2,ai3)
											Case "6"
												macro_variables_double_array_3d_6(ai1,ai2,ai3)=macro_variables_double_array_3d_4(ai1,ai2,ai3)
											Case "7"
												macro_variables_double_array_3d_7(ai1,ai2,ai3)=macro_variables_double_array_3d_4(ai1,ai2,ai3)
											Case "8"
												macro_variables_double_array_3d_8(ai1,ai2,ai3)=macro_variables_double_array_3d_4(ai1,ai2,ai3)
											Case "9"
												macro_variables_double_array_3d_9(ai1,ai2,ai3)=macro_variables_double_array_3d_4(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "5"
							For ai1=LBound(macro_variables_double_array_3d_5) To UBound(macro_variables_double_array_3d_5)
								For ai2=LBound(macro_variables_double_array_3d_5,2) To UBound(macro_variables_double_array_3d_5,2)
									For ai3=LBound(macro_variables_double_array_3d_5,3) To UBound(macro_variables_double_array_3d_5,3)
										Select Case array_index
											Case "1"
												macro_variables_double_array_3d_1(ai1,ai2,ai3)=macro_variables_double_array_3d_5(ai1,ai2,ai3)
											Case "2"
												macro_variables_double_array_3d_2(ai1,ai2,ai3)=macro_variables_double_array_3d_5(ai1,ai2,ai3)
											Case "3"
												macro_variables_double_array_3d_3(ai1,ai2,ai3)=macro_variables_double_array_3d_5(ai1,ai2,ai3)
											Case "4"
												macro_variables_double_array_3d_4(ai1,ai2,ai3)=macro_variables_double_array_3d_5(ai1,ai2,ai3)
											Case "5"
												macro_variables_double_array_3d_5(ai1,ai2,ai3)=macro_variables_double_array_3d_5(ai1,ai2,ai3)
											Case "6"
												macro_variables_double_array_3d_6(ai1,ai2,ai3)=macro_variables_double_array_3d_5(ai1,ai2,ai3)
											Case "7"
												macro_variables_double_array_3d_7(ai1,ai2,ai3)=macro_variables_double_array_3d_5(ai1,ai2,ai3)
											Case "8"
												macro_variables_double_array_3d_8(ai1,ai2,ai3)=macro_variables_double_array_3d_5(ai1,ai2,ai3)
											Case "9"
												macro_variables_double_array_3d_9(ai1,ai2,ai3)=macro_variables_double_array_3d_5(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "6"
							For ai1=LBound(macro_variables_double_array_3d_6) To UBound(macro_variables_double_array_3d_6)
								For ai2=LBound(macro_variables_double_array_3d_6,2) To UBound(macro_variables_double_array_3d_6,2)
									For ai3=LBound(macro_variables_double_array_3d_6,3) To UBound(macro_variables_double_array_3d_6,3)
										Select Case array_index
											Case "1"
												macro_variables_double_array_3d_1(ai1,ai2,ai3)=macro_variables_double_array_3d_6(ai1,ai2,ai3)
											Case "2"
												macro_variables_double_array_3d_2(ai1,ai2,ai3)=macro_variables_double_array_3d_6(ai1,ai2,ai3)
											Case "3"
												macro_variables_double_array_3d_3(ai1,ai2,ai3)=macro_variables_double_array_3d_6(ai1,ai2,ai3)
											Case "4"
												macro_variables_double_array_3d_4(ai1,ai2,ai3)=macro_variables_double_array_3d_6(ai1,ai2,ai3)
											Case "5"
												macro_variables_double_array_3d_5(ai1,ai2,ai3)=macro_variables_double_array_3d_6(ai1,ai2,ai3)
											Case "6"
												macro_variables_double_array_3d_6(ai1,ai2,ai3)=macro_variables_double_array_3d_6(ai1,ai2,ai3)
											Case "7"
												macro_variables_double_array_3d_7(ai1,ai2,ai3)=macro_variables_double_array_3d_6(ai1,ai2,ai3)
											Case "8"
												macro_variables_double_array_3d_8(ai1,ai2,ai3)=macro_variables_double_array_3d_6(ai1,ai2,ai3)
											Case "9"
												macro_variables_double_array_3d_9(ai1,ai2,ai3)=macro_variables_double_array_3d_6(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "7"
							For ai1=LBound(macro_variables_double_array_3d_7) To UBound(macro_variables_double_array_3d_7)
								For ai2=LBound(macro_variables_double_array_3d_7,2) To UBound(macro_variables_double_array_3d_7,2)
									For ai3=LBound(macro_variables_double_array_3d_7,3) To UBound(macro_variables_double_array_3d_7,3)
										Select Case array_index
											Case "1"
												macro_variables_double_array_3d_1(ai1,ai2,ai3)=macro_variables_double_array_3d_7(ai1,ai2,ai3)
											Case "2"
												macro_variables_double_array_3d_2(ai1,ai2,ai3)=macro_variables_double_array_3d_7(ai1,ai2,ai3)
											Case "3"
												macro_variables_double_array_3d_3(ai1,ai2,ai3)=macro_variables_double_array_3d_7(ai1,ai2,ai3)
											Case "4"
												macro_variables_double_array_3d_4(ai1,ai2,ai3)=macro_variables_double_array_3d_7(ai1,ai2,ai3)
											Case "5"
												macro_variables_double_array_3d_5(ai1,ai2,ai3)=macro_variables_double_array_3d_7(ai1,ai2,ai3)
											Case "6"
												macro_variables_double_array_3d_6(ai1,ai2,ai3)=macro_variables_double_array_3d_7(ai1,ai2,ai3)
											Case "7"
												macro_variables_double_array_3d_7(ai1,ai2,ai3)=macro_variables_double_array_3d_7(ai1,ai2,ai3)
											Case "8"
												macro_variables_double_array_3d_8(ai1,ai2,ai3)=macro_variables_double_array_3d_7(ai1,ai2,ai3)
											Case "9"
												macro_variables_double_array_3d_9(ai1,ai2,ai3)=macro_variables_double_array_3d_7(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "8"
							For ai1=LBound(macro_variables_double_array_3d_8) To UBound(macro_variables_double_array_3d_8)
								For ai2=LBound(macro_variables_double_array_3d_8,2) To UBound(macro_variables_double_array_3d_8,2)
									For ai3=LBound(macro_variables_double_array_3d_8,3) To UBound(macro_variables_double_array_3d_8,3)
										Select Case array_index
											Case "1"
												macro_variables_double_array_3d_1(ai1,ai2,ai3)=macro_variables_double_array_3d_8(ai1,ai2,ai3)
											Case "2"
												macro_variables_double_array_3d_2(ai1,ai2,ai3)=macro_variables_double_array_3d_8(ai1,ai2,ai3)
											Case "3"
												macro_variables_double_array_3d_3(ai1,ai2,ai3)=macro_variables_double_array_3d_8(ai1,ai2,ai3)
											Case "4"
												macro_variables_double_array_3d_4(ai1,ai2,ai3)=macro_variables_double_array_3d_8(ai1,ai2,ai3)
											Case "5"
												macro_variables_double_array_3d_5(ai1,ai2,ai3)=macro_variables_double_array_3d_8(ai1,ai2,ai3)
											Case "6"
												macro_variables_double_array_3d_6(ai1,ai2,ai3)=macro_variables_double_array_3d_8(ai1,ai2,ai3)
											Case "7"
												macro_variables_double_array_3d_7(ai1,ai2,ai3)=macro_variables_double_array_3d_8(ai1,ai2,ai3)
											Case "8"
												macro_variables_double_array_3d_8(ai1,ai2,ai3)=macro_variables_double_array_3d_8(ai1,ai2,ai3)
											Case "9"
												macro_variables_double_array_3d_9(ai1,ai2,ai3)=macro_variables_double_array_3d_8(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
						Case "9"
							For ai1=LBound(macro_variables_double_array_3d_9) To UBound(macro_variables_double_array_3d_9)
								For ai2=LBound(macro_variables_double_array_3d_9,2) To UBound(macro_variables_double_array_3d_9,2)
									For ai3=LBound(macro_variables_double_array_3d_9,3) To UBound(macro_variables_double_array_3d_9,3)
										Select Case array_index
											Case "1"
												macro_variables_double_array_3d_1(ai1,ai2,ai3)=macro_variables_double_array_3d_9(ai1,ai2,ai3)
											Case "2"
												macro_variables_double_array_3d_2(ai1,ai2,ai3)=macro_variables_double_array_3d_9(ai1,ai2,ai3)
											Case "3"
												macro_variables_double_array_3d_3(ai1,ai2,ai3)=macro_variables_double_array_3d_9(ai1,ai2,ai3)
											Case "4"
												macro_variables_double_array_3d_4(ai1,ai2,ai3)=macro_variables_double_array_3d_9(ai1,ai2,ai3)
											Case "5"
												macro_variables_double_array_3d_5(ai1,ai2,ai3)=macro_variables_double_array_3d_9(ai1,ai2,ai3)
											Case "6"
												macro_variables_double_array_3d_6(ai1,ai2,ai3)=macro_variables_double_array_3d_9(ai1,ai2,ai3)
											Case "7"
												macro_variables_double_array_3d_7(ai1,ai2,ai3)=macro_variables_double_array_3d_9(ai1,ai2,ai3)
											Case "8"
												macro_variables_double_array_3d_8(ai1,ai2,ai3)=macro_variables_double_array_3d_9(ai1,ai2,ai3)
											Case "9"
												macro_variables_double_array_3d_9(ai1,ai2,ai3)=macro_variables_double_array_3d_9(ai1,ai2,ai3)
										End Select
									Next
								Next
							Next
					End Select
			End Select
	End Select
End Sub

Sub clear_sub_function_variables(temp As String)
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Sub clear_sub_function_variables"
		Print #5,"temp:";temp
		'For dbugi=LBound(temp) To UBound(temp)
			'Print #5,"temp("; dbugi; "):"; temp(dbugi)
		'Next
		Print #5,"---------------"
	EndIf
	Dim As Integer i,j,k,c,ai1,ai2,ai3
	For i=1 To macro_variables_info_c
		If Left(macro_variables_info(i,1),Len(temp)+1)=temp+"_" Then
			Select Case macro_variables_info(i,2)
				Case "BOOLEAN","BYTE","UBYTE","SHORT","USHORT","LONG","ULONG","INTEGER","UINTEGER","LONGINT","ULONGINT","SINGLE","DOUBLE","STRING"
					keyword_let(macro_variables_info(i,1)+"=0")
				Case "BOOLEAN_ARRAY"
					Select Case macro_variables_info(i,5)
						Case "1d"
							Select Case macro_variables_info(i,3)
								Case "1"
									For ai1=LBound(macro_variables_boolean_array_1d_1) To UBound(macro_variables_boolean_array_1d_1)
										macro_variables_boolean_array_1d_1(ai1)=0
									Next
								Case "2"
									For ai1=LBound(macro_variables_boolean_array_1d_2) To UBound(macro_variables_boolean_array_1d_2)
										macro_variables_boolean_array_1d_2(ai1)=0
									Next
								Case "3"
									For ai1=LBound(macro_variables_boolean_array_1d_3) To UBound(macro_variables_boolean_array_1d_3)
										macro_variables_boolean_array_1d_3(ai1)=0
									Next
								Case "4"
									For ai1=LBound(macro_variables_boolean_array_1d_4) To UBound(macro_variables_boolean_array_1d_4)
										macro_variables_boolean_array_1d_4(ai1)=0
									Next
								Case "5"
									For ai1=LBound(macro_variables_boolean_array_1d_5) To UBound(macro_variables_boolean_array_1d_5)
										macro_variables_boolean_array_1d_5(ai1)=0
									Next
								Case "6"
									For ai1=LBound(macro_variables_boolean_array_1d_6) To UBound(macro_variables_boolean_array_1d_6)
										macro_variables_boolean_array_1d_6(ai1)=0
									Next
								Case "7"
									For ai1=LBound(macro_variables_boolean_array_1d_7) To UBound(macro_variables_boolean_array_1d_7)
										macro_variables_boolean_array_1d_7(ai1)=0
									Next
								Case "8"
									For ai1=LBound(macro_variables_boolean_array_1d_8) To UBound(macro_variables_boolean_array_1d_8)
										macro_variables_boolean_array_1d_8(ai1)=0
									Next
								Case "9"
									For ai1=LBound(macro_variables_boolean_array_1d_9) To UBound(macro_variables_boolean_array_1d_9)
										macro_variables_boolean_array_1d_9(ai1)=0
									Next
							End Select
						Case "2d"
							Select Case macro_variables_info(i,3)
								Case "1"
									For ai1=LBound(macro_variables_boolean_array_2d_1) To UBound(macro_variables_boolean_array_2d_1)
										For ai2=LBound(macro_variables_boolean_array_2d_1,2) To UBound(macro_variables_boolean_array_2d_1,2)
											macro_variables_boolean_array_2d_1(ai1,ai2)=0
										Next
									Next
								Case "2"
									For ai1=LBound(macro_variables_boolean_array_2d_2) To UBound(macro_variables_boolean_array_2d_2)
										For ai2=LBound(macro_variables_boolean_array_2d_2,2) To UBound(macro_variables_boolean_array_2d_2,2)
											macro_variables_boolean_array_2d_2(ai1,ai2)=0
										Next
									Next
								Case "3"
									For ai1=LBound(macro_variables_boolean_array_2d_3) To UBound(macro_variables_boolean_array_2d_3)
										For ai2=LBound(macro_variables_boolean_array_2d_3,2) To UBound(macro_variables_boolean_array_2d_3,2)
											macro_variables_boolean_array_2d_3(ai1,ai2)=0
										Next
									Next
								Case "4"
									For ai1=LBound(macro_variables_boolean_array_2d_4) To UBound(macro_variables_boolean_array_2d_4)
										For ai2=LBound(macro_variables_boolean_array_2d_4,2) To UBound(macro_variables_boolean_array_2d_4,2)
											macro_variables_boolean_array_2d_4(ai1,ai2)=0
										Next
									Next
								Case "5"
									For ai1=LBound(macro_variables_boolean_array_2d_5) To UBound(macro_variables_boolean_array_2d_5)
										For ai2=LBound(macro_variables_boolean_array_2d_5,2) To UBound(macro_variables_boolean_array_2d_5,2)
											macro_variables_boolean_array_2d_5(ai1,ai2)=0
										Next
									Next
								Case "6"
									For ai1=LBound(macro_variables_boolean_array_2d_6) To UBound(macro_variables_boolean_array_2d_6)
										For ai2=LBound(macro_variables_boolean_array_2d_6,2) To UBound(macro_variables_boolean_array_2d_6,2)
											macro_variables_boolean_array_2d_6(ai1,ai2)=0
										Next
									Next
								Case "7"
									For ai1=LBound(macro_variables_boolean_array_2d_7) To UBound(macro_variables_boolean_array_2d_7)
										For ai2=LBound(macro_variables_boolean_array_2d_7,2) To UBound(macro_variables_boolean_array_2d_7,2)
											macro_variables_boolean_array_2d_7(ai1,ai2)=0
										Next
									Next
								Case "8"
									For ai1=LBound(macro_variables_boolean_array_2d_8) To UBound(macro_variables_boolean_array_2d_8)
										For ai2=LBound(macro_variables_boolean_array_2d_8,2) To UBound(macro_variables_boolean_array_2d_8,2)
											macro_variables_boolean_array_2d_8(ai1,ai2)=0
										Next
									Next
								Case "9"
									For ai1=LBound(macro_variables_boolean_array_2d_9) To UBound(macro_variables_boolean_array_2d_9)
										For ai2=LBound(macro_variables_boolean_array_2d_9,2) To UBound(macro_variables_boolean_array_2d_9,2)
											macro_variables_boolean_array_2d_9(ai1,ai2)=0
										Next
									Next
							End Select
						Case "3d"
							Select Case macro_variables_info(i,3)
								Case "1"
									For ai1=LBound(macro_variables_boolean_array_3d_1) To UBound(macro_variables_boolean_array_3d_1)
										For ai2=LBound(macro_variables_boolean_array_3d_1,2) To UBound(macro_variables_boolean_array_3d_1,2)
											For ai3=LBound(macro_variables_boolean_array_3d_1,3) To UBound(macro_variables_boolean_array_3d_1,3)
												macro_variables_boolean_array_3d_1(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "2"
									For ai1=LBound(macro_variables_boolean_array_3d_2) To UBound(macro_variables_boolean_array_3d_2)
										For ai2=LBound(macro_variables_boolean_array_3d_2,2) To UBound(macro_variables_boolean_array_3d_2,2)
											For ai3=LBound(macro_variables_boolean_array_3d_2,3) To UBound(macro_variables_boolean_array_3d_2,3)
												macro_variables_boolean_array_3d_2(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "3"
									For ai1=LBound(macro_variables_boolean_array_3d_3) To UBound(macro_variables_boolean_array_3d_3)
										For ai2=LBound(macro_variables_boolean_array_3d_3,2) To UBound(macro_variables_boolean_array_3d_3,2)
											For ai3=LBound(macro_variables_boolean_array_3d_3,3) To UBound(macro_variables_boolean_array_3d_3,3)
												macro_variables_boolean_array_3d_3(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "4"
									For ai1=LBound(macro_variables_boolean_array_3d_4) To UBound(macro_variables_boolean_array_3d_4)
										For ai2=LBound(macro_variables_boolean_array_3d_4,2) To UBound(macro_variables_boolean_array_3d_4,2)
											For ai3=LBound(macro_variables_boolean_array_3d_4,3) To UBound(macro_variables_boolean_array_3d_4,3)
												macro_variables_boolean_array_3d_4(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "5"
									For ai1=LBound(macro_variables_boolean_array_3d_5) To UBound(macro_variables_boolean_array_3d_5)
										For ai2=LBound(macro_variables_boolean_array_3d_5,2) To UBound(macro_variables_boolean_array_3d_5,2)
											For ai3=LBound(macro_variables_boolean_array_3d_5,3) To UBound(macro_variables_boolean_array_3d_5,3)
												macro_variables_boolean_array_3d_5(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "6"
									For ai1=LBound(macro_variables_boolean_array_3d_6) To UBound(macro_variables_boolean_array_3d_6)
										For ai2=LBound(macro_variables_boolean_array_3d_6,2) To UBound(macro_variables_boolean_array_3d_6,2)
											For ai3=LBound(macro_variables_boolean_array_3d_6,3) To UBound(macro_variables_boolean_array_3d_6,3)
												macro_variables_boolean_array_3d_6(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "7"
									For ai1=LBound(macro_variables_boolean_array_3d_7) To UBound(macro_variables_boolean_array_3d_7)
										For ai2=LBound(macro_variables_boolean_array_3d_7,2) To UBound(macro_variables_boolean_array_3d_7,2)
											For ai3=LBound(macro_variables_boolean_array_3d_7,3) To UBound(macro_variables_boolean_array_3d_7,3)
												macro_variables_boolean_array_3d_7(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "8"
									For ai1=LBound(macro_variables_boolean_array_3d_8) To UBound(macro_variables_boolean_array_3d_8)
										For ai2=LBound(macro_variables_boolean_array_3d_8,2) To UBound(macro_variables_boolean_array_3d_8,2)
											For ai3=LBound(macro_variables_boolean_array_3d_8,3) To UBound(macro_variables_boolean_array_3d_8,3)
												macro_variables_boolean_array_3d_8(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "9"
									For ai1=LBound(macro_variables_boolean_array_3d_9) To UBound(macro_variables_boolean_array_3d_9)
										For ai2=LBound(macro_variables_boolean_array_3d_9,2) To UBound(macro_variables_boolean_array_3d_9,2)
											For ai3=LBound(macro_variables_boolean_array_3d_9,3) To UBound(macro_variables_boolean_array_3d_9,3)
												macro_variables_boolean_array_3d_9(ai1,ai2,ai3)=0
											Next
										Next
									Next
							End Select
					End Select
				Case "BYTE_ARRAY"
					Select Case macro_variables_info(i,5)
						Case "1d"
							Select Case macro_variables_info(i,3)
								Case "1"
									For ai1=LBound(macro_variables_byte_array_1d_1) To UBound(macro_variables_byte_array_1d_1)
										macro_variables_byte_array_1d_1(ai1)=0
									Next
								Case "2"
									For ai1=LBound(macro_variables_byte_array_1d_2) To UBound(macro_variables_byte_array_1d_2)
										macro_variables_byte_array_1d_2(ai1)=0
									Next
								Case "3"
									For ai1=LBound(macro_variables_byte_array_1d_3) To UBound(macro_variables_byte_array_1d_3)
										macro_variables_byte_array_1d_3(ai1)=0
									Next
								Case "4"
									For ai1=LBound(macro_variables_byte_array_1d_4) To UBound(macro_variables_byte_array_1d_4)
										macro_variables_byte_array_1d_4(ai1)=0
									Next
								Case "5"
									For ai1=LBound(macro_variables_byte_array_1d_5) To UBound(macro_variables_byte_array_1d_5)
										macro_variables_byte_array_1d_5(ai1)=0
									Next
								Case "6"
									For ai1=LBound(macro_variables_byte_array_1d_6) To UBound(macro_variables_byte_array_1d_6)
										macro_variables_byte_array_1d_6(ai1)=0
									Next
								Case "7"
									For ai1=LBound(macro_variables_byte_array_1d_7) To UBound(macro_variables_byte_array_1d_7)
										macro_variables_byte_array_1d_7(ai1)=0
									Next
								Case "8"
									For ai1=LBound(macro_variables_byte_array_1d_8) To UBound(macro_variables_byte_array_1d_8)
										macro_variables_byte_array_1d_8(ai1)=0
									Next
								Case "9"
									For ai1=LBound(macro_variables_byte_array_1d_9) To UBound(macro_variables_byte_array_1d_9)
										macro_variables_byte_array_1d_9(ai1)=0
									Next
							End Select
						Case "2d"
							Select Case macro_variables_info(i,3)
								Case "1"
									For ai1=LBound(macro_variables_byte_array_2d_1) To UBound(macro_variables_byte_array_2d_1)
										For ai2=LBound(macro_variables_byte_array_2d_1,2) To UBound(macro_variables_byte_array_2d_1,2)
											macro_variables_byte_array_2d_1(ai1,ai2)=0
										Next
									Next
								Case "2"
									For ai1=LBound(macro_variables_byte_array_2d_2) To UBound(macro_variables_byte_array_2d_2)
										For ai2=LBound(macro_variables_byte_array_2d_2,2) To UBound(macro_variables_byte_array_2d_2,2)
											macro_variables_byte_array_2d_2(ai1,ai2)=0
										Next
									Next
								Case "3"
									For ai1=LBound(macro_variables_byte_array_2d_3) To UBound(macro_variables_byte_array_2d_3)
										For ai2=LBound(macro_variables_byte_array_2d_3,2) To UBound(macro_variables_byte_array_2d_3,2)
											macro_variables_byte_array_2d_3(ai1,ai2)=0
										Next
									Next
								Case "4"
									For ai1=LBound(macro_variables_byte_array_2d_4) To UBound(macro_variables_byte_array_2d_4)
										For ai2=LBound(macro_variables_byte_array_2d_4,2) To UBound(macro_variables_byte_array_2d_4,2)
											macro_variables_byte_array_2d_4(ai1,ai2)=0
										Next
									Next
								Case "5"
									For ai1=LBound(macro_variables_byte_array_2d_5) To UBound(macro_variables_byte_array_2d_5)
										For ai2=LBound(macro_variables_byte_array_2d_5,2) To UBound(macro_variables_byte_array_2d_5,2)
											macro_variables_byte_array_2d_5(ai1,ai2)=0
										Next
									Next
								Case "6"
									For ai1=LBound(macro_variables_byte_array_2d_6) To UBound(macro_variables_byte_array_2d_6)
										For ai2=LBound(macro_variables_byte_array_2d_6,2) To UBound(macro_variables_byte_array_2d_6,2)
											macro_variables_byte_array_2d_6(ai1,ai2)=0
										Next
									Next
								Case "7"
									For ai1=LBound(macro_variables_byte_array_2d_7) To UBound(macro_variables_byte_array_2d_7)
										For ai2=LBound(macro_variables_byte_array_2d_7,2) To UBound(macro_variables_byte_array_2d_7,2)
											macro_variables_byte_array_2d_7(ai1,ai2)=0
										Next
									Next
								Case "8"
									For ai1=LBound(macro_variables_byte_array_2d_8) To UBound(macro_variables_byte_array_2d_8)
										For ai2=LBound(macro_variables_byte_array_2d_8,2) To UBound(macro_variables_byte_array_2d_8,2)
											macro_variables_byte_array_2d_8(ai1,ai2)=0
										Next
									Next
								Case "9"
									For ai1=LBound(macro_variables_byte_array_2d_9) To UBound(macro_variables_byte_array_2d_9)
										For ai2=LBound(macro_variables_byte_array_2d_9,2) To UBound(macro_variables_byte_array_2d_9,2)
											macro_variables_byte_array_2d_9(ai1,ai2)=0
										Next
									Next
							End Select
						Case "3d"
							Select Case macro_variables_info(i,3)
								Case "1"
									For ai1=LBound(macro_variables_byte_array_3d_1) To UBound(macro_variables_byte_array_3d_1)
										For ai2=LBound(macro_variables_byte_array_3d_1,2) To UBound(macro_variables_byte_array_3d_1,2)
											For ai3=LBound(macro_variables_byte_array_3d_1,3) To UBound(macro_variables_byte_array_3d_1,3)
												macro_variables_byte_array_3d_1(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "2"
									For ai1=LBound(macro_variables_byte_array_3d_2) To UBound(macro_variables_byte_array_3d_2)
										For ai2=LBound(macro_variables_byte_array_3d_2,2) To UBound(macro_variables_byte_array_3d_2,2)
											For ai3=LBound(macro_variables_byte_array_3d_2,3) To UBound(macro_variables_byte_array_3d_2,3)
												macro_variables_byte_array_3d_2(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "3"
									For ai1=LBound(macro_variables_byte_array_3d_3) To UBound(macro_variables_byte_array_3d_3)
										For ai2=LBound(macro_variables_byte_array_3d_3,2) To UBound(macro_variables_byte_array_3d_3,2)
											For ai3=LBound(macro_variables_byte_array_3d_3,3) To UBound(macro_variables_byte_array_3d_3,3)
												macro_variables_byte_array_3d_3(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "4"
									For ai1=LBound(macro_variables_byte_array_3d_4) To UBound(macro_variables_byte_array_3d_4)
										For ai2=LBound(macro_variables_byte_array_3d_4,2) To UBound(macro_variables_byte_array_3d_4,2)
											For ai3=LBound(macro_variables_byte_array_3d_4,3) To UBound(macro_variables_byte_array_3d_4,3)
												macro_variables_byte_array_3d_4(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "5"
									For ai1=LBound(macro_variables_byte_array_3d_5) To UBound(macro_variables_byte_array_3d_5)
										For ai2=LBound(macro_variables_byte_array_3d_5,2) To UBound(macro_variables_byte_array_3d_5,2)
											For ai3=LBound(macro_variables_byte_array_3d_5,3) To UBound(macro_variables_byte_array_3d_5,3)
												macro_variables_byte_array_3d_5(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "6"
									For ai1=LBound(macro_variables_byte_array_3d_6) To UBound(macro_variables_byte_array_3d_6)
										For ai2=LBound(macro_variables_byte_array_3d_6,2) To UBound(macro_variables_byte_array_3d_6,2)
											For ai3=LBound(macro_variables_byte_array_3d_6,3) To UBound(macro_variables_byte_array_3d_6,3)
												macro_variables_byte_array_3d_6(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "7"
									For ai1=LBound(macro_variables_byte_array_3d_7) To UBound(macro_variables_byte_array_3d_7)
										For ai2=LBound(macro_variables_byte_array_3d_7,2) To UBound(macro_variables_byte_array_3d_7,2)
											For ai3=LBound(macro_variables_byte_array_3d_7,3) To UBound(macro_variables_byte_array_3d_7,3)
												macro_variables_byte_array_3d_7(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "8"
									For ai1=LBound(macro_variables_byte_array_3d_8) To UBound(macro_variables_byte_array_3d_8)
										For ai2=LBound(macro_variables_byte_array_3d_8,2) To UBound(macro_variables_byte_array_3d_8,2)
											For ai3=LBound(macro_variables_byte_array_3d_8,3) To UBound(macro_variables_byte_array_3d_8,3)
												macro_variables_byte_array_3d_8(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "9"
									For ai1=LBound(macro_variables_byte_array_3d_9) To UBound(macro_variables_byte_array_3d_9)
										For ai2=LBound(macro_variables_byte_array_3d_9,2) To UBound(macro_variables_byte_array_3d_9,2)
											For ai3=LBound(macro_variables_byte_array_3d_9,3) To UBound(macro_variables_byte_array_3d_9,3)
												macro_variables_byte_array_3d_9(ai1,ai2,ai3)=0
											Next
										Next
									Next
							End Select
					End Select
				Case "UBYTE_ARRAY"
					Select Case macro_variables_info(i,5)
						Case "1d"
							Select Case macro_variables_info(i,3)
								Case "1"
									For ai1=LBound(macro_variables_ubyte_array_1d_1) To UBound(macro_variables_ubyte_array_1d_1)
										macro_variables_ubyte_array_1d_1(ai1)=0
									Next
								Case "2"
									For ai1=LBound(macro_variables_ubyte_array_1d_2) To UBound(macro_variables_ubyte_array_1d_2)
										macro_variables_ubyte_array_1d_2(ai1)=0
									Next
								Case "3"
									For ai1=LBound(macro_variables_ubyte_array_1d_3) To UBound(macro_variables_ubyte_array_1d_3)
										macro_variables_ubyte_array_1d_3(ai1)=0
									Next
								Case "4"
									For ai1=LBound(macro_variables_ubyte_array_1d_4) To UBound(macro_variables_ubyte_array_1d_4)
										macro_variables_ubyte_array_1d_4(ai1)=0
									Next
								Case "5"
									For ai1=LBound(macro_variables_ubyte_array_1d_5) To UBound(macro_variables_ubyte_array_1d_5)
										macro_variables_ubyte_array_1d_5(ai1)=0
									Next
								Case "6"
									For ai1=LBound(macro_variables_ubyte_array_1d_6) To UBound(macro_variables_ubyte_array_1d_6)
										macro_variables_ubyte_array_1d_6(ai1)=0
									Next
								Case "7"
									For ai1=LBound(macro_variables_ubyte_array_1d_7) To UBound(macro_variables_ubyte_array_1d_7)
										macro_variables_ubyte_array_1d_7(ai1)=0
									Next
								Case "8"
									For ai1=LBound(macro_variables_ubyte_array_1d_8) To UBound(macro_variables_ubyte_array_1d_8)
										macro_variables_ubyte_array_1d_8(ai1)=0
									Next
								Case "9"
									For ai1=LBound(macro_variables_ubyte_array_1d_9) To UBound(macro_variables_ubyte_array_1d_9)
										macro_variables_ubyte_array_1d_9(ai1)=0
									Next
							End Select
						Case "2d"
							Select Case macro_variables_info(i,3)
								Case "1"
									For ai1=LBound(macro_variables_ubyte_array_2d_1) To UBound(macro_variables_ubyte_array_2d_1)
										For ai2=LBound(macro_variables_ubyte_array_2d_1,2) To UBound(macro_variables_ubyte_array_2d_1,2)
											macro_variables_ubyte_array_2d_1(ai1,ai2)=0
										Next
									Next
								Case "2"
									For ai1=LBound(macro_variables_ubyte_array_2d_2) To UBound(macro_variables_ubyte_array_2d_2)
										For ai2=LBound(macro_variables_ubyte_array_2d_2,2) To UBound(macro_variables_ubyte_array_2d_2,2)
											macro_variables_ubyte_array_2d_2(ai1,ai2)=0
										Next
									Next
								Case "3"
									For ai1=LBound(macro_variables_ubyte_array_2d_3) To UBound(macro_variables_ubyte_array_2d_3)
										For ai2=LBound(macro_variables_ubyte_array_2d_3,2) To UBound(macro_variables_ubyte_array_2d_3,2)
											macro_variables_ubyte_array_2d_3(ai1,ai2)=0
										Next
									Next
								Case "4"
									For ai1=LBound(macro_variables_ubyte_array_2d_4) To UBound(macro_variables_ubyte_array_2d_4)
										For ai2=LBound(macro_variables_ubyte_array_2d_4,2) To UBound(macro_variables_ubyte_array_2d_4,2)
											macro_variables_ubyte_array_2d_4(ai1,ai2)=0
										Next
									Next
								Case "5"
									For ai1=LBound(macro_variables_ubyte_array_2d_5) To UBound(macro_variables_ubyte_array_2d_5)
										For ai2=LBound(macro_variables_ubyte_array_2d_5,2) To UBound(macro_variables_ubyte_array_2d_5,2)
											macro_variables_ubyte_array_2d_5(ai1,ai2)=0
										Next
									Next
								Case "6"
									For ai1=LBound(macro_variables_ubyte_array_2d_6) To UBound(macro_variables_ubyte_array_2d_6)
										For ai2=LBound(macro_variables_ubyte_array_2d_6,2) To UBound(macro_variables_ubyte_array_2d_6,2)
											macro_variables_ubyte_array_2d_6(ai1,ai2)=0
										Next
									Next
								Case "7"
									For ai1=LBound(macro_variables_ubyte_array_2d_7) To UBound(macro_variables_ubyte_array_2d_7)
										For ai2=LBound(macro_variables_ubyte_array_2d_7,2) To UBound(macro_variables_ubyte_array_2d_7,2)
											macro_variables_ubyte_array_2d_7(ai1,ai2)=0
										Next
									Next
								Case "8"
									For ai1=LBound(macro_variables_ubyte_array_2d_8) To UBound(macro_variables_ubyte_array_2d_8)
										For ai2=LBound(macro_variables_ubyte_array_2d_8,2) To UBound(macro_variables_ubyte_array_2d_8,2)
											macro_variables_ubyte_array_2d_8(ai1,ai2)=0
										Next
									Next
								Case "9"
									For ai1=LBound(macro_variables_ubyte_array_2d_9) To UBound(macro_variables_ubyte_array_2d_9)
										For ai2=LBound(macro_variables_ubyte_array_2d_9,2) To UBound(macro_variables_ubyte_array_2d_9,2)
											macro_variables_ubyte_array_2d_9(ai1,ai2)=0
										Next
									Next
							End Select
						Case "3d"
							Select Case macro_variables_info(i,3)
								Case "1"
									For ai1=LBound(macro_variables_ubyte_array_3d_1) To UBound(macro_variables_ubyte_array_3d_1)
										For ai2=LBound(macro_variables_ubyte_array_3d_1,2) To UBound(macro_variables_ubyte_array_3d_1,2)
											For ai3=LBound(macro_variables_ubyte_array_3d_1,3) To UBound(macro_variables_ubyte_array_3d_1,3)
												macro_variables_ubyte_array_3d_1(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "2"
									For ai1=LBound(macro_variables_ubyte_array_3d_2) To UBound(macro_variables_ubyte_array_3d_2)
										For ai2=LBound(macro_variables_ubyte_array_3d_2,2) To UBound(macro_variables_ubyte_array_3d_2,2)
											For ai3=LBound(macro_variables_ubyte_array_3d_2,3) To UBound(macro_variables_ubyte_array_3d_2,3)
												macro_variables_ubyte_array_3d_2(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "3"
									For ai1=LBound(macro_variables_ubyte_array_3d_3) To UBound(macro_variables_ubyte_array_3d_3)
										For ai2=LBound(macro_variables_ubyte_array_3d_3,2) To UBound(macro_variables_ubyte_array_3d_3,2)
											For ai3=LBound(macro_variables_ubyte_array_3d_3,3) To UBound(macro_variables_ubyte_array_3d_3,3)
												macro_variables_ubyte_array_3d_3(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "4"
									For ai1=LBound(macro_variables_ubyte_array_3d_4) To UBound(macro_variables_ubyte_array_3d_4)
										For ai2=LBound(macro_variables_ubyte_array_3d_4,2) To UBound(macro_variables_ubyte_array_3d_4,2)
											For ai3=LBound(macro_variables_ubyte_array_3d_4,3) To UBound(macro_variables_ubyte_array_3d_4,3)
												macro_variables_ubyte_array_3d_4(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "5"
									For ai1=LBound(macro_variables_ubyte_array_3d_5) To UBound(macro_variables_ubyte_array_3d_5)
										For ai2=LBound(macro_variables_ubyte_array_3d_5,2) To UBound(macro_variables_ubyte_array_3d_5,2)
											For ai3=LBound(macro_variables_ubyte_array_3d_5,3) To UBound(macro_variables_ubyte_array_3d_5,3)
												macro_variables_ubyte_array_3d_5(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "6"
									For ai1=LBound(macro_variables_ubyte_array_3d_6) To UBound(macro_variables_ubyte_array_3d_6)
										For ai2=LBound(macro_variables_ubyte_array_3d_6,2) To UBound(macro_variables_ubyte_array_3d_6,2)
											For ai3=LBound(macro_variables_ubyte_array_3d_6,3) To UBound(macro_variables_ubyte_array_3d_6,3)
												macro_variables_ubyte_array_3d_6(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "7"
									For ai1=LBound(macro_variables_ubyte_array_3d_7) To UBound(macro_variables_ubyte_array_3d_7)
										For ai2=LBound(macro_variables_ubyte_array_3d_7,2) To UBound(macro_variables_ubyte_array_3d_7,2)
											For ai3=LBound(macro_variables_ubyte_array_3d_7,3) To UBound(macro_variables_ubyte_array_3d_7,3)
												macro_variables_ubyte_array_3d_7(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "8"
									For ai1=LBound(macro_variables_ubyte_array_3d_8) To UBound(macro_variables_ubyte_array_3d_8)
										For ai2=LBound(macro_variables_ubyte_array_3d_8,2) To UBound(macro_variables_ubyte_array_3d_8,2)
											For ai3=LBound(macro_variables_ubyte_array_3d_8,3) To UBound(macro_variables_ubyte_array_3d_8,3)
												macro_variables_ubyte_array_3d_8(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "9"
									For ai1=LBound(macro_variables_ubyte_array_3d_9) To UBound(macro_variables_ubyte_array_3d_9)
										For ai2=LBound(macro_variables_ubyte_array_3d_9,2) To UBound(macro_variables_ubyte_array_3d_9,2)
											For ai3=LBound(macro_variables_ubyte_array_3d_9,3) To UBound(macro_variables_ubyte_array_3d_9,3)
												macro_variables_ubyte_array_3d_9(ai1,ai2,ai3)=0
											Next
										Next
									Next
							End Select
					End Select
				Case "SHORT_ARRAY"
					Select Case macro_variables_info(i,5)
						Case "1d"
							Select Case macro_variables_info(i,3)
								Case "1"
									For ai1=LBound(macro_variables_short_array_1d_1) To UBound(macro_variables_short_array_1d_1)
										macro_variables_short_array_1d_1(ai1)=0
									Next
								Case "2"
									For ai1=LBound(macro_variables_short_array_1d_2) To UBound(macro_variables_short_array_1d_2)
										macro_variables_short_array_1d_2(ai1)=0
									Next
								Case "3"
									For ai1=LBound(macro_variables_short_array_1d_3) To UBound(macro_variables_short_array_1d_3)
										macro_variables_short_array_1d_3(ai1)=0
									Next
								Case "4"
									For ai1=LBound(macro_variables_short_array_1d_4) To UBound(macro_variables_short_array_1d_4)
										macro_variables_short_array_1d_4(ai1)=0
									Next
								Case "5"
									For ai1=LBound(macro_variables_short_array_1d_5) To UBound(macro_variables_short_array_1d_5)
										macro_variables_short_array_1d_5(ai1)=0
									Next
								Case "6"
									For ai1=LBound(macro_variables_short_array_1d_6) To UBound(macro_variables_short_array_1d_6)
										macro_variables_short_array_1d_6(ai1)=0
									Next
								Case "7"
									For ai1=LBound(macro_variables_short_array_1d_7) To UBound(macro_variables_short_array_1d_7)
										macro_variables_short_array_1d_7(ai1)=0
									Next
								Case "8"
									For ai1=LBound(macro_variables_short_array_1d_8) To UBound(macro_variables_short_array_1d_8)
										macro_variables_short_array_1d_8(ai1)=0
									Next
								Case "9"
									For ai1=LBound(macro_variables_short_array_1d_9) To UBound(macro_variables_short_array_1d_9)
										macro_variables_short_array_1d_9(ai1)=0
									Next
							End Select
						Case "2d"
							Select Case macro_variables_info(i,3)
								Case "1"
									For ai1=LBound(macro_variables_short_array_2d_1) To UBound(macro_variables_short_array_2d_1)
										For ai2=LBound(macro_variables_short_array_2d_1,2) To UBound(macro_variables_short_array_2d_1,2)
											macro_variables_short_array_2d_1(ai1,ai2)=0
										Next
									Next
								Case "2"
									For ai1=LBound(macro_variables_short_array_2d_2) To UBound(macro_variables_short_array_2d_2)
										For ai2=LBound(macro_variables_short_array_2d_2,2) To UBound(macro_variables_short_array_2d_2,2)
											macro_variables_short_array_2d_2(ai1,ai2)=0
										Next
									Next
								Case "3"
									For ai1=LBound(macro_variables_short_array_2d_3) To UBound(macro_variables_short_array_2d_3)
										For ai2=LBound(macro_variables_short_array_2d_3,2) To UBound(macro_variables_short_array_2d_3,2)
											macro_variables_short_array_2d_3(ai1,ai2)=0
										Next
									Next
								Case "4"
									For ai1=LBound(macro_variables_short_array_2d_4) To UBound(macro_variables_short_array_2d_4)
										For ai2=LBound(macro_variables_short_array_2d_4,2) To UBound(macro_variables_short_array_2d_4,2)
											macro_variables_short_array_2d_4(ai1,ai2)=0
										Next
									Next
								Case "5"
									For ai1=LBound(macro_variables_short_array_2d_5) To UBound(macro_variables_short_array_2d_5)
										For ai2=LBound(macro_variables_short_array_2d_5,2) To UBound(macro_variables_short_array_2d_5,2)
											macro_variables_short_array_2d_5(ai1,ai2)=0
										Next
									Next
								Case "6"
									For ai1=LBound(macro_variables_short_array_2d_6) To UBound(macro_variables_short_array_2d_6)
										For ai2=LBound(macro_variables_short_array_2d_6,2) To UBound(macro_variables_short_array_2d_6,2)
											macro_variables_short_array_2d_6(ai1,ai2)=0
										Next
									Next
								Case "7"
									For ai1=LBound(macro_variables_short_array_2d_7) To UBound(macro_variables_short_array_2d_7)
										For ai2=LBound(macro_variables_short_array_2d_7,2) To UBound(macro_variables_short_array_2d_7,2)
											macro_variables_short_array_2d_7(ai1,ai2)=0
										Next
									Next
								Case "8"
									For ai1=LBound(macro_variables_short_array_2d_8) To UBound(macro_variables_short_array_2d_8)
										For ai2=LBound(macro_variables_short_array_2d_8,2) To UBound(macro_variables_short_array_2d_8,2)
											macro_variables_short_array_2d_8(ai1,ai2)=0
										Next
									Next
								Case "9"
									For ai1=LBound(macro_variables_short_array_2d_9) To UBound(macro_variables_short_array_2d_9)
										For ai2=LBound(macro_variables_short_array_2d_9,2) To UBound(macro_variables_short_array_2d_9,2)
											macro_variables_short_array_2d_9(ai1,ai2)=0
										Next
									Next
							End Select
						Case "3d"
							Select Case macro_variables_info(i,3)
								Case "1"
									For ai1=LBound(macro_variables_short_array_3d_1) To UBound(macro_variables_short_array_3d_1)
										For ai2=LBound(macro_variables_short_array_3d_1,2) To UBound(macro_variables_short_array_3d_1,2)
											For ai3=LBound(macro_variables_short_array_3d_1,3) To UBound(macro_variables_short_array_3d_1,3)
												macro_variables_short_array_3d_1(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "2"
									For ai1=LBound(macro_variables_short_array_3d_2) To UBound(macro_variables_short_array_3d_2)
										For ai2=LBound(macro_variables_short_array_3d_2,2) To UBound(macro_variables_short_array_3d_2,2)
											For ai3=LBound(macro_variables_short_array_3d_2,3) To UBound(macro_variables_short_array_3d_2,3)
												macro_variables_short_array_3d_2(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "3"
									For ai1=LBound(macro_variables_short_array_3d_3) To UBound(macro_variables_short_array_3d_3)
										For ai2=LBound(macro_variables_short_array_3d_3,2) To UBound(macro_variables_short_array_3d_3,2)
											For ai3=LBound(macro_variables_short_array_3d_3,3) To UBound(macro_variables_short_array_3d_3,3)
												macro_variables_short_array_3d_3(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "4"
									For ai1=LBound(macro_variables_short_array_3d_4) To UBound(macro_variables_short_array_3d_4)
										For ai2=LBound(macro_variables_short_array_3d_4,2) To UBound(macro_variables_short_array_3d_4,2)
											For ai3=LBound(macro_variables_short_array_3d_4,3) To UBound(macro_variables_short_array_3d_4,3)
												macro_variables_short_array_3d_4(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "5"
									For ai1=LBound(macro_variables_short_array_3d_5) To UBound(macro_variables_short_array_3d_5)
										For ai2=LBound(macro_variables_short_array_3d_5,2) To UBound(macro_variables_short_array_3d_5,2)
											For ai3=LBound(macro_variables_short_array_3d_5,3) To UBound(macro_variables_short_array_3d_5,3)
												macro_variables_short_array_3d_5(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "6"
									For ai1=LBound(macro_variables_short_array_3d_6) To UBound(macro_variables_short_array_3d_6)
										For ai2=LBound(macro_variables_short_array_3d_6,2) To UBound(macro_variables_short_array_3d_6,2)
											For ai3=LBound(macro_variables_short_array_3d_6,3) To UBound(macro_variables_short_array_3d_6,3)
												macro_variables_short_array_3d_6(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "7"
									For ai1=LBound(macro_variables_short_array_3d_7) To UBound(macro_variables_short_array_3d_7)
										For ai2=LBound(macro_variables_short_array_3d_7,2) To UBound(macro_variables_short_array_3d_7,2)
											For ai3=LBound(macro_variables_short_array_3d_7,3) To UBound(macro_variables_short_array_3d_7,3)
												macro_variables_short_array_3d_7(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "8"
									For ai1=LBound(macro_variables_short_array_3d_8) To UBound(macro_variables_short_array_3d_8)
										For ai2=LBound(macro_variables_short_array_3d_8,2) To UBound(macro_variables_short_array_3d_8,2)
											For ai3=LBound(macro_variables_short_array_3d_8,3) To UBound(macro_variables_short_array_3d_8,3)
												macro_variables_short_array_3d_8(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "9"
									For ai1=LBound(macro_variables_short_array_3d_9) To UBound(macro_variables_short_array_3d_9)
										For ai2=LBound(macro_variables_short_array_3d_9,2) To UBound(macro_variables_short_array_3d_9,2)
											For ai3=LBound(macro_variables_short_array_3d_9,3) To UBound(macro_variables_short_array_3d_9,3)
												macro_variables_short_array_3d_9(ai1,ai2,ai3)=0
											Next
										Next
									Next
							End Select
					End Select
				Case "USHORT_ARRAY"
					Select Case macro_variables_info(i,5)
						Case "1d"
							Select Case macro_variables_info(i,3)
								Case "1"
									For ai1=LBound(macro_variables_ushort_array_1d_1) To UBound(macro_variables_ushort_array_1d_1)
										macro_variables_ushort_array_1d_1(ai1)=0
									Next
								Case "2"
									For ai1=LBound(macro_variables_ushort_array_1d_2) To UBound(macro_variables_ushort_array_1d_2)
										macro_variables_ushort_array_1d_2(ai1)=0
									Next
								Case "3"
									For ai1=LBound(macro_variables_ushort_array_1d_3) To UBound(macro_variables_ushort_array_1d_3)
										macro_variables_ushort_array_1d_3(ai1)=0
									Next
								Case "4"
									For ai1=LBound(macro_variables_ushort_array_1d_4) To UBound(macro_variables_ushort_array_1d_4)
										macro_variables_ushort_array_1d_4(ai1)=0
									Next
								Case "5"
									For ai1=LBound(macro_variables_ushort_array_1d_5) To UBound(macro_variables_ushort_array_1d_5)
										macro_variables_ushort_array_1d_5(ai1)=0
									Next
								Case "6"
									For ai1=LBound(macro_variables_ushort_array_1d_6) To UBound(macro_variables_ushort_array_1d_6)
										macro_variables_ushort_array_1d_6(ai1)=0
									Next
								Case "7"
									For ai1=LBound(macro_variables_ushort_array_1d_7) To UBound(macro_variables_ushort_array_1d_7)
										macro_variables_ushort_array_1d_7(ai1)=0
									Next
								Case "8"
									For ai1=LBound(macro_variables_ushort_array_1d_8) To UBound(macro_variables_ushort_array_1d_8)
										macro_variables_ushort_array_1d_8(ai1)=0
									Next
								Case "9"
									For ai1=LBound(macro_variables_ushort_array_1d_9) To UBound(macro_variables_ushort_array_1d_9)
										macro_variables_ushort_array_1d_9(ai1)=0
									Next
							End Select
						Case "2d"
							Select Case macro_variables_info(i,3)
								Case "1"
									For ai1=LBound(macro_variables_ushort_array_2d_1) To UBound(macro_variables_ushort_array_2d_1)
										For ai2=LBound(macro_variables_ushort_array_2d_1,2) To UBound(macro_variables_ushort_array_2d_1,2)
											macro_variables_ushort_array_2d_1(ai1,ai2)=0
										Next
									Next
								Case "2"
									For ai1=LBound(macro_variables_ushort_array_2d_2) To UBound(macro_variables_ushort_array_2d_2)
										For ai2=LBound(macro_variables_ushort_array_2d_2,2) To UBound(macro_variables_ushort_array_2d_2,2)
											macro_variables_ushort_array_2d_2(ai1,ai2)=0
										Next
									Next
								Case "3"
									For ai1=LBound(macro_variables_ushort_array_2d_3) To UBound(macro_variables_ushort_array_2d_3)
										For ai2=LBound(macro_variables_ushort_array_2d_3,2) To UBound(macro_variables_ushort_array_2d_3,2)
											macro_variables_ushort_array_2d_3(ai1,ai2)=0
										Next
									Next
								Case "4"
									For ai1=LBound(macro_variables_ushort_array_2d_4) To UBound(macro_variables_ushort_array_2d_4)
										For ai2=LBound(macro_variables_ushort_array_2d_4,2) To UBound(macro_variables_ushort_array_2d_4,2)
											macro_variables_ushort_array_2d_4(ai1,ai2)=0
										Next
									Next
								Case "5"
									For ai1=LBound(macro_variables_ushort_array_2d_5) To UBound(macro_variables_ushort_array_2d_5)
										For ai2=LBound(macro_variables_ushort_array_2d_5,2) To UBound(macro_variables_ushort_array_2d_5,2)
											macro_variables_ushort_array_2d_5(ai1,ai2)=0
										Next
									Next
								Case "6"
									For ai1=LBound(macro_variables_ushort_array_2d_6) To UBound(macro_variables_ushort_array_2d_6)
										For ai2=LBound(macro_variables_ushort_array_2d_6,2) To UBound(macro_variables_ushort_array_2d_6,2)
											macro_variables_ushort_array_2d_6(ai1,ai2)=0
										Next
									Next
								Case "7"
									For ai1=LBound(macro_variables_ushort_array_2d_7) To UBound(macro_variables_ushort_array_2d_7)
										For ai2=LBound(macro_variables_ushort_array_2d_7,2) To UBound(macro_variables_ushort_array_2d_7,2)
											macro_variables_ushort_array_2d_7(ai1,ai2)=0
										Next
									Next
								Case "8"
									For ai1=LBound(macro_variables_ushort_array_2d_8) To UBound(macro_variables_ushort_array_2d_8)
										For ai2=LBound(macro_variables_ushort_array_2d_8,2) To UBound(macro_variables_ushort_array_2d_8,2)
											macro_variables_ushort_array_2d_8(ai1,ai2)=0
										Next
									Next
								Case "9"
									For ai1=LBound(macro_variables_ushort_array_2d_9) To UBound(macro_variables_ushort_array_2d_9)
										For ai2=LBound(macro_variables_ushort_array_2d_9,2) To UBound(macro_variables_ushort_array_2d_9,2)
											macro_variables_ushort_array_2d_9(ai1,ai2)=0
										Next
									Next
							End Select
						Case "3d"
							Select Case macro_variables_info(i,3)
								Case "1"
									For ai1=LBound(macro_variables_ushort_array_3d_1) To UBound(macro_variables_ushort_array_3d_1)
										For ai2=LBound(macro_variables_ushort_array_3d_1,2) To UBound(macro_variables_ushort_array_3d_1,2)
											For ai3=LBound(macro_variables_ushort_array_3d_1,3) To UBound(macro_variables_ushort_array_3d_1,3)
												macro_variables_ushort_array_3d_1(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "2"
									For ai1=LBound(macro_variables_ushort_array_3d_2) To UBound(macro_variables_ushort_array_3d_2)
										For ai2=LBound(macro_variables_ushort_array_3d_2,2) To UBound(macro_variables_ushort_array_3d_2,2)
											For ai3=LBound(macro_variables_ushort_array_3d_2,3) To UBound(macro_variables_ushort_array_3d_2,3)
												macro_variables_ushort_array_3d_2(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "3"
									For ai1=LBound(macro_variables_ushort_array_3d_3) To UBound(macro_variables_ushort_array_3d_3)
										For ai2=LBound(macro_variables_ushort_array_3d_3,2) To UBound(macro_variables_ushort_array_3d_3,2)
											For ai3=LBound(macro_variables_ushort_array_3d_3,3) To UBound(macro_variables_ushort_array_3d_3,3)
												macro_variables_ushort_array_3d_3(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "4"
									For ai1=LBound(macro_variables_ushort_array_3d_4) To UBound(macro_variables_ushort_array_3d_4)
										For ai2=LBound(macro_variables_ushort_array_3d_4,2) To UBound(macro_variables_ushort_array_3d_4,2)
											For ai3=LBound(macro_variables_ushort_array_3d_4,3) To UBound(macro_variables_ushort_array_3d_4,3)
												macro_variables_ushort_array_3d_4(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "5"
									For ai1=LBound(macro_variables_ushort_array_3d_5) To UBound(macro_variables_ushort_array_3d_5)
										For ai2=LBound(macro_variables_ushort_array_3d_5,2) To UBound(macro_variables_ushort_array_3d_5,2)
											For ai3=LBound(macro_variables_ushort_array_3d_5,3) To UBound(macro_variables_ushort_array_3d_5,3)
												macro_variables_ushort_array_3d_5(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "6"
									For ai1=LBound(macro_variables_ushort_array_3d_6) To UBound(macro_variables_ushort_array_3d_6)
										For ai2=LBound(macro_variables_ushort_array_3d_6,2) To UBound(macro_variables_ushort_array_3d_6,2)
											For ai3=LBound(macro_variables_ushort_array_3d_6,3) To UBound(macro_variables_ushort_array_3d_6,3)
												macro_variables_ushort_array_3d_6(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "7"
									For ai1=LBound(macro_variables_ushort_array_3d_7) To UBound(macro_variables_ushort_array_3d_7)
										For ai2=LBound(macro_variables_ushort_array_3d_7,2) To UBound(macro_variables_ushort_array_3d_7,2)
											For ai3=LBound(macro_variables_ushort_array_3d_7,3) To UBound(macro_variables_ushort_array_3d_7,3)
												macro_variables_ushort_array_3d_7(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "8"
									For ai1=LBound(macro_variables_ushort_array_3d_8) To UBound(macro_variables_ushort_array_3d_8)
										For ai2=LBound(macro_variables_ushort_array_3d_8,2) To UBound(macro_variables_ushort_array_3d_8,2)
											For ai3=LBound(macro_variables_ushort_array_3d_8,3) To UBound(macro_variables_ushort_array_3d_8,3)
												macro_variables_ushort_array_3d_8(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "9"
									For ai1=LBound(macro_variables_ushort_array_3d_9) To UBound(macro_variables_ushort_array_3d_9)
										For ai2=LBound(macro_variables_ushort_array_3d_9,2) To UBound(macro_variables_ushort_array_3d_9,2)
											For ai3=LBound(macro_variables_ushort_array_3d_9,3) To UBound(macro_variables_ushort_array_3d_9,3)
												macro_variables_ushort_array_3d_9(ai1,ai2,ai3)=0
											Next
										Next
									Next
							End Select
					End Select
				Case "LONG_ARRAY"
					Select Case macro_variables_info(i,5)
						Case "1d"
							Select Case macro_variables_info(i,3)
								Case "1"
									For ai1=LBound(macro_variables_long_array_1d_1) To UBound(macro_variables_long_array_1d_1)
										macro_variables_long_array_1d_1(ai1)=0
									Next
								Case "2"
									For ai1=LBound(macro_variables_long_array_1d_2) To UBound(macro_variables_long_array_1d_2)
										macro_variables_long_array_1d_2(ai1)=0
									Next
								Case "3"
									For ai1=LBound(macro_variables_long_array_1d_3) To UBound(macro_variables_long_array_1d_3)
										macro_variables_long_array_1d_3(ai1)=0
									Next
								Case "4"
									For ai1=LBound(macro_variables_long_array_1d_4) To UBound(macro_variables_long_array_1d_4)
										macro_variables_long_array_1d_4(ai1)=0
									Next
								Case "5"
									For ai1=LBound(macro_variables_long_array_1d_5) To UBound(macro_variables_long_array_1d_5)
										macro_variables_long_array_1d_5(ai1)=0
									Next
								Case "6"
									For ai1=LBound(macro_variables_long_array_1d_6) To UBound(macro_variables_long_array_1d_6)
										macro_variables_long_array_1d_6(ai1)=0
									Next
								Case "7"
									For ai1=LBound(macro_variables_long_array_1d_7) To UBound(macro_variables_long_array_1d_7)
										macro_variables_long_array_1d_7(ai1)=0
									Next
								Case "8"
									For ai1=LBound(macro_variables_long_array_1d_8) To UBound(macro_variables_long_array_1d_8)
										macro_variables_long_array_1d_8(ai1)=0
									Next
								Case "9"
									For ai1=LBound(macro_variables_long_array_1d_9) To UBound(macro_variables_long_array_1d_9)
										macro_variables_long_array_1d_9(ai1)=0
									Next
							End Select
						Case "2d"
							Select Case macro_variables_info(i,3)
								Case "1"
									For ai1=LBound(macro_variables_long_array_2d_1) To UBound(macro_variables_long_array_2d_1)
										For ai2=LBound(macro_variables_long_array_2d_1,2) To UBound(macro_variables_long_array_2d_1,2)
											macro_variables_long_array_2d_1(ai1,ai2)=0
										Next
									Next
								Case "2"
									For ai1=LBound(macro_variables_long_array_2d_2) To UBound(macro_variables_long_array_2d_2)
										For ai2=LBound(macro_variables_long_array_2d_2,2) To UBound(macro_variables_long_array_2d_2,2)
											macro_variables_long_array_2d_2(ai1,ai2)=0
										Next
									Next
								Case "3"
									For ai1=LBound(macro_variables_long_array_2d_3) To UBound(macro_variables_long_array_2d_3)
										For ai2=LBound(macro_variables_long_array_2d_3,2) To UBound(macro_variables_long_array_2d_3,2)
											macro_variables_long_array_2d_3(ai1,ai2)=0
										Next
									Next
								Case "4"
									For ai1=LBound(macro_variables_long_array_2d_4) To UBound(macro_variables_long_array_2d_4)
										For ai2=LBound(macro_variables_long_array_2d_4,2) To UBound(macro_variables_long_array_2d_4,2)
											macro_variables_long_array_2d_4(ai1,ai2)=0
										Next
									Next
								Case "5"
									For ai1=LBound(macro_variables_long_array_2d_5) To UBound(macro_variables_long_array_2d_5)
										For ai2=LBound(macro_variables_long_array_2d_5,2) To UBound(macro_variables_long_array_2d_5,2)
											macro_variables_long_array_2d_5(ai1,ai2)=0
										Next
									Next
								Case "6"
									For ai1=LBound(macro_variables_long_array_2d_6) To UBound(macro_variables_long_array_2d_6)
										For ai2=LBound(macro_variables_long_array_2d_6,2) To UBound(macro_variables_long_array_2d_6,2)
											macro_variables_long_array_2d_6(ai1,ai2)=0
										Next
									Next
								Case "7"
									For ai1=LBound(macro_variables_long_array_2d_7) To UBound(macro_variables_long_array_2d_7)
										For ai2=LBound(macro_variables_long_array_2d_7,2) To UBound(macro_variables_long_array_2d_7,2)
											macro_variables_long_array_2d_7(ai1,ai2)=0
										Next
									Next
								Case "8"
									For ai1=LBound(macro_variables_long_array_2d_8) To UBound(macro_variables_long_array_2d_8)
										For ai2=LBound(macro_variables_long_array_2d_8,2) To UBound(macro_variables_long_array_2d_8,2)
											macro_variables_long_array_2d_8(ai1,ai2)=0
										Next
									Next
								Case "9"
									For ai1=LBound(macro_variables_long_array_2d_9) To UBound(macro_variables_long_array_2d_9)
										For ai2=LBound(macro_variables_long_array_2d_9,2) To UBound(macro_variables_long_array_2d_9,2)
											macro_variables_long_array_2d_9(ai1,ai2)=0
										Next
									Next
							End Select
						Case "3d"
							Select Case macro_variables_info(i,3)
								Case "1"
									For ai1=LBound(macro_variables_long_array_3d_1) To UBound(macro_variables_long_array_3d_1)
										For ai2=LBound(macro_variables_long_array_3d_1,2) To UBound(macro_variables_long_array_3d_1,2)
											For ai3=LBound(macro_variables_long_array_3d_1,3) To UBound(macro_variables_long_array_3d_1,3)
												macro_variables_long_array_3d_1(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "2"
									For ai1=LBound(macro_variables_long_array_3d_2) To UBound(macro_variables_long_array_3d_2)
										For ai2=LBound(macro_variables_long_array_3d_2,2) To UBound(macro_variables_long_array_3d_2,2)
											For ai3=LBound(macro_variables_long_array_3d_2,3) To UBound(macro_variables_long_array_3d_2,3)
												macro_variables_long_array_3d_2(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "3"
									For ai1=LBound(macro_variables_long_array_3d_3) To UBound(macro_variables_long_array_3d_3)
										For ai2=LBound(macro_variables_long_array_3d_3,2) To UBound(macro_variables_long_array_3d_3,2)
											For ai3=LBound(macro_variables_long_array_3d_3,3) To UBound(macro_variables_long_array_3d_3,3)
												macro_variables_long_array_3d_3(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "4"
									For ai1=LBound(macro_variables_long_array_3d_4) To UBound(macro_variables_long_array_3d_4)
										For ai2=LBound(macro_variables_long_array_3d_4,2) To UBound(macro_variables_long_array_3d_4,2)
											For ai3=LBound(macro_variables_long_array_3d_4,3) To UBound(macro_variables_long_array_3d_4,3)
												macro_variables_long_array_3d_4(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "5"
									For ai1=LBound(macro_variables_long_array_3d_5) To UBound(macro_variables_long_array_3d_5)
										For ai2=LBound(macro_variables_long_array_3d_5,2) To UBound(macro_variables_long_array_3d_5,2)
											For ai3=LBound(macro_variables_long_array_3d_5,3) To UBound(macro_variables_long_array_3d_5,3)
												macro_variables_long_array_3d_5(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "6"
									For ai1=LBound(macro_variables_long_array_3d_6) To UBound(macro_variables_long_array_3d_6)
										For ai2=LBound(macro_variables_long_array_3d_6,2) To UBound(macro_variables_long_array_3d_6,2)
											For ai3=LBound(macro_variables_long_array_3d_6,3) To UBound(macro_variables_long_array_3d_6,3)
												macro_variables_long_array_3d_6(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "7"
									For ai1=LBound(macro_variables_long_array_3d_7) To UBound(macro_variables_long_array_3d_7)
										For ai2=LBound(macro_variables_long_array_3d_7,2) To UBound(macro_variables_long_array_3d_7,2)
											For ai3=LBound(macro_variables_long_array_3d_7,3) To UBound(macro_variables_long_array_3d_7,3)
												macro_variables_long_array_3d_7(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "8"
									For ai1=LBound(macro_variables_long_array_3d_8) To UBound(macro_variables_long_array_3d_8)
										For ai2=LBound(macro_variables_long_array_3d_8,2) To UBound(macro_variables_long_array_3d_8,2)
											For ai3=LBound(macro_variables_long_array_3d_8,3) To UBound(macro_variables_long_array_3d_8,3)
												macro_variables_long_array_3d_8(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "9"
									For ai1=LBound(macro_variables_long_array_3d_9) To UBound(macro_variables_long_array_3d_9)
										For ai2=LBound(macro_variables_long_array_3d_9,2) To UBound(macro_variables_long_array_3d_9,2)
											For ai3=LBound(macro_variables_long_array_3d_9,3) To UBound(macro_variables_long_array_3d_9,3)
												macro_variables_long_array_3d_9(ai1,ai2,ai3)=0
											Next
										Next
									Next
							End Select
					End Select
				Case "ULONG_ARRAY"
					Select Case macro_variables_info(i,5)
						Case "1d"
							Select Case macro_variables_info(i,3)
								Case "1"
									For ai1=LBound(macro_variables_ulong_array_1d_1) To UBound(macro_variables_ulong_array_1d_1)
										macro_variables_ulong_array_1d_1(ai1)=0
									Next
								Case "2"
									For ai1=LBound(macro_variables_ulong_array_1d_2) To UBound(macro_variables_ulong_array_1d_2)
										macro_variables_ulong_array_1d_2(ai1)=0
									Next
								Case "3"
									For ai1=LBound(macro_variables_ulong_array_1d_3) To UBound(macro_variables_ulong_array_1d_3)
										macro_variables_ulong_array_1d_3(ai1)=0
									Next
								Case "4"
									For ai1=LBound(macro_variables_ulong_array_1d_4) To UBound(macro_variables_ulong_array_1d_4)
										macro_variables_ulong_array_1d_4(ai1)=0
									Next
								Case "5"
									For ai1=LBound(macro_variables_ulong_array_1d_5) To UBound(macro_variables_ulong_array_1d_5)
										macro_variables_ulong_array_1d_5(ai1)=0
									Next
								Case "6"
									For ai1=LBound(macro_variables_ulong_array_1d_6) To UBound(macro_variables_ulong_array_1d_6)
										macro_variables_ulong_array_1d_6(ai1)=0
									Next
								Case "7"
									For ai1=LBound(macro_variables_ulong_array_1d_7) To UBound(macro_variables_ulong_array_1d_7)
										macro_variables_ulong_array_1d_7(ai1)=0
									Next
								Case "8"
									For ai1=LBound(macro_variables_ulong_array_1d_8) To UBound(macro_variables_ulong_array_1d_8)
										macro_variables_ulong_array_1d_8(ai1)=0
									Next
								Case "9"
									For ai1=LBound(macro_variables_ulong_array_1d_9) To UBound(macro_variables_ulong_array_1d_9)
										macro_variables_ulong_array_1d_9(ai1)=0
									Next
							End Select
						Case "2d"
							Select Case macro_variables_info(i,3)
								Case "1"
									For ai1=LBound(macro_variables_ulong_array_2d_1) To UBound(macro_variables_ulong_array_2d_1)
										For ai2=LBound(macro_variables_ulong_array_2d_1,2) To UBound(macro_variables_ulong_array_2d_1,2)
											macro_variables_ulong_array_2d_1(ai1,ai2)=0
										Next
									Next
								Case "2"
									For ai1=LBound(macro_variables_ulong_array_2d_2) To UBound(macro_variables_ulong_array_2d_2)
										For ai2=LBound(macro_variables_ulong_array_2d_2,2) To UBound(macro_variables_ulong_array_2d_2,2)
											macro_variables_ulong_array_2d_2(ai1,ai2)=0
										Next
									Next
								Case "3"
									For ai1=LBound(macro_variables_ulong_array_2d_3) To UBound(macro_variables_ulong_array_2d_3)
										For ai2=LBound(macro_variables_ulong_array_2d_3,2) To UBound(macro_variables_ulong_array_2d_3,2)
											macro_variables_ulong_array_2d_3(ai1,ai2)=0
										Next
									Next
								Case "4"
									For ai1=LBound(macro_variables_ulong_array_2d_4) To UBound(macro_variables_ulong_array_2d_4)
										For ai2=LBound(macro_variables_ulong_array_2d_4,2) To UBound(macro_variables_ulong_array_2d_4,2)
											macro_variables_ulong_array_2d_4(ai1,ai2)=0
										Next
									Next
								Case "5"
									For ai1=LBound(macro_variables_ulong_array_2d_5) To UBound(macro_variables_ulong_array_2d_5)
										For ai2=LBound(macro_variables_ulong_array_2d_5,2) To UBound(macro_variables_ulong_array_2d_5,2)
											macro_variables_ulong_array_2d_5(ai1,ai2)=0
										Next
									Next
								Case "6"
									For ai1=LBound(macro_variables_ulong_array_2d_6) To UBound(macro_variables_ulong_array_2d_6)
										For ai2=LBound(macro_variables_ulong_array_2d_6,2) To UBound(macro_variables_ulong_array_2d_6,2)
											macro_variables_ulong_array_2d_6(ai1,ai2)=0
										Next
									Next
								Case "7"
									For ai1=LBound(macro_variables_ulong_array_2d_7) To UBound(macro_variables_ulong_array_2d_7)
										For ai2=LBound(macro_variables_ulong_array_2d_7,2) To UBound(macro_variables_ulong_array_2d_7,2)
											macro_variables_ulong_array_2d_7(ai1,ai2)=0
										Next
									Next
								Case "8"
									For ai1=LBound(macro_variables_ulong_array_2d_8) To UBound(macro_variables_ulong_array_2d_8)
										For ai2=LBound(macro_variables_ulong_array_2d_8,2) To UBound(macro_variables_ulong_array_2d_8,2)
											macro_variables_ulong_array_2d_8(ai1,ai2)=0
										Next
									Next
								Case "9"
									For ai1=LBound(macro_variables_ulong_array_2d_9) To UBound(macro_variables_ulong_array_2d_9)
										For ai2=LBound(macro_variables_ulong_array_2d_9,2) To UBound(macro_variables_ulong_array_2d_9,2)
											macro_variables_ulong_array_2d_9(ai1,ai2)=0
										Next
									Next
							End Select
						Case "3d"
							Select Case macro_variables_info(i,3)
								Case "1"
									For ai1=LBound(macro_variables_ulong_array_3d_1) To UBound(macro_variables_ulong_array_3d_1)
										For ai2=LBound(macro_variables_ulong_array_3d_1,2) To UBound(macro_variables_ulong_array_3d_1,2)
											For ai3=LBound(macro_variables_ulong_array_3d_1,3) To UBound(macro_variables_ulong_array_3d_1,3)
												macro_variables_ulong_array_3d_1(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "2"
									For ai1=LBound(macro_variables_ulong_array_3d_2) To UBound(macro_variables_ulong_array_3d_2)
										For ai2=LBound(macro_variables_ulong_array_3d_2,2) To UBound(macro_variables_ulong_array_3d_2,2)
											For ai3=LBound(macro_variables_ulong_array_3d_2,3) To UBound(macro_variables_ulong_array_3d_2,3)
												macro_variables_ulong_array_3d_2(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "3"
									For ai1=LBound(macro_variables_ulong_array_3d_3) To UBound(macro_variables_ulong_array_3d_3)
										For ai2=LBound(macro_variables_ulong_array_3d_3,2) To UBound(macro_variables_ulong_array_3d_3,2)
											For ai3=LBound(macro_variables_ulong_array_3d_3,3) To UBound(macro_variables_ulong_array_3d_3,3)
												macro_variables_ulong_array_3d_3(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "4"
									For ai1=LBound(macro_variables_ulong_array_3d_4) To UBound(macro_variables_ulong_array_3d_4)
										For ai2=LBound(macro_variables_ulong_array_3d_4,2) To UBound(macro_variables_ulong_array_3d_4,2)
											For ai3=LBound(macro_variables_ulong_array_3d_4,3) To UBound(macro_variables_ulong_array_3d_4,3)
												macro_variables_ulong_array_3d_4(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "5"
									For ai1=LBound(macro_variables_ulong_array_3d_5) To UBound(macro_variables_ulong_array_3d_5)
										For ai2=LBound(macro_variables_ulong_array_3d_5,2) To UBound(macro_variables_ulong_array_3d_5,2)
											For ai3=LBound(macro_variables_ulong_array_3d_5,3) To UBound(macro_variables_ulong_array_3d_5,3)
												macro_variables_ulong_array_3d_5(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "6"
									For ai1=LBound(macro_variables_ulong_array_3d_6) To UBound(macro_variables_ulong_array_3d_6)
										For ai2=LBound(macro_variables_ulong_array_3d_6,2) To UBound(macro_variables_ulong_array_3d_6,2)
											For ai3=LBound(macro_variables_ulong_array_3d_6,3) To UBound(macro_variables_ulong_array_3d_6,3)
												macro_variables_ulong_array_3d_6(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "7"
									For ai1=LBound(macro_variables_ulong_array_3d_7) To UBound(macro_variables_ulong_array_3d_7)
										For ai2=LBound(macro_variables_ulong_array_3d_7,2) To UBound(macro_variables_ulong_array_3d_7,2)
											For ai3=LBound(macro_variables_ulong_array_3d_7,3) To UBound(macro_variables_ulong_array_3d_7,3)
												macro_variables_ulong_array_3d_7(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "8"
									For ai1=LBound(macro_variables_ulong_array_3d_8) To UBound(macro_variables_ulong_array_3d_8)
										For ai2=LBound(macro_variables_ulong_array_3d_8,2) To UBound(macro_variables_ulong_array_3d_8,2)
											For ai3=LBound(macro_variables_ulong_array_3d_8,3) To UBound(macro_variables_ulong_array_3d_8,3)
												macro_variables_ulong_array_3d_8(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "9"
									For ai1=LBound(macro_variables_ulong_array_3d_9) To UBound(macro_variables_ulong_array_3d_9)
										For ai2=LBound(macro_variables_ulong_array_3d_9,2) To UBound(macro_variables_ulong_array_3d_9,2)
											For ai3=LBound(macro_variables_ulong_array_3d_9,3) To UBound(macro_variables_ulong_array_3d_9,3)
												macro_variables_ulong_array_3d_9(ai1,ai2,ai3)=0
											Next
										Next
									Next
							End Select
					End Select
				Case "INTEGER_ARRAY"
					Select Case macro_variables_info(i,5)
						Case "1d"
							Select Case macro_variables_info(i,3)
								Case "1"
									For ai1=LBound(macro_variables_integer_array_1d_1) To UBound(macro_variables_integer_array_1d_1)
										macro_variables_integer_array_1d_1(ai1)=0
									Next
								Case "2"
									For ai1=LBound(macro_variables_integer_array_1d_2) To UBound(macro_variables_integer_array_1d_2)
										macro_variables_integer_array_1d_2(ai1)=0
									Next
								Case "3"
									For ai1=LBound(macro_variables_integer_array_1d_3) To UBound(macro_variables_integer_array_1d_3)
										macro_variables_integer_array_1d_3(ai1)=0
									Next
								Case "4"
									For ai1=LBound(macro_variables_integer_array_1d_4) To UBound(macro_variables_integer_array_1d_4)
										macro_variables_integer_array_1d_4(ai1)=0
									Next
								Case "5"
									For ai1=LBound(macro_variables_integer_array_1d_5) To UBound(macro_variables_integer_array_1d_5)
										macro_variables_integer_array_1d_5(ai1)=0
									Next
								Case "6"
									For ai1=LBound(macro_variables_integer_array_1d_6) To UBound(macro_variables_integer_array_1d_6)
										macro_variables_integer_array_1d_6(ai1)=0
									Next
								Case "7"
									For ai1=LBound(macro_variables_integer_array_1d_7) To UBound(macro_variables_integer_array_1d_7)
										macro_variables_integer_array_1d_7(ai1)=0
									Next
								Case "8"
									For ai1=LBound(macro_variables_integer_array_1d_8) To UBound(macro_variables_integer_array_1d_8)
										macro_variables_integer_array_1d_8(ai1)=0
									Next
								Case "9"
									For ai1=LBound(macro_variables_integer_array_1d_9) To UBound(macro_variables_integer_array_1d_9)
										macro_variables_integer_array_1d_9(ai1)=0
									Next
							End Select
						Case "2d"
							Select Case macro_variables_info(i,3)
								Case "1"
									For ai1=LBound(macro_variables_integer_array_2d_1) To UBound(macro_variables_integer_array_2d_1)
										For ai2=LBound(macro_variables_integer_array_2d_1,2) To UBound(macro_variables_integer_array_2d_1,2)
											macro_variables_integer_array_2d_1(ai1,ai2)=0
										Next
									Next
								Case "2"
									For ai1=LBound(macro_variables_integer_array_2d_2) To UBound(macro_variables_integer_array_2d_2)
										For ai2=LBound(macro_variables_integer_array_2d_2,2) To UBound(macro_variables_integer_array_2d_2,2)
											macro_variables_integer_array_2d_2(ai1,ai2)=0
										Next
									Next
								Case "3"
									For ai1=LBound(macro_variables_integer_array_2d_3) To UBound(macro_variables_integer_array_2d_3)
										For ai2=LBound(macro_variables_integer_array_2d_3,2) To UBound(macro_variables_integer_array_2d_3,2)
											macro_variables_integer_array_2d_3(ai1,ai2)=0
										Next
									Next
								Case "4"
									For ai1=LBound(macro_variables_integer_array_2d_4) To UBound(macro_variables_integer_array_2d_4)
										For ai2=LBound(macro_variables_integer_array_2d_4,2) To UBound(macro_variables_integer_array_2d_4,2)
											macro_variables_integer_array_2d_4(ai1,ai2)=0
										Next
									Next
								Case "5"
									For ai1=LBound(macro_variables_integer_array_2d_5) To UBound(macro_variables_integer_array_2d_5)
										For ai2=LBound(macro_variables_integer_array_2d_5,2) To UBound(macro_variables_integer_array_2d_5,2)
											macro_variables_integer_array_2d_5(ai1,ai2)=0
										Next
									Next
								Case "6"
									For ai1=LBound(macro_variables_integer_array_2d_6) To UBound(macro_variables_integer_array_2d_6)
										For ai2=LBound(macro_variables_integer_array_2d_6,2) To UBound(macro_variables_integer_array_2d_6,2)
											macro_variables_integer_array_2d_6(ai1,ai2)=0
										Next
									Next
								Case "7"
									For ai1=LBound(macro_variables_integer_array_2d_7) To UBound(macro_variables_integer_array_2d_7)
										For ai2=LBound(macro_variables_integer_array_2d_7,2) To UBound(macro_variables_integer_array_2d_7,2)
											macro_variables_integer_array_2d_7(ai1,ai2)=0
										Next
									Next
								Case "8"
									For ai1=LBound(macro_variables_integer_array_2d_8) To UBound(macro_variables_integer_array_2d_8)
										For ai2=LBound(macro_variables_integer_array_2d_8,2) To UBound(macro_variables_integer_array_2d_8,2)
											macro_variables_integer_array_2d_8(ai1,ai2)=0
										Next
									Next
								Case "9"
									For ai1=LBound(macro_variables_integer_array_2d_9) To UBound(macro_variables_integer_array_2d_9)
										For ai2=LBound(macro_variables_integer_array_2d_9,2) To UBound(macro_variables_integer_array_2d_9,2)
											macro_variables_integer_array_2d_9(ai1,ai2)=0
										Next
									Next
							End Select
						Case "3d"
							Select Case macro_variables_info(i,3)
								Case "1"
									For ai1=LBound(macro_variables_integer_array_3d_1) To UBound(macro_variables_integer_array_3d_1)
										For ai2=LBound(macro_variables_integer_array_3d_1,2) To UBound(macro_variables_integer_array_3d_1,2)
											For ai3=LBound(macro_variables_integer_array_3d_1,3) To UBound(macro_variables_integer_array_3d_1,3)
												macro_variables_integer_array_3d_1(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "2"
									For ai1=LBound(macro_variables_integer_array_3d_2) To UBound(macro_variables_integer_array_3d_2)
										For ai2=LBound(macro_variables_integer_array_3d_2,2) To UBound(macro_variables_integer_array_3d_2,2)
											For ai3=LBound(macro_variables_integer_array_3d_2,3) To UBound(macro_variables_integer_array_3d_2,3)
												macro_variables_integer_array_3d_2(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "3"
									For ai1=LBound(macro_variables_integer_array_3d_3) To UBound(macro_variables_integer_array_3d_3)
										For ai2=LBound(macro_variables_integer_array_3d_3,2) To UBound(macro_variables_integer_array_3d_3,2)
											For ai3=LBound(macro_variables_integer_array_3d_3,3) To UBound(macro_variables_integer_array_3d_3,3)
												macro_variables_integer_array_3d_3(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "4"
									For ai1=LBound(macro_variables_integer_array_3d_4) To UBound(macro_variables_integer_array_3d_4)
										For ai2=LBound(macro_variables_integer_array_3d_4,2) To UBound(macro_variables_integer_array_3d_4,2)
											For ai3=LBound(macro_variables_integer_array_3d_4,3) To UBound(macro_variables_integer_array_3d_4,3)
												macro_variables_integer_array_3d_4(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "5"
									For ai1=LBound(macro_variables_integer_array_3d_5) To UBound(macro_variables_integer_array_3d_5)
										For ai2=LBound(macro_variables_integer_array_3d_5,2) To UBound(macro_variables_integer_array_3d_5,2)
											For ai3=LBound(macro_variables_integer_array_3d_5,3) To UBound(macro_variables_integer_array_3d_5,3)
												macro_variables_integer_array_3d_5(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "6"
									For ai1=LBound(macro_variables_integer_array_3d_6) To UBound(macro_variables_integer_array_3d_6)
										For ai2=LBound(macro_variables_integer_array_3d_6,2) To UBound(macro_variables_integer_array_3d_6,2)
											For ai3=LBound(macro_variables_integer_array_3d_6,3) To UBound(macro_variables_integer_array_3d_6,3)
												macro_variables_integer_array_3d_6(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "7"
									For ai1=LBound(macro_variables_integer_array_3d_7) To UBound(macro_variables_integer_array_3d_7)
										For ai2=LBound(macro_variables_integer_array_3d_7,2) To UBound(macro_variables_integer_array_3d_7,2)
											For ai3=LBound(macro_variables_integer_array_3d_7,3) To UBound(macro_variables_integer_array_3d_7,3)
												macro_variables_integer_array_3d_7(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "8"
									For ai1=LBound(macro_variables_integer_array_3d_8) To UBound(macro_variables_integer_array_3d_8)
										For ai2=LBound(macro_variables_integer_array_3d_8,2) To UBound(macro_variables_integer_array_3d_8,2)
											For ai3=LBound(macro_variables_integer_array_3d_8,3) To UBound(macro_variables_integer_array_3d_8,3)
												macro_variables_integer_array_3d_8(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "9"
									For ai1=LBound(macro_variables_integer_array_3d_9) To UBound(macro_variables_integer_array_3d_9)
										For ai2=LBound(macro_variables_integer_array_3d_9,2) To UBound(macro_variables_integer_array_3d_9,2)
											For ai3=LBound(macro_variables_integer_array_3d_9,3) To UBound(macro_variables_integer_array_3d_9,3)
												macro_variables_integer_array_3d_9(ai1,ai2,ai3)=0
											Next
										Next
									Next
							End Select
					End Select
				Case "UINTEGER_ARRAY"
					Select Case macro_variables_info(i,5)
						Case "1d"
							Select Case macro_variables_info(i,3)
								Case "1"
									For ai1=LBound(macro_variables_uinteger_array_1d_1) To UBound(macro_variables_uinteger_array_1d_1)
										macro_variables_uinteger_array_1d_1(ai1)=0
									Next
								Case "2"
									For ai1=LBound(macro_variables_uinteger_array_1d_2) To UBound(macro_variables_uinteger_array_1d_2)
										macro_variables_uinteger_array_1d_2(ai1)=0
									Next
								Case "3"
									For ai1=LBound(macro_variables_uinteger_array_1d_3) To UBound(macro_variables_uinteger_array_1d_3)
										macro_variables_uinteger_array_1d_3(ai1)=0
									Next
								Case "4"
									For ai1=LBound(macro_variables_uinteger_array_1d_4) To UBound(macro_variables_uinteger_array_1d_4)
										macro_variables_uinteger_array_1d_4(ai1)=0
									Next
								Case "5"
									For ai1=LBound(macro_variables_uinteger_array_1d_5) To UBound(macro_variables_uinteger_array_1d_5)
										macro_variables_uinteger_array_1d_5(ai1)=0
									Next
								Case "6"
									For ai1=LBound(macro_variables_uinteger_array_1d_6) To UBound(macro_variables_uinteger_array_1d_6)
										macro_variables_uinteger_array_1d_6(ai1)=0
									Next
								Case "7"
									For ai1=LBound(macro_variables_uinteger_array_1d_7) To UBound(macro_variables_uinteger_array_1d_7)
										macro_variables_uinteger_array_1d_7(ai1)=0
									Next
								Case "8"
									For ai1=LBound(macro_variables_uinteger_array_1d_8) To UBound(macro_variables_uinteger_array_1d_8)
										macro_variables_uinteger_array_1d_8(ai1)=0
									Next
								Case "9"
									For ai1=LBound(macro_variables_uinteger_array_1d_9) To UBound(macro_variables_uinteger_array_1d_9)
										macro_variables_uinteger_array_1d_9(ai1)=0
									Next
							End Select
						Case "2d"
							Select Case macro_variables_info(i,3)
								Case "1"
									For ai1=LBound(macro_variables_uinteger_array_2d_1) To UBound(macro_variables_uinteger_array_2d_1)
										For ai2=LBound(macro_variables_uinteger_array_2d_1,2) To UBound(macro_variables_uinteger_array_2d_1,2)
											macro_variables_uinteger_array_2d_1(ai1,ai2)=0
										Next
									Next
								Case "2"
									For ai1=LBound(macro_variables_uinteger_array_2d_2) To UBound(macro_variables_uinteger_array_2d_2)
										For ai2=LBound(macro_variables_uinteger_array_2d_2,2) To UBound(macro_variables_uinteger_array_2d_2,2)
											macro_variables_uinteger_array_2d_2(ai1,ai2)=0
										Next
									Next
								Case "3"
									For ai1=LBound(macro_variables_uinteger_array_2d_3) To UBound(macro_variables_uinteger_array_2d_3)
										For ai2=LBound(macro_variables_uinteger_array_2d_3,2) To UBound(macro_variables_uinteger_array_2d_3,2)
											macro_variables_uinteger_array_2d_3(ai1,ai2)=0
										Next
									Next
								Case "4"
									For ai1=LBound(macro_variables_uinteger_array_2d_4) To UBound(macro_variables_uinteger_array_2d_4)
										For ai2=LBound(macro_variables_uinteger_array_2d_4,2) To UBound(macro_variables_uinteger_array_2d_4,2)
											macro_variables_uinteger_array_2d_4(ai1,ai2)=0
										Next
									Next
								Case "5"
									For ai1=LBound(macro_variables_uinteger_array_2d_5) To UBound(macro_variables_uinteger_array_2d_5)
										For ai2=LBound(macro_variables_uinteger_array_2d_5,2) To UBound(macro_variables_uinteger_array_2d_5,2)
											macro_variables_uinteger_array_2d_5(ai1,ai2)=0
										Next
									Next
								Case "6"
									For ai1=LBound(macro_variables_uinteger_array_2d_6) To UBound(macro_variables_uinteger_array_2d_6)
										For ai2=LBound(macro_variables_uinteger_array_2d_6,2) To UBound(macro_variables_uinteger_array_2d_6,2)
											macro_variables_uinteger_array_2d_6(ai1,ai2)=0
										Next
									Next
								Case "7"
									For ai1=LBound(macro_variables_uinteger_array_2d_7) To UBound(macro_variables_uinteger_array_2d_7)
										For ai2=LBound(macro_variables_uinteger_array_2d_7,2) To UBound(macro_variables_uinteger_array_2d_7,2)
											macro_variables_uinteger_array_2d_7(ai1,ai2)=0
										Next
									Next
								Case "8"
									For ai1=LBound(macro_variables_uinteger_array_2d_8) To UBound(macro_variables_uinteger_array_2d_8)
										For ai2=LBound(macro_variables_uinteger_array_2d_8,2) To UBound(macro_variables_uinteger_array_2d_8,2)
											macro_variables_uinteger_array_2d_8(ai1,ai2)=0
										Next
									Next
								Case "9"
									For ai1=LBound(macro_variables_uinteger_array_2d_9) To UBound(macro_variables_uinteger_array_2d_9)
										For ai2=LBound(macro_variables_uinteger_array_2d_9,2) To UBound(macro_variables_uinteger_array_2d_9,2)
											macro_variables_uinteger_array_2d_9(ai1,ai2)=0
										Next
									Next
							End Select
						Case "3d"
							Select Case macro_variables_info(i,3)
								Case "1"
									For ai1=LBound(macro_variables_uinteger_array_3d_1) To UBound(macro_variables_uinteger_array_3d_1)
										For ai2=LBound(macro_variables_uinteger_array_3d_1,2) To UBound(macro_variables_uinteger_array_3d_1,2)
											For ai3=LBound(macro_variables_uinteger_array_3d_1,3) To UBound(macro_variables_uinteger_array_3d_1,3)
												macro_variables_uinteger_array_3d_1(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "2"
									For ai1=LBound(macro_variables_uinteger_array_3d_2) To UBound(macro_variables_uinteger_array_3d_2)
										For ai2=LBound(macro_variables_uinteger_array_3d_2,2) To UBound(macro_variables_uinteger_array_3d_2,2)
											For ai3=LBound(macro_variables_uinteger_array_3d_2,3) To UBound(macro_variables_uinteger_array_3d_2,3)
												macro_variables_uinteger_array_3d_2(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "3"
									For ai1=LBound(macro_variables_uinteger_array_3d_3) To UBound(macro_variables_uinteger_array_3d_3)
										For ai2=LBound(macro_variables_uinteger_array_3d_3,2) To UBound(macro_variables_uinteger_array_3d_3,2)
											For ai3=LBound(macro_variables_uinteger_array_3d_3,3) To UBound(macro_variables_uinteger_array_3d_3,3)
												macro_variables_uinteger_array_3d_3(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "4"
									For ai1=LBound(macro_variables_uinteger_array_3d_4) To UBound(macro_variables_uinteger_array_3d_4)
										For ai2=LBound(macro_variables_uinteger_array_3d_4,2) To UBound(macro_variables_uinteger_array_3d_4,2)
											For ai3=LBound(macro_variables_uinteger_array_3d_4,3) To UBound(macro_variables_uinteger_array_3d_4,3)
												macro_variables_uinteger_array_3d_4(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "5"
									For ai1=LBound(macro_variables_uinteger_array_3d_5) To UBound(macro_variables_uinteger_array_3d_5)
										For ai2=LBound(macro_variables_uinteger_array_3d_5,2) To UBound(macro_variables_uinteger_array_3d_5,2)
											For ai3=LBound(macro_variables_uinteger_array_3d_5,3) To UBound(macro_variables_uinteger_array_3d_5,3)
												macro_variables_uinteger_array_3d_5(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "6"
									For ai1=LBound(macro_variables_uinteger_array_3d_6) To UBound(macro_variables_uinteger_array_3d_6)
										For ai2=LBound(macro_variables_uinteger_array_3d_6,2) To UBound(macro_variables_uinteger_array_3d_6,2)
											For ai3=LBound(macro_variables_uinteger_array_3d_6,3) To UBound(macro_variables_uinteger_array_3d_6,3)
												macro_variables_uinteger_array_3d_6(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "7"
									For ai1=LBound(macro_variables_uinteger_array_3d_7) To UBound(macro_variables_uinteger_array_3d_7)
										For ai2=LBound(macro_variables_uinteger_array_3d_7,2) To UBound(macro_variables_uinteger_array_3d_7,2)
											For ai3=LBound(macro_variables_uinteger_array_3d_7,3) To UBound(macro_variables_uinteger_array_3d_7,3)
												macro_variables_uinteger_array_3d_7(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "8"
									For ai1=LBound(macro_variables_uinteger_array_3d_8) To UBound(macro_variables_uinteger_array_3d_8)
										For ai2=LBound(macro_variables_uinteger_array_3d_8,2) To UBound(macro_variables_uinteger_array_3d_8,2)
											For ai3=LBound(macro_variables_uinteger_array_3d_8,3) To UBound(macro_variables_uinteger_array_3d_8,3)
												macro_variables_uinteger_array_3d_8(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "9"
									For ai1=LBound(macro_variables_uinteger_array_3d_9) To UBound(macro_variables_uinteger_array_3d_9)
										For ai2=LBound(macro_variables_uinteger_array_3d_9,2) To UBound(macro_variables_uinteger_array_3d_9,2)
											For ai3=LBound(macro_variables_uinteger_array_3d_9,3) To UBound(macro_variables_uinteger_array_3d_9,3)
												macro_variables_uinteger_array_3d_9(ai1,ai2,ai3)=0
											Next
										Next
									Next
							End Select
					End Select
				Case "LONGINT_ARRAY"
					Select Case macro_variables_info(i,5)
						Case "1d"
							Select Case macro_variables_info(i,3)
								Case "1"
									For ai1=LBound(macro_variables_longint_array_1d_1) To UBound(macro_variables_longint_array_1d_1)
										macro_variables_longint_array_1d_1(ai1)=0
									Next
								Case "2"
									For ai1=LBound(macro_variables_longint_array_1d_2) To UBound(macro_variables_longint_array_1d_2)
										macro_variables_longint_array_1d_2(ai1)=0
									Next
								Case "3"
									For ai1=LBound(macro_variables_longint_array_1d_3) To UBound(macro_variables_longint_array_1d_3)
										macro_variables_longint_array_1d_3(ai1)=0
									Next
								Case "4"
									For ai1=LBound(macro_variables_longint_array_1d_4) To UBound(macro_variables_longint_array_1d_4)
										macro_variables_longint_array_1d_4(ai1)=0
									Next
								Case "5"
									For ai1=LBound(macro_variables_longint_array_1d_5) To UBound(macro_variables_longint_array_1d_5)
										macro_variables_longint_array_1d_5(ai1)=0
									Next
								Case "6"
									For ai1=LBound(macro_variables_longint_array_1d_6) To UBound(macro_variables_longint_array_1d_6)
										macro_variables_longint_array_1d_6(ai1)=0
									Next
								Case "7"
									For ai1=LBound(macro_variables_longint_array_1d_7) To UBound(macro_variables_longint_array_1d_7)
										macro_variables_longint_array_1d_7(ai1)=0
									Next
								Case "8"
									For ai1=LBound(macro_variables_longint_array_1d_8) To UBound(macro_variables_longint_array_1d_8)
										macro_variables_longint_array_1d_8(ai1)=0
									Next
								Case "9"
									For ai1=LBound(macro_variables_longint_array_1d_9) To UBound(macro_variables_longint_array_1d_9)
										macro_variables_longint_array_1d_9(ai1)=0
									Next
							End Select
						Case "2d"
							Select Case macro_variables_info(i,3)
								Case "1"
									For ai1=LBound(macro_variables_longint_array_2d_1) To UBound(macro_variables_longint_array_2d_1)
										For ai2=LBound(macro_variables_longint_array_2d_1,2) To UBound(macro_variables_longint_array_2d_1,2)
											macro_variables_longint_array_2d_1(ai1,ai2)=0
										Next
									Next
								Case "2"
									For ai1=LBound(macro_variables_longint_array_2d_2) To UBound(macro_variables_longint_array_2d_2)
										For ai2=LBound(macro_variables_longint_array_2d_2,2) To UBound(macro_variables_longint_array_2d_2,2)
											macro_variables_longint_array_2d_2(ai1,ai2)=0
										Next
									Next
								Case "3"
									For ai1=LBound(macro_variables_longint_array_2d_3) To UBound(macro_variables_longint_array_2d_3)
										For ai2=LBound(macro_variables_longint_array_2d_3,2) To UBound(macro_variables_longint_array_2d_3,2)
											macro_variables_longint_array_2d_3(ai1,ai2)=0
										Next
									Next
								Case "4"
									For ai1=LBound(macro_variables_longint_array_2d_4) To UBound(macro_variables_longint_array_2d_4)
										For ai2=LBound(macro_variables_longint_array_2d_4,2) To UBound(macro_variables_longint_array_2d_4,2)
											macro_variables_longint_array_2d_4(ai1,ai2)=0
										Next
									Next
								Case "5"
									For ai1=LBound(macro_variables_longint_array_2d_5) To UBound(macro_variables_longint_array_2d_5)
										For ai2=LBound(macro_variables_longint_array_2d_5,2) To UBound(macro_variables_longint_array_2d_5,2)
											macro_variables_longint_array_2d_5(ai1,ai2)=0
										Next
									Next
								Case "6"
									For ai1=LBound(macro_variables_longint_array_2d_6) To UBound(macro_variables_longint_array_2d_6)
										For ai2=LBound(macro_variables_longint_array_2d_6,2) To UBound(macro_variables_longint_array_2d_6,2)
											macro_variables_longint_array_2d_6(ai1,ai2)=0
										Next
									Next
								Case "7"
									For ai1=LBound(macro_variables_longint_array_2d_7) To UBound(macro_variables_longint_array_2d_7)
										For ai2=LBound(macro_variables_longint_array_2d_7,2) To UBound(macro_variables_longint_array_2d_7,2)
											macro_variables_longint_array_2d_7(ai1,ai2)=0
										Next
									Next
								Case "8"
									For ai1=LBound(macro_variables_longint_array_2d_8) To UBound(macro_variables_longint_array_2d_8)
										For ai2=LBound(macro_variables_longint_array_2d_8,2) To UBound(macro_variables_longint_array_2d_8,2)
											macro_variables_longint_array_2d_8(ai1,ai2)=0
										Next
									Next
								Case "9"
									For ai1=LBound(macro_variables_longint_array_2d_9) To UBound(macro_variables_longint_array_2d_9)
										For ai2=LBound(macro_variables_longint_array_2d_9,2) To UBound(macro_variables_longint_array_2d_9,2)
											macro_variables_longint_array_2d_9(ai1,ai2)=0
										Next
									Next
							End Select
						Case "3d"
							Select Case macro_variables_info(i,3)
								Case "1"
									For ai1=LBound(macro_variables_longint_array_3d_1) To UBound(macro_variables_longint_array_3d_1)
										For ai2=LBound(macro_variables_longint_array_3d_1,2) To UBound(macro_variables_longint_array_3d_1,2)
											For ai3=LBound(macro_variables_longint_array_3d_1,3) To UBound(macro_variables_longint_array_3d_1,3)
												macro_variables_longint_array_3d_1(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "2"
									For ai1=LBound(macro_variables_longint_array_3d_2) To UBound(macro_variables_longint_array_3d_2)
										For ai2=LBound(macro_variables_longint_array_3d_2,2) To UBound(macro_variables_longint_array_3d_2,2)
											For ai3=LBound(macro_variables_longint_array_3d_2,3) To UBound(macro_variables_longint_array_3d_2,3)
												macro_variables_longint_array_3d_2(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "3"
									For ai1=LBound(macro_variables_longint_array_3d_3) To UBound(macro_variables_longint_array_3d_3)
										For ai2=LBound(macro_variables_longint_array_3d_3,2) To UBound(macro_variables_longint_array_3d_3,2)
											For ai3=LBound(macro_variables_longint_array_3d_3,3) To UBound(macro_variables_longint_array_3d_3,3)
												macro_variables_longint_array_3d_3(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "4"
									For ai1=LBound(macro_variables_longint_array_3d_4) To UBound(macro_variables_longint_array_3d_4)
										For ai2=LBound(macro_variables_longint_array_3d_4,2) To UBound(macro_variables_longint_array_3d_4,2)
											For ai3=LBound(macro_variables_longint_array_3d_4,3) To UBound(macro_variables_longint_array_3d_4,3)
												macro_variables_longint_array_3d_4(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "5"
									For ai1=LBound(macro_variables_longint_array_3d_5) To UBound(macro_variables_longint_array_3d_5)
										For ai2=LBound(macro_variables_longint_array_3d_5,2) To UBound(macro_variables_longint_array_3d_5,2)
											For ai3=LBound(macro_variables_longint_array_3d_5,3) To UBound(macro_variables_longint_array_3d_5,3)
												macro_variables_longint_array_3d_5(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "6"
									For ai1=LBound(macro_variables_longint_array_3d_6) To UBound(macro_variables_longint_array_3d_6)
										For ai2=LBound(macro_variables_longint_array_3d_6,2) To UBound(macro_variables_longint_array_3d_6,2)
											For ai3=LBound(macro_variables_longint_array_3d_6,3) To UBound(macro_variables_longint_array_3d_6,3)
												macro_variables_longint_array_3d_6(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "7"
									For ai1=LBound(macro_variables_longint_array_3d_7) To UBound(macro_variables_longint_array_3d_7)
										For ai2=LBound(macro_variables_longint_array_3d_7,2) To UBound(macro_variables_longint_array_3d_7,2)
											For ai3=LBound(macro_variables_longint_array_3d_7,3) To UBound(macro_variables_longint_array_3d_7,3)
												macro_variables_longint_array_3d_7(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "8"
									For ai1=LBound(macro_variables_longint_array_3d_8) To UBound(macro_variables_longint_array_3d_8)
										For ai2=LBound(macro_variables_longint_array_3d_8,2) To UBound(macro_variables_longint_array_3d_8,2)
											For ai3=LBound(macro_variables_longint_array_3d_8,3) To UBound(macro_variables_longint_array_3d_8,3)
												macro_variables_longint_array_3d_8(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "9"
									For ai1=LBound(macro_variables_longint_array_3d_9) To UBound(macro_variables_longint_array_3d_9)
										For ai2=LBound(macro_variables_longint_array_3d_9,2) To UBound(macro_variables_longint_array_3d_9,2)
											For ai3=LBound(macro_variables_longint_array_3d_9,3) To UBound(macro_variables_longint_array_3d_9,3)
												macro_variables_longint_array_3d_9(ai1,ai2,ai3)=0
											Next
										Next
									Next
							End Select
					End Select
				Case "ULONGINT_ARRAY"
					Select Case macro_variables_info(i,5)
						Case "1d"
							Select Case macro_variables_info(i,3)
								Case "1"
									For ai1=LBound(macro_variables_ulongint_array_1d_1) To UBound(macro_variables_ulongint_array_1d_1)
										macro_variables_ulongint_array_1d_1(ai1)=0
									Next
								Case "2"
									For ai1=LBound(macro_variables_ulongint_array_1d_2) To UBound(macro_variables_ulongint_array_1d_2)
										macro_variables_ulongint_array_1d_2(ai1)=0
									Next
								Case "3"
									For ai1=LBound(macro_variables_ulongint_array_1d_3) To UBound(macro_variables_ulongint_array_1d_3)
										macro_variables_ulongint_array_1d_3(ai1)=0
									Next
								Case "4"
									For ai1=LBound(macro_variables_ulongint_array_1d_4) To UBound(macro_variables_ulongint_array_1d_4)
										macro_variables_ulongint_array_1d_4(ai1)=0
									Next
								Case "5"
									For ai1=LBound(macro_variables_ulongint_array_1d_5) To UBound(macro_variables_ulongint_array_1d_5)
										macro_variables_ulongint_array_1d_5(ai1)=0
									Next
								Case "6"
									For ai1=LBound(macro_variables_ulongint_array_1d_6) To UBound(macro_variables_ulongint_array_1d_6)
										macro_variables_ulongint_array_1d_6(ai1)=0
									Next
								Case "7"
									For ai1=LBound(macro_variables_ulongint_array_1d_7) To UBound(macro_variables_ulongint_array_1d_7)
										macro_variables_ulongint_array_1d_7(ai1)=0
									Next
								Case "8"
									For ai1=LBound(macro_variables_ulongint_array_1d_8) To UBound(macro_variables_ulongint_array_1d_8)
										macro_variables_ulongint_array_1d_8(ai1)=0
									Next
								Case "9"
									For ai1=LBound(macro_variables_ulongint_array_1d_9) To UBound(macro_variables_ulongint_array_1d_9)
										macro_variables_ulongint_array_1d_9(ai1)=0
									Next
							End Select
						Case "2d"
							Select Case macro_variables_info(i,3)
								Case "1"
									For ai1=LBound(macro_variables_ulongint_array_2d_1) To UBound(macro_variables_ulongint_array_2d_1)
										For ai2=LBound(macro_variables_ulongint_array_2d_1,2) To UBound(macro_variables_ulongint_array_2d_1,2)
											macro_variables_ulongint_array_2d_1(ai1,ai2)=0
										Next
									Next
								Case "2"
									For ai1=LBound(macro_variables_ulongint_array_2d_2) To UBound(macro_variables_ulongint_array_2d_2)
										For ai2=LBound(macro_variables_ulongint_array_2d_2,2) To UBound(macro_variables_ulongint_array_2d_2,2)
											macro_variables_ulongint_array_2d_2(ai1,ai2)=0
										Next
									Next
								Case "3"
									For ai1=LBound(macro_variables_ulongint_array_2d_3) To UBound(macro_variables_ulongint_array_2d_3)
										For ai2=LBound(macro_variables_ulongint_array_2d_3,2) To UBound(macro_variables_ulongint_array_2d_3,2)
											macro_variables_ulongint_array_2d_3(ai1,ai2)=0
										Next
									Next
								Case "4"
									For ai1=LBound(macro_variables_ulongint_array_2d_4) To UBound(macro_variables_ulongint_array_2d_4)
										For ai2=LBound(macro_variables_ulongint_array_2d_4,2) To UBound(macro_variables_ulongint_array_2d_4,2)
											macro_variables_ulongint_array_2d_4(ai1,ai2)=0
										Next
									Next
								Case "5"
									For ai1=LBound(macro_variables_ulongint_array_2d_5) To UBound(macro_variables_ulongint_array_2d_5)
										For ai2=LBound(macro_variables_ulongint_array_2d_5,2) To UBound(macro_variables_ulongint_array_2d_5,2)
											macro_variables_ulongint_array_2d_5(ai1,ai2)=0
										Next
									Next
								Case "6"
									For ai1=LBound(macro_variables_ulongint_array_2d_6) To UBound(macro_variables_ulongint_array_2d_6)
										For ai2=LBound(macro_variables_ulongint_array_2d_6,2) To UBound(macro_variables_ulongint_array_2d_6,2)
											macro_variables_ulongint_array_2d_6(ai1,ai2)=0
										Next
									Next
								Case "7"
									For ai1=LBound(macro_variables_ulongint_array_2d_7) To UBound(macro_variables_ulongint_array_2d_7)
										For ai2=LBound(macro_variables_ulongint_array_2d_7,2) To UBound(macro_variables_ulongint_array_2d_7,2)
											macro_variables_ulongint_array_2d_7(ai1,ai2)=0
										Next
									Next
								Case "8"
									For ai1=LBound(macro_variables_ulongint_array_2d_8) To UBound(macro_variables_ulongint_array_2d_8)
										For ai2=LBound(macro_variables_ulongint_array_2d_8,2) To UBound(macro_variables_ulongint_array_2d_8,2)
											macro_variables_ulongint_array_2d_8(ai1,ai2)=0
										Next
									Next
								Case "9"
									For ai1=LBound(macro_variables_ulongint_array_2d_9) To UBound(macro_variables_ulongint_array_2d_9)
										For ai2=LBound(macro_variables_ulongint_array_2d_9,2) To UBound(macro_variables_ulongint_array_2d_9,2)
											macro_variables_ulongint_array_2d_9(ai1,ai2)=0
										Next
									Next
							End Select
						Case "3d"
							Select Case macro_variables_info(i,3)
								Case "1"
									For ai1=LBound(macro_variables_ulongint_array_3d_1) To UBound(macro_variables_ulongint_array_3d_1)
										For ai2=LBound(macro_variables_ulongint_array_3d_1,2) To UBound(macro_variables_ulongint_array_3d_1,2)
											For ai3=LBound(macro_variables_ulongint_array_3d_1,3) To UBound(macro_variables_ulongint_array_3d_1,3)
												macro_variables_ulongint_array_3d_1(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "2"
									For ai1=LBound(macro_variables_ulongint_array_3d_2) To UBound(macro_variables_ulongint_array_3d_2)
										For ai2=LBound(macro_variables_ulongint_array_3d_2,2) To UBound(macro_variables_ulongint_array_3d_2,2)
											For ai3=LBound(macro_variables_ulongint_array_3d_2,3) To UBound(macro_variables_ulongint_array_3d_2,3)
												macro_variables_ulongint_array_3d_2(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "3"
									For ai1=LBound(macro_variables_ulongint_array_3d_3) To UBound(macro_variables_ulongint_array_3d_3)
										For ai2=LBound(macro_variables_ulongint_array_3d_3,2) To UBound(macro_variables_ulongint_array_3d_3,2)
											For ai3=LBound(macro_variables_ulongint_array_3d_3,3) To UBound(macro_variables_ulongint_array_3d_3,3)
												macro_variables_ulongint_array_3d_3(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "4"
									For ai1=LBound(macro_variables_ulongint_array_3d_4) To UBound(macro_variables_ulongint_array_3d_4)
										For ai2=LBound(macro_variables_ulongint_array_3d_4,2) To UBound(macro_variables_ulongint_array_3d_4,2)
											For ai3=LBound(macro_variables_ulongint_array_3d_4,3) To UBound(macro_variables_ulongint_array_3d_4,3)
												macro_variables_ulongint_array_3d_4(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "5"
									For ai1=LBound(macro_variables_ulongint_array_3d_5) To UBound(macro_variables_ulongint_array_3d_5)
										For ai2=LBound(macro_variables_ulongint_array_3d_5,2) To UBound(macro_variables_ulongint_array_3d_5,2)
											For ai3=LBound(macro_variables_ulongint_array_3d_5,3) To UBound(macro_variables_ulongint_array_3d_5,3)
												macro_variables_ulongint_array_3d_5(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "6"
									For ai1=LBound(macro_variables_ulongint_array_3d_6) To UBound(macro_variables_ulongint_array_3d_6)
										For ai2=LBound(macro_variables_ulongint_array_3d_6,2) To UBound(macro_variables_ulongint_array_3d_6,2)
											For ai3=LBound(macro_variables_ulongint_array_3d_6,3) To UBound(macro_variables_ulongint_array_3d_6,3)
												macro_variables_ulongint_array_3d_6(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "7"
									For ai1=LBound(macro_variables_ulongint_array_3d_7) To UBound(macro_variables_ulongint_array_3d_7)
										For ai2=LBound(macro_variables_ulongint_array_3d_7,2) To UBound(macro_variables_ulongint_array_3d_7,2)
											For ai3=LBound(macro_variables_ulongint_array_3d_7,3) To UBound(macro_variables_ulongint_array_3d_7,3)
												macro_variables_ulongint_array_3d_7(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "8"
									For ai1=LBound(macro_variables_ulongint_array_3d_8) To UBound(macro_variables_ulongint_array_3d_8)
										For ai2=LBound(macro_variables_ulongint_array_3d_8,2) To UBound(macro_variables_ulongint_array_3d_8,2)
											For ai3=LBound(macro_variables_ulongint_array_3d_8,3) To UBound(macro_variables_ulongint_array_3d_8,3)
												macro_variables_ulongint_array_3d_8(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "9"
									For ai1=LBound(macro_variables_ulongint_array_3d_9) To UBound(macro_variables_ulongint_array_3d_9)
										For ai2=LBound(macro_variables_ulongint_array_3d_9,2) To UBound(macro_variables_ulongint_array_3d_9,2)
											For ai3=LBound(macro_variables_ulongint_array_3d_9,3) To UBound(macro_variables_ulongint_array_3d_9,3)
												macro_variables_ulongint_array_3d_9(ai1,ai2,ai3)=0
											Next
										Next
									Next
							End Select
					End Select
				Case "SINGLE_ARRAY"
					Select Case macro_variables_info(i,5)
						Case "1d"
							Select Case macro_variables_info(i,3)
								Case "1"
									For ai1=LBound(macro_variables_single_array_1d_1) To UBound(macro_variables_single_array_1d_1)
										macro_variables_single_array_1d_1(ai1)=0
									Next
								Case "2"
									For ai1=LBound(macro_variables_single_array_1d_2) To UBound(macro_variables_single_array_1d_2)
										macro_variables_single_array_1d_2(ai1)=0
									Next
								Case "3"
									For ai1=LBound(macro_variables_single_array_1d_3) To UBound(macro_variables_single_array_1d_3)
										macro_variables_single_array_1d_3(ai1)=0
									Next
								Case "4"
									For ai1=LBound(macro_variables_single_array_1d_4) To UBound(macro_variables_single_array_1d_4)
										macro_variables_single_array_1d_4(ai1)=0
									Next
								Case "5"
									For ai1=LBound(macro_variables_single_array_1d_5) To UBound(macro_variables_single_array_1d_5)
										macro_variables_single_array_1d_5(ai1)=0
									Next
								Case "6"
									For ai1=LBound(macro_variables_single_array_1d_6) To UBound(macro_variables_single_array_1d_6)
										macro_variables_single_array_1d_6(ai1)=0
									Next
								Case "7"
									For ai1=LBound(macro_variables_single_array_1d_7) To UBound(macro_variables_single_array_1d_7)
										macro_variables_single_array_1d_7(ai1)=0
									Next
								Case "8"
									For ai1=LBound(macro_variables_single_array_1d_8) To UBound(macro_variables_single_array_1d_8)
										macro_variables_single_array_1d_8(ai1)=0
									Next
								Case "9"
									For ai1=LBound(macro_variables_single_array_1d_9) To UBound(macro_variables_single_array_1d_9)
										macro_variables_single_array_1d_9(ai1)=0
									Next
							End Select
						Case "2d"
							Select Case macro_variables_info(i,3)
								Case "1"
									For ai1=LBound(macro_variables_single_array_2d_1) To UBound(macro_variables_single_array_2d_1)
										For ai2=LBound(macro_variables_single_array_2d_1,2) To UBound(macro_variables_single_array_2d_1,2)
											macro_variables_single_array_2d_1(ai1,ai2)=0
										Next
									Next
								Case "2"
									For ai1=LBound(macro_variables_single_array_2d_2) To UBound(macro_variables_single_array_2d_2)
										For ai2=LBound(macro_variables_single_array_2d_2,2) To UBound(macro_variables_single_array_2d_2,2)
											macro_variables_single_array_2d_2(ai1,ai2)=0
										Next
									Next
								Case "3"
									For ai1=LBound(macro_variables_single_array_2d_3) To UBound(macro_variables_single_array_2d_3)
										For ai2=LBound(macro_variables_single_array_2d_3,2) To UBound(macro_variables_single_array_2d_3,2)
											macro_variables_single_array_2d_3(ai1,ai2)=0
										Next
									Next
								Case "4"
									For ai1=LBound(macro_variables_single_array_2d_4) To UBound(macro_variables_single_array_2d_4)
										For ai2=LBound(macro_variables_single_array_2d_4,2) To UBound(macro_variables_single_array_2d_4,2)
											macro_variables_single_array_2d_4(ai1,ai2)=0
										Next
									Next
								Case "5"
									For ai1=LBound(macro_variables_single_array_2d_5) To UBound(macro_variables_single_array_2d_5)
										For ai2=LBound(macro_variables_single_array_2d_5,2) To UBound(macro_variables_single_array_2d_5,2)
											macro_variables_single_array_2d_5(ai1,ai2)=0
										Next
									Next
								Case "6"
									For ai1=LBound(macro_variables_single_array_2d_6) To UBound(macro_variables_single_array_2d_6)
										For ai2=LBound(macro_variables_single_array_2d_6,2) To UBound(macro_variables_single_array_2d_6,2)
											macro_variables_single_array_2d_6(ai1,ai2)=0
										Next
									Next
								Case "7"
									For ai1=LBound(macro_variables_single_array_2d_7) To UBound(macro_variables_single_array_2d_7)
										For ai2=LBound(macro_variables_single_array_2d_7,2) To UBound(macro_variables_single_array_2d_7,2)
											macro_variables_single_array_2d_7(ai1,ai2)=0
										Next
									Next
								Case "8"
									For ai1=LBound(macro_variables_single_array_2d_8) To UBound(macro_variables_single_array_2d_8)
										For ai2=LBound(macro_variables_single_array_2d_8,2) To UBound(macro_variables_single_array_2d_8,2)
											macro_variables_single_array_2d_8(ai1,ai2)=0
										Next
									Next
								Case "9"
									For ai1=LBound(macro_variables_single_array_2d_9) To UBound(macro_variables_single_array_2d_9)
										For ai2=LBound(macro_variables_single_array_2d_9,2) To UBound(macro_variables_single_array_2d_9,2)
											macro_variables_single_array_2d_9(ai1,ai2)=0
										Next
									Next
							End Select
						Case "3d"
							Select Case macro_variables_info(i,3)
								Case "1"
									For ai1=LBound(macro_variables_single_array_3d_1) To UBound(macro_variables_single_array_3d_1)
										For ai2=LBound(macro_variables_single_array_3d_1,2) To UBound(macro_variables_single_array_3d_1,2)
											For ai3=LBound(macro_variables_single_array_3d_1,3) To UBound(macro_variables_single_array_3d_1,3)
												macro_variables_single_array_3d_1(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "2"
									For ai1=LBound(macro_variables_single_array_3d_2) To UBound(macro_variables_single_array_3d_2)
										For ai2=LBound(macro_variables_single_array_3d_2,2) To UBound(macro_variables_single_array_3d_2,2)
											For ai3=LBound(macro_variables_single_array_3d_2,3) To UBound(macro_variables_single_array_3d_2,3)
												macro_variables_single_array_3d_2(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "3"
									For ai1=LBound(macro_variables_single_array_3d_3) To UBound(macro_variables_single_array_3d_3)
										For ai2=LBound(macro_variables_single_array_3d_3,2) To UBound(macro_variables_single_array_3d_3,2)
											For ai3=LBound(macro_variables_single_array_3d_3,3) To UBound(macro_variables_single_array_3d_3,3)
												macro_variables_single_array_3d_3(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "4"
									For ai1=LBound(macro_variables_single_array_3d_4) To UBound(macro_variables_single_array_3d_4)
										For ai2=LBound(macro_variables_single_array_3d_4,2) To UBound(macro_variables_single_array_3d_4,2)
											For ai3=LBound(macro_variables_single_array_3d_4,3) To UBound(macro_variables_single_array_3d_4,3)
												macro_variables_single_array_3d_4(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "5"
									For ai1=LBound(macro_variables_single_array_3d_5) To UBound(macro_variables_single_array_3d_5)
										For ai2=LBound(macro_variables_single_array_3d_5,2) To UBound(macro_variables_single_array_3d_5,2)
											For ai3=LBound(macro_variables_single_array_3d_5,3) To UBound(macro_variables_single_array_3d_5,3)
												macro_variables_single_array_3d_5(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "6"
									For ai1=LBound(macro_variables_single_array_3d_6) To UBound(macro_variables_single_array_3d_6)
										For ai2=LBound(macro_variables_single_array_3d_6,2) To UBound(macro_variables_single_array_3d_6,2)
											For ai3=LBound(macro_variables_single_array_3d_6,3) To UBound(macro_variables_single_array_3d_6,3)
												macro_variables_single_array_3d_6(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "7"
									For ai1=LBound(macro_variables_single_array_3d_7) To UBound(macro_variables_single_array_3d_7)
										For ai2=LBound(macro_variables_single_array_3d_7,2) To UBound(macro_variables_single_array_3d_7,2)
											For ai3=LBound(macro_variables_single_array_3d_7,3) To UBound(macro_variables_single_array_3d_7,3)
												macro_variables_single_array_3d_7(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "8"
									For ai1=LBound(macro_variables_single_array_3d_8) To UBound(macro_variables_single_array_3d_8)
										For ai2=LBound(macro_variables_single_array_3d_8,2) To UBound(macro_variables_single_array_3d_8,2)
											For ai3=LBound(macro_variables_single_array_3d_8,3) To UBound(macro_variables_single_array_3d_8,3)
												macro_variables_single_array_3d_8(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "9"
									For ai1=LBound(macro_variables_single_array_3d_9) To UBound(macro_variables_single_array_3d_9)
										For ai2=LBound(macro_variables_single_array_3d_9,2) To UBound(macro_variables_single_array_3d_9,2)
											For ai3=LBound(macro_variables_single_array_3d_9,3) To UBound(macro_variables_single_array_3d_9,3)
												macro_variables_single_array_3d_9(ai1,ai2,ai3)=0
											Next
										Next
									Next
							End Select
					End Select
				Case "DOUBLE_ARRAY"
					Select Case macro_variables_info(i,5)
						Case "1d"
							Select Case macro_variables_info(i,3)
								Case "1"
									For ai1=LBound(macro_variables_double_array_1d_1) To UBound(macro_variables_double_array_1d_1)
										macro_variables_double_array_1d_1(ai1)=0
									Next
								Case "2"
									For ai1=LBound(macro_variables_double_array_1d_2) To UBound(macro_variables_double_array_1d_2)
										macro_variables_double_array_1d_2(ai1)=0
									Next
								Case "3"
									For ai1=LBound(macro_variables_double_array_1d_3) To UBound(macro_variables_double_array_1d_3)
										macro_variables_double_array_1d_3(ai1)=0
									Next
								Case "4"
									For ai1=LBound(macro_variables_double_array_1d_4) To UBound(macro_variables_double_array_1d_4)
										macro_variables_double_array_1d_4(ai1)=0
									Next
								Case "5"
									For ai1=LBound(macro_variables_double_array_1d_5) To UBound(macro_variables_double_array_1d_5)
										macro_variables_double_array_1d_5(ai1)=0
									Next
								Case "6"
									For ai1=LBound(macro_variables_double_array_1d_6) To UBound(macro_variables_double_array_1d_6)
										macro_variables_double_array_1d_6(ai1)=0
									Next
								Case "7"
									For ai1=LBound(macro_variables_double_array_1d_7) To UBound(macro_variables_double_array_1d_7)
										macro_variables_double_array_1d_7(ai1)=0
									Next
								Case "8"
									For ai1=LBound(macro_variables_double_array_1d_8) To UBound(macro_variables_double_array_1d_8)
										macro_variables_double_array_1d_8(ai1)=0
									Next
								Case "9"
									For ai1=LBound(macro_variables_double_array_1d_9) To UBound(macro_variables_double_array_1d_9)
										macro_variables_double_array_1d_9(ai1)=0
									Next
							End Select
						Case "2d"
							Select Case macro_variables_info(i,3)
								Case "1"
									For ai1=LBound(macro_variables_double_array_2d_1) To UBound(macro_variables_double_array_2d_1)
										For ai2=LBound(macro_variables_double_array_2d_1,2) To UBound(macro_variables_double_array_2d_1,2)
											macro_variables_double_array_2d_1(ai1,ai2)=0
										Next
									Next
								Case "2"
									For ai1=LBound(macro_variables_double_array_2d_2) To UBound(macro_variables_double_array_2d_2)
										For ai2=LBound(macro_variables_double_array_2d_2,2) To UBound(macro_variables_double_array_2d_2,2)
											macro_variables_double_array_2d_2(ai1,ai2)=0
										Next
									Next
								Case "3"
									For ai1=LBound(macro_variables_double_array_2d_3) To UBound(macro_variables_double_array_2d_3)
										For ai2=LBound(macro_variables_double_array_2d_3,2) To UBound(macro_variables_double_array_2d_3,2)
											macro_variables_double_array_2d_3(ai1,ai2)=0
										Next
									Next
								Case "4"
									For ai1=LBound(macro_variables_double_array_2d_4) To UBound(macro_variables_double_array_2d_4)
										For ai2=LBound(macro_variables_double_array_2d_4,2) To UBound(macro_variables_double_array_2d_4,2)
											macro_variables_double_array_2d_4(ai1,ai2)=0
										Next
									Next
								Case "5"
									For ai1=LBound(macro_variables_double_array_2d_5) To UBound(macro_variables_double_array_2d_5)
										For ai2=LBound(macro_variables_double_array_2d_5,2) To UBound(macro_variables_double_array_2d_5,2)
											macro_variables_double_array_2d_5(ai1,ai2)=0
										Next
									Next
								Case "6"
									For ai1=LBound(macro_variables_double_array_2d_6) To UBound(macro_variables_double_array_2d_6)
										For ai2=LBound(macro_variables_double_array_2d_6,2) To UBound(macro_variables_double_array_2d_6,2)
											macro_variables_double_array_2d_6(ai1,ai2)=0
										Next
									Next
								Case "7"
									For ai1=LBound(macro_variables_double_array_2d_7) To UBound(macro_variables_double_array_2d_7)
										For ai2=LBound(macro_variables_double_array_2d_7,2) To UBound(macro_variables_double_array_2d_7,2)
											macro_variables_double_array_2d_7(ai1,ai2)=0
										Next
									Next
								Case "8"
									For ai1=LBound(macro_variables_double_array_2d_8) To UBound(macro_variables_double_array_2d_8)
										For ai2=LBound(macro_variables_double_array_2d_8,2) To UBound(macro_variables_double_array_2d_8,2)
											macro_variables_double_array_2d_8(ai1,ai2)=0
										Next
									Next
								Case "9"
									For ai1=LBound(macro_variables_double_array_2d_9) To UBound(macro_variables_double_array_2d_9)
										For ai2=LBound(macro_variables_double_array_2d_9,2) To UBound(macro_variables_double_array_2d_9,2)
											macro_variables_double_array_2d_9(ai1,ai2)=0
										Next
									Next
							End Select
						Case "3d"
							Select Case macro_variables_info(i,3)
								Case "1"
									For ai1=LBound(macro_variables_double_array_3d_1) To UBound(macro_variables_double_array_3d_1)
										For ai2=LBound(macro_variables_double_array_3d_1,2) To UBound(macro_variables_double_array_3d_1,2)
											For ai3=LBound(macro_variables_double_array_3d_1,3) To UBound(macro_variables_double_array_3d_1,3)
												macro_variables_double_array_3d_1(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "2"
									For ai1=LBound(macro_variables_double_array_3d_2) To UBound(macro_variables_double_array_3d_2)
										For ai2=LBound(macro_variables_double_array_3d_2,2) To UBound(macro_variables_double_array_3d_2,2)
											For ai3=LBound(macro_variables_double_array_3d_2,3) To UBound(macro_variables_double_array_3d_2,3)
												macro_variables_double_array_3d_2(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "3"
									For ai1=LBound(macro_variables_double_array_3d_3) To UBound(macro_variables_double_array_3d_3)
										For ai2=LBound(macro_variables_double_array_3d_3,2) To UBound(macro_variables_double_array_3d_3,2)
											For ai3=LBound(macro_variables_double_array_3d_3,3) To UBound(macro_variables_double_array_3d_3,3)
												macro_variables_double_array_3d_3(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "4"
									For ai1=LBound(macro_variables_double_array_3d_4) To UBound(macro_variables_double_array_3d_4)
										For ai2=LBound(macro_variables_double_array_3d_4,2) To UBound(macro_variables_double_array_3d_4,2)
											For ai3=LBound(macro_variables_double_array_3d_4,3) To UBound(macro_variables_double_array_3d_4,3)
												macro_variables_double_array_3d_4(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "5"
									For ai1=LBound(macro_variables_double_array_3d_5) To UBound(macro_variables_double_array_3d_5)
										For ai2=LBound(macro_variables_double_array_3d_5,2) To UBound(macro_variables_double_array_3d_5,2)
											For ai3=LBound(macro_variables_double_array_3d_5,3) To UBound(macro_variables_double_array_3d_5,3)
												macro_variables_double_array_3d_5(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "6"
									For ai1=LBound(macro_variables_double_array_3d_6) To UBound(macro_variables_double_array_3d_6)
										For ai2=LBound(macro_variables_double_array_3d_6,2) To UBound(macro_variables_double_array_3d_6,2)
											For ai3=LBound(macro_variables_double_array_3d_6,3) To UBound(macro_variables_double_array_3d_6,3)
												macro_variables_double_array_3d_6(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "7"
									For ai1=LBound(macro_variables_double_array_3d_7) To UBound(macro_variables_double_array_3d_7)
										For ai2=LBound(macro_variables_double_array_3d_7,2) To UBound(macro_variables_double_array_3d_7,2)
											For ai3=LBound(macro_variables_double_array_3d_7,3) To UBound(macro_variables_double_array_3d_7,3)
												macro_variables_double_array_3d_7(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "8"
									For ai1=LBound(macro_variables_double_array_3d_8) To UBound(macro_variables_double_array_3d_8)
										For ai2=LBound(macro_variables_double_array_3d_8,2) To UBound(macro_variables_double_array_3d_8,2)
											For ai3=LBound(macro_variables_double_array_3d_8,3) To UBound(macro_variables_double_array_3d_8,3)
												macro_variables_double_array_3d_8(ai1,ai2,ai3)=0
											Next
										Next
									Next
								Case "9"
									For ai1=LBound(macro_variables_double_array_3d_9) To UBound(macro_variables_double_array_3d_9)
										For ai2=LBound(macro_variables_double_array_3d_9,2) To UBound(macro_variables_double_array_3d_9,2)
											For ai3=LBound(macro_variables_double_array_3d_9,3) To UBound(macro_variables_double_array_3d_9,3)
												macro_variables_double_array_3d_9(ai1,ai2,ai3)=0
											Next
										Next
									Next
							End Select
					End Select
				Case "STRING_ARRAY"
					Select Case macro_variables_info(i,5)
						Case "1d"
							Select Case macro_variables_info(i,3)
								Case "1"
									For ai1=LBound(macro_variables_string_array_1d_1) To UBound(macro_variables_string_array_1d_1)
										macro_variables_string_array_1d_1(ai1)=""
									Next
								Case "2"
									For ai1=LBound(macro_variables_string_array_1d_2) To UBound(macro_variables_string_array_1d_2)
										macro_variables_string_array_1d_2(ai1)=""
									Next
								Case "3"
									For ai1=LBound(macro_variables_string_array_1d_3) To UBound(macro_variables_string_array_1d_3)
										macro_variables_string_array_1d_3(ai1)=""
									Next
								Case "4"
									For ai1=LBound(macro_variables_string_array_1d_4) To UBound(macro_variables_string_array_1d_4)
										macro_variables_string_array_1d_4(ai1)=""
									Next
								Case "5"
									For ai1=LBound(macro_variables_string_array_1d_5) To UBound(macro_variables_string_array_1d_5)
										macro_variables_string_array_1d_5(ai1)=""
									Next
								Case "6"
									For ai1=LBound(macro_variables_string_array_1d_6) To UBound(macro_variables_string_array_1d_6)
										macro_variables_string_array_1d_6(ai1)=""
									Next
								Case "7"
									For ai1=LBound(macro_variables_string_array_1d_7) To UBound(macro_variables_string_array_1d_7)
										macro_variables_string_array_1d_7(ai1)=""
									Next
								Case "8"
									For ai1=LBound(macro_variables_string_array_1d_8) To UBound(macro_variables_string_array_1d_8)
										macro_variables_string_array_1d_8(ai1)=""
									Next
								Case "9"
									For ai1=LBound(macro_variables_string_array_1d_9) To UBound(macro_variables_string_array_1d_9)
										macro_variables_string_array_1d_9(ai1)=""
									Next
							End Select
						Case "2d"
							Select Case macro_variables_info(i,3)
								Case "1"
									For ai1=LBound(macro_variables_string_array_2d_1) To UBound(macro_variables_string_array_2d_1)
										For ai2=LBound(macro_variables_string_array_2d_1,2) To UBound(macro_variables_string_array_2d_1,2)
											macro_variables_string_array_2d_1(ai1,ai2)=""
										Next
									Next
								Case "2"
									For ai1=LBound(macro_variables_string_array_2d_2) To UBound(macro_variables_string_array_2d_2)
										For ai2=LBound(macro_variables_string_array_2d_2,2) To UBound(macro_variables_string_array_2d_2,2)
											macro_variables_string_array_2d_2(ai1,ai2)=""
										Next
									Next
								Case "3"
									For ai1=LBound(macro_variables_string_array_2d_3) To UBound(macro_variables_string_array_2d_3)
										For ai2=LBound(macro_variables_string_array_2d_3,2) To UBound(macro_variables_string_array_2d_3,2)
											macro_variables_string_array_2d_3(ai1,ai2)=""
										Next
									Next
								Case "4"
									For ai1=LBound(macro_variables_string_array_2d_4) To UBound(macro_variables_string_array_2d_4)
										For ai2=LBound(macro_variables_string_array_2d_4,2) To UBound(macro_variables_string_array_2d_4,2)
											macro_variables_string_array_2d_4(ai1,ai2)=""
										Next
									Next
								Case "5"
									For ai1=LBound(macro_variables_string_array_2d_5) To UBound(macro_variables_string_array_2d_5)
										For ai2=LBound(macro_variables_string_array_2d_5,2) To UBound(macro_variables_string_array_2d_5,2)
											macro_variables_string_array_2d_5(ai1,ai2)=""
										Next
									Next
								Case "6"
									For ai1=LBound(macro_variables_string_array_2d_6) To UBound(macro_variables_string_array_2d_6)
										For ai2=LBound(macro_variables_string_array_2d_6,2) To UBound(macro_variables_string_array_2d_6,2)
											macro_variables_string_array_2d_6(ai1,ai2)=""
										Next
									Next
								Case "7"
									For ai1=LBound(macro_variables_string_array_2d_7) To UBound(macro_variables_string_array_2d_7)
										For ai2=LBound(macro_variables_string_array_2d_7,2) To UBound(macro_variables_string_array_2d_7,2)
											macro_variables_string_array_2d_7(ai1,ai2)=""
										Next
									Next
								Case "8"
									For ai1=LBound(macro_variables_string_array_2d_8) To UBound(macro_variables_string_array_2d_8)
										For ai2=LBound(macro_variables_string_array_2d_8,2) To UBound(macro_variables_string_array_2d_8,2)
											macro_variables_string_array_2d_8(ai1,ai2)=""
										Next
									Next
								Case "9"
									For ai1=LBound(macro_variables_string_array_2d_9) To UBound(macro_variables_string_array_2d_9)
										For ai2=LBound(macro_variables_string_array_2d_9,2) To UBound(macro_variables_string_array_2d_9,2)
											macro_variables_string_array_2d_9(ai1,ai2)=""
										Next
									Next
							End Select
						Case "3d"
							Select Case macro_variables_info(i,3)
								Case "1"
									For ai1=LBound(macro_variables_string_array_3d_1) To UBound(macro_variables_string_array_3d_1)
										For ai2=LBound(macro_variables_string_array_3d_1,2) To UBound(macro_variables_string_array_3d_1,2)
											For ai3=LBound(macro_variables_string_array_3d_1,3) To UBound(macro_variables_string_array_3d_1,3)
												macro_variables_string_array_3d_1(ai1,ai2,ai3)=""
											Next
										Next
									Next
								Case "2"
									For ai1=LBound(macro_variables_string_array_3d_2) To UBound(macro_variables_string_array_3d_2)
										For ai2=LBound(macro_variables_string_array_3d_2,2) To UBound(macro_variables_string_array_3d_2,2)
											For ai3=LBound(macro_variables_string_array_3d_2,3) To UBound(macro_variables_string_array_3d_2,3)
												macro_variables_string_array_3d_2(ai1,ai2,ai3)=""
											Next
										Next
									Next
								Case "3"
									For ai1=LBound(macro_variables_string_array_3d_3) To UBound(macro_variables_string_array_3d_3)
										For ai2=LBound(macro_variables_string_array_3d_3,2) To UBound(macro_variables_string_array_3d_3,2)
											For ai3=LBound(macro_variables_string_array_3d_3,3) To UBound(macro_variables_string_array_3d_3,3)
												macro_variables_string_array_3d_3(ai1,ai2,ai3)=""
											Next
										Next
									Next
								Case "4"
									For ai1=LBound(macro_variables_string_array_3d_4) To UBound(macro_variables_string_array_3d_4)
										For ai2=LBound(macro_variables_string_array_3d_4,2) To UBound(macro_variables_string_array_3d_4,2)
											For ai3=LBound(macro_variables_string_array_3d_4,3) To UBound(macro_variables_string_array_3d_4,3)
												macro_variables_string_array_3d_4(ai1,ai2,ai3)=""
											Next
										Next
									Next
								Case "5"
									For ai1=LBound(macro_variables_string_array_3d_5) To UBound(macro_variables_string_array_3d_5)
										For ai2=LBound(macro_variables_string_array_3d_5,2) To UBound(macro_variables_string_array_3d_5,2)
											For ai3=LBound(macro_variables_string_array_3d_5,3) To UBound(macro_variables_string_array_3d_5,3)
												macro_variables_string_array_3d_5(ai1,ai2,ai3)=""
											Next
										Next
									Next
								Case "6"
									For ai1=LBound(macro_variables_string_array_3d_6) To UBound(macro_variables_string_array_3d_6)
										For ai2=LBound(macro_variables_string_array_3d_6,2) To UBound(macro_variables_string_array_3d_6,2)
											For ai3=LBound(macro_variables_string_array_3d_6,3) To UBound(macro_variables_string_array_3d_6,3)
												macro_variables_string_array_3d_6(ai1,ai2,ai3)=""
											Next
										Next
									Next
								Case "7"
									For ai1=LBound(macro_variables_string_array_3d_7) To UBound(macro_variables_string_array_3d_7)
										For ai2=LBound(macro_variables_string_array_3d_7,2) To UBound(macro_variables_string_array_3d_7,2)
											For ai3=LBound(macro_variables_string_array_3d_7,3) To UBound(macro_variables_string_array_3d_7,3)
												macro_variables_string_array_3d_7(ai1,ai2,ai3)=""
											Next
										Next
									Next
								Case "8"
									For ai1=LBound(macro_variables_string_array_3d_8) To UBound(macro_variables_string_array_3d_8)
										For ai2=LBound(macro_variables_string_array_3d_8,2) To UBound(macro_variables_string_array_3d_8,2)
											For ai3=LBound(macro_variables_string_array_3d_8,3) To UBound(macro_variables_string_array_3d_8,3)
												macro_variables_string_array_3d_8(ai1,ai2,ai3)=""
											Next
										Next
									Next
								Case "9"
									For ai1=LBound(macro_variables_string_array_3d_9) To UBound(macro_variables_string_array_3d_9)
										For ai2=LBound(macro_variables_string_array_3d_9,2) To UBound(macro_variables_string_array_3d_9,2)
											For ai3=LBound(macro_variables_string_array_3d_9,3) To UBound(macro_variables_string_array_3d_9,3)
												macro_variables_string_array_3d_9(ai1,ai2,ai3)=""
											Next
										Next
									Next
							End Select
					End Select
			End Select
		EndIf
	Next
End Sub

Sub keyword_commands(temp As String)
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Sub keyword_commands"
		Print #5,"temp:";temp
		'For dbugi=LBound(temp) To UBound(temp)
			'Print #5,"temp("; dbugi; "):"; temp(dbugi)
		'Next
		Print #5,"---------------"
	EndIf
	Dim As Integer i,j,k,x,c,a,b,ai1,ai2,ai3
	Dim As BOOLEAN keyword_command_found
	Dim As String temps(),temp2,array_index,temptemp
	Dim As Integer temps_c
	Dim As Integer stringpartc

	keyword_command_found=FALSE
	For i= 1 To macro_sub_c
		If temp=macro_sub_name(i) Then
			clear_sub_function_variables(macro_sub_name(i))
			'no parameters are passed just calling the sub routine
			For j=1 To macro_sub_data_c
				If macro_sub_data(j)=macro_sub_name(i) Then
					c=1
					'Print "*************** sub data ****** sub var count = ";macro_sub_data(j+c)
					For k=1 To CInt(macro_sub_data(j+c))
						c+=1
						'Print "*************** sub data ****** iterate k=";k;" data=";macro_sub_data(j+c)
					Next
					c+=1
					'Print "*************** sub data ****** one more time=";macro_sub_data(j+c)
					temps_c=0
					ReDim temps(temps_c)
					For k=1 To CInt(macro_sub_data(j+c))
						c+=1
						'Print "*************** sub data ****** 2nd k=";macro_sub_data(j+c)
						temps_c+=1
						ReDim Preserve temps(temps_c)
						temps(temps_c)=macro_sub_data(j+c)
					Next
					For k=1 To temps_c
						temp=temps(k)
						k=keyword_commands_block(k,temps_c,temp,temps())
					Next
					Exit For
				EndIf
			Next
			Exit For
		Else 'sub routine is called and parms are parsed
			If LTrim(RTrim(Mid(temp,1,InStr(temp,"(")-1)))=macro_sub_name(i) Then
				clear_sub_function_variables(macro_sub_name(i))
				keyword_command_found=TRUE
				temp=LTrim(Mid(temp,InStr(temp,"(")+1)) 'test(x(),1) = x(),1)
				temp=RTrim(Left(temp,Len(temp)-1)) 'x(),1) = x(),1
				getparts(temp)
				For j=1 To macro_sub_data_c
					If macro_sub_data(j)=macro_sub_name(i) Then
						stringpartc=0
						c=1
						'Print "*************** sub data ****** var count=";macro_sub_data(j+c)
						For k=1 To CInt(macro_sub_data(j+c))
							c+=1
							'Print "*************** sub data ****** var iterate k=";k;" data=";macro_sub_data(j+c)
							stringpartc+=1
							If InStr(string_parts(stringpartc),"()") Then 'copy array x() to test_n()
								temp=LTrim(RTrim(Mid(string_parts(stringpartc),1,InStr(string_parts(stringpartc),"(")-1)))
								For a=1 To macro_variables_info_c
									If temp=macro_variables_info(a,1) Then
										temp="redim "+macro_sub_data(j+c)+macro_variables_info(a,4)
										keyword_redim(temp)
										For b=1 To macro_variables_info_c
											If macro_sub_data(j+c)=macro_variables_info(b,1) Then
												array_index=macro_variables_info(b,3)
												Exit For
											EndIf
										Next
										copy_array(a,array_index)
										Exit For
									EndIf
								Next
							Else
								temp=macro_sub_data(j+c)+"="+string_parts(stringpartc)
								keyword_let(temp)
							EndIf
						Next
						c+=1
						temps_c=0
						ReDim temps(temps_c)
						For k=1 To CInt(macro_sub_data(j+c))
							c+=1
							temps_c+=1
							ReDim Preserve temps(temps_c)
							temps(temps_c)=macro_sub_data(j+c)
						Next
						For k=1 To temps_c
							temp=temps(k)
							k=keyword_commands_block(k,temps_c,temp,temps())
						Next
						Exit For
					EndIf
				Next
				Exit For
			EndIf
		EndIf
	Next
	
	If keyword_command_found=FALSE Then
		keyword_let(temp)
	EndIf
End Sub

Sub keyword_let(temp As String)
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Sub keyword_let"
		Print #5,"temp:";temp
		'For dbugi=LBound(temp) To UBound(temp)
			'Print #5,"temp("; dbugi; "):"; temp(dbugi)
		'Next
		Print #5,"---------------"
	EndIf
	Dim As Integer i,j,k,x,xa,xaset,c,low,hi,n
	Dim As Double dn
	Dim As String s1,s2,stemp,temp2,temps1,ss
	Dim As Integer stemp_c,stemp_n(),stemp_c_x
	Dim As Integer openprin_c,closeprin_c,openprin_x,closeprin_x,variables_c,variables_x()
	Dim As String temp_alpha,variables()
	Dim As Byte n_boolean
	Dim As Byte n_byte
	Dim As UByte n_ubyte
	Dim As Short n_short
	Dim As UShort n_ushort
	Dim As Long n_long
	Dim As ULong n_ulong
	Dim As UInteger n_uinteger
	Dim As LongInt n_longint
	Dim As ULongInt n_ulongint
	Dim As Single n_single
	Dim As String n_string
	Dim As boolean quote
	
	If InStr(temp,"=") Then
		xaset=0
		x=InStr(temp,"=")
		xa=InStr(temp,"+=")
		If xa<>0 And xa<x Then xaset=xa
		xa=InStr(temp,"-=")
		If xa<>0 And xa<x Then xaset=xa
		xa=InStr(temp,"*=")
		If xa<>0 And xa<x Then xaset=xa
		xa=InStr(temp,"&=")
		If xa<>0 And xa<x Then xaset=xa
		xa=InStr(temp," and=")
		If xa<>0 And xa<x Then xaset=xa
		xa=InStr(temp,"/=")
		If xa<>0 And xa<x Then xaset=xa
		xa=InStr(temp,"\=")
		If xa<>0 And xa<x Then xaset=xa
		xa=InStr(temp," mod=")
		If xa<>0 And xa<x Then xaset=xa
		xa=InStr(temp," shl=")
		If xa<>0 And xa<x Then xaset=xa
		xa=InStr(temp," shr=")
		If xa<>0 And xa<x Then xaset=xa
		xa=InStr(temp," and=")
		If xa<>0 And xa<x Then xaset=xa
		xa=InStr(temp," or=")
		If xa<>0 And xa<x Then xaset=xa
		xa=InStr(temp," xor=")
		If xa<>0 And xa<x Then xaset=xa
		xa=InStr(temp," imp=")
		If xa<>0 And xa<x Then xaset=xa
		xa=InStr(temp," eqv=")
		If xa<>0 And xa<x Then xaset=xa
		xa=InStr(temp,"^=")
		If xa<>0 And xa<x Then xaset=xa
		If xaset<>0 Then
			s1=Mid(temp,1,xaset-1)
			s2=s1+Mid(temp,xaset)
			x=InStr(temp,"=")
			s2=Mid(s2,1,x-1)+" "+Mid(s2,x+1)
		Else
			s1=Mid(temp,1,x-1) 'x=10 s1 holds x
			s2=Mid(temp,x+1) 'x=10 s2 holds 10
		EndIf
	Else
		'not the LET command
		'must be something else
		Exit Sub
	EndIf
	s1=LTrim(RTrim(s1))
	s2=LTrim(RTrim(s2))
	
	temps1=s1
	If InStr(s1,"(") Then 'this variable is an array ie. Let x(1)=a+b OR Let x(i)=i*a OR Let x(a(1)+b(2))=c+i
		x=InStr(s1,"(")
		temps1=Mid(s1,1,x-1) 'temps1 is now just x	
	EndIf
	
	For i = 1 To Len(s2)
		Select Case Mid(s2,i,1)
			Case Chr(34)
				temp_alpha=""
				If quote=FALSE Then quote=TRUE Else quote=FALSE
			Case "a" To "z","0" To "9","_"
				If quote=FALSE Then
					temp_alpha+=Mid(s2,i,1)
					If Len(temp_alpha)=1 Then
						Select Case temp_alpha
							Case "0" To "9"
								temp_alpha=""
						End Select
					EndIf
				EndIf
			Case Else
				If temp_alpha<>"" Then
					variables_c+=1
					ReDim Preserve variables_x(variables_c)
					ReDim Preserve variables(variables_c)
					variables_x(variables_c)=i-Len(temp_alpha)
					variables(variables_c)=temp_alpha
					temp_alpha=""
				EndIf
		End Select
	Next
	If temp_alpha<>"" Then
		variables_c+=1
		ReDim Preserve variables_x(variables_c)
		ReDim Preserve variables(variables_c)
		variables_x(variables_c)=i-Len(temp_alpha)
		variables(variables_c)=temp_alpha
		temp_alpha=""
	EndIf

	For j=variables_c To 1 Step -1
		For i=1 To macro_variables_info_c
			If variables(j)=macro_variables_info(i,1) Then
				Select Case macro_variables_info(i,2)
					Case "BOOLEAN_ARRAY","BYTE_ARRAY","UBYTE_ARRAY","SHORT_ARRAY","USHORT_ARRAY","LONG_ARRAY","ULONG_ARRAY","INTEGER_ARRAY","UINTEGER_ARRAY","LONGINT_ARRAY","ULONGINT_ARRAY","SINGLE_ARRAY","DOUBLE_ARRAY"
						openprin_c=0
						openprin_x=0
						closeprin_c=0
						closeprin_x=0
						For x=variables_x(j)+Len(variables(j)) To Len(s2)
							Select Case Mid(s2,x,1)
								Case "("
									openprin_c+=1
									If openprin_c=1 Then openprin_x=x
								Case ")"
									closeprin_c+=1
									If closeprin_c=openprin_c Then
										closeprin_x=x
										stemp=Mid(s2,openprin_x+1,closeprin_x-openprin_x-1)
										If InStr(stemp,",") Then 'this is for 2d and 3d arrays
											stemp_c=0
											ReDim stemp_n(stemp_c)
											stemp_c_x=1
											For c=1 To Len(stemp)
												If Mid(stemp,c,1)="," Then
													stemp_c+=1
													ReDim Preserve stemp_n(stemp_c)
													stemp_n(stemp_c)=CInt(evaluate_string_numeric_expression(Mid(stemp,stemp_c_x,c-stemp_c_x)))
													stemp_c_x=c+1
												EndIf
											Next
											stemp_c+=1
											ReDim Preserve stemp_n(stemp_c)
											stemp_n(stemp_c)=CInt(evaluate_string_numeric_expression(Mid(stemp,stemp_c_x,c-stemp_c_x)))
											'now get the array value based on the index values of stemp_n()
											s2=get_multi_dim_array_type_s2(s2,i,stemp_n(),j,variables_x(),closeprin_x)
										Else
											s2=get_1d_array_type_s2(s2,i,stemp,j,variables_x(),closeprin_x)
										EndIf
									EndIf
							End Select
						Next
				End Select
				Exit For
			EndIf
		Next
	Next
	ss=full_evaluate_expression(s2)
	dn=CDbl(ss)
	If InStr(s1,"(") Then 'this variable is an array ie. Let x(1)=a+b OR Let x(i)=i*a OR Let x(a(1)+b(2))=c+i
		x=InStr(s1,"(")
		s2=Mid(s1,x+1,Len(s1)-x-1) 'Let x(a(1)+b(2))=c+i ... s2 now holds a(1)+b(2)
		s1=Mid(s1,1,x-1) 's1 is now just x
		For i = 1 To Len(s2)
			Select Case Mid(s2,i,1)
				Case Chr(34)
					temp_alpha=""
					If quote=FALSE Then quote=TRUE Else quote=FALSE
				Case "a" To "z","0" To "9","_"
					If quote=FALSE Then
						temp_alpha+=Mid(s2,i,1)
						If Len(temp_alpha)=1 Then
							Select Case temp_alpha
								Case "0" To "9"
									temp_alpha=""
							End Select
						EndIf
					EndIf
				Case Else
					If temp_alpha<>"" Then
						variables_c+=1
						ReDim Preserve variables_x(variables_c)
						ReDim Preserve variables(variables_c)
						variables_x(variables_c)=i-Len(temp_alpha)
						variables(variables_c)=temp_alpha
						temp_alpha=""
					EndIf
			End Select
		Next
		If temp_alpha<>"" Then
			variables_c+=1
			ReDim Preserve variables_x(variables_c)
			ReDim Preserve variables(variables_c)
			variables_x(variables_c)=i-Len(temp_alpha)
			variables(variables_c)=temp_alpha
			temp_alpha=""
		EndIf

		For j=variables_c To 1 Step -1
			For i=1 To macro_variables_info_c
				If variables(j)=macro_variables_info(i,1) Then
					Select Case macro_variables_info(i,2)
						Case "BOOLEAN_ARRAY","BYTE_ARRAY","UBYTE_ARRAY","SHORT_ARRAY","USHORT_ARRAY","LONG_ARRAY","ULONG_ARRAY","INTEGER_ARRAY","UINTEGER_ARRAY","LONGINT_ARRAY","ULONGINT_ARRAY","SINGLE_ARRAY","DOUBLE_ARRAY"
							openprin_c=0
							openprin_x=0
							closeprin_c=0
							closeprin_x=0
							For x=variables_x(j)+Len(variables(j)) To Len(s2)
								Select Case Mid(s2,x,1)
									Case "("
										openprin_c+=1
										If openprin_c=1 Then openprin_x=x
									Case ")"
										closeprin_c+=1
										If closeprin_c=openprin_c Then
											closeprin_x=x
											stemp=Mid(s2,openprin_x+1,closeprin_x-openprin_x-1)
											If InStr(stemp,",") Then 'this is for 2d and 3d arrays
												stemp_c=0
												ReDim stemp_n(stemp_c)
												stemp_c_x=1
												For c=1 To Len(stemp)
													If Mid(stemp,c,1)="," Then
														stemp_c+=1
														ReDim Preserve stemp_n(stemp_c)
														stemp_n(stemp_c)=CInt(evaluate_string_numeric_expression(Mid(stemp,stemp_c_x,c-stemp_c_x)))
														stemp_c_x=c+1
													EndIf
												Next
												stemp_c+=1
												ReDim Preserve stemp_n(stemp_c)
												stemp_n(stemp_c)=CInt(evaluate_string_numeric_expression(Mid(stemp,stemp_c_x,c-stemp_c_x)))
												s2=get_multi_dim_array_type_s2(s2,i,stemp_n(),j,variables_x(),closeprin_x)
											Else
												s2=get_1d_array_type_s2(s2,i,stemp,j,variables_x(),closeprin_x)
											EndIf
										EndIf
								End Select
							Next
					End Select
					Exit For
				EndIf
			Next
		Next
		If InStr(s2,",") Then
			stemp=s2
			stemp_c=0
			ReDim stemp_n(stemp_c)
			stemp_c_x=1
			For c=1 To Len(stemp)
				If Mid(stemp,c,1)="," Then
					stemp_c+=1
					ReDim Preserve stemp_n(stemp_c)
					stemp_n(stemp_c)=CInt(evaluate_string_numeric_expression(Mid(stemp,stemp_c_x,c-stemp_c_x)))
					stemp_c_x=c+1
				EndIf
			Next
			stemp_c+=1
			ReDim Preserve stemp_n(stemp_c)
			stemp_n(stemp_c)=CInt(evaluate_string_numeric_expression(Mid(stemp,stemp_c_x,c-stemp_c_x)))
		Else
			n=CInt(evaluate_string_numeric_expression(s2))
		EndIf
	EndIf
	For i=1 To macro_variables_info_c
		If s1=macro_variables_info(i,1) Then
			Select Case macro_variables_info(i,2)
				Case "BOOLEAN"
					macro_variables_boolean_value(CInt(macro_variables_info(i,3)))=CByte(dn)
				Case "BOOLEAN_ARRAY"
					Select Case macro_variables_info(i,5)
						Case "1d"
							Select Case macro_variables_info(i,3)
								Case "1"
									macro_variables_boolean_array_1d_1(n)=CByte(dn)
								Case "2"
									macro_variables_boolean_array_1d_2(n)=CByte(dn)
								Case "3"
									macro_variables_boolean_array_1d_3(n)=CByte(dn)
								Case "4"
									macro_variables_boolean_array_1d_4(n)=CByte(dn)
								Case "5"
									macro_variables_boolean_array_1d_5(n)=CByte(dn)
								Case "6"
									macro_variables_boolean_array_1d_6(n)=CByte(dn)
								Case "7"
									macro_variables_boolean_array_1d_7(n)=CByte(dn)
								Case "8"
									macro_variables_boolean_array_1d_8(n)=CByte(dn)
								Case "9"
									macro_variables_boolean_array_1d_9(n)=CByte(dn)
							End Select
						Case "2d"
							Select Case macro_variables_info(i,3)
								Case "1"
									macro_variables_boolean_array_2d_1(stemp_n(1),stemp_n(2))=CByte(dn)
								Case "2"
									macro_variables_boolean_array_2d_2(stemp_n(1),stemp_n(2))=CByte(dn)
								Case "3"
									macro_variables_boolean_array_2d_3(stemp_n(1),stemp_n(2))=CByte(dn)
								Case "4"
									macro_variables_boolean_array_2d_4(stemp_n(1),stemp_n(2))=CByte(dn)
								Case "5"
									macro_variables_boolean_array_2d_5(stemp_n(1),stemp_n(2))=CByte(dn)
								Case "6"
									macro_variables_boolean_array_2d_6(stemp_n(1),stemp_n(2))=CByte(dn)
								Case "7"
									macro_variables_boolean_array_2d_7(stemp_n(1),stemp_n(2))=CByte(dn)
								Case "8"
									macro_variables_boolean_array_2d_8(stemp_n(1),stemp_n(2))=CByte(dn)
								Case "9"
									macro_variables_boolean_array_2d_9(stemp_n(1),stemp_n(2))=CByte(dn)
							End Select
						Case "3d"
							Select Case macro_variables_info(i,3)
								Case "1"
									macro_variables_boolean_array_3d_1(stemp_n(1),stemp_n(2),stemp_n(3))=CByte(dn)
								Case "2"
									macro_variables_boolean_array_3d_2(stemp_n(1),stemp_n(2),stemp_n(3))=CByte(dn)
								Case "3"
									macro_variables_boolean_array_3d_3(stemp_n(1),stemp_n(2),stemp_n(3))=CByte(dn)
								Case "4"
									macro_variables_boolean_array_3d_4(stemp_n(1),stemp_n(2),stemp_n(3))=CByte(dn)
								Case "5"
									macro_variables_boolean_array_3d_5(stemp_n(1),stemp_n(2),stemp_n(3))=CByte(dn)
								Case "6"
									macro_variables_boolean_array_3d_6(stemp_n(1),stemp_n(2),stemp_n(3))=CByte(dn)
								Case "7"
									macro_variables_boolean_array_3d_7(stemp_n(1),stemp_n(2),stemp_n(3))=CByte(dn)
								Case "8"
									macro_variables_boolean_array_3d_8(stemp_n(1),stemp_n(2),stemp_n(3))=CByte(dn)
								Case "9"
									macro_variables_boolean_array_3d_9(stemp_n(1),stemp_n(2),stemp_n(3))=CByte(dn)
							End Select
					End Select
				Case "BYTE"
					macro_variables_byte_value(CInt(macro_variables_info(i,3)))=CByte(dn)
				Case "BYTE_ARRAY"
					Select Case macro_variables_info(i,5)
						Case "1d"
							Select Case macro_variables_info(i,3)
								Case "1"
									macro_variables_byte_array_1d_1(n)=CByte(dn)
								Case "2"
									macro_variables_byte_array_1d_2(n)=CByte(dn)
								Case "3"
									macro_variables_byte_array_1d_3(n)=CByte(dn)
								Case "4"
									macro_variables_byte_array_1d_4(n)=CByte(dn)
								Case "5"
									macro_variables_byte_array_1d_5(n)=CByte(dn)
								Case "6"
									macro_variables_byte_array_1d_6(n)=CByte(dn)
								Case "7"
									macro_variables_byte_array_1d_7(n)=CByte(dn)
								Case "8"
									macro_variables_byte_array_1d_8(n)=CByte(dn)
								Case "9"
									macro_variables_byte_array_1d_9(n)=CByte(dn)
							End Select
						Case "2d"
							Select Case macro_variables_info(i,3)
								Case "1"
									macro_variables_byte_array_2d_1(stemp_n(1),stemp_n(2))=CByte(dn)
								Case "2"
									macro_variables_byte_array_2d_2(stemp_n(1),stemp_n(2))=CByte(dn)
								Case "3"
									macro_variables_byte_array_2d_3(stemp_n(1),stemp_n(2))=CByte(dn)
								Case "4"
									macro_variables_byte_array_2d_4(stemp_n(1),stemp_n(2))=CByte(dn)
								Case "5"
									macro_variables_byte_array_2d_5(stemp_n(1),stemp_n(2))=CByte(dn)
								Case "6"
									macro_variables_byte_array_2d_6(stemp_n(1),stemp_n(2))=CByte(dn)
								Case "7"
									macro_variables_byte_array_2d_7(stemp_n(1),stemp_n(2))=CByte(dn)
								Case "8"
									macro_variables_byte_array_2d_8(stemp_n(1),stemp_n(2))=CByte(dn)
								Case "9"
									macro_variables_byte_array_2d_9(stemp_n(1),stemp_n(2))=CByte(dn)
							End Select
						Case "3d"
							Select Case macro_variables_info(i,3)
								Case "1"
									macro_variables_byte_array_3d_1(stemp_n(1),stemp_n(2),stemp_n(3))=CByte(dn)
								Case "2"
									macro_variables_byte_array_3d_2(stemp_n(1),stemp_n(2),stemp_n(3))=CByte(dn)
								Case "3"
									macro_variables_byte_array_3d_3(stemp_n(1),stemp_n(2),stemp_n(3))=CByte(dn)
								Case "4"
									macro_variables_byte_array_3d_4(stemp_n(1),stemp_n(2),stemp_n(3))=CByte(dn)
								Case "5"
									macro_variables_byte_array_3d_5(stemp_n(1),stemp_n(2),stemp_n(3))=CByte(dn)
								Case "6"
									macro_variables_byte_array_3d_6(stemp_n(1),stemp_n(2),stemp_n(3))=CByte(dn)
								Case "7"
									macro_variables_byte_array_3d_7(stemp_n(1),stemp_n(2),stemp_n(3))=CByte(dn)
								Case "8"
									macro_variables_byte_array_3d_8(stemp_n(1),stemp_n(2),stemp_n(3))=CByte(dn)
								Case "9"
									macro_variables_byte_array_3d_9(stemp_n(1),stemp_n(2),stemp_n(3))=CByte(dn)
							End Select
					End Select
				Case "UBYTE"
					macro_variables_ubyte_value(CInt(macro_variables_info(i,3)))=CUByte(dn)
				Case "UBYTE_ARRAY"
					Select Case macro_variables_info(i,5)
						Case "1d"
							Select Case macro_variables_info(i,3)
								Case "1"
									macro_variables_ubyte_array_1d_1(n)=CUByte(dn)
								Case "2"
									macro_variables_ubyte_array_1d_2(n)=CUByte(dn)
								Case "3"
									macro_variables_ubyte_array_1d_3(n)=CUByte(dn)
								Case "4"
									macro_variables_ubyte_array_1d_4(n)=CUByte(dn)
								Case "5"
									macro_variables_ubyte_array_1d_5(n)=CUByte(dn)
								Case "6"
									macro_variables_ubyte_array_1d_6(n)=CUByte(dn)
								Case "7"
									macro_variables_ubyte_array_1d_7(n)=CUByte(dn)
								Case "8"
									macro_variables_ubyte_array_1d_8(n)=CUByte(dn)
								Case "9"
									macro_variables_ubyte_array_1d_9(n)=CUByte(dn)
							End Select
						Case "2d"
							Select Case macro_variables_info(i,3)
								Case "1"
									macro_variables_ubyte_array_2d_1(stemp_n(1),stemp_n(2))=CUByte(dn)
								Case "2"
									macro_variables_ubyte_array_2d_2(stemp_n(1),stemp_n(2))=CUByte(dn)
								Case "3"
									macro_variables_ubyte_array_2d_3(stemp_n(1),stemp_n(2))=CUByte(dn)
								Case "4"
									macro_variables_ubyte_array_2d_4(stemp_n(1),stemp_n(2))=CUByte(dn)
								Case "5"
									macro_variables_ubyte_array_2d_5(stemp_n(1),stemp_n(2))=CUByte(dn)
								Case "6"
									macro_variables_ubyte_array_2d_6(stemp_n(1),stemp_n(2))=CUByte(dn)
								Case "7"
									macro_variables_ubyte_array_2d_7(stemp_n(1),stemp_n(2))=CUByte(dn)
								Case "8"
									macro_variables_ubyte_array_2d_8(stemp_n(1),stemp_n(2))=CUByte(dn)
								Case "9"
									macro_variables_ubyte_array_2d_9(stemp_n(1),stemp_n(2))=CUByte(dn)
							End Select
						Case "3d"
							Select Case macro_variables_info(i,3)
								Case "1"
									macro_variables_ubyte_array_3d_1(stemp_n(1),stemp_n(2),stemp_n(3))=CUByte(dn)
								Case "2"
									macro_variables_ubyte_array_3d_2(stemp_n(1),stemp_n(2),stemp_n(3))=CUByte(dn)
								Case "3"
									macro_variables_ubyte_array_3d_3(stemp_n(1),stemp_n(2),stemp_n(3))=CUByte(dn)
								Case "4"
									macro_variables_ubyte_array_3d_4(stemp_n(1),stemp_n(2),stemp_n(3))=CUByte(dn)
								Case "5"
									macro_variables_ubyte_array_3d_5(stemp_n(1),stemp_n(2),stemp_n(3))=CUByte(dn)
								Case "6"
									macro_variables_ubyte_array_3d_6(stemp_n(1),stemp_n(2),stemp_n(3))=CUByte(dn)
								Case "7"
									macro_variables_ubyte_array_3d_7(stemp_n(1),stemp_n(2),stemp_n(3))=CUByte(dn)
								Case "8"
									macro_variables_ubyte_array_3d_8(stemp_n(1),stemp_n(2),stemp_n(3))=CUByte(dn)
								Case "9"
									macro_variables_ubyte_array_3d_9(stemp_n(1),stemp_n(2),stemp_n(3))=CUByte(dn)
							End Select
					End Select
				Case "SHORT"
					macro_variables_short_value(CInt(macro_variables_info(i,3)))=CShort(dn)
				Case "SHORT_ARRAY"
					Select Case macro_variables_info(i,5)
						Case "1d"
							Select Case macro_variables_info(i,3)
								Case "1"
									macro_variables_short_array_1d_1(n)=CShort(dn)
								Case "2"
									macro_variables_short_array_1d_2(n)=CShort(dn)
								Case "3"
									macro_variables_short_array_1d_3(n)=CShort(dn)
								Case "4"
									macro_variables_short_array_1d_4(n)=CShort(dn)
								Case "5"
									macro_variables_short_array_1d_5(n)=CShort(dn)
								Case "6"
									macro_variables_short_array_1d_6(n)=CShort(dn)
								Case "7"
									macro_variables_short_array_1d_7(n)=CShort(dn)
								Case "8"
									macro_variables_short_array_1d_8(n)=CShort(dn)
								Case "9"
									macro_variables_short_array_1d_9(n)=CShort(dn)
							End Select
						Case "2d"
							Select Case macro_variables_info(i,3)
								Case "1"
									macro_variables_short_array_2d_1(stemp_n(1),stemp_n(2))=CShort(dn)
								Case "2"
									macro_variables_short_array_2d_2(stemp_n(1),stemp_n(2))=CShort(dn)
								Case "3"
									macro_variables_short_array_2d_3(stemp_n(1),stemp_n(2))=CShort(dn)
								Case "4"
									macro_variables_short_array_2d_4(stemp_n(1),stemp_n(2))=CShort(dn)
								Case "5"
									macro_variables_short_array_2d_5(stemp_n(1),stemp_n(2))=CShort(dn)
								Case "6"
									macro_variables_short_array_2d_6(stemp_n(1),stemp_n(2))=CShort(dn)
								Case "7"
									macro_variables_short_array_2d_7(stemp_n(1),stemp_n(2))=CShort(dn)
								Case "8"
									macro_variables_short_array_2d_8(stemp_n(1),stemp_n(2))=CShort(dn)
								Case "9"
									macro_variables_short_array_2d_9(stemp_n(1),stemp_n(2))=CShort(dn)
							End Select
						Case "3d"
							Select Case macro_variables_info(i,3)
								Case "1"
									macro_variables_short_array_3d_1(stemp_n(1),stemp_n(2),stemp_n(3))=CShort(dn)
								Case "2"
									macro_variables_short_array_3d_2(stemp_n(1),stemp_n(2),stemp_n(3))=CShort(dn)
								Case "3"
									macro_variables_short_array_3d_3(stemp_n(1),stemp_n(2),stemp_n(3))=CShort(dn)
								Case "4"
									macro_variables_short_array_3d_4(stemp_n(1),stemp_n(2),stemp_n(3))=CShort(dn)
								Case "5"
									macro_variables_short_array_3d_5(stemp_n(1),stemp_n(2),stemp_n(3))=CShort(dn)
								Case "6"
									macro_variables_short_array_3d_6(stemp_n(1),stemp_n(2),stemp_n(3))=CShort(dn)
								Case "7"
									macro_variables_short_array_3d_7(stemp_n(1),stemp_n(2),stemp_n(3))=CShort(dn)
								Case "8"
									macro_variables_short_array_3d_8(stemp_n(1),stemp_n(2),stemp_n(3))=CShort(dn)
								Case "9"
									macro_variables_short_array_3d_9(stemp_n(1),stemp_n(2),stemp_n(3))=CShort(dn)
							End Select
					End Select
				Case "USHORT"
					macro_variables_ushort_value(CInt(macro_variables_info(i,3)))=CUShort(dn)
				Case "USHORT_ARRAY"
					Select Case macro_variables_info(i,5)
						Case "1d"
							Select Case macro_variables_info(i,3)
								Case "1"
									macro_variables_ushort_array_1d_1(n)=CUShort(dn)
								Case "2"
									macro_variables_ushort_array_1d_2(n)=CUShort(dn)
								Case "3"
									macro_variables_ushort_array_1d_3(n)=CUShort(dn)
								Case "4"
									macro_variables_ushort_array_1d_4(n)=CUShort(dn)
								Case "5"
									macro_variables_ushort_array_1d_5(n)=CUShort(dn)
								Case "6"
									macro_variables_ushort_array_1d_6(n)=CUShort(dn)
								Case "7"
									macro_variables_ushort_array_1d_7(n)=CUShort(dn)
								Case "8"
									macro_variables_ushort_array_1d_8(n)=CUShort(dn)
								Case "9"
									macro_variables_ushort_array_1d_9(n)=CUShort(dn)
							End Select
						Case "2d"
							Select Case macro_variables_info(i,3)
								Case "1"
									macro_variables_ushort_array_2d_1(stemp_n(1),stemp_n(2))=CUShort(dn)
								Case "2"
									macro_variables_ushort_array_2d_2(stemp_n(1),stemp_n(2))=CUShort(dn)
								Case "3"
									macro_variables_ushort_array_2d_3(stemp_n(1),stemp_n(2))=CUShort(dn)
								Case "4"
									macro_variables_ushort_array_2d_4(stemp_n(1),stemp_n(2))=CUShort(dn)
								Case "5"
									macro_variables_ushort_array_2d_5(stemp_n(1),stemp_n(2))=CUShort(dn)
								Case "6"
									macro_variables_ushort_array_2d_6(stemp_n(1),stemp_n(2))=CUShort(dn)
								Case "7"
									macro_variables_ushort_array_2d_7(stemp_n(1),stemp_n(2))=CUShort(dn)
								Case "8"
									macro_variables_ushort_array_2d_8(stemp_n(1),stemp_n(2))=CUShort(dn)
								Case "9"
									macro_variables_ushort_array_2d_9(stemp_n(1),stemp_n(2))=CUShort(dn)
							End Select
						Case "3d"
							Select Case macro_variables_info(i,3)
								Case "1"
									macro_variables_ushort_array_3d_1(stemp_n(1),stemp_n(2),stemp_n(3))=CUShort(dn)
								Case "2"
									macro_variables_ushort_array_3d_2(stemp_n(1),stemp_n(2),stemp_n(3))=CUShort(dn)
								Case "3"
									macro_variables_ushort_array_3d_3(stemp_n(1),stemp_n(2),stemp_n(3))=CUShort(dn)
								Case "4"
									macro_variables_ushort_array_3d_4(stemp_n(1),stemp_n(2),stemp_n(3))=CUShort(dn)
								Case "5"
									macro_variables_ushort_array_3d_5(stemp_n(1),stemp_n(2),stemp_n(3))=CUShort(dn)
								Case "6"
									macro_variables_ushort_array_3d_6(stemp_n(1),stemp_n(2),stemp_n(3))=CUShort(dn)
								Case "7"
									macro_variables_ushort_array_3d_7(stemp_n(1),stemp_n(2),stemp_n(3))=CUShort(dn)
								Case "8"
									macro_variables_ushort_array_3d_8(stemp_n(1),stemp_n(2),stemp_n(3))=CUShort(dn)
								Case "9"
									macro_variables_ushort_array_3d_9(stemp_n(1),stemp_n(2),stemp_n(3))=CUShort(dn)
							End Select
					End Select
				Case "LONG"
					macro_variables_long_value(CInt(macro_variables_info(i,3)))=CLng(dn)
				Case "LONG_ARRAY"
					Select Case macro_variables_info(i,5)
						Case "1d"
							Select Case macro_variables_info(i,3)
								Case "1"
									macro_variables_long_array_1d_1(n)=CLng(dn)
								Case "2"
									macro_variables_long_array_1d_2(n)=CLng(dn)
								Case "3"
									macro_variables_long_array_1d_3(n)=CLng(dn)
								Case "4"
									macro_variables_long_array_1d_4(n)=CLng(dn)
								Case "5"
									macro_variables_long_array_1d_5(n)=CLng(dn)
								Case "6"
									macro_variables_long_array_1d_6(n)=CLng(dn)
								Case "7"
									macro_variables_long_array_1d_7(n)=CLng(dn)
								Case "8"
									macro_variables_long_array_1d_8(n)=CLng(dn)
								Case "9"
									macro_variables_long_array_1d_9(n)=CLng(dn)
							End Select
						Case "2d"
							Select Case macro_variables_info(i,3)
								Case "1"
									macro_variables_long_array_2d_1(stemp_n(1),stemp_n(2))=CLng(dn)
								Case "2"
									macro_variables_long_array_2d_2(stemp_n(1),stemp_n(2))=CLng(dn)
								Case "3"
									macro_variables_long_array_2d_3(stemp_n(1),stemp_n(2))=CLng(dn)
								Case "4"
									macro_variables_long_array_2d_4(stemp_n(1),stemp_n(2))=CLng(dn)
								Case "5"
									macro_variables_long_array_2d_5(stemp_n(1),stemp_n(2))=CLng(dn)
								Case "6"
									macro_variables_long_array_2d_6(stemp_n(1),stemp_n(2))=CLng(dn)
								Case "7"
									macro_variables_long_array_2d_7(stemp_n(1),stemp_n(2))=CLng(dn)
								Case "8"
									macro_variables_long_array_2d_8(stemp_n(1),stemp_n(2))=CLng(dn)
								Case "9"
									macro_variables_long_array_2d_9(stemp_n(1),stemp_n(2))=CLng(dn)
							End Select
						Case "3d"
							Select Case macro_variables_info(i,3)
								Case "1"
									macro_variables_long_array_3d_1(stemp_n(1),stemp_n(2),stemp_n(3))=CLng(dn)
								Case "2"
									macro_variables_long_array_3d_2(stemp_n(1),stemp_n(2),stemp_n(3))=CLng(dn)
								Case "3"
									macro_variables_long_array_3d_3(stemp_n(1),stemp_n(2),stemp_n(3))=CLng(dn)
								Case "4"
									macro_variables_long_array_3d_4(stemp_n(1),stemp_n(2),stemp_n(3))=CLng(dn)
								Case "5"
									macro_variables_long_array_3d_5(stemp_n(1),stemp_n(2),stemp_n(3))=CLng(dn)
								Case "6"
									macro_variables_long_array_3d_6(stemp_n(1),stemp_n(2),stemp_n(3))=CLng(dn)
								Case "7"
									macro_variables_long_array_3d_7(stemp_n(1),stemp_n(2),stemp_n(3))=CLng(dn)
								Case "8"
									macro_variables_long_array_3d_8(stemp_n(1),stemp_n(2),stemp_n(3))=CLng(dn)
								Case "9"
									macro_variables_long_array_3d_9(stemp_n(1),stemp_n(2),stemp_n(3))=CLng(dn)
							End Select
					End Select
				Case "ULONG"
					macro_variables_ulong_value(CInt(macro_variables_info(i,3)))=CULng(dn)
				Case "ULONG_ARRAY"
					Select Case macro_variables_info(i,5)
						Case "1d"
							Select Case macro_variables_info(i,3)
								Case "1"
									macro_variables_ulong_array_1d_1(n)=CULng(dn)
								Case "2"
									macro_variables_ulong_array_1d_2(n)=CULng(dn)
								Case "3"
									macro_variables_ulong_array_1d_3(n)=CULng(dn)
								Case "4"
									macro_variables_ulong_array_1d_4(n)=CULng(dn)
								Case "5"
									macro_variables_ulong_array_1d_5(n)=CULng(dn)
								Case "6"
									macro_variables_ulong_array_1d_6(n)=CULng(dn)
								Case "7"
									macro_variables_ulong_array_1d_7(n)=CULng(dn)
								Case "8"
									macro_variables_ulong_array_1d_8(n)=CULng(dn)
								Case "9"
									macro_variables_ulong_array_1d_9(n)=CULng(dn)
							End Select
						Case "2d"
							Select Case macro_variables_info(i,3)
								Case "1"
									macro_variables_ulong_array_2d_1(stemp_n(1),stemp_n(2))=CULng(dn)
								Case "2"
									macro_variables_ulong_array_2d_2(stemp_n(1),stemp_n(2))=CULng(dn)
								Case "3"
									macro_variables_ulong_array_2d_3(stemp_n(1),stemp_n(2))=CULng(dn)
								Case "4"
									macro_variables_ulong_array_2d_4(stemp_n(1),stemp_n(2))=CULng(dn)
								Case "5"
									macro_variables_ulong_array_2d_5(stemp_n(1),stemp_n(2))=CULng(dn)
								Case "6"
									macro_variables_ulong_array_2d_6(stemp_n(1),stemp_n(2))=CULng(dn)
								Case "7"
									macro_variables_ulong_array_2d_7(stemp_n(1),stemp_n(2))=CULng(dn)
								Case "8"
									macro_variables_ulong_array_2d_8(stemp_n(1),stemp_n(2))=CULng(dn)
								Case "9"
									macro_variables_ulong_array_2d_9(stemp_n(1),stemp_n(2))=CULng(dn)
							End Select
						Case "3d"
							Select Case macro_variables_info(i,3)
								Case "1"
									macro_variables_ulong_array_3d_1(stemp_n(1),stemp_n(2),stemp_n(3))=CULng(dn)
								Case "2"
									macro_variables_ulong_array_3d_2(stemp_n(1),stemp_n(2),stemp_n(3))=CULng(dn)
								Case "3"
									macro_variables_ulong_array_3d_3(stemp_n(1),stemp_n(2),stemp_n(3))=CULng(dn)
								Case "4"
									macro_variables_ulong_array_3d_4(stemp_n(1),stemp_n(2),stemp_n(3))=CULng(dn)
								Case "5"
									macro_variables_ulong_array_3d_5(stemp_n(1),stemp_n(2),stemp_n(3))=CULng(dn)
								Case "6"
									macro_variables_ulong_array_3d_6(stemp_n(1),stemp_n(2),stemp_n(3))=CULng(dn)
								Case "7"
									macro_variables_ulong_array_3d_7(stemp_n(1),stemp_n(2),stemp_n(3))=CULng(dn)
								Case "8"
									macro_variables_ulong_array_3d_8(stemp_n(1),stemp_n(2),stemp_n(3))=CULng(dn)
								Case "9"
									macro_variables_ulong_array_3d_9(stemp_n(1),stemp_n(2),stemp_n(3))=CULng(dn)
							End Select
					End Select
				Case "INTEGER"
					macro_variables_integer_value(CInt(macro_variables_info(i,3)))=Int(dn)
				Case "INTEGER_ARRAY"
					Select Case macro_variables_info(i,5)
						Case "1d"
							Select Case macro_variables_info(i,3)
								Case "1"
									macro_variables_integer_array_1d_1(n)=Int(dn)
								Case "2"
									macro_variables_integer_array_1d_2(n)=Int(dn)
								Case "3"
									macro_variables_integer_array_1d_3(n)=Int(dn)
								Case "4"
									macro_variables_integer_array_1d_4(n)=Int(dn)
								Case "5"
									macro_variables_integer_array_1d_5(n)=Int(dn)
								Case "6"
									macro_variables_integer_array_1d_6(n)=Int(dn)
								Case "7"
									macro_variables_integer_array_1d_7(n)=Int(dn)
								Case "8"
									macro_variables_integer_array_1d_8(n)=Int(dn)
								Case "9"
									macro_variables_integer_array_1d_9(n)=Int(dn)
							End Select
						Case "2d"
							Select Case macro_variables_info(i,3)
								Case "1"
									macro_variables_integer_array_2d_1(stemp_n(1),stemp_n(2))=Int(dn)
								Case "2"
									macro_variables_integer_array_2d_2(stemp_n(1),stemp_n(2))=Int(dn)
								Case "3"
									macro_variables_integer_array_2d_3(stemp_n(1),stemp_n(2))=Int(dn)
								Case "4"
									macro_variables_integer_array_2d_4(stemp_n(1),stemp_n(2))=Int(dn)
								Case "5"
									macro_variables_integer_array_2d_5(stemp_n(1),stemp_n(2))=Int(dn)
								Case "6"
									macro_variables_integer_array_2d_6(stemp_n(1),stemp_n(2))=Int(dn)
								Case "7"
									macro_variables_integer_array_2d_7(stemp_n(1),stemp_n(2))=Int(dn)
								Case "8"
									macro_variables_integer_array_2d_8(stemp_n(1),stemp_n(2))=Int(dn)
								Case "9"
									macro_variables_integer_array_2d_9(stemp_n(1),stemp_n(2))=Int(dn)
							End Select
						Case "3d"
							Select Case macro_variables_info(i,3)
								Case "1"
									macro_variables_integer_array_3d_1(stemp_n(1),stemp_n(2),stemp_n(3))=Int(dn)
								Case "2"
									macro_variables_integer_array_3d_2(stemp_n(1),stemp_n(2),stemp_n(3))=Int(dn)
								Case "3"
									macro_variables_integer_array_3d_3(stemp_n(1),stemp_n(2),stemp_n(3))=Int(dn)
								Case "4"
									macro_variables_integer_array_3d_4(stemp_n(1),stemp_n(2),stemp_n(3))=Int(dn)
								Case "5"
									macro_variables_integer_array_3d_5(stemp_n(1),stemp_n(2),stemp_n(3))=Int(dn)
								Case "6"
									macro_variables_integer_array_3d_6(stemp_n(1),stemp_n(2),stemp_n(3))=Int(dn)
								Case "7"
									macro_variables_integer_array_3d_7(stemp_n(1),stemp_n(2),stemp_n(3))=Int(dn)
								Case "8"
									macro_variables_integer_array_3d_8(stemp_n(1),stemp_n(2),stemp_n(3))=Int(dn)
								Case "9"
									macro_variables_integer_array_3d_9(stemp_n(1),stemp_n(2),stemp_n(3))=Int(dn)
							End Select
					End Select
				Case "UINTEGER"
					macro_variables_uinteger_value(CInt(macro_variables_info(i,3)))=CUInt(dn)
				Case "UINTEGER_ARRAY"
					Select Case macro_variables_info(i,5)
						Case "1d"
							Select Case macro_variables_info(i,3)
								Case "1"
									macro_variables_uinteger_array_1d_1(n)=CUInt(dn)
								Case "2"
									macro_variables_uinteger_array_1d_2(n)=CUInt(dn)
								Case "3"
									macro_variables_uinteger_array_1d_3(n)=CUInt(dn)
								Case "4"
									macro_variables_uinteger_array_1d_4(n)=CUInt(dn)
								Case "5"
									macro_variables_uinteger_array_1d_5(n)=CUInt(dn)
								Case "6"
									macro_variables_uinteger_array_1d_6(n)=CUInt(dn)
								Case "7"
									macro_variables_uinteger_array_1d_7(n)=CUInt(dn)
								Case "8"
									macro_variables_uinteger_array_1d_8(n)=CUInt(dn)
								Case "9"
									macro_variables_uinteger_array_1d_9(n)=CUInt(dn)
							End Select
						Case "2d"
							Select Case macro_variables_info(i,3)
								Case "1"
									macro_variables_uinteger_array_2d_1(stemp_n(1),stemp_n(2))=CUInt(dn)
								Case "2"
									macro_variables_uinteger_array_2d_2(stemp_n(1),stemp_n(2))=CUInt(dn)
								Case "3"
									macro_variables_uinteger_array_2d_3(stemp_n(1),stemp_n(2))=CUInt(dn)
								Case "4"
									macro_variables_uinteger_array_2d_4(stemp_n(1),stemp_n(2))=CUInt(dn)
								Case "5"
									macro_variables_uinteger_array_2d_5(stemp_n(1),stemp_n(2))=CUInt(dn)
								Case "6"
									macro_variables_uinteger_array_2d_6(stemp_n(1),stemp_n(2))=CUInt(dn)
								Case "7"
									macro_variables_uinteger_array_2d_7(stemp_n(1),stemp_n(2))=CUInt(dn)
								Case "8"
									macro_variables_uinteger_array_2d_8(stemp_n(1),stemp_n(2))=CUInt(dn)
								Case "9"
									macro_variables_uinteger_array_2d_9(stemp_n(1),stemp_n(2))=CUInt(dn)
							End Select
						Case "3d"
							Select Case macro_variables_info(i,3)
								Case "1"
									macro_variables_uinteger_array_3d_1(stemp_n(1),stemp_n(2),stemp_n(3))=CUInt(dn)
								Case "2"
									macro_variables_uinteger_array_3d_2(stemp_n(1),stemp_n(2),stemp_n(3))=CUInt(dn)
								Case "3"
									macro_variables_uinteger_array_3d_3(stemp_n(1),stemp_n(2),stemp_n(3))=CUInt(dn)
								Case "4"
									macro_variables_uinteger_array_3d_4(stemp_n(1),stemp_n(2),stemp_n(3))=CUInt(dn)
								Case "5"
									macro_variables_uinteger_array_3d_5(stemp_n(1),stemp_n(2),stemp_n(3))=CUInt(dn)
								Case "6"
									macro_variables_uinteger_array_3d_6(stemp_n(1),stemp_n(2),stemp_n(3))=CUInt(dn)
								Case "7"
									macro_variables_uinteger_array_3d_7(stemp_n(1),stemp_n(2),stemp_n(3))=CUInt(dn)
								Case "8"
									macro_variables_uinteger_array_3d_8(stemp_n(1),stemp_n(2),stemp_n(3))=CUInt(dn)
								Case "9"
									macro_variables_uinteger_array_3d_9(stemp_n(1),stemp_n(2),stemp_n(3))=CUInt(dn)
							End Select
					End Select
				Case "LONGINT"
					macro_variables_longint_value(CInt(macro_variables_info(i,3)))=CLngInt(dn)
				Case "LONGINT_ARRAY"
					Select Case macro_variables_info(i,5)
						Case "1d"
							Select Case macro_variables_info(i,3)
								Case "1"
									macro_variables_longint_array_1d_1(n)=CLngInt(dn)
								Case "2"
									macro_variables_longint_array_1d_2(n)=CLngInt(dn)
								Case "3"
									macro_variables_longint_array_1d_3(n)=CLngInt(dn)
								Case "4"
									macro_variables_longint_array_1d_4(n)=CLngInt(dn)
								Case "5"
									macro_variables_longint_array_1d_5(n)=CLngInt(dn)
								Case "6"
									macro_variables_longint_array_1d_6(n)=CLngInt(dn)
								Case "7"
									macro_variables_longint_array_1d_7(n)=CLngInt(dn)
								Case "8"
									macro_variables_longint_array_1d_8(n)=CLngInt(dn)
								Case "9"
									macro_variables_longint_array_1d_9(n)=CLngInt(dn)
							End Select
						Case "2d"
							Select Case macro_variables_info(i,3)
								Case "1"
									macro_variables_longint_array_2d_1(stemp_n(1),stemp_n(2))=CLngInt(dn)
								Case "2"
									macro_variables_longint_array_2d_2(stemp_n(1),stemp_n(2))=CLngInt(dn)
								Case "3"
									macro_variables_longint_array_2d_3(stemp_n(1),stemp_n(2))=CLngInt(dn)
								Case "4"
									macro_variables_longint_array_2d_4(stemp_n(1),stemp_n(2))=CLngInt(dn)
								Case "5"
									macro_variables_longint_array_2d_5(stemp_n(1),stemp_n(2))=CLngInt(dn)
								Case "6"
									macro_variables_longint_array_2d_6(stemp_n(1),stemp_n(2))=CLngInt(dn)
								Case "7"
									macro_variables_longint_array_2d_7(stemp_n(1),stemp_n(2))=CLngInt(dn)
								Case "8"
									macro_variables_longint_array_2d_8(stemp_n(1),stemp_n(2))=CLngInt(dn)
								Case "9"
									macro_variables_longint_array_2d_9(stemp_n(1),stemp_n(2))=CLngInt(dn)
							End Select
						Case "3d"
							Select Case macro_variables_info(i,3)
								Case "1"
									macro_variables_longint_array_3d_1(stemp_n(1),stemp_n(2),stemp_n(3))=CLngInt(dn)
								Case "2"
									macro_variables_longint_array_3d_2(stemp_n(1),stemp_n(2),stemp_n(3))=CLngInt(dn)
								Case "3"
									macro_variables_longint_array_3d_3(stemp_n(1),stemp_n(2),stemp_n(3))=CLngInt(dn)
								Case "4"
									macro_variables_longint_array_3d_4(stemp_n(1),stemp_n(2),stemp_n(3))=CLngInt(dn)
								Case "5"
									macro_variables_longint_array_3d_5(stemp_n(1),stemp_n(2),stemp_n(3))=CLngInt(dn)
								Case "6"
									macro_variables_longint_array_3d_6(stemp_n(1),stemp_n(2),stemp_n(3))=CLngInt(dn)
								Case "7"
									macro_variables_longint_array_3d_7(stemp_n(1),stemp_n(2),stemp_n(3))=CLngInt(dn)
								Case "8"
									macro_variables_longint_array_3d_8(stemp_n(1),stemp_n(2),stemp_n(3))=CLngInt(dn)
								Case "9"
									macro_variables_longint_array_3d_9(stemp_n(1),stemp_n(2),stemp_n(3))=CLngInt(dn)
							End Select
					End Select
				Case "ULONGINT"
					macro_variables_ulongint_value(CInt(macro_variables_info(i,3)))=CULngInt(dn)
				Case "ULONGINT_ARRAY"
					Select Case macro_variables_info(i,5)
						Case "1d"
							Select Case macro_variables_info(i,3)
								Case "1"
									macro_variables_ulongint_array_1d_1(n)=CULngInt(dn)
								Case "2"
									macro_variables_ulongint_array_1d_2(n)=CULngInt(dn)
								Case "3"
									macro_variables_ulongint_array_1d_3(n)=CULngInt(dn)
								Case "4"
									macro_variables_ulongint_array_1d_4(n)=CULngInt(dn)
								Case "5"
									macro_variables_ulongint_array_1d_5(n)=CULngInt(dn)
								Case "6"
									macro_variables_ulongint_array_1d_6(n)=CULngInt(dn)
								Case "7"
									macro_variables_ulongint_array_1d_7(n)=CULngInt(dn)
								Case "8"
									macro_variables_ulongint_array_1d_8(n)=CULngInt(dn)
								Case "9"
									macro_variables_ulongint_array_1d_9(n)=CULngInt(dn)
							End Select
						Case "2d"
							Select Case macro_variables_info(i,3)
								Case "1"
									macro_variables_ulongint_array_2d_1(stemp_n(1),stemp_n(2))=CULngInt(dn)
								Case "2"
									macro_variables_ulongint_array_2d_2(stemp_n(1),stemp_n(2))=CULngInt(dn)
								Case "3"
									macro_variables_ulongint_array_2d_3(stemp_n(1),stemp_n(2))=CULngInt(dn)
								Case "4"
									macro_variables_ulongint_array_2d_4(stemp_n(1),stemp_n(2))=CULngInt(dn)
								Case "5"
									macro_variables_ulongint_array_2d_5(stemp_n(1),stemp_n(2))=CULngInt(dn)
								Case "6"
									macro_variables_ulongint_array_2d_6(stemp_n(1),stemp_n(2))=CULngInt(dn)
								Case "7"
									macro_variables_ulongint_array_2d_7(stemp_n(1),stemp_n(2))=CULngInt(dn)
								Case "8"
									macro_variables_ulongint_array_2d_8(stemp_n(1),stemp_n(2))=CULngInt(dn)
								Case "9"
									macro_variables_ulongint_array_2d_9(stemp_n(1),stemp_n(2))=CULngInt(dn)
							End Select
						Case "3d"
							Select Case macro_variables_info(i,3)
								Case "1"
									macro_variables_ulongint_array_3d_1(stemp_n(1),stemp_n(2),stemp_n(3))=CULngInt(dn)
								Case "2"
									macro_variables_ulongint_array_3d_2(stemp_n(1),stemp_n(2),stemp_n(3))=CULngInt(dn)
								Case "3"
									macro_variables_ulongint_array_3d_3(stemp_n(1),stemp_n(2),stemp_n(3))=CULngInt(dn)
								Case "4"
									macro_variables_ulongint_array_3d_4(stemp_n(1),stemp_n(2),stemp_n(3))=CULngInt(dn)
								Case "5"
									macro_variables_ulongint_array_3d_5(stemp_n(1),stemp_n(2),stemp_n(3))=CULngInt(dn)
								Case "6"
									macro_variables_ulongint_array_3d_6(stemp_n(1),stemp_n(2),stemp_n(3))=CULngInt(dn)
								Case "7"
									macro_variables_ulongint_array_3d_7(stemp_n(1),stemp_n(2),stemp_n(3))=CULngInt(dn)
								Case "8"
									macro_variables_ulongint_array_3d_8(stemp_n(1),stemp_n(2),stemp_n(3))=CULngInt(dn)
								Case "9"
									macro_variables_ulongint_array_3d_9(stemp_n(1),stemp_n(2),stemp_n(3))=CULngInt(dn)
							End Select
					End Select
				Case "SINGLE"
					macro_variables_single_value(CInt(macro_variables_info(i,3)))=CSng(dn)
				Case "SINGLE_ARRAY"
					Select Case macro_variables_info(i,5)
						Case "1d"
							Select Case macro_variables_info(i,3)
								Case "1"
									macro_variables_single_array_1d_1(n)=CSng(dn)
								Case "2"
									macro_variables_single_array_1d_2(n)=CSng(dn)
								Case "3"
									macro_variables_single_array_1d_3(n)=CSng(dn)
								Case "4"
									macro_variables_single_array_1d_4(n)=CSng(dn)
								Case "5"
									macro_variables_single_array_1d_5(n)=CSng(dn)
								Case "6"
									macro_variables_single_array_1d_6(n)=CSng(dn)
								Case "7"
									macro_variables_single_array_1d_7(n)=CSng(dn)
								Case "8"
									macro_variables_single_array_1d_8(n)=CSng(dn)
								Case "9"
									macro_variables_single_array_1d_9(n)=CSng(dn)
							End Select
						Case "2d"
							Select Case macro_variables_info(i,3)
								Case "1"
									macro_variables_single_array_2d_1(stemp_n(1),stemp_n(2))=CSng(dn)
								Case "2"
									macro_variables_single_array_2d_2(stemp_n(1),stemp_n(2))=CSng(dn)
								Case "3"
									macro_variables_single_array_2d_3(stemp_n(1),stemp_n(2))=CSng(dn)
								Case "4"
									macro_variables_single_array_2d_4(stemp_n(1),stemp_n(2))=CSng(dn)
								Case "5"
									macro_variables_single_array_2d_5(stemp_n(1),stemp_n(2))=CSng(dn)
								Case "6"
									macro_variables_single_array_2d_6(stemp_n(1),stemp_n(2))=CSng(dn)
								Case "7"
									macro_variables_single_array_2d_7(stemp_n(1),stemp_n(2))=CSng(dn)
								Case "8"
									macro_variables_single_array_2d_8(stemp_n(1),stemp_n(2))=CSng(dn)
								Case "9"
									macro_variables_single_array_2d_9(stemp_n(1),stemp_n(2))=CSng(dn)
							End Select
						Case "3d"
							Select Case macro_variables_info(i,3)
								Case "1"
									macro_variables_single_array_3d_1(stemp_n(1),stemp_n(2),stemp_n(3))=CSng(dn)
								Case "2"
									macro_variables_single_array_3d_2(stemp_n(1),stemp_n(2),stemp_n(3))=CSng(dn)
								Case "3"
									macro_variables_single_array_3d_3(stemp_n(1),stemp_n(2),stemp_n(3))=CSng(dn)
								Case "4"
									macro_variables_single_array_3d_4(stemp_n(1),stemp_n(2),stemp_n(3))=CSng(dn)
								Case "5"
									macro_variables_single_array_3d_5(stemp_n(1),stemp_n(2),stemp_n(3))=CSng(dn)
								Case "6"
									macro_variables_single_array_3d_6(stemp_n(1),stemp_n(2),stemp_n(3))=CSng(dn)
								Case "7"
									macro_variables_single_array_3d_7(stemp_n(1),stemp_n(2),stemp_n(3))=CSng(dn)
								Case "8"
									macro_variables_single_array_3d_8(stemp_n(1),stemp_n(2),stemp_n(3))=CSng(dn)
								Case "9"
									macro_variables_single_array_3d_9(stemp_n(1),stemp_n(2),stemp_n(3))=CSng(dn)
							End Select
					End Select
				Case "DOUBLE"
					macro_variables_double_value(CInt(macro_variables_info(i,3)))=dn
				Case "DOUBLE_ARRAY"
					Select Case macro_variables_info(i,5)
						Case "1d"
							Select Case macro_variables_info(i,3)
								Case "1"'variables_value()
									macro_variables_double_array_1d_1(n)=dn
								Case "2"
									macro_variables_double_array_1d_2(n)=dn
								Case "3"
									macro_variables_double_array_1d_3(n)=dn
								Case "4"
									macro_variables_double_array_1d_4(n)=dn
								Case "5"
									macro_variables_double_array_1d_5(n)=dn
								Case "6"
									macro_variables_double_array_1d_6(n)=dn
								Case "7"
									macro_variables_double_array_1d_7(n)=dn
								Case "8"
									macro_variables_double_array_1d_8(n)=dn
								Case "9"
									macro_variables_double_array_1d_9(n)=dn
							End Select
						Case "2d"
							Select Case macro_variables_info(i,3)
								Case "1"
									macro_variables_double_array_2d_1(stemp_n(1),stemp_n(2))=dn
								Case "2"
									macro_variables_double_array_2d_2(stemp_n(1),stemp_n(2))=dn
								Case "3"
									macro_variables_double_array_2d_3(stemp_n(1),stemp_n(2))=dn
								Case "4"
									macro_variables_double_array_2d_4(stemp_n(1),stemp_n(2))=dn
								Case "5"
									macro_variables_double_array_2d_5(stemp_n(1),stemp_n(2))=dn
								Case "6"
									macro_variables_double_array_2d_6(stemp_n(1),stemp_n(2))=dn
								Case "7"
									macro_variables_double_array_2d_7(stemp_n(1),stemp_n(2))=dn
								Case "8"
									macro_variables_double_array_2d_8(stemp_n(1),stemp_n(2))=dn
								Case "9"
									macro_variables_double_array_2d_9(stemp_n(1),stemp_n(2))=dn
							End Select
						Case "3d"
							Select Case macro_variables_info(i,3)
								Case "1"
									macro_variables_double_array_3d_1(stemp_n(1),stemp_n(2),stemp_n(3))=dn
								Case "2"
									macro_variables_double_array_3d_2(stemp_n(1),stemp_n(2),stemp_n(3))=dn
								Case "3"
									macro_variables_double_array_3d_3(stemp_n(1),stemp_n(2),stemp_n(3))=dn
								Case "4"
									macro_variables_double_array_3d_4(stemp_n(1),stemp_n(2),stemp_n(3))=dn
								Case "5"
									macro_variables_double_array_3d_5(stemp_n(1),stemp_n(2),stemp_n(3))=dn
								Case "6"
									macro_variables_double_array_3d_6(stemp_n(1),stemp_n(2),stemp_n(3))=dn
								Case "7"
									macro_variables_double_array_3d_7(stemp_n(1),stemp_n(2),stemp_n(3))=dn
								Case "8"
									macro_variables_double_array_3d_8(stemp_n(1),stemp_n(2),stemp_n(3))=dn
								Case "9"
									macro_variables_double_array_3d_9(stemp_n(1),stemp_n(2),stemp_n(3))=dn
							End Select
					End Select
				Case "STRING"
					macro_variables_string_value(CInt(macro_variables_info(i,3)))=ss
				Case "STRING_ARRAY"
					Select Case macro_variables_info(i,5)
						Case "1d"
							Select Case macro_variables_info(i,3)
								Case "1"'variables_value()
									macro_variables_string_array_1d_1(n)=ss
								Case "2"
									macro_variables_string_array_1d_2(n)=ss
								Case "3"
									macro_variables_string_array_1d_3(n)=ss
								Case "4"
									macro_variables_string_array_1d_4(n)=ss
								Case "5"
									macro_variables_string_array_1d_5(n)=ss
								Case "6"
									macro_variables_string_array_1d_6(n)=ss
								Case "7"
									macro_variables_string_array_1d_7(n)=ss
								Case "8"
									macro_variables_string_array_1d_8(n)=ss
								Case "9"
									macro_variables_string_array_1d_9(n)=ss
							End Select
						Case "2d"
							Select Case macro_variables_info(i,3)
								Case "1"
									macro_variables_string_array_2d_1(stemp_n(1),stemp_n(2))=ss
								Case "2"
									macro_variables_string_array_2d_2(stemp_n(1),stemp_n(2))=ss
								Case "3"
									macro_variables_string_array_2d_3(stemp_n(1),stemp_n(2))=ss
								Case "4"
									macro_variables_string_array_2d_4(stemp_n(1),stemp_n(2))=ss
								Case "5"
									macro_variables_string_array_2d_5(stemp_n(1),stemp_n(2))=ss
								Case "6"
									macro_variables_string_array_2d_6(stemp_n(1),stemp_n(2))=ss
								Case "7"
									macro_variables_string_array_2d_7(stemp_n(1),stemp_n(2))=ss
								Case "8"
									macro_variables_string_array_2d_8(stemp_n(1),stemp_n(2))=ss
								Case "9"
									macro_variables_string_array_2d_9(stemp_n(1),stemp_n(2))=ss
							End Select
						Case "3d"
							Select Case macro_variables_info(i,3)
								Case "1"
									macro_variables_string_array_3d_1(stemp_n(1),stemp_n(2),stemp_n(3))=ss
								Case "2"
									macro_variables_string_array_3d_2(stemp_n(1),stemp_n(2),stemp_n(3))=ss
								Case "3"
									macro_variables_string_array_3d_3(stemp_n(1),stemp_n(2),stemp_n(3))=ss
								Case "4"
									macro_variables_string_array_3d_4(stemp_n(1),stemp_n(2),stemp_n(3))=ss
								Case "5"
									macro_variables_string_array_3d_5(stemp_n(1),stemp_n(2),stemp_n(3))=ss
								Case "6"
									macro_variables_string_array_3d_6(stemp_n(1),stemp_n(2),stemp_n(3))=ss
								Case "7"
									macro_variables_string_array_3d_7(stemp_n(1),stemp_n(2),stemp_n(3))=ss
								Case "8"
									macro_variables_string_array_3d_8(stemp_n(1),stemp_n(2),stemp_n(3))=ss
								Case "9"
									macro_variables_string_array_3d_9(stemp_n(1),stemp_n(2),stemp_n(3))=ss
							End Select
					End Select
			End Select
			Exit For
		EndIf
	Next	
End Sub

Sub keyword_print(temp As String)
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Sub keyword_print"
		Print #5,"temp:";temp
		'For dbugi=LBound(temp) To UBound(temp)
			'Print #5,"temp("; dbugi; "):"; temp(dbugi)
		'Next
		Print #5,"---------------"
	EndIf
	Dim As String s
	s=full_evaluate_expression(temp)
	s+=Chr(10)
	fbcadcam_macro_debug+=s
End Sub

Sub keyword_line(temp As String)
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Sub keyword_line"
		Print #5,"temp:";temp
		'For dbugi=LBound(temp) To UBound(temp)
			'Print #5,"temp("; dbugi; "):"; temp(dbugi)
		'Next
		Print #5,"---------------"
	EndIf
	Dim As Double line_x1,line_y1,line_x2,line_y2
	Dim As Integer i,parse_c
	Dim As String parse_temp,parse_i(4)
	temp=Mid(temp,5)'remove "line"
	temp=parse(temp)
	For i=1 To Len(temp)
		If Asc(Mid(temp,i,1))<>9 Then
			parse_temp+=Mid(temp,i,1)
		Else
			parse_c+=1
			parse_i(parse_c)=parse_temp
			parse_temp=""
		EndIf
	Next
	line_x1=CDbl(full_evaluate_expression(parse_i(1)))
	line_y1=CDbl(full_evaluate_expression(parse_i(2)))
	line_x2=CDbl(full_evaluate_expression(parse_i(3)))
	line_y2=CDbl(full_evaluate_expression(parse_i(4)))
	memmanageline
	lines(linec,1)=line_x1
	lines(linec,2)=line_y1
	lines(linec,4)=line_x2
	lines(linec,5)=line_y2
	lines(linec,7)=lc
End Sub

Sub keyword_circle(temp As String)
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Sub keyword_circle"
		Print #5,"temp:";temp
		'For dbugi=LBound(temp) To UBound(temp)
			'Print #5,"temp("; dbugi; "):"; temp(dbugi)
		'Next
		Print #5,"---------------"
	EndIf
	Dim As Integer circle_type
	Dim As Double circle_x1,circle_y1
	Dim As Double circle_major_radius,circle_minor_radius
	Dim As Double circle_arc_start,circle_arc_end,circle_rotation
	Dim As String circle_temp,circle_segment_1,circle_segment_2
	Dim As String circle_x1_string,circle_y1_string
	Dim As String circle_major_radius_string,circle_minor_radius_string
	Dim As String circle_arc_start_string,circle_arc_end_string,circle_rotation_string
	Dim As Double line_x1,line_y1,line_x2,line_y2
	Dim As Integer i,parse_c
	Dim As String parse_temp,parse_i(7)
	temp=Mid(temp,7)'remove "circle"
	temp=parse(temp)
	For i=1 To Len(temp)
		If Asc(Mid(temp,i,1))<>9 Then
			parse_temp+=Mid(temp,i,1)
		Else
			parse_c+=1
			parse_i(parse_c)=parse_temp
			parse_temp=""
		EndIf
	Next
	circle_x1_string=parse_i(1)
	circle_y1_string=parse_i(2)
	circle_major_radius_string=parse_i(3)
	circle_minor_radius_string=parse_i(4)
	circle_arc_start_string=parse_i(5)
	circle_arc_end_string=parse_i(6)
	circle_rotation_string=parse_i(7)

	If circle_minor_radius_string="" Then circle_minor_radius_string="0"
	If circle_arc_start_string="" Then circle_arc_start_string="0"
	If circle_arc_end_string="" Then circle_arc_end_string="0"
	If circle_rotation_string="" Then circle_rotation_string="0"
	'1(circle)2(arc)3(ellips)4(ellipticalarc)
	If circle_minor_radius_string="0" Then
		circle_rotation_string="0"
		If circle_arc_start_string="0" Then
			circle_type=1
		Else
			circle_type=2
		EndIf
	Else
		If circle_arc_start_string="0" Then
			circle_type=3
			circle_arc_end_string="360"
		Else
			circle_type=4
		EndIf
	EndIf
	
	circle_x1=CDbl(full_evaluate_expression(circle_x1_string))
	circle_y1=CDbl(full_evaluate_expression(circle_y1_string))
	circle_major_radius=CDbl(full_evaluate_expression(circle_major_radius_string))
	circle_minor_radius=CDbl(full_evaluate_expression(circle_minor_radius_string))
	circle_arc_start=CDbl(full_evaluate_expression(circle_arc_start_string))
	circle_arc_end=CDbl(full_evaluate_expression(circle_arc_end_string))
	circle_rotation=CDbl(full_evaluate_expression(circle_rotation_string))
	
	If circle_type=2 Then
		'radians=degrees*pi/180
		circle_arc_start=circle_arc_start*pi/180
		circle_arc_end=circle_arc_end*pi/180
	EndIf
	
	'1x,2y,3z,4r,5color,6start,7end,8aspect,9=1(circle)2(arc)3(ellips)4(ellipticalarc),10group,11 is ellipse rotation , 12 block
	memmanagecircle
	circles(circlec,1)=circle_x1
	circles(circlec,2)=circle_y1
	'circles(circlec,3)=0
	circles(circlec,4)=circle_major_radius
	circles(circlec,5)=lc
	circles(circlec,6)=circle_arc_start
	circles(circlec,7)=circle_arc_end
	circles(circlec,8)=circle_minor_radius
	circles(circlec,9)=circle_type
	'circles(circlec,10)=0
	circles(circlec,11)=circle_rotation
	'circles(circlec,12)=0
End Sub

Sub keyword_randomize(temp As String)
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Sub keyword_randomize"
		Print #5,"temp:";temp
		'For dbugi=LBound(temp) To UBound(temp)
			'Print #5,"temp("; dbugi; "):"; temp(dbugi)
		'Next
		Print #5,"---------------"
	EndIf
	
End Sub

Sub getparts(temp As String)
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Sub getparts"
		Print #5,"temp:";temp
		'For dbugi=LBound(temp) To UBound(temp)
			'Print #5,"temp("; dbugi; "):"; temp(dbugi)
		'Next
		Print #5,"---------------"
	EndIf
	Dim As Integer i,k,j,c,x
	Dim As String temps() 'store each part in a string aray
	Dim As BOOLEAN multipart
	Dim As Integer multipart_c,multipart_x()
	Dim As BOOLEAN parins_found,in_parins
	Dim As Integer popen_c,pclose_c 'parin x
	
	If InStr(temp,"(") Then parins_found=TRUE
	x=find_delimeter(temp,",")
	If x=0 Then
		'not a multi part dim statement ie. dim as integer x  OR  dim x as integer
		c=1
		ReDim temps(c)
		temps(c)=temp
	Else
		ReDim temps(0)
		Do While x<>0
			c+=1
			ReDim Preserve temps(c)
			temps(c)=Left(temp,x-1)
	   	temp=Mid(temp,x+1)
	   	temp=LTrim(RTrim(temp)) 'clean up spaces
	   	x=find_delimeter(temp,",")
		Loop
		c+=1
		ReDim Preserve temps(c)
		temps(c)=temp
	EndIf
	string_parts_c=c
	ReDim string_parts(string_parts_c)
	For i = 1 To string_parts_c
		string_parts(i)=temps(i)
	Next
End Sub

Sub keyword_dim(temp As String)
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Sub keyword_dim"
		Print #5,"temp:";temp
		'For dbugi=LBound(temp) To UBound(temp)
			'Print #5,"temp("; dbugi; "):"; temp(dbugi)
		'Next
		Print #5,"---------------"
	EndIf
	Dim As Integer i,k,j,c,x,xx
	Dim As String temps() 'store each part in a string aray
	Dim As BOOLEAN multipart
	Dim As Integer multipart_c,multipart_x()
	Dim As BOOLEAN parins_found,in_parins,currly_brackets_found,in_currly_brackets
	Dim As Integer popen_c,pclose_c 'parin x
	Dim As Integer cbopen_c,cbclose_c 'currly_brackets x
	Dim As String s1,s2
	
	If Left(LTrim(Mid(temp,5)),6)="shared" Then
		temp=Mid(temp,5)
		temp=LTrim(temp)
		temp=Mid(temp,7)
		temp="dim "+LTrim(temp)
	EndIf
	If InStr(temp,"(") Then parins_found=TRUE
	If InStr(temp,"{") Then currly_brackets_found=TRUE
	
	If find_delimeter(temp,",")=0 Then
		multipart=FALSE
	Else
		multipart=TRUE
	EndIf
	If multipart=TRUE Then 'check for commas to see if this is a multi part dim statement
		c=0 'check for multi AS usages
		x=InStr(temp," as ")
		Do While x>0
		    c+=1
		    x=InStr(x+4,temp," as ")
		Loop
		Select Case c
			Case 0 'this is only for redim ie. dim as integer a(),b() : redim a(3),b(4)
				If dim_params="redim" Or dim_params="redim preserve" Then
					temp=Mid(temp,5) 'dim x,y,z,a,b,c
					c=0
					ReDim temps(0)
					x=find_delimeter(temp,",")
					Do While x<>0
						c+=1
						ReDim Preserve temps(c)
						temps(c)=Left(temp,x-1)
				   	temp=Mid(temp,x+1)
				   	temp=LTrim(RTrim(temp)) 'clean up spaces
				   	x=find_delimeter(temp,",")
					Loop
					c+=1
					ReDim Preserve temps(c)
					temps(c)=temp
					For j = 1 To c
						x=InStr(temps(j),"(")
						'Name , Type, index, array_description, array_depth,1d-index,2d-index,3d-index
						'macro_variables_info_c-=1
						For i=1 To macro_variables_info_c
							If macro_variables_info(i,1)=LTrim(RTrim(Left(temps(j),x-1))) Then
								Select Case macro_variables_info(i,2)
									Case "BOOLEAN_ARRAY"
										temps(0)="boolean"
									Case "BYTE_ARRAY"
										temps(0)="byte"
									Case "UBYTE_ARRAY"
										temps(0)="ubyte"
									Case "SHORT_ARRAY"
										temps(0)="short"
									Case "USHORT_ARRAY"
										temps(0)="ushort"
									Case "LONG_ARRAY"
										temps(0)="long"
									Case "ULONG_ARRAY"
										temps(0)="ulong"
									Case "INTEGER_ARRAY"
										temps(0)="integer"
									Case "UINTEGER_ARRAY"
										temps(0)="uinteger"
									Case "LONGINT_ARRAY"
										temps(0)="longint"
									Case "ULONGINT_ARRAY"
										temps(0)="ulongint"
									Case "SINGLE_ARRAY"
										temps(0)="single"
									Case "DOUBLE_ARRAY"
										temps(0)="double"
									Case "STRING_ARRAY"
										temps(0)="string"
								End Select
								Exit For
							EndIf
						Next
						Select Case temps(0)
							Case "boolean"
								dim_boolean(temps(j))
							Case "byte"
								dim_byte(temps(j))
							Case "ubyte"
								dim_ubyte(temps(j))
							Case "short"
								dim_short(temps(j))
							Case "ushort"
								dim_ushort(temps(j))
							Case "long"
								dim_long(temps(j))
							Case "ulong"
								dim_ulong(temps(j))
							Case "integer"
								dim_integer(temps(j))
							Case "uinteger"
								dim_uinteger(temps(j))
							Case "longint"
								dim_longint(temps(j))
							Case "ulongint"
								dim_ulongint(temps(j))
							Case "single"
								dim_single(temps(j))
							Case "double"
								dim_double(temps(j))
							Case "string"
								dim_string(temps(j))
						End Select
					Next
				EndIf
			Case 1 'this is for dim and redim with only 1 AS
				If dim_params="redim" Or dim_params="redim preserve" Then
					temp=Mid(temp,5) 'as integer x,y,z,a,b,c
					'find and remove any and all "As " and "whatever type" from temp
					x=InStr(temp,"as ")
					Do While x<>0
						s1=RTrim(Left(temp,x-1))
						s2=LTrim(Mid(temp,x+2))
						x=InStr(s2," ")
						If x=0 Then s2="" Else s2=LTrim(Mid(s2,x))
						temp=s1+s2
						x=InStr(temp,"as ")
					Loop
					c=0
					ReDim temps(0)
					x=find_delimeter(temp,",")
					Do While x<>0
						c+=1
						ReDim Preserve temps(c)
						temps(c)=Left(temp,x-1)
				   	temp=Mid(temp,x+1)
				   	temp=LTrim(RTrim(temp)) 'clean up spaces
				   	x=find_delimeter(temp,",")
					Loop
					c+=1
					ReDim Preserve temps(c)
					temps(c)=temp
					For j = 1 To c
						x=InStr(temps(j),"(")
						'Name , Type, index, array_description, array_depth,1d-index,2d-index,3d-index
						'macro_variables_info_c-=1
						For i=1 To macro_variables_info_c
							If macro_variables_info(i,1)=LTrim(RTrim(Left(temps(j),x-1))) Then
								Select Case macro_variables_info(i,2)
									Case "BOOLEAN_ARRAY"
										temps(0)="boolean"
									Case "BYTE_ARRAY"
										temps(0)="byte"
									Case "UBYTE_ARRAY"
										temps(0)="ubyte"
									Case "SHORT_ARRAY"
										temps(0)="short"
									Case "USHORT_ARRAY"
										temps(0)="ushort"
									Case "LONG_ARRAY"
										temps(0)="long"
									Case "ULONG_ARRAY"
										temps(0)="ulong"
									Case "INTEGER_ARRAY"
										temps(0)="integer"
									Case "UINTEGER_ARRAY"
										temps(0)="uinteger"
									Case "LONGINT_ARRAY"
										temps(0)="longint"
									Case "ULONGINT_ARRAY"
										temps(0)="ulongint"
									Case "SINGLE_ARRAY"
										temps(0)="single"
									Case "DOUBLE_ARRAY"
										temps(0)="double"
									Case "STRING_ARRAY"
										temps(0)="string"
								End Select
								Exit For
							EndIf
						Next
						Select Case temps(0)
							Case "boolean"
								dim_boolean(temps(j))
							Case "byte"
								dim_byte(temps(j))
							Case "ubyte"
								dim_ubyte(temps(j))
							Case "short"
								dim_short(temps(j))
							Case "ushort"
								dim_ushort(temps(j))
							Case "long"
								dim_long(temps(j))
							Case "ulong"
								dim_ulong(temps(j))
							Case "integer"
								dim_integer(temps(j))
							Case "uinteger"
								dim_uinteger(temps(j))
							Case "longint"
								dim_longint(temps(j))
							Case "ulongint"
								dim_ulongint(temps(j))
							Case "single"
								dim_single(temps(j))
							Case "double"
								dim_double(temps(j))
							Case "string"
								dim_string(temps(j))
						End Select
					Next
				Else
					temp=Mid(temp,8) 'byte x,y,z,a,b,c
					c=0
					ReDim temps(0)
					x=InStr(x+1,temp," ") 'find the first space
					temps(0)=Left(temp,x-1) 'temps(0) contains the variable type
					temp=Mid(temp,x+1) 'x,y,z,a,b,c   OR    x=10*2,y=x*3,z,a=20,b=30,c
					x=find_delimeter(temp,",")
					Do While x<>0
						c+=1
						ReDim Preserve temps(c)
						temps(c)=Left(temp,x-1)
				   	temp=Mid(temp,x+1)
				   	temp=LTrim(RTrim(temp)) 'clean up spaces
				   	x=find_delimeter(temp,",")
					Loop
					c+=1
					ReDim Preserve temps(c)
					temps(c)=temp
					Select Case temps(0)
						Case "boolean"
							For i = 1 To c
								dim_boolean(temps(i))
							Next
						Case "byte"
							For i = 1 To c
								dim_byte(temps(i))
							Next
						Case "ubyte"
							For i = 1 To c
								dim_ubyte(temps(i))
							Next
						Case "short"
							For i = 1 To c
								dim_short(temps(i))
							Next
						Case "ushort"
							For i = 1 To c
								dim_ushort(temps(i))
							Next
						Case "long"
							For i = 1 To c
								dim_long(temps(i))
							Next
						Case "ulong"
							For i = 1 To c
								dim_ulong(temps(i))
							Next
						Case "integer"
							For i = 1 To c
								dim_integer(temps(i))
							Next
						Case "uinteger"
							For i = 1 To c
								dim_uinteger(temps(i))
							Next
						Case "longint"
							For i = 1 To c
								dim_longint(temps(i))
							Next
						Case "ulongint"
							For i = 1 To c
								dim_ulongint(temps(i))
							Next
						Case "single"
							For i = 1 To c
								dim_single(temps(i))
							Next
						Case "double"
							For i = 1 To c
								dim_double(temps(i))
							Next
						Case "string"
							For i = 1 To c
								dim_string(temps(i))
							Next
					End Select
				EndIf
			Case Else 'for dim and redim with multi AS
				temp=Mid(temp,5) 'x as integer, y as double
				c=0
				ReDim temps(0)
				x=find_delimeter(temp,",")
				Do While x<>0
					c+=1
					ReDim Preserve temps(c)
					temps(c)=Left(temp,x-1)
			   	temp=Mid(temp,x+1)
			   	temp=LTrim(RTrim(temp)) 'clean up spaces
			   	x=find_delimeter(temp,",")
				Loop
				c+=1
				ReDim Preserve temps(c)
				temps(c)=temp
				For i = 1 To c
					x=InStr(temps(i),"as ")
					If x<>0 Then
						temps(0)=LTrim(RTrim(Mid(temps(i),x+3)))
						temps(i)=LTrim(RTrim(Left(temps(i),x-1)))
						xx=InStr(temps(0),"=")
						If xx<>0 Then
							temps(i)+="="+LTrim(Mid(temps(0),xx+1))
							temps(0)=RTrim(Left(temps(0),xx-1))
						EndIf
					Else
						If dim_params="redim" Or dim_params="redim preserve" Then
							x=InStr(temps(i),"(")
							For i=1 To macro_variables_info_c
								If macro_variables_info(i,1)=LTrim(RTrim(Left(temps(i),x-1))) Then
									Select Case macro_variables_info(i,2)
										Case "BOOLEAN_ARRAY"
											temps(0)="boolean"
										Case "BYTE_ARRAY"
											temps(0)="byte"
										Case "UBYTE_ARRAY"
											temps(0)="ubyte"
										Case "SHORT_ARRAY"
											temps(0)="short"
										Case "USHORT_ARRAY"
											temps(0)="ushort"
										Case "LONG_ARRAY"
											temps(0)="long"
										Case "ULONG_ARRAY"
											temps(0)="ulong"
										Case "INTEGER_ARRAY"
											temps(0)="integer"
										Case "UINTEGER_ARRAY"
											temps(0)="uinteger"
										Case "LONGINT_ARRAY"
											temps(0)="longint"
										Case "ULONGINT_ARRAY"
											temps(0)="ulongint"
										Case "SINGLE_ARRAY"
											temps(0)="single"
										Case "DOUBLE_ARRAY"
											temps(0)="double"
										Case "STRING_ARRAY"
											temps(0)="string"
									End Select
									temps(1)=temps(i)
									Exit For
								EndIf
							Next
						EndIf
					EndIf
					Select Case temps(0)
						Case "boolean"
							dim_boolean(temps(i))
						Case "byte"
							dim_byte(temps(i))
						Case "ubyte"
							dim_ubyte(temps(i))
						Case "short"
							dim_short(temps(i))
						Case "ushort"
							dim_ushort(temps(i))
						Case "long"
							dim_long(temps(i))
						Case "ulong"
							dim_ulong(temps(i))
						Case "integer"
							dim_integer(temps(i))
						Case "uinteger"
							dim_uinteger(temps(i))
						Case "longint"
							dim_longint(temps(i))
						Case "ulongint"
							dim_ulongint(temps(i))
						Case "single"
							dim_single(temps(i))
						Case "double"
							dim_double(temps(i))
						Case "string"
							dim_string(temps(i))
					End Select
				Next
		End Select
	Else 'not a muti part dim statement ie. dim as integer x  OR  dim x as integer
		ReDim temps(1)
		temp=Mid(temp,5) 'as integer x  OR  
		If Left(temp,3)="as " Then 'as integer x
			temp=Mid(temp,4)
			temp=LTrim(RTrim(temp))
			x=InStr(x+1,temp," ") 'find the first space
			temps(0)=Left(temp,x-1) 'temps(0) contains the variable type
			temp=Mid(temp,x+1) 'x,y,z,a,b,c   OR    x=10*2,y=x*3,z,a=20,b=30,c
			temps(1)=temp
		Else 'x as integer
			x=InStr(temp,"as ")
			If x<>0 Then
				temps(0)=LTrim(RTrim(Mid(temp,x+3)))
				temps(1)=LTrim(RTrim(Left(temp,x-1)))
				'if x as integer = 1234
				xx=InStr(temps(0),"=")
				If xx<>0 Then
					temps(1)+="="+LTrim(Mid(temps(0),xx+1))
					temps(0)=RTrim(Left(temps(0),xx-1))
				EndIf
			Else
				If dim_params="redim" Or dim_params="redim preserve" Then
					x=InStr(temp,"(")
					For i=1 To macro_variables_info_c
						If macro_variables_info(i,1)=LTrim(RTrim(Left(temp,x-1))) Then
							Select Case macro_variables_info(i,2)
								Case "BOOLEAN_ARRAY"
									temps(0)="boolean"
								Case "BYTE_ARRAY"
									temps(0)="byte"
								Case "UBYTE_ARRAY"
									temps(0)="ubyte"
								Case "SHORT_ARRAY"
									temps(0)="short"
								Case "USHORT_ARRAY"
									temps(0)="ushort"
								Case "LONG_ARRAY"
									temps(0)="long"
								Case "ULONG_ARRAY"
									temps(0)="ulong"
								Case "INTEGER_ARRAY"
									temps(0)="integer"
								Case "UINTEGER_ARRAY"
									temps(0)="uinteger"
								Case "LONGINT_ARRAY"
									temps(0)="longint"
								Case "ULONGINT_ARRAY"
									temps(0)="ulongint"
								Case "SINGLE_ARRAY"
									temps(0)="single"
								Case "DOUBLE_ARRAY"
									temps(0)="double"
								Case "STRING_ARRAY"
									temps(0)="string"
							End Select
							temps(1)=temp
							Exit For
						EndIf
					Next
				EndIf
			EndIf
		EndIf
		Select Case temps(0)
			Case "boolean"
				dim_boolean(temps(1))
			Case "byte"
				dim_byte(temps(1))
			Case "ubyte"
				dim_ubyte(temps(1))
			Case "short"
				dim_short(temps(1))
			Case "ushort"
				dim_ushort(temps(1))
			Case "long"
				dim_long(temps(1))
			Case "ulong"
				dim_ulong(temps(1))
			Case "integer"
				dim_integer(temps(1))
			Case "uinteger"
				dim_uinteger(temps(1))
			Case "longint"
				dim_longint(temps(1))
			Case "ulongint"
				dim_ulongint(temps(1))
			Case "single"
				dim_single(temps(1))
			Case "double"
				dim_double(temps(1))
			Case "string"
				dim_string(temps(1))
		End Select
	EndIf
End Sub

Sub dim_boolean(temp As String)
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Sub dim_boolean"
		Print #5,"temp:";temp
		'For dbugi=LBound(temp) To UBound(temp)
			'Print #5,"temp("; dbugi; "):"; temp(dbugi)
		'Next
		Print #5,"---------------"
	EndIf
	Dim As Integer i,j,k,x,c,low,hi,n
	Dim As Double dn
	Dim As Byte n_boolean
	Dim As Byte n_byte
	Dim As UByte n_ubyte
	Dim As Short n_short
	Dim As UShort n_ushort
	Dim As Long n_long
	Dim As ULong n_ulong
	Dim As UInteger n_uinteger
	Dim As LongInt n_longint
	Dim As ULongInt n_ulongint
	Dim As Single n_single
	Dim As String n_string
	macro_variables_info_c+=1
	ReDim Preserve macro_variables_info(macro_variables_info_c,8)
	Dim As String s1,s2,stemp
	Dim As Integer stemp_c,stemp_n(),stemp_c_x
	Dim As BOOLEAN quote
	
	If InStr(temp,"=") Then
		i=InStr(temp,"=")
		s1=Mid(temp,1,i-1)
		s2=Mid(temp,i+1)
	Else
		s1=temp
	EndIf
	If InStr(s1,"(") Then 'this variable to dim is an array
		If InStr(temp,"=") Then
			Dim As String temp2
			x=InStr(temp,"=")
			temp2=Mid(temp,x+1)
			temp2=LTrim(RTrim(temp2))
			temp=Mid(temp,1,x-1)
			i=InStr(temp,"(")
			macro_variables_info(macro_variables_info_c,1)=LTrim(RTrim(Left(temp,i-1))) 'name
			macro_variables_info(macro_variables_info_c,2)="BOOLEAN_ARRAY" 'type
			macro_variables_info(macro_variables_info_c,3)="d" 'points to 1st, 2nd, 3rd... of 1d,2d,3d... variables			
			temp=Mid(temp,i) '() or (10) or (10,3) or (1 to 10) or (0 to 10, 0 to 3)
			macro_variables_info(macro_variables_info_c,4)=temp 'array_description
			macro_variables_info(macro_variables_info_c,5)="" 'array_depth ie. 1d,2d,3d
			variable_array_manager(macro_variables_info_c)
			
			c=macro_variables_info_c
			If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
			Select Case macro_variables_info(c,5)
				Case "1d"
					Select Case macro_variables_info(c,3)
						Case "1"
							For i=LBound(macro_variables_boolean_array_1d_1) To UBound(macro_variables_boolean_array_1d_1)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_boolean_array_1d_1(i)=CByte(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "2"
							For i=LBound(macro_variables_boolean_array_1d_2) To UBound(macro_variables_boolean_array_1d_2)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_boolean_array_1d_2(i)=CByte(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "3"
							For i=LBound(macro_variables_boolean_array_1d_3) To UBound(macro_variables_boolean_array_1d_3)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_boolean_array_1d_3(i)=CByte(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "4"
							For i=LBound(macro_variables_boolean_array_1d_4) To UBound(macro_variables_boolean_array_1d_4)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_boolean_array_1d_4(i)=CByte(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "5"
							For i=LBound(macro_variables_boolean_array_1d_5) To UBound(macro_variables_boolean_array_1d_5)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_boolean_array_1d_5(i)=CByte(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "6"
							For i=LBound(macro_variables_boolean_array_1d_6) To UBound(macro_variables_boolean_array_1d_6)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_boolean_array_1d_6(i)=CByte(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "7"
							For i=LBound(macro_variables_boolean_array_1d_7) To UBound(macro_variables_boolean_array_1d_7)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_boolean_array_1d_7(i)=CByte(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "8"
							For i=LBound(macro_variables_boolean_array_1d_8) To UBound(macro_variables_boolean_array_1d_8)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_boolean_array_1d_8(i)=CByte(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "9"
							For i=LBound(macro_variables_boolean_array_1d_9) To UBound(macro_variables_boolean_array_1d_9)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_boolean_array_1d_9(i)=CByte(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
					End Select
				Case "2d"
					Select Case macro_variables_info(c,3)
						Case "1"
							For i= LBound(macro_variables_boolean_array_2d_1) To UBound(macro_variables_boolean_array_2d_1)
								For j= LBound(macro_variables_boolean_array_2d_1,2) To UBound(macro_variables_boolean_array_2d_1,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_boolean_array_2d_1(i,j)=CByte(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "2"
							For i= LBound(macro_variables_boolean_array_2d_2) To UBound(macro_variables_boolean_array_2d_2)
								For j= LBound(macro_variables_boolean_array_2d_2,2) To UBound(macro_variables_boolean_array_2d_2,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_boolean_array_2d_2(i,j)=CByte(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "3"
							For i= LBound(macro_variables_boolean_array_2d_3) To UBound(macro_variables_boolean_array_2d_3)
								For j= LBound(macro_variables_boolean_array_2d_3,2) To UBound(macro_variables_boolean_array_2d_3,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_boolean_array_2d_3(i,j)=CByte(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "4"
							For i= LBound(macro_variables_boolean_array_2d_4) To UBound(macro_variables_boolean_array_2d_4)
								For j= LBound(macro_variables_boolean_array_2d_4,2) To UBound(macro_variables_boolean_array_2d_4,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_boolean_array_2d_4(i,j)=CByte(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "5"
							For i= LBound(macro_variables_boolean_array_2d_5) To UBound(macro_variables_boolean_array_2d_5)
								For j= LBound(macro_variables_boolean_array_2d_5,2) To UBound(macro_variables_boolean_array_2d_5,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_boolean_array_2d_5(i,j)=CByte(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "6"
							For i= LBound(macro_variables_boolean_array_2d_6) To UBound(macro_variables_boolean_array_2d_6)
								For j= LBound(macro_variables_boolean_array_2d_6,2) To UBound(macro_variables_boolean_array_2d_6,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_boolean_array_2d_6(i,j)=CByte(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "7"
							For i= LBound(macro_variables_boolean_array_2d_7) To UBound(macro_variables_boolean_array_2d_7)
								For j= LBound(macro_variables_boolean_array_2d_7,2) To UBound(macro_variables_boolean_array_2d_7,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_boolean_array_2d_7(i,j)=CByte(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "8"
							For i= LBound(macro_variables_boolean_array_2d_8) To UBound(macro_variables_boolean_array_2d_8)
								For j= LBound(macro_variables_boolean_array_2d_8,2) To UBound(macro_variables_boolean_array_2d_8,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_boolean_array_2d_8(i,j)=CByte(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "9"
							For i= LBound(macro_variables_boolean_array_2d_9) To UBound(macro_variables_boolean_array_2d_9)
								For j= LBound(macro_variables_boolean_array_2d_9,2) To UBound(macro_variables_boolean_array_2d_9,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_boolean_array_2d_9(i,j)=CByte(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
					End Select
				Case "3d"
					Select Case macro_variables_info(c,3)
						Case "1"
							For i= LBound(macro_variables_boolean_array_3d_1) To UBound(macro_variables_boolean_array_3d_1)
								For j= LBound(macro_variables_boolean_array_3d_1,2) To UBound(macro_variables_boolean_array_3d_1,2)
									For k= LBound(macro_variables_boolean_array_3d_1,3) To UBound(macro_variables_boolean_array_3d_1,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_boolean_array_3d_1(i,j,k)=CByte(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "2"
							For i= LBound(macro_variables_boolean_array_3d_2) To UBound(macro_variables_boolean_array_3d_2)
								For j= LBound(macro_variables_boolean_array_3d_2,2) To UBound(macro_variables_boolean_array_3d_2,2)
									For k= LBound(macro_variables_boolean_array_3d_2,3) To UBound(macro_variables_boolean_array_3d_2,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_boolean_array_3d_2(i,j,k)=CByte(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "3"
							For i= LBound(macro_variables_boolean_array_3d_3) To UBound(macro_variables_boolean_array_3d_3)
								For j= LBound(macro_variables_boolean_array_3d_3,2) To UBound(macro_variables_boolean_array_3d_3,2)
									For k= LBound(macro_variables_boolean_array_3d_3,3) To UBound(macro_variables_boolean_array_3d_3,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_boolean_array_3d_3(i,j,k)=CByte(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "4"
							For i= LBound(macro_variables_boolean_array_3d_4) To UBound(macro_variables_boolean_array_3d_4)
								For j= LBound(macro_variables_boolean_array_3d_4,2) To UBound(macro_variables_boolean_array_3d_4,2)
									For k= LBound(macro_variables_boolean_array_3d_4,3) To UBound(macro_variables_boolean_array_3d_4,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_boolean_array_3d_4(i,j,k)=CByte(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "5"
							For i= LBound(macro_variables_boolean_array_3d_5) To UBound(macro_variables_boolean_array_3d_5)
								For j= LBound(macro_variables_boolean_array_3d_5,2) To UBound(macro_variables_boolean_array_3d_5,2)
									For k= LBound(macro_variables_boolean_array_3d_5,3) To UBound(macro_variables_boolean_array_3d_5,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_boolean_array_3d_5(i,j,k)=CByte(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "6"
							For i= LBound(macro_variables_boolean_array_3d_6) To UBound(macro_variables_boolean_array_3d_6)
								For j= LBound(macro_variables_boolean_array_3d_6,2) To UBound(macro_variables_boolean_array_3d_6,2)
									For k= LBound(macro_variables_boolean_array_3d_6,3) To UBound(macro_variables_boolean_array_3d_6,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_boolean_array_3d_6(i,j,k)=CByte(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "7"
							For i= LBound(macro_variables_boolean_array_3d_7) To UBound(macro_variables_boolean_array_3d_7)
								For j= LBound(macro_variables_boolean_array_3d_7,2) To UBound(macro_variables_boolean_array_3d_7,2)
									For k= LBound(macro_variables_boolean_array_3d_7,3) To UBound(macro_variables_boolean_array_3d_7,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_boolean_array_3d_7(i,j,k)=CByte(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "8"
							For i= LBound(macro_variables_boolean_array_3d_8) To UBound(macro_variables_boolean_array_3d_8)
								For j= LBound(macro_variables_boolean_array_3d_8,2) To UBound(macro_variables_boolean_array_3d_8,2)
									For k= LBound(macro_variables_boolean_array_3d_8,3) To UBound(macro_variables_boolean_array_3d_8,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_boolean_array_3d_8(i,j,k)=CByte(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "9"
							For i= LBound(macro_variables_boolean_array_3d_9) To UBound(macro_variables_boolean_array_3d_9)
								For j= LBound(macro_variables_boolean_array_3d_9,2) To UBound(macro_variables_boolean_array_3d_9,2)
									For k= LBound(macro_variables_boolean_array_3d_9,3) To UBound(macro_variables_boolean_array_3d_9,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_boolean_array_3d_9(i,j,k)=CByte(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
					End Select
			End Select
		Else
			i=InStr(temp,"(")
			macro_variables_info(macro_variables_info_c,1)=LTrim(RTrim(Left(temp,i-1))) 'name
			macro_variables_info(macro_variables_info_c,2)="BOOLEAN_ARRAY" 'type
			macro_variables_info(macro_variables_info_c,3)="d" 'points to 1st, 2nd, 3rd... of 1d,2d,3d... variables			
			temp=Mid(temp,i) '() or (10) or (10,3) or (1 to 10) or (0 to 10, 0 to 3)
			macro_variables_info(macro_variables_info_c,4)=temp 'array_description
			macro_variables_info(macro_variables_info_c,5)="" 'array_depth ie. 1d,2d,3d
			variable_array_manager(macro_variables_info_c)
		EndIf
	Else 'this variable to dim is not an array
		If InStr(temp,"=") Then
			macro_variables_boolean_c+=1
			ReDim Preserve macro_variables_boolean_value(macro_variables_boolean_c)
			If InStr(s2,"(") Then
				Dim As Integer openprin_c,closeprin_c,openprin_x,closeprin_x,variables_c,variables_x()
				Dim As String temp_alpha,variables()
				For i = 1 To Len(s2)
					Select Case Mid(s2,i,1)
						Case Chr(34)
							temp_alpha=""
							If quote=FALSE Then quote=TRUE Else quote=FALSE
						Case "a" To "z","0" To "9","_"
							If quote=FALSE Then
								temp_alpha+=Mid(s2,i,1)
								If Len(temp_alpha)=1 Then
									Select Case temp_alpha
										Case "0" To "9"
											temp_alpha=""
									End Select
								EndIf
							EndIf
						Case Else
							If temp_alpha<>"" Then
								variables_c+=1
								ReDim Preserve variables_x(variables_c)
								ReDim Preserve variables(variables_c)
								variables_x(variables_c)=i-Len(temp_alpha)
								variables(variables_c)=temp_alpha
								temp_alpha=""
							EndIf
					End Select
				Next
				If temp_alpha<>"" Then
					variables_c+=1
					ReDim Preserve variables_x(variables_c)
					ReDim Preserve variables(variables_c)
					variables_x(variables_c)=i-Len(temp_alpha)
					variables(variables_c)=temp_alpha
					temp_alpha=""
				EndIf

				For j=variables_c To 1 Step -1
					For i=1 To macro_variables_info_c-1
						If variables(j)=macro_variables_info(i,1) Then
							Select Case macro_variables_info(i,2)
								Case "BOOLEAN_ARRAY"
									openprin_c=0
									openprin_x=0
									closeprin_c=0
									closeprin_x=0
									For x=variables_x(j)+Len(variables(j)) To Len(s2)
										Select Case Mid(s2,x,1)
											Case "("
												openprin_c+=1
												If openprin_c=1 Then openprin_x=x
											Case ")"
												closeprin_c+=1
												If closeprin_c=openprin_c Then
													closeprin_x=x
													stemp=Mid(s2,openprin_x+1,closeprin_x-openprin_x-1)
													If InStr(stemp,",") Then 'this is for 2d and 3d arrays
														stemp_c=0
														ReDim stemp_n(stemp_c)
														stemp_c_x=1
														For c=1 To Len(stemp)
															If Mid(stemp,c,1)="," Then
																stemp_c+=1
																ReDim Preserve stemp_n(stemp_c)
																stemp_n(stemp_c)=CInt(evaluate_string_numeric_expression(Mid(stemp,stemp_c_x,c-stemp_c_x)))
																stemp_c_x=c+1
															EndIf
														Next
														stemp_c+=1
														ReDim Preserve stemp_n(stemp_c)
														stemp_n(stemp_c)=CInt(evaluate_string_numeric_expression(Mid(stemp,stemp_c_x,c-stemp_c_x)))
														s2=get_multi_dim_array_type_s2(s2,i,stemp_n(),j,variables_x(),closeprin_x)
													Else
														s2=get_1d_array_type_s2(s2,i,stemp,j,variables_x(),closeprin_x)
													EndIf
												EndIf
										End Select
									Next
							End Select
							Exit For
						EndIf
					Next
				Next
			EndIf
			macro_variables_boolean_value(macro_variables_boolean_c)=CByte(evaluate_string_numeric_expression(s2))
			i=InStr(temp,"=")
			temp=Mid(temp,1,i-1)
			temp=LTrim(RTrim(temp))
			macro_variables_info(macro_variables_info_c,1)=temp
			macro_variables_info(macro_variables_info_c,2)="BOOLEAN"
			macro_variables_info(macro_variables_info_c,3)=Str(macro_variables_boolean_c)
		Else 'this is just a single value variable with no value set 
			macro_variables_boolean_c+=1
			ReDim Preserve macro_variables_boolean_value(macro_variables_boolean_c)
			macro_variables_boolean_value(macro_variables_boolean_c)=0
			macro_variables_info(macro_variables_info_c,1)=temp
			macro_variables_info(macro_variables_info_c,2)="BOOLEAN"
			macro_variables_info(macro_variables_info_c,3)=Str(macro_variables_boolean_c)			
		EndIf
	EndIf
End Sub

Sub dim_byte(temp As String)
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Sub dim_byte"
		Print #5,"temp:";temp
		'For dbugi=LBound(temp) To UBound(temp)
			'Print #5,"temp("; dbugi; "):"; temp(dbugi)
		'Next
		Print #5,"---------------"
	EndIf
	Dim As Integer i,j,k,x,c,low,hi,n
	Dim As Double dn
	Dim As Byte n_boolean
	Dim As Byte n_byte
	Dim As UByte n_ubyte
	Dim As Short n_short
	Dim As UShort n_ushort
	Dim As Long n_long
	Dim As ULong n_ulong
	Dim As UInteger n_uinteger
	Dim As LongInt n_longint
	Dim As ULongInt n_ulongint
	Dim As Single n_single
	Dim As String n_string
	macro_variables_info_c+=1
	ReDim Preserve macro_variables_info(macro_variables_info_c,8)
	Dim As String s1,s2,stemp
	Dim As Integer stemp_c,stemp_n(),stemp_c_x
	Dim As BOOLEAN quote
	
	If InStr(temp,"=") Then
		i=InStr(temp,"=")
		s1=Mid(temp,1,i-1)
		s2=Mid(temp,i+1)
	Else
		s1=temp
	EndIf
	If InStr(s1,"(") Then 'this variable to dim is an array
		If InStr(temp,"=") Then
			Dim As String temp2
			x=InStr(temp,"=")
			temp2=Mid(temp,x+1)
			temp2=LTrim(RTrim(temp2))
			temp=Mid(temp,1,x-1)
			i=InStr(temp,"(")
			macro_variables_info(macro_variables_info_c,1)=LTrim(RTrim(Left(temp,i-1))) 'name
			macro_variables_info(macro_variables_info_c,2)="BYTE_ARRAY" 'type
			macro_variables_info(macro_variables_info_c,3)="d" 'points to 1st, 2nd, 3rd... of 1d,2d,3d... variables			
			temp=Mid(temp,i) '() or (10) or (10,3) or (1 to 10) or (0 to 10, 0 to 3)
			macro_variables_info(macro_variables_info_c,4)=temp 'array_description
			macro_variables_info(macro_variables_info_c,5)="" 'array_depth ie. 1d,2d,3d
			variable_array_manager(macro_variables_info_c)
			
			c=macro_variables_info_c
			If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
			Select Case macro_variables_info(c,5)
				Case "1d"
					Select Case macro_variables_info(c,3)
						Case "1"
							For i=LBound(macro_variables_byte_array_1d_1) To UBound(macro_variables_byte_array_1d_1)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_byte_array_1d_1(i)=CByte(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "2"
							For i=LBound(macro_variables_byte_array_1d_2) To UBound(macro_variables_byte_array_1d_2)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_byte_array_1d_2(i)=CByte(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "3"
							For i=LBound(macro_variables_byte_array_1d_3) To UBound(macro_variables_byte_array_1d_3)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_byte_array_1d_3(i)=CByte(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "4"
							For i=LBound(macro_variables_byte_array_1d_4) To UBound(macro_variables_byte_array_1d_4)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_byte_array_1d_4(i)=CByte(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "5"
							For i=LBound(macro_variables_byte_array_1d_5) To UBound(macro_variables_byte_array_1d_5)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_byte_array_1d_5(i)=CByte(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "6"
							For i=LBound(macro_variables_byte_array_1d_6) To UBound(macro_variables_byte_array_1d_6)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_byte_array_1d_6(i)=CByte(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "7"
							For i=LBound(macro_variables_byte_array_1d_7) To UBound(macro_variables_byte_array_1d_7)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_byte_array_1d_7(i)=CByte(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "8"
							For i=LBound(macro_variables_byte_array_1d_8) To UBound(macro_variables_byte_array_1d_8)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_byte_array_1d_8(i)=CByte(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "9"
							For i=LBound(macro_variables_byte_array_1d_9) To UBound(macro_variables_byte_array_1d_9)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_byte_array_1d_9(i)=CByte(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
					End Select
				Case "2d"
					Select Case macro_variables_info(c,3)
						Case "1"
							For i= LBound(macro_variables_byte_array_2d_1) To UBound(macro_variables_byte_array_2d_1)
								For j= LBound(macro_variables_byte_array_2d_1,2) To UBound(macro_variables_byte_array_2d_1,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_byte_array_2d_1(i,j)=CByte(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "2"
							For i= LBound(macro_variables_byte_array_2d_2) To UBound(macro_variables_byte_array_2d_2)
								For j= LBound(macro_variables_byte_array_2d_2,2) To UBound(macro_variables_byte_array_2d_2,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_byte_array_2d_2(i,j)=CByte(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "3"
							For i= LBound(macro_variables_byte_array_2d_3) To UBound(macro_variables_byte_array_2d_3)
								For j= LBound(macro_variables_byte_array_2d_3,2) To UBound(macro_variables_byte_array_2d_3,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_byte_array_2d_3(i,j)=CByte(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "4"
							For i= LBound(macro_variables_byte_array_2d_4) To UBound(macro_variables_byte_array_2d_4)
								For j= LBound(macro_variables_byte_array_2d_4,2) To UBound(macro_variables_byte_array_2d_4,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_byte_array_2d_4(i,j)=CByte(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "5"
							For i= LBound(macro_variables_byte_array_2d_5) To UBound(macro_variables_byte_array_2d_5)
								For j= LBound(macro_variables_byte_array_2d_5,2) To UBound(macro_variables_byte_array_2d_5,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_byte_array_2d_5(i,j)=CByte(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "6"
							For i= LBound(macro_variables_byte_array_2d_6) To UBound(macro_variables_byte_array_2d_6)
								For j= LBound(macro_variables_byte_array_2d_6,2) To UBound(macro_variables_byte_array_2d_6,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_byte_array_2d_6(i,j)=CByte(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "7"
							For i= LBound(macro_variables_byte_array_2d_7) To UBound(macro_variables_byte_array_2d_7)
								For j= LBound(macro_variables_byte_array_2d_7,2) To UBound(macro_variables_byte_array_2d_7,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_byte_array_2d_7(i,j)=CByte(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "8"
							For i= LBound(macro_variables_byte_array_2d_8) To UBound(macro_variables_byte_array_2d_8)
								For j= LBound(macro_variables_byte_array_2d_8,2) To UBound(macro_variables_byte_array_2d_8,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_byte_array_2d_8(i,j)=CByte(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "9"
							For i= LBound(macro_variables_byte_array_2d_9) To UBound(macro_variables_byte_array_2d_9)
								For j= LBound(macro_variables_byte_array_2d_9,2) To UBound(macro_variables_byte_array_2d_9,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_byte_array_2d_9(i,j)=CByte(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
					End Select
				Case "3d"
					Select Case macro_variables_info(c,3)
						Case "1"
							For i= LBound(macro_variables_byte_array_3d_1) To UBound(macro_variables_byte_array_3d_1)
								For j= LBound(macro_variables_byte_array_3d_1,2) To UBound(macro_variables_byte_array_3d_1,2)
									For k= LBound(macro_variables_byte_array_3d_1,3) To UBound(macro_variables_byte_array_3d_1,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_byte_array_3d_1(i,j,k)=CByte(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "2"
							For i= LBound(macro_variables_byte_array_3d_2) To UBound(macro_variables_byte_array_3d_2)
								For j= LBound(macro_variables_byte_array_3d_2,2) To UBound(macro_variables_byte_array_3d_2,2)
									For k= LBound(macro_variables_byte_array_3d_2,3) To UBound(macro_variables_byte_array_3d_2,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_byte_array_3d_2(i,j,k)=CByte(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "3"
							For i= LBound(macro_variables_byte_array_3d_3) To UBound(macro_variables_byte_array_3d_3)
								For j= LBound(macro_variables_byte_array_3d_3,2) To UBound(macro_variables_byte_array_3d_3,2)
									For k= LBound(macro_variables_byte_array_3d_3,3) To UBound(macro_variables_byte_array_3d_3,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_byte_array_3d_3(i,j,k)=CByte(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "4"
							For i= LBound(macro_variables_byte_array_3d_4) To UBound(macro_variables_byte_array_3d_4)
								For j= LBound(macro_variables_byte_array_3d_4,2) To UBound(macro_variables_byte_array_3d_4,2)
									For k= LBound(macro_variables_byte_array_3d_4,3) To UBound(macro_variables_byte_array_3d_4,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_byte_array_3d_4(i,j,k)=CByte(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "5"
							For i= LBound(macro_variables_byte_array_3d_5) To UBound(macro_variables_byte_array_3d_5)
								For j= LBound(macro_variables_byte_array_3d_5,2) To UBound(macro_variables_byte_array_3d_5,2)
									For k= LBound(macro_variables_byte_array_3d_5,3) To UBound(macro_variables_byte_array_3d_5,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_byte_array_3d_5(i,j,k)=CByte(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "6"
							For i= LBound(macro_variables_byte_array_3d_6) To UBound(macro_variables_byte_array_3d_6)
								For j= LBound(macro_variables_byte_array_3d_6,2) To UBound(macro_variables_byte_array_3d_6,2)
									For k= LBound(macro_variables_byte_array_3d_6,3) To UBound(macro_variables_byte_array_3d_6,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_byte_array_3d_6(i,j,k)=CByte(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "7"
							For i= LBound(macro_variables_byte_array_3d_7) To UBound(macro_variables_byte_array_3d_7)
								For j= LBound(macro_variables_byte_array_3d_7,2) To UBound(macro_variables_byte_array_3d_7,2)
									For k= LBound(macro_variables_byte_array_3d_7,3) To UBound(macro_variables_byte_array_3d_7,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_byte_array_3d_7(i,j,k)=CByte(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "8"
							For i= LBound(macro_variables_byte_array_3d_8) To UBound(macro_variables_byte_array_3d_8)
								For j= LBound(macro_variables_byte_array_3d_8,2) To UBound(macro_variables_byte_array_3d_8,2)
									For k= LBound(macro_variables_byte_array_3d_8,3) To UBound(macro_variables_byte_array_3d_8,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_byte_array_3d_8(i,j,k)=CByte(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "9"
							For i= LBound(macro_variables_byte_array_3d_9) To UBound(macro_variables_byte_array_3d_9)
								For j= LBound(macro_variables_byte_array_3d_9,2) To UBound(macro_variables_byte_array_3d_9,2)
									For k= LBound(macro_variables_byte_array_3d_9,3) To UBound(macro_variables_byte_array_3d_9,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_byte_array_3d_9(i,j,k)=CByte(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
					End Select
			End Select
		Else
			i=InStr(temp,"(")
			macro_variables_info(macro_variables_info_c,1)=LTrim(RTrim(Left(temp,i-1))) 'name
			macro_variables_info(macro_variables_info_c,2)="BYTE_ARRAY" 'type
			macro_variables_info(macro_variables_info_c,3)="d" 'points to 1st, 2nd, 3rd... of 1d,2d,3d... variables			
			temp=Mid(temp,i) '() or (10) or (10,3) or (1 to 10) or (0 to 10, 0 to 3)
			macro_variables_info(macro_variables_info_c,4)=temp 'array_description
			macro_variables_info(macro_variables_info_c,5)="" 'array_depth ie. 1d,2d,3d
			variable_array_manager(macro_variables_info_c)
		EndIf
	Else 'this variable to dim is not an array
		If InStr(temp,"=") Then
			macro_variables_byte_c+=1
			ReDim Preserve macro_variables_byte_value(macro_variables_byte_c)
			If InStr(s2,"(") Then
				Dim As Integer openprin_c,closeprin_c,openprin_x,closeprin_x,variables_c,variables_x()
				Dim As String temp_alpha,variables()
				For i = 1 To Len(s2)
					Select Case Mid(s2,i,1)
						Case Chr(34)
							temp_alpha=""
							If quote=FALSE Then quote=TRUE Else quote=FALSE
						Case "a" To "z","0" To "9","_"
							If quote=FALSE Then
								temp_alpha+=Mid(s2,i,1)
								If Len(temp_alpha)=1 Then
									Select Case temp_alpha
										Case "0" To "9"
											temp_alpha=""
									End Select
								EndIf
							EndIf
						Case Else
							If temp_alpha<>"" Then
								variables_c+=1
								ReDim Preserve variables_x(variables_c)
								ReDim Preserve variables(variables_c)
								variables_x(variables_c)=i-Len(temp_alpha)
								variables(variables_c)=temp_alpha
								temp_alpha=""
							EndIf
					End Select
				Next
				If temp_alpha<>"" Then
					variables_c+=1
					ReDim Preserve variables_x(variables_c)
					ReDim Preserve variables(variables_c)
					variables_x(variables_c)=i-Len(temp_alpha)
					variables(variables_c)=temp_alpha
					temp_alpha=""
				EndIf

				For j=variables_c To 1 Step -1
					For i=1 To macro_variables_info_c-1
						If variables(j)=macro_variables_info(i,1) Then
							Select Case macro_variables_info(i,2)
								Case "BYTE_ARRAY"
									openprin_c=0
									openprin_x=0
									closeprin_c=0
									closeprin_x=0
									For x=variables_x(j)+Len(variables(j)) To Len(s2)
										Select Case Mid(s2,x,1)
											Case "("
												openprin_c+=1
												If openprin_c=1 Then openprin_x=x
											Case ")"
												closeprin_c+=1
												If closeprin_c=openprin_c Then
													closeprin_x=x
													stemp=Mid(s2,openprin_x+1,closeprin_x-openprin_x-1)
													If InStr(stemp,",") Then 'this is for 2d and 3d arrays
														stemp_c=0
														ReDim stemp_n(stemp_c)
														stemp_c_x=1
														For c=1 To Len(stemp)
															If Mid(stemp,c,1)="," Then
																stemp_c+=1
																ReDim Preserve stemp_n(stemp_c)
																stemp_n(stemp_c)=CInt(evaluate_string_numeric_expression(Mid(stemp,stemp_c_x,c-stemp_c_x)))
																stemp_c_x=c+1
															EndIf
														Next
														stemp_c+=1
														ReDim Preserve stemp_n(stemp_c)
														stemp_n(stemp_c)=CInt(evaluate_string_numeric_expression(Mid(stemp,stemp_c_x,c-stemp_c_x)))
														s2=get_multi_dim_array_type_s2(s2,i,stemp_n(),j,variables_x(),closeprin_x)
													Else
														s2=get_1d_array_type_s2(s2,i,stemp,j,variables_x(),closeprin_x)
													EndIf
												EndIf
										End Select
									Next
							End Select
							Exit For
						EndIf
					Next
				Next
			EndIf
			macro_variables_byte_value(macro_variables_byte_c)=CByte(evaluate_string_numeric_expression(s2))
			i=InStr(temp,"=")
			temp=Mid(temp,1,i-1)
			temp=LTrim(RTrim(temp))
			macro_variables_info(macro_variables_info_c,1)=temp
			macro_variables_info(macro_variables_info_c,2)="BYTE"
			macro_variables_info(macro_variables_info_c,3)=Str(macro_variables_byte_c)
		Else 'this is just a single value variable with no value set 
			macro_variables_byte_c+=1
			ReDim Preserve macro_variables_byte_value(macro_variables_byte_c)
			macro_variables_byte_value(macro_variables_byte_c)=0
			macro_variables_info(macro_variables_info_c,1)=temp
			macro_variables_info(macro_variables_info_c,2)="BYTE"
			macro_variables_info(macro_variables_info_c,3)=Str(macro_variables_byte_c)			
		EndIf
	EndIf
End Sub

Sub dim_ubyte(temp As String)
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Sub dim_ubyte"
		Print #5,"temp:";temp
		'For dbugi=LBound(temp) To UBound(temp)
			'Print #5,"temp("; dbugi; "):"; temp(dbugi)
		'Next
		Print #5,"---------------"
	EndIf
	Dim As Integer i,j,k,x,c,low,hi,n
	Dim As Double dn
	Dim As Byte n_boolean
	Dim As Byte n_byte
	Dim As UByte n_ubyte
	Dim As Short n_short
	Dim As UShort n_ushort
	Dim As Long n_long
	Dim As ULong n_ulong
	Dim As UInteger n_uinteger
	Dim As LongInt n_longint
	Dim As ULongInt n_ulongint
	Dim As Single n_single
	Dim As String n_string
	macro_variables_info_c+=1
	ReDim Preserve macro_variables_info(macro_variables_info_c,8)
	Dim As String s1,s2,stemp
	Dim As Integer stemp_c,stemp_n(),stemp_c_x
	Dim As BOOLEAN quote
	
	If InStr(temp,"=") Then
		i=InStr(temp,"=")
		s1=Mid(temp,1,i-1)
		s2=Mid(temp,i+1)
	Else
		s1=temp
	EndIf
	If InStr(s1,"(") Then 'this variable to dim is an array
		If InStr(temp,"=") Then
			Dim As String temp2
			x=InStr(temp,"=")
			temp2=Mid(temp,x+1)
			temp2=LTrim(RTrim(temp2))
			temp=Mid(temp,1,x-1)
			i=InStr(temp,"(")
			macro_variables_info(macro_variables_info_c,1)=LTrim(RTrim(Left(temp,i-1))) 'name
			macro_variables_info(macro_variables_info_c,2)="UBYTE_ARRAY" 'type
			macro_variables_info(macro_variables_info_c,3)="d" 'points to 1st, 2nd, 3rd... of 1d,2d,3d... variables			
			temp=Mid(temp,i) '() or (10) or (10,3) or (1 to 10) or (0 to 10, 0 to 3)
			macro_variables_info(macro_variables_info_c,4)=temp 'array_description
			macro_variables_info(macro_variables_info_c,5)="" 'array_depth ie. 1d,2d,3d
			variable_array_manager(macro_variables_info_c)
			
			c=macro_variables_info_c
			If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
			Select Case macro_variables_info(c,5)
				Case "1d"
					Select Case macro_variables_info(c,3)
						Case "1"
							For i=LBound(macro_variables_ubyte_array_1d_1) To UBound(macro_variables_ubyte_array_1d_1)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_ubyte_array_1d_1(i)=CUByte(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "2"
							For i=LBound(macro_variables_ubyte_array_1d_2) To UBound(macro_variables_ubyte_array_1d_2)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_ubyte_array_1d_2(i)=CUByte(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "3"
							For i=LBound(macro_variables_ubyte_array_1d_3) To UBound(macro_variables_ubyte_array_1d_3)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_ubyte_array_1d_3(i)=CUByte(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "4"
							For i=LBound(macro_variables_ubyte_array_1d_4) To UBound(macro_variables_ubyte_array_1d_4)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_ubyte_array_1d_4(i)=CUByte(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "5"
							For i=LBound(macro_variables_ubyte_array_1d_5) To UBound(macro_variables_ubyte_array_1d_5)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_ubyte_array_1d_5(i)=CUByte(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "6"
							For i=LBound(macro_variables_ubyte_array_1d_6) To UBound(macro_variables_ubyte_array_1d_6)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_ubyte_array_1d_6(i)=CUByte(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "7"
							For i=LBound(macro_variables_ubyte_array_1d_7) To UBound(macro_variables_ubyte_array_1d_7)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_ubyte_array_1d_7(i)=CUByte(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "8"
							For i=LBound(macro_variables_ubyte_array_1d_8) To UBound(macro_variables_ubyte_array_1d_8)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_ubyte_array_1d_8(i)=CUByte(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "9"
							For i=LBound(macro_variables_ubyte_array_1d_9) To UBound(macro_variables_ubyte_array_1d_9)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_ubyte_array_1d_9(i)=CUByte(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
					End Select
				Case "2d"
					Select Case macro_variables_info(c,3)
						Case "1"
							For i= LBound(macro_variables_ubyte_array_2d_1) To UBound(macro_variables_ubyte_array_2d_1)
								For j= LBound(macro_variables_ubyte_array_2d_1,2) To UBound(macro_variables_ubyte_array_2d_1,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_ubyte_array_2d_1(i,j)=CUByte(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "2"
							For i= LBound(macro_variables_ubyte_array_2d_2) To UBound(macro_variables_ubyte_array_2d_2)
								For j= LBound(macro_variables_ubyte_array_2d_2,2) To UBound(macro_variables_ubyte_array_2d_2,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_ubyte_array_2d_2(i,j)=CUByte(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "3"
							For i= LBound(macro_variables_ubyte_array_2d_3) To UBound(macro_variables_ubyte_array_2d_3)
								For j= LBound(macro_variables_ubyte_array_2d_3,2) To UBound(macro_variables_ubyte_array_2d_3,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_ubyte_array_2d_3(i,j)=CUByte(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "4"
							For i= LBound(macro_variables_ubyte_array_2d_4) To UBound(macro_variables_ubyte_array_2d_4)
								For j= LBound(macro_variables_ubyte_array_2d_4,2) To UBound(macro_variables_ubyte_array_2d_4,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_ubyte_array_2d_4(i,j)=CUByte(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "5"
							For i= LBound(macro_variables_ubyte_array_2d_5) To UBound(macro_variables_ubyte_array_2d_5)
								For j= LBound(macro_variables_ubyte_array_2d_5,2) To UBound(macro_variables_ubyte_array_2d_5,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_ubyte_array_2d_5(i,j)=CUByte(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "6"
							For i= LBound(macro_variables_ubyte_array_2d_6) To UBound(macro_variables_ubyte_array_2d_6)
								For j= LBound(macro_variables_ubyte_array_2d_6,2) To UBound(macro_variables_ubyte_array_2d_6,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_ubyte_array_2d_6(i,j)=CUByte(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "7"
							For i= LBound(macro_variables_ubyte_array_2d_7) To UBound(macro_variables_ubyte_array_2d_7)
								For j= LBound(macro_variables_ubyte_array_2d_7,2) To UBound(macro_variables_ubyte_array_2d_7,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_ubyte_array_2d_7(i,j)=CUByte(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "8"
							For i= LBound(macro_variables_ubyte_array_2d_8) To UBound(macro_variables_ubyte_array_2d_8)
								For j= LBound(macro_variables_ubyte_array_2d_8,2) To UBound(macro_variables_ubyte_array_2d_8,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_ubyte_array_2d_8(i,j)=CUByte(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "9"
							For i= LBound(macro_variables_ubyte_array_2d_9) To UBound(macro_variables_ubyte_array_2d_9)
								For j= LBound(macro_variables_ubyte_array_2d_9,2) To UBound(macro_variables_ubyte_array_2d_9,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_ubyte_array_2d_9(i,j)=CUByte(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
					End Select
				Case "3d"
					Select Case macro_variables_info(c,3)
						Case "1"
							For i= LBound(macro_variables_ubyte_array_3d_1) To UBound(macro_variables_ubyte_array_3d_1)
								For j= LBound(macro_variables_ubyte_array_3d_1,2) To UBound(macro_variables_ubyte_array_3d_1,2)
									For k= LBound(macro_variables_ubyte_array_3d_1,3) To UBound(macro_variables_ubyte_array_3d_1,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_ubyte_array_3d_1(i,j,k)=CUByte(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "2"
							For i= LBound(macro_variables_ubyte_array_3d_2) To UBound(macro_variables_ubyte_array_3d_2)
								For j= LBound(macro_variables_ubyte_array_3d_2,2) To UBound(macro_variables_ubyte_array_3d_2,2)
									For k= LBound(macro_variables_ubyte_array_3d_2,3) To UBound(macro_variables_ubyte_array_3d_2,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_ubyte_array_3d_2(i,j,k)=CUByte(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "3"
							For i= LBound(macro_variables_ubyte_array_3d_3) To UBound(macro_variables_ubyte_array_3d_3)
								For j= LBound(macro_variables_ubyte_array_3d_3,2) To UBound(macro_variables_ubyte_array_3d_3,2)
									For k= LBound(macro_variables_ubyte_array_3d_3,3) To UBound(macro_variables_ubyte_array_3d_3,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_ubyte_array_3d_3(i,j,k)=CUByte(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "4"
							For i= LBound(macro_variables_ubyte_array_3d_4) To UBound(macro_variables_ubyte_array_3d_4)
								For j= LBound(macro_variables_ubyte_array_3d_4,2) To UBound(macro_variables_ubyte_array_3d_4,2)
									For k= LBound(macro_variables_ubyte_array_3d_4,3) To UBound(macro_variables_ubyte_array_3d_4,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_ubyte_array_3d_4(i,j,k)=CUByte(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "5"
							For i= LBound(macro_variables_ubyte_array_3d_5) To UBound(macro_variables_ubyte_array_3d_5)
								For j= LBound(macro_variables_ubyte_array_3d_5,2) To UBound(macro_variables_ubyte_array_3d_5,2)
									For k= LBound(macro_variables_ubyte_array_3d_5,3) To UBound(macro_variables_ubyte_array_3d_5,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_ubyte_array_3d_5(i,j,k)=CUByte(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "6"
							For i= LBound(macro_variables_ubyte_array_3d_6) To UBound(macro_variables_ubyte_array_3d_6)
								For j= LBound(macro_variables_ubyte_array_3d_6,2) To UBound(macro_variables_ubyte_array_3d_6,2)
									For k= LBound(macro_variables_ubyte_array_3d_6,3) To UBound(macro_variables_ubyte_array_3d_6,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_ubyte_array_3d_6(i,j,k)=CUByte(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "7"
							For i= LBound(macro_variables_ubyte_array_3d_7) To UBound(macro_variables_ubyte_array_3d_7)
								For j= LBound(macro_variables_ubyte_array_3d_7,2) To UBound(macro_variables_ubyte_array_3d_7,2)
									For k= LBound(macro_variables_ubyte_array_3d_7,3) To UBound(macro_variables_ubyte_array_3d_7,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_ubyte_array_3d_7(i,j,k)=CUByte(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "8"
							For i= LBound(macro_variables_ubyte_array_3d_8) To UBound(macro_variables_ubyte_array_3d_8)
								For j= LBound(macro_variables_ubyte_array_3d_8,2) To UBound(macro_variables_ubyte_array_3d_8,2)
									For k= LBound(macro_variables_ubyte_array_3d_8,3) To UBound(macro_variables_ubyte_array_3d_8,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_ubyte_array_3d_8(i,j,k)=CUByte(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "9"
							For i= LBound(macro_variables_ubyte_array_3d_9) To UBound(macro_variables_ubyte_array_3d_9)
								For j= LBound(macro_variables_ubyte_array_3d_9,2) To UBound(macro_variables_ubyte_array_3d_9,2)
									For k= LBound(macro_variables_ubyte_array_3d_9,3) To UBound(macro_variables_ubyte_array_3d_9,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_ubyte_array_3d_9(i,j,k)=CUByte(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
					End Select
			End Select
		Else
			i=InStr(temp,"(")
			macro_variables_info(macro_variables_info_c,1)=LTrim(RTrim(Left(temp,i-1))) 'name
			macro_variables_info(macro_variables_info_c,2)="UBYTE_ARRAY" 'type
			macro_variables_info(macro_variables_info_c,3)="d" 'points to 1st, 2nd, 3rd... of 1d,2d,3d... variables			
			temp=Mid(temp,i) '() or (10) or (10,3) or (1 to 10) or (0 to 10, 0 to 3)
			macro_variables_info(macro_variables_info_c,4)=temp 'array_description
			macro_variables_info(macro_variables_info_c,5)="" 'array_depth ie. 1d,2d,3d
			variable_array_manager(macro_variables_info_c)
		EndIf
	Else 'this variable to dim is not an array
		If InStr(temp,"=") Then
			macro_variables_ubyte_c+=1
			ReDim Preserve macro_variables_ubyte_value(macro_variables_ubyte_c)
			If InStr(s2,"(") Then
				Dim As Integer openprin_c,closeprin_c,openprin_x,closeprin_x,variables_c,variables_x()
				Dim As String temp_alpha,variables()
				For i = 1 To Len(s2)
					Select Case Mid(s2,i,1)
						Case Chr(34)
							temp_alpha=""
							If quote=FALSE Then quote=TRUE Else quote=FALSE
						Case "a" To "z","0" To "9","_"
							If quote=FALSE Then
								temp_alpha+=Mid(s2,i,1)
								If Len(temp_alpha)=1 Then
									Select Case temp_alpha
										Case "0" To "9"
											temp_alpha=""
									End Select
								EndIf
							EndIf
						Case Else
							If temp_alpha<>"" Then
								variables_c+=1
								ReDim Preserve variables_x(variables_c)
								ReDim Preserve variables(variables_c)
								variables_x(variables_c)=i-Len(temp_alpha)
								variables(variables_c)=temp_alpha
								temp_alpha=""
							EndIf
					End Select
				Next
				If temp_alpha<>"" Then
					variables_c+=1
					ReDim Preserve variables_x(variables_c)
					ReDim Preserve variables(variables_c)
					variables_x(variables_c)=i-Len(temp_alpha)
					variables(variables_c)=temp_alpha
					temp_alpha=""
				EndIf

				For j=variables_c To 1 Step -1
					For i=1 To macro_variables_info_c-1
						If variables(j)=macro_variables_info(i,1) Then
							Select Case macro_variables_info(i,2)
								Case "UBYTE_ARRAY"
									openprin_c=0
									openprin_x=0
									closeprin_c=0
									closeprin_x=0
									For x=variables_x(j)+Len(variables(j)) To Len(s2)
										Select Case Mid(s2,x,1)
											Case "("
												openprin_c+=1
												If openprin_c=1 Then openprin_x=x
											Case ")"
												closeprin_c+=1
												If closeprin_c=openprin_c Then
													closeprin_x=x
													stemp=Mid(s2,openprin_x+1,closeprin_x-openprin_x-1)
													If InStr(stemp,",") Then 'this is for 2d and 3d arrays
														stemp_c=0
														ReDim stemp_n(stemp_c)
														stemp_c_x=1
														For c=1 To Len(stemp)
															If Mid(stemp,c,1)="," Then
																stemp_c+=1
																ReDim Preserve stemp_n(stemp_c)
																stemp_n(stemp_c)=CInt(evaluate_string_numeric_expression(Mid(stemp,stemp_c_x,c-stemp_c_x)))
																stemp_c_x=c+1
															EndIf
														Next
														stemp_c+=1
														ReDim Preserve stemp_n(stemp_c)
														stemp_n(stemp_c)=CInt(evaluate_string_numeric_expression(Mid(stemp,stemp_c_x,c-stemp_c_x)))
														s2=get_multi_dim_array_type_s2(s2,i,stemp_n(),j,variables_x(),closeprin_x)
													Else
														s2=get_1d_array_type_s2(s2,i,stemp,j,variables_x(),closeprin_x)
													EndIf
												EndIf
										End Select
									Next
							End Select
							Exit For
						EndIf
					Next
				Next
			EndIf
			macro_variables_ubyte_value(macro_variables_ubyte_c)=CUByte(evaluate_string_numeric_expression(s2))
			i=InStr(temp,"=")
			temp=Mid(temp,1,i-1)
			temp=LTrim(RTrim(temp))
			macro_variables_info(macro_variables_info_c,1)=temp
			macro_variables_info(macro_variables_info_c,2)="UBYTE"
			macro_variables_info(macro_variables_info_c,3)=Str(macro_variables_ubyte_c)
		Else 'this is just a single value variable with no value set 
			macro_variables_ubyte_c+=1
			ReDim Preserve macro_variables_ubyte_value(macro_variables_ubyte_c)
			macro_variables_ubyte_value(macro_variables_ubyte_c)=0
			macro_variables_info(macro_variables_info_c,1)=temp
			macro_variables_info(macro_variables_info_c,2)="UBYTE"
			macro_variables_info(macro_variables_info_c,3)=Str(macro_variables_ubyte_c)			
		EndIf
	EndIf
End Sub

Sub dim_short(temp As String)
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Sub dim_short"
		Print #5,"temp:";temp
		'For dbugi=LBound(temp) To UBound(temp)
			'Print #5,"temp("; dbugi; "):"; temp(dbugi)
		'Next
		Print #5,"---------------"
	EndIf
	Dim As Integer i,j,k,x,c,low,hi,n
	Dim As Double dn
	Dim As Byte n_boolean
	Dim As Byte n_byte
	Dim As UByte n_ubyte
	Dim As Short n_short
	Dim As UShort n_ushort
	Dim As Long n_long
	Dim As ULong n_ulong
	Dim As UInteger n_uinteger
	Dim As LongInt n_longint
	Dim As ULongInt n_ulongint
	Dim As Single n_single
	Dim As String n_string
	macro_variables_info_c+=1
	ReDim Preserve macro_variables_info(macro_variables_info_c,8)
	Dim As String s1,s2,stemp
	Dim As Integer stemp_c,stemp_n(),stemp_c_x
	Dim As BOOLEAN quote
	
	If InStr(temp,"=") Then
		i=InStr(temp,"=")
		s1=Mid(temp,1,i-1)
		s2=Mid(temp,i+1)
	Else
		s1=temp
	EndIf
	If InStr(s1,"(") Then 'this variable to dim is an array
		If InStr(temp,"=") Then
			Dim As String temp2
			x=InStr(temp,"=")
			temp2=Mid(temp,x+1)
			temp2=LTrim(RTrim(temp2))
			temp=Mid(temp,1,x-1)
			i=InStr(temp,"(")
			macro_variables_info(macro_variables_info_c,1)=LTrim(RTrim(Left(temp,i-1))) 'name
			macro_variables_info(macro_variables_info_c,2)="SHORT_ARRAY" 'type
			macro_variables_info(macro_variables_info_c,3)="d" 'points to 1st, 2nd, 3rd... of 1d,2d,3d... variables			
			temp=Mid(temp,i) '() or (10) or (10,3) or (1 to 10) or (0 to 10, 0 to 3)
			macro_variables_info(macro_variables_info_c,4)=temp 'array_description
			macro_variables_info(macro_variables_info_c,5)="" 'array_depth ie. 1d,2d,3d
			variable_array_manager(macro_variables_info_c)
			
			c=macro_variables_info_c
			If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
			Select Case macro_variables_info(c,5)
				Case "1d"
					Select Case macro_variables_info(c,3)
						Case "1"
							For i=LBound(macro_variables_short_array_1d_1) To UBound(macro_variables_short_array_1d_1)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_short_array_1d_1(i)=CShort(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "2"
							For i=LBound(macro_variables_short_array_1d_2) To UBound(macro_variables_short_array_1d_2)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_short_array_1d_2(i)=CShort(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "3"
							For i=LBound(macro_variables_short_array_1d_3) To UBound(macro_variables_short_array_1d_3)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_short_array_1d_3(i)=CShort(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "4"
							For i=LBound(macro_variables_short_array_1d_4) To UBound(macro_variables_short_array_1d_4)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_short_array_1d_4(i)=CShort(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "5"
							For i=LBound(macro_variables_short_array_1d_5) To UBound(macro_variables_short_array_1d_5)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_short_array_1d_5(i)=CShort(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "6"
							For i=LBound(macro_variables_short_array_1d_6) To UBound(macro_variables_short_array_1d_6)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_short_array_1d_6(i)=CShort(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "7"
							For i=LBound(macro_variables_short_array_1d_7) To UBound(macro_variables_short_array_1d_7)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_short_array_1d_7(i)=CShort(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "8"
							For i=LBound(macro_variables_short_array_1d_8) To UBound(macro_variables_short_array_1d_8)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_short_array_1d_8(i)=CShort(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "9"
							For i=LBound(macro_variables_short_array_1d_9) To UBound(macro_variables_short_array_1d_9)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_short_array_1d_9(i)=CShort(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
					End Select
				Case "2d"
					Select Case macro_variables_info(c,3)
						Case "1"
							For i= LBound(macro_variables_short_array_2d_1) To UBound(macro_variables_short_array_2d_1)
								For j= LBound(macro_variables_short_array_2d_1,2) To UBound(macro_variables_short_array_2d_1,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_short_array_2d_1(i,j)=CShort(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "2"
							For i= LBound(macro_variables_short_array_2d_2) To UBound(macro_variables_short_array_2d_2)
								For j= LBound(macro_variables_short_array_2d_2,2) To UBound(macro_variables_short_array_2d_2,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_short_array_2d_2(i,j)=CShort(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "3"
							For i= LBound(macro_variables_short_array_2d_3) To UBound(macro_variables_short_array_2d_3)
								For j= LBound(macro_variables_short_array_2d_3,2) To UBound(macro_variables_short_array_2d_3,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_short_array_2d_3(i,j)=CShort(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "4"
							For i= LBound(macro_variables_short_array_2d_4) To UBound(macro_variables_short_array_2d_4)
								For j= LBound(macro_variables_short_array_2d_4,2) To UBound(macro_variables_short_array_2d_4,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_short_array_2d_4(i,j)=CShort(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "5"
							For i= LBound(macro_variables_short_array_2d_5) To UBound(macro_variables_short_array_2d_5)
								For j= LBound(macro_variables_short_array_2d_5,2) To UBound(macro_variables_short_array_2d_5,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_short_array_2d_5(i,j)=CShort(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "6"
							For i= LBound(macro_variables_short_array_2d_6) To UBound(macro_variables_short_array_2d_6)
								For j= LBound(macro_variables_short_array_2d_6,2) To UBound(macro_variables_short_array_2d_6,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_short_array_2d_6(i,j)=CShort(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "7"
							For i= LBound(macro_variables_short_array_2d_7) To UBound(macro_variables_short_array_2d_7)
								For j= LBound(macro_variables_short_array_2d_7,2) To UBound(macro_variables_short_array_2d_7,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_short_array_2d_7(i,j)=CShort(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "8"
							For i= LBound(macro_variables_short_array_2d_8) To UBound(macro_variables_short_array_2d_8)
								For j= LBound(macro_variables_short_array_2d_8,2) To UBound(macro_variables_short_array_2d_8,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_short_array_2d_8(i,j)=CShort(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "9"
							For i= LBound(macro_variables_short_array_2d_9) To UBound(macro_variables_short_array_2d_9)
								For j= LBound(macro_variables_short_array_2d_9,2) To UBound(macro_variables_short_array_2d_9,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_short_array_2d_9(i,j)=CShort(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
					End Select
				Case "3d"
					Select Case macro_variables_info(c,3)
						Case "1"
							For i= LBound(macro_variables_short_array_3d_1) To UBound(macro_variables_short_array_3d_1)
								For j= LBound(macro_variables_short_array_3d_1,2) To UBound(macro_variables_short_array_3d_1,2)
									For k= LBound(macro_variables_short_array_3d_1,3) To UBound(macro_variables_short_array_3d_1,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_short_array_3d_1(i,j,k)=CShort(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "2"
							For i= LBound(macro_variables_short_array_3d_2) To UBound(macro_variables_short_array_3d_2)
								For j= LBound(macro_variables_short_array_3d_2,2) To UBound(macro_variables_short_array_3d_2,2)
									For k= LBound(macro_variables_short_array_3d_2,3) To UBound(macro_variables_short_array_3d_2,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_short_array_3d_2(i,j,k)=CShort(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "3"
							For i= LBound(macro_variables_short_array_3d_3) To UBound(macro_variables_short_array_3d_3)
								For j= LBound(macro_variables_short_array_3d_3,2) To UBound(macro_variables_short_array_3d_3,2)
									For k= LBound(macro_variables_short_array_3d_3,3) To UBound(macro_variables_short_array_3d_3,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_short_array_3d_3(i,j,k)=CShort(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "4"
							For i= LBound(macro_variables_short_array_3d_4) To UBound(macro_variables_short_array_3d_4)
								For j= LBound(macro_variables_short_array_3d_4,2) To UBound(macro_variables_short_array_3d_4,2)
									For k= LBound(macro_variables_short_array_3d_4,3) To UBound(macro_variables_short_array_3d_4,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_short_array_3d_4(i,j,k)=CShort(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "5"
							For i= LBound(macro_variables_short_array_3d_5) To UBound(macro_variables_short_array_3d_5)
								For j= LBound(macro_variables_short_array_3d_5,2) To UBound(macro_variables_short_array_3d_5,2)
									For k= LBound(macro_variables_short_array_3d_5,3) To UBound(macro_variables_short_array_3d_5,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_short_array_3d_5(i,j,k)=CShort(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "6"
							For i= LBound(macro_variables_short_array_3d_6) To UBound(macro_variables_short_array_3d_6)
								For j= LBound(macro_variables_short_array_3d_6,2) To UBound(macro_variables_short_array_3d_6,2)
									For k= LBound(macro_variables_short_array_3d_6,3) To UBound(macro_variables_short_array_3d_6,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_short_array_3d_6(i,j,k)=CShort(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "7"
							For i= LBound(macro_variables_short_array_3d_7) To UBound(macro_variables_short_array_3d_7)
								For j= LBound(macro_variables_short_array_3d_7,2) To UBound(macro_variables_short_array_3d_7,2)
									For k= LBound(macro_variables_short_array_3d_7,3) To UBound(macro_variables_short_array_3d_7,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_short_array_3d_7(i,j,k)=CShort(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "8"
							For i= LBound(macro_variables_short_array_3d_8) To UBound(macro_variables_short_array_3d_8)
								For j= LBound(macro_variables_short_array_3d_8,2) To UBound(macro_variables_short_array_3d_8,2)
									For k= LBound(macro_variables_short_array_3d_8,3) To UBound(macro_variables_short_array_3d_8,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_short_array_3d_8(i,j,k)=CShort(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "9"
							For i= LBound(macro_variables_short_array_3d_9) To UBound(macro_variables_short_array_3d_9)
								For j= LBound(macro_variables_short_array_3d_9,2) To UBound(macro_variables_short_array_3d_9,2)
									For k= LBound(macro_variables_short_array_3d_9,3) To UBound(macro_variables_short_array_3d_9,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_short_array_3d_9(i,j,k)=CShort(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
					End Select
			End Select
		Else
			i=InStr(temp,"(")
			macro_variables_info(macro_variables_info_c,1)=LTrim(RTrim(Left(temp,i-1))) 'name
			macro_variables_info(macro_variables_info_c,2)="SHORT_ARRAY" 'type
			macro_variables_info(macro_variables_info_c,3)="d" 'points to 1st, 2nd, 3rd... of 1d,2d,3d... variables			
			temp=Mid(temp,i) '() or (10) or (10,3) or (1 to 10) or (0 to 10, 0 to 3)
			macro_variables_info(macro_variables_info_c,4)=temp 'array_description
			macro_variables_info(macro_variables_info_c,5)="" 'array_depth ie. 1d,2d,3d
			variable_array_manager(macro_variables_info_c)
		EndIf
	Else 'this variable to dim is not an array
		If InStr(temp,"=") Then
			macro_variables_short_c+=1
			ReDim Preserve macro_variables_short_value(macro_variables_short_c)
			If InStr(s2,"(") Then
				Dim As Integer openprin_c,closeprin_c,openprin_x,closeprin_x,variables_c,variables_x()
				Dim As String temp_alpha,variables()
				For i = 1 To Len(s2)
					Select Case Mid(s2,i,1)
						Case Chr(34)
							temp_alpha=""
							If quote=FALSE Then quote=TRUE Else quote=FALSE
						Case "a" To "z","0" To "9","_"
							If quote=FALSE Then
								temp_alpha+=Mid(s2,i,1)
								If Len(temp_alpha)=1 Then
									Select Case temp_alpha
										Case "0" To "9"
											temp_alpha=""
									End Select
								EndIf
							EndIf
						Case Else
							If temp_alpha<>"" Then
								variables_c+=1
								ReDim Preserve variables_x(variables_c)
								ReDim Preserve variables(variables_c)
								variables_x(variables_c)=i-Len(temp_alpha)
								variables(variables_c)=temp_alpha
								temp_alpha=""
							EndIf
					End Select
				Next
				If temp_alpha<>"" Then
					variables_c+=1
					ReDim Preserve variables_x(variables_c)
					ReDim Preserve variables(variables_c)
					variables_x(variables_c)=i-Len(temp_alpha)
					variables(variables_c)=temp_alpha
					temp_alpha=""
				EndIf

				For j=variables_c To 1 Step -1
					For i=1 To macro_variables_info_c-1
						If variables(j)=macro_variables_info(i,1) Then
							Select Case macro_variables_info(i,2)
								Case "SHORT_ARRAY"
									openprin_c=0
									openprin_x=0
									closeprin_c=0
									closeprin_x=0
									For x=variables_x(j)+Len(variables(j)) To Len(s2)
										Select Case Mid(s2,x,1)
											Case "("
												openprin_c+=1
												If openprin_c=1 Then openprin_x=x
											Case ")"
												closeprin_c+=1
												If closeprin_c=openprin_c Then
													closeprin_x=x
													stemp=Mid(s2,openprin_x+1,closeprin_x-openprin_x-1)
													If InStr(stemp,",") Then 'this is for 2d and 3d arrays
														stemp_c=0
														ReDim stemp_n(stemp_c)
														stemp_c_x=1
														For c=1 To Len(stemp)
															If Mid(stemp,c,1)="," Then
																stemp_c+=1
																ReDim Preserve stemp_n(stemp_c)
																stemp_n(stemp_c)=CInt(evaluate_string_numeric_expression(Mid(stemp,stemp_c_x,c-stemp_c_x)))
																stemp_c_x=c+1
															EndIf
														Next
														stemp_c+=1
														ReDim Preserve stemp_n(stemp_c)
														stemp_n(stemp_c)=CInt(evaluate_string_numeric_expression(Mid(stemp,stemp_c_x,c-stemp_c_x)))
														s2=get_multi_dim_array_type_s2(s2,i,stemp_n(),j,variables_x(),closeprin_x)
													Else
														s2=get_1d_array_type_s2(s2,i,stemp,j,variables_x(),closeprin_x)
													EndIf
												EndIf
										End Select
									Next
							End Select
							Exit For
						EndIf
					Next
				Next
			EndIf
			macro_variables_short_value(macro_variables_short_c)=CShort(evaluate_string_numeric_expression(s2))
			i=InStr(temp,"=")
			temp=Mid(temp,1,i-1)
			temp=LTrim(RTrim(temp))
			macro_variables_info(macro_variables_info_c,1)=temp
			macro_variables_info(macro_variables_info_c,2)="SHORT"
			macro_variables_info(macro_variables_info_c,3)=Str(macro_variables_short_c)
		Else 'this is just a single value variable with no value set 
			macro_variables_short_c+=1
			ReDim Preserve macro_variables_short_value(macro_variables_short_c)
			macro_variables_short_value(macro_variables_short_c)=0
			macro_variables_info(macro_variables_info_c,1)=temp
			macro_variables_info(macro_variables_info_c,2)="SHORT"
			macro_variables_info(macro_variables_info_c,3)=Str(macro_variables_short_c)			
		EndIf
	EndIf
End Sub

Sub dim_ushort(temp As String)
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Sub dim_ushort"
		Print #5,"temp:";temp
		'For dbugi=LBound(temp) To UBound(temp)
			'Print #5,"temp("; dbugi; "):"; temp(dbugi)
		'Next
		Print #5,"---------------"
	EndIf
	Dim As Integer i,j,k,x,c,low,hi,n
	Dim As Double dn
	Dim As Byte n_boolean
	Dim As Byte n_byte
	Dim As UByte n_ubyte
	Dim As Short n_short
	Dim As UShort n_ushort
	Dim As Long n_long
	Dim As ULong n_ulong
	Dim As UInteger n_uinteger
	Dim As LongInt n_longint
	Dim As ULongInt n_ulongint
	Dim As Single n_single
	Dim As String n_string
	macro_variables_info_c+=1
	ReDim Preserve macro_variables_info(macro_variables_info_c,8)
	Dim As String s1,s2,stemp
	Dim As Integer stemp_c,stemp_n(),stemp_c_x
	Dim As BOOLEAN quote
	
	If InStr(temp,"=") Then
		i=InStr(temp,"=")
		s1=Mid(temp,1,i-1)
		s2=Mid(temp,i+1)
	Else
		s1=temp
	EndIf
	If InStr(s1,"(") Then 'this variable to dim is an array
		If InStr(temp,"=") Then
			Dim As String temp2
			x=InStr(temp,"=")
			temp2=Mid(temp,x+1)
			temp2=LTrim(RTrim(temp2))
			temp=Mid(temp,1,x-1)
			i=InStr(temp,"(")
			macro_variables_info(macro_variables_info_c,1)=LTrim(RTrim(Left(temp,i-1))) 'name
			macro_variables_info(macro_variables_info_c,2)="USHORT_ARRAY" 'type
			macro_variables_info(macro_variables_info_c,3)="d" 'points to 1st, 2nd, 3rd... of 1d,2d,3d... variables			
			temp=Mid(temp,i) '() or (10) or (10,3) or (1 to 10) or (0 to 10, 0 to 3)
			macro_variables_info(macro_variables_info_c,4)=temp 'array_description
			macro_variables_info(macro_variables_info_c,5)="" 'array_depth ie. 1d,2d,3d
			variable_array_manager(macro_variables_info_c)
			
			c=macro_variables_info_c
			If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
			Select Case macro_variables_info(c,5)
				Case "1d"
					Select Case macro_variables_info(c,3)
						Case "1"
							For i=LBound(macro_variables_ushort_array_1d_1) To UBound(macro_variables_ushort_array_1d_1)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_ushort_array_1d_1(i)=CUShort(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "2"
							For i=LBound(macro_variables_ushort_array_1d_2) To UBound(macro_variables_ushort_array_1d_2)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_ushort_array_1d_2(i)=CUShort(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "3"
							For i=LBound(macro_variables_ushort_array_1d_3) To UBound(macro_variables_ushort_array_1d_3)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_ushort_array_1d_3(i)=CUShort(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "4"
							For i=LBound(macro_variables_ushort_array_1d_4) To UBound(macro_variables_ushort_array_1d_4)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_ushort_array_1d_4(i)=CUShort(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "5"
							For i=LBound(macro_variables_ushort_array_1d_5) To UBound(macro_variables_ushort_array_1d_5)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_ushort_array_1d_5(i)=CUShort(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "6"
							For i=LBound(macro_variables_ushort_array_1d_6) To UBound(macro_variables_ushort_array_1d_6)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_ushort_array_1d_6(i)=CUShort(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "7"
							For i=LBound(macro_variables_ushort_array_1d_7) To UBound(macro_variables_ushort_array_1d_7)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_ushort_array_1d_7(i)=CUShort(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "8"
							For i=LBound(macro_variables_ushort_array_1d_8) To UBound(macro_variables_ushort_array_1d_8)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_ushort_array_1d_8(i)=CUShort(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "9"
							For i=LBound(macro_variables_ushort_array_1d_9) To UBound(macro_variables_ushort_array_1d_9)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_ushort_array_1d_9(i)=CUShort(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
					End Select
				Case "2d"
					Select Case macro_variables_info(c,3)
						Case "1"
							For i= LBound(macro_variables_ushort_array_2d_1) To UBound(macro_variables_ushort_array_2d_1)
								For j= LBound(macro_variables_ushort_array_2d_1,2) To UBound(macro_variables_ushort_array_2d_1,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_ushort_array_2d_1(i,j)=CUShort(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "2"
							For i= LBound(macro_variables_ushort_array_2d_2) To UBound(macro_variables_ushort_array_2d_2)
								For j= LBound(macro_variables_ushort_array_2d_2,2) To UBound(macro_variables_ushort_array_2d_2,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_ushort_array_2d_2(i,j)=CUShort(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "3"
							For i= LBound(macro_variables_ushort_array_2d_3) To UBound(macro_variables_ushort_array_2d_3)
								For j= LBound(macro_variables_ushort_array_2d_3,2) To UBound(macro_variables_ushort_array_2d_3,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_ushort_array_2d_3(i,j)=CUShort(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "4"
							For i= LBound(macro_variables_ushort_array_2d_4) To UBound(macro_variables_ushort_array_2d_4)
								For j= LBound(macro_variables_ushort_array_2d_4,2) To UBound(macro_variables_ushort_array_2d_4,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_ushort_array_2d_4(i,j)=CUShort(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "5"
							For i= LBound(macro_variables_ushort_array_2d_5) To UBound(macro_variables_ushort_array_2d_5)
								For j= LBound(macro_variables_ushort_array_2d_5,2) To UBound(macro_variables_ushort_array_2d_5,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_ushort_array_2d_5(i,j)=CUShort(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "6"
							For i= LBound(macro_variables_ushort_array_2d_6) To UBound(macro_variables_ushort_array_2d_6)
								For j= LBound(macro_variables_ushort_array_2d_6,2) To UBound(macro_variables_ushort_array_2d_6,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_ushort_array_2d_6(i,j)=CUShort(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "7"
							For i= LBound(macro_variables_ushort_array_2d_7) To UBound(macro_variables_ushort_array_2d_7)
								For j= LBound(macro_variables_ushort_array_2d_7,2) To UBound(macro_variables_ushort_array_2d_7,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_ushort_array_2d_7(i,j)=CUShort(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "8"
							For i= LBound(macro_variables_ushort_array_2d_8) To UBound(macro_variables_ushort_array_2d_8)
								For j= LBound(macro_variables_ushort_array_2d_8,2) To UBound(macro_variables_ushort_array_2d_8,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_ushort_array_2d_8(i,j)=CUShort(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "9"
							For i= LBound(macro_variables_ushort_array_2d_9) To UBound(macro_variables_ushort_array_2d_9)
								For j= LBound(macro_variables_ushort_array_2d_9,2) To UBound(macro_variables_ushort_array_2d_9,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_ushort_array_2d_9(i,j)=CUShort(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
					End Select
				Case "3d"
					Select Case macro_variables_info(c,3)
						Case "1"
							For i= LBound(macro_variables_ushort_array_3d_1) To UBound(macro_variables_ushort_array_3d_1)
								For j= LBound(macro_variables_ushort_array_3d_1,2) To UBound(macro_variables_ushort_array_3d_1,2)
									For k= LBound(macro_variables_ushort_array_3d_1,3) To UBound(macro_variables_ushort_array_3d_1,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_ushort_array_3d_1(i,j,k)=CUShort(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "2"
							For i= LBound(macro_variables_ushort_array_3d_2) To UBound(macro_variables_ushort_array_3d_2)
								For j= LBound(macro_variables_ushort_array_3d_2,2) To UBound(macro_variables_ushort_array_3d_2,2)
									For k= LBound(macro_variables_ushort_array_3d_2,3) To UBound(macro_variables_ushort_array_3d_2,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_ushort_array_3d_2(i,j,k)=CUShort(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "3"
							For i= LBound(macro_variables_ushort_array_3d_3) To UBound(macro_variables_ushort_array_3d_3)
								For j= LBound(macro_variables_ushort_array_3d_3,2) To UBound(macro_variables_ushort_array_3d_3,2)
									For k= LBound(macro_variables_ushort_array_3d_3,3) To UBound(macro_variables_ushort_array_3d_3,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_ushort_array_3d_3(i,j,k)=CUShort(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "4"
							For i= LBound(macro_variables_ushort_array_3d_4) To UBound(macro_variables_ushort_array_3d_4)
								For j= LBound(macro_variables_ushort_array_3d_4,2) To UBound(macro_variables_ushort_array_3d_4,2)
									For k= LBound(macro_variables_ushort_array_3d_4,3) To UBound(macro_variables_ushort_array_3d_4,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_ushort_array_3d_4(i,j,k)=CUShort(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "5"
							For i= LBound(macro_variables_ushort_array_3d_5) To UBound(macro_variables_ushort_array_3d_5)
								For j= LBound(macro_variables_ushort_array_3d_5,2) To UBound(macro_variables_ushort_array_3d_5,2)
									For k= LBound(macro_variables_ushort_array_3d_5,3) To UBound(macro_variables_ushort_array_3d_5,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_ushort_array_3d_5(i,j,k)=CUShort(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "6"
							For i= LBound(macro_variables_ushort_array_3d_6) To UBound(macro_variables_ushort_array_3d_6)
								For j= LBound(macro_variables_ushort_array_3d_6,2) To UBound(macro_variables_ushort_array_3d_6,2)
									For k= LBound(macro_variables_ushort_array_3d_6,3) To UBound(macro_variables_ushort_array_3d_6,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_ushort_array_3d_6(i,j,k)=CUShort(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "7"
							For i= LBound(macro_variables_ushort_array_3d_7) To UBound(macro_variables_ushort_array_3d_7)
								For j= LBound(macro_variables_ushort_array_3d_7,2) To UBound(macro_variables_ushort_array_3d_7,2)
									For k= LBound(macro_variables_ushort_array_3d_7,3) To UBound(macro_variables_ushort_array_3d_7,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_ushort_array_3d_7(i,j,k)=CUShort(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "8"
							For i= LBound(macro_variables_ushort_array_3d_8) To UBound(macro_variables_ushort_array_3d_8)
								For j= LBound(macro_variables_ushort_array_3d_8,2) To UBound(macro_variables_ushort_array_3d_8,2)
									For k= LBound(macro_variables_ushort_array_3d_8,3) To UBound(macro_variables_ushort_array_3d_8,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_ushort_array_3d_8(i,j,k)=CUShort(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "9"
							For i= LBound(macro_variables_ushort_array_3d_9) To UBound(macro_variables_ushort_array_3d_9)
								For j= LBound(macro_variables_ushort_array_3d_9,2) To UBound(macro_variables_ushort_array_3d_9,2)
									For k= LBound(macro_variables_ushort_array_3d_9,3) To UBound(macro_variables_ushort_array_3d_9,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_ushort_array_3d_9(i,j,k)=CUShort(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
					End Select
			End Select
		Else
			i=InStr(temp,"(")
			macro_variables_info(macro_variables_info_c,1)=LTrim(RTrim(Left(temp,i-1))) 'name
			macro_variables_info(macro_variables_info_c,2)="USHORT_ARRAY" 'type
			macro_variables_info(macro_variables_info_c,3)="d" 'points to 1st, 2nd, 3rd... of 1d,2d,3d... variables			
			temp=Mid(temp,i) '() or (10) or (10,3) or (1 to 10) or (0 to 10, 0 to 3)
			macro_variables_info(macro_variables_info_c,4)=temp 'array_description
			macro_variables_info(macro_variables_info_c,5)="" 'array_depth ie. 1d,2d,3d
			variable_array_manager(macro_variables_info_c)
		EndIf
	Else 'this variable to dim is not an array
		If InStr(temp,"=") Then
			macro_variables_ushort_c+=1
			ReDim Preserve macro_variables_ushort_value(macro_variables_ushort_c)
			If InStr(s2,"(") Then
				Dim As Integer openprin_c,closeprin_c,openprin_x,closeprin_x,variables_c,variables_x()
				Dim As String temp_alpha,variables()
				For i = 1 To Len(s2)
					Select Case Mid(s2,i,1)
						Case Chr(34)
							temp_alpha=""
							If quote=FALSE Then quote=TRUE Else quote=FALSE
						Case "a" To "z","0" To "9","_"
							If quote=FALSE Then
								temp_alpha+=Mid(s2,i,1)
								If Len(temp_alpha)=1 Then
									Select Case temp_alpha
										Case "0" To "9"
											temp_alpha=""
									End Select
								EndIf
							EndIf
						Case Else
							If temp_alpha<>"" Then
								variables_c+=1
								ReDim Preserve variables_x(variables_c)
								ReDim Preserve variables(variables_c)
								variables_x(variables_c)=i-Len(temp_alpha)
								variables(variables_c)=temp_alpha
								temp_alpha=""
							EndIf
					End Select
				Next
				If temp_alpha<>"" Then
					variables_c+=1
					ReDim Preserve variables_x(variables_c)
					ReDim Preserve variables(variables_c)
					variables_x(variables_c)=i-Len(temp_alpha)
					variables(variables_c)=temp_alpha
					temp_alpha=""
				EndIf

				For j=variables_c To 1 Step -1
					For i=1 To macro_variables_info_c-1
						If variables(j)=macro_variables_info(i,1) Then
							Select Case macro_variables_info(i,2)
								Case "USHORT_ARRAY"
									openprin_c=0
									openprin_x=0
									closeprin_c=0
									closeprin_x=0
									For x=variables_x(j)+Len(variables(j)) To Len(s2)
										Select Case Mid(s2,x,1)
											Case "("
												openprin_c+=1
												If openprin_c=1 Then openprin_x=x
											Case ")"
												closeprin_c+=1
												If closeprin_c=openprin_c Then
													closeprin_x=x
													stemp=Mid(s2,openprin_x+1,closeprin_x-openprin_x-1)
													If InStr(stemp,",") Then 'this is for 2d and 3d arrays
														stemp_c=0
														ReDim stemp_n(stemp_c)
														stemp_c_x=1
														For c=1 To Len(stemp)
															If Mid(stemp,c,1)="," Then
																stemp_c+=1
																ReDim Preserve stemp_n(stemp_c)
																stemp_n(stemp_c)=CInt(evaluate_string_numeric_expression(Mid(stemp,stemp_c_x,c-stemp_c_x)))
																stemp_c_x=c+1
															EndIf
														Next
														stemp_c+=1
														ReDim Preserve stemp_n(stemp_c)
														stemp_n(stemp_c)=CInt(evaluate_string_numeric_expression(Mid(stemp,stemp_c_x,c-stemp_c_x)))
														s2=get_multi_dim_array_type_s2(s2,i,stemp_n(),j,variables_x(),closeprin_x)
													Else
														s2=get_1d_array_type_s2(s2,i,stemp,j,variables_x(),closeprin_x)
													EndIf
												EndIf
										End Select
									Next
							End Select
							Exit For
						EndIf
					Next
				Next
			EndIf
			macro_variables_ushort_value(macro_variables_ushort_c)=CUShort(evaluate_string_numeric_expression(s2))
			i=InStr(temp,"=")
			temp=Mid(temp,1,i-1)
			temp=LTrim(RTrim(temp))
			macro_variables_info(macro_variables_info_c,1)=temp
			macro_variables_info(macro_variables_info_c,2)="USHORT"
			macro_variables_info(macro_variables_info_c,3)=Str(macro_variables_ushort_c)
		Else 'this is just a single value variable with no value set 
			macro_variables_ushort_c+=1
			ReDim Preserve macro_variables_ushort_value(macro_variables_ushort_c)
			macro_variables_ushort_value(macro_variables_ushort_c)=0
			macro_variables_info(macro_variables_info_c,1)=temp
			macro_variables_info(macro_variables_info_c,2)="USHORT"
			macro_variables_info(macro_variables_info_c,3)=Str(macro_variables_ushort_c)			
		EndIf
	EndIf
End Sub

Sub dim_long(temp As String)
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Sub dim_long"
		Print #5,"temp:";temp
		'For dbugi=LBound(temp) To UBound(temp)
			'Print #5,"temp("; dbugi; "):"; temp(dbugi)
		'Next
		Print #5,"---------------"
	EndIf
	Dim As Integer i,j,k,x,c,low,hi,n
	Dim As Double dn
	Dim As Byte n_boolean
	Dim As Byte n_byte
	Dim As UByte n_ubyte
	Dim As Short n_short
	Dim As UShort n_ushort
	Dim As Long n_long
	Dim As ULong n_ulong
	Dim As UInteger n_uinteger
	Dim As LongInt n_longint
	Dim As ULongInt n_ulongint
	Dim As Single n_single
	Dim As String n_string
	macro_variables_info_c+=1
	ReDim Preserve macro_variables_info(macro_variables_info_c,8)
	Dim As String s1,s2,stemp
	Dim As Integer stemp_c,stemp_n(),stemp_c_x
	Dim As BOOLEAN quote
	
	If InStr(temp,"=") Then
		i=InStr(temp,"=")
		s1=Mid(temp,1,i-1)
		s2=Mid(temp,i+1)
	Else
		s1=temp
	EndIf
	If InStr(s1,"(") Then 'this variable to dim is an array
		If InStr(temp,"=") Then
			Dim As String temp2
			x=InStr(temp,"=")
			temp2=Mid(temp,x+1)
			temp2=LTrim(RTrim(temp2))
			temp=Mid(temp,1,x-1)
			i=InStr(temp,"(")
			macro_variables_info(macro_variables_info_c,1)=LTrim(RTrim(Left(temp,i-1))) 'name
			macro_variables_info(macro_variables_info_c,2)="LONG_ARRAY" 'type
			macro_variables_info(macro_variables_info_c,3)="d" 'points to 1st, 2nd, 3rd... of 1d,2d,3d... variables			
			temp=Mid(temp,i) '() or (10) or (10,3) or (1 to 10) or (0 to 10, 0 to 3)
			macro_variables_info(macro_variables_info_c,4)=temp 'array_description
			macro_variables_info(macro_variables_info_c,5)="" 'array_depth ie. 1d,2d,3d
			variable_array_manager(macro_variables_info_c)
			
			c=macro_variables_info_c
			If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
			Select Case macro_variables_info(c,5)
				Case "1d"
					Select Case macro_variables_info(c,3)
						Case "1"
							For i=LBound(macro_variables_long_array_1d_1) To UBound(macro_variables_long_array_1d_1)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_long_array_1d_1(i)=CLng(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "2"
							For i=LBound(macro_variables_long_array_1d_2) To UBound(macro_variables_long_array_1d_2)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_long_array_1d_2(i)=CLng(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "3"
							For i=LBound(macro_variables_long_array_1d_3) To UBound(macro_variables_long_array_1d_3)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_long_array_1d_3(i)=CLng(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "4"
							For i=LBound(macro_variables_long_array_1d_4) To UBound(macro_variables_long_array_1d_4)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_long_array_1d_4(i)=CLng(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "5"
							For i=LBound(macro_variables_long_array_1d_5) To UBound(macro_variables_long_array_1d_5)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_long_array_1d_5(i)=CLng(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "6"
							For i=LBound(macro_variables_long_array_1d_6) To UBound(macro_variables_long_array_1d_6)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_long_array_1d_6(i)=CLng(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "7"
							For i=LBound(macro_variables_long_array_1d_7) To UBound(macro_variables_long_array_1d_7)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_long_array_1d_7(i)=CLng(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "8"
							For i=LBound(macro_variables_long_array_1d_8) To UBound(macro_variables_long_array_1d_8)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_long_array_1d_8(i)=CLng(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "9"
							For i=LBound(macro_variables_long_array_1d_9) To UBound(macro_variables_long_array_1d_9)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_long_array_1d_9(i)=CLng(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
					End Select
				Case "2d"
					Select Case macro_variables_info(c,3)
						Case "1"
							For i= LBound(macro_variables_long_array_2d_1) To UBound(macro_variables_long_array_2d_1)
								For j= LBound(macro_variables_long_array_2d_1,2) To UBound(macro_variables_long_array_2d_1,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_long_array_2d_1(i,j)=CLng(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "2"
							For i= LBound(macro_variables_long_array_2d_2) To UBound(macro_variables_long_array_2d_2)
								For j= LBound(macro_variables_long_array_2d_2,2) To UBound(macro_variables_long_array_2d_2,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_long_array_2d_2(i,j)=CLng(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "3"
							For i= LBound(macro_variables_long_array_2d_3) To UBound(macro_variables_long_array_2d_3)
								For j= LBound(macro_variables_long_array_2d_3,2) To UBound(macro_variables_long_array_2d_3,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_long_array_2d_3(i,j)=CLng(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "4"
							For i= LBound(macro_variables_long_array_2d_4) To UBound(macro_variables_long_array_2d_4)
								For j= LBound(macro_variables_long_array_2d_4,2) To UBound(macro_variables_long_array_2d_4,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_long_array_2d_4(i,j)=CLng(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "5"
							For i= LBound(macro_variables_long_array_2d_5) To UBound(macro_variables_long_array_2d_5)
								For j= LBound(macro_variables_long_array_2d_5,2) To UBound(macro_variables_long_array_2d_5,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_long_array_2d_5(i,j)=CLng(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "6"
							For i= LBound(macro_variables_long_array_2d_6) To UBound(macro_variables_long_array_2d_6)
								For j= LBound(macro_variables_long_array_2d_6,2) To UBound(macro_variables_long_array_2d_6,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_long_array_2d_6(i,j)=CLng(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "7"
							For i= LBound(macro_variables_long_array_2d_7) To UBound(macro_variables_long_array_2d_7)
								For j= LBound(macro_variables_long_array_2d_7,2) To UBound(macro_variables_long_array_2d_7,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_long_array_2d_7(i,j)=CLng(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "8"
							For i= LBound(macro_variables_long_array_2d_8) To UBound(macro_variables_long_array_2d_8)
								For j= LBound(macro_variables_long_array_2d_8,2) To UBound(macro_variables_long_array_2d_8,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_long_array_2d_8(i,j)=CLng(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "9"
							For i= LBound(macro_variables_long_array_2d_9) To UBound(macro_variables_long_array_2d_9)
								For j= LBound(macro_variables_long_array_2d_9,2) To UBound(macro_variables_long_array_2d_9,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_long_array_2d_9(i,j)=CLng(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
					End Select
				Case "3d"
					Select Case macro_variables_info(c,3)
						Case "1"
							For i= LBound(macro_variables_long_array_3d_1) To UBound(macro_variables_long_array_3d_1)
								For j= LBound(macro_variables_long_array_3d_1,2) To UBound(macro_variables_long_array_3d_1,2)
									For k= LBound(macro_variables_long_array_3d_1,3) To UBound(macro_variables_long_array_3d_1,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_long_array_3d_1(i,j,k)=CLng(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "2"
							For i= LBound(macro_variables_long_array_3d_2) To UBound(macro_variables_long_array_3d_2)
								For j= LBound(macro_variables_long_array_3d_2,2) To UBound(macro_variables_long_array_3d_2,2)
									For k= LBound(macro_variables_long_array_3d_2,3) To UBound(macro_variables_long_array_3d_2,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_long_array_3d_2(i,j,k)=CLng(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "3"
							For i= LBound(macro_variables_long_array_3d_3) To UBound(macro_variables_long_array_3d_3)
								For j= LBound(macro_variables_long_array_3d_3,2) To UBound(macro_variables_long_array_3d_3,2)
									For k= LBound(macro_variables_long_array_3d_3,3) To UBound(macro_variables_long_array_3d_3,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_long_array_3d_3(i,j,k)=CLng(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "4"
							For i= LBound(macro_variables_long_array_3d_4) To UBound(macro_variables_long_array_3d_4)
								For j= LBound(macro_variables_long_array_3d_4,2) To UBound(macro_variables_long_array_3d_4,2)
									For k= LBound(macro_variables_long_array_3d_4,3) To UBound(macro_variables_long_array_3d_4,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_long_array_3d_4(i,j,k)=CLng(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "5"
							For i= LBound(macro_variables_long_array_3d_5) To UBound(macro_variables_long_array_3d_5)
								For j= LBound(macro_variables_long_array_3d_5,2) To UBound(macro_variables_long_array_3d_5,2)
									For k= LBound(macro_variables_long_array_3d_5,3) To UBound(macro_variables_long_array_3d_5,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_long_array_3d_5(i,j,k)=CLng(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "6"
							For i= LBound(macro_variables_long_array_3d_6) To UBound(macro_variables_long_array_3d_6)
								For j= LBound(macro_variables_long_array_3d_6,2) To UBound(macro_variables_long_array_3d_6,2)
									For k= LBound(macro_variables_long_array_3d_6,3) To UBound(macro_variables_long_array_3d_6,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_long_array_3d_6(i,j,k)=CLng(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "7"
							For i= LBound(macro_variables_long_array_3d_7) To UBound(macro_variables_long_array_3d_7)
								For j= LBound(macro_variables_long_array_3d_7,2) To UBound(macro_variables_long_array_3d_7,2)
									For k= LBound(macro_variables_long_array_3d_7,3) To UBound(macro_variables_long_array_3d_7,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_long_array_3d_7(i,j,k)=CLng(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "8"
							For i= LBound(macro_variables_long_array_3d_8) To UBound(macro_variables_long_array_3d_8)
								For j= LBound(macro_variables_long_array_3d_8,2) To UBound(macro_variables_long_array_3d_8,2)
									For k= LBound(macro_variables_long_array_3d_8,3) To UBound(macro_variables_long_array_3d_8,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_long_array_3d_8(i,j,k)=CLng(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "9"
							For i= LBound(macro_variables_long_array_3d_9) To UBound(macro_variables_long_array_3d_9)
								For j= LBound(macro_variables_long_array_3d_9,2) To UBound(macro_variables_long_array_3d_9,2)
									For k= LBound(macro_variables_long_array_3d_9,3) To UBound(macro_variables_long_array_3d_9,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_long_array_3d_9(i,j,k)=CLng(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
					End Select
			End Select
		Else
			i=InStr(temp,"(")
			macro_variables_info(macro_variables_info_c,1)=LTrim(RTrim(Left(temp,i-1))) 'name
			macro_variables_info(macro_variables_info_c,2)="LONG_ARRAY" 'type
			macro_variables_info(macro_variables_info_c,3)="d" 'points to 1st, 2nd, 3rd... of 1d,2d,3d... variables			
			temp=Mid(temp,i) '() or (10) or (10,3) or (1 to 10) or (0 to 10, 0 to 3)
			macro_variables_info(macro_variables_info_c,4)=temp 'array_description
			macro_variables_info(macro_variables_info_c,5)="" 'array_depth ie. 1d,2d,3d
			variable_array_manager(macro_variables_info_c)
		EndIf
	Else 'this variable to dim is not an array
		If InStr(temp,"=") Then
			macro_variables_long_c+=1
			ReDim Preserve macro_variables_long_value(macro_variables_long_c)
			If InStr(s2,"(") Then
				Dim As Integer openprin_c,closeprin_c,openprin_x,closeprin_x,variables_c,variables_x()
				Dim As String temp_alpha,variables()
				For i = 1 To Len(s2)
					Select Case Mid(s2,i,1)
						Case Chr(34)
							temp_alpha=""
							If quote=FALSE Then quote=TRUE Else quote=FALSE
						Case "a" To "z","0" To "9","_"
							If quote=FALSE Then
								temp_alpha+=Mid(s2,i,1)
								If Len(temp_alpha)=1 Then
									Select Case temp_alpha
										Case "0" To "9"
											temp_alpha=""
									End Select
								EndIf
							EndIf
						Case Else
							If temp_alpha<>"" Then
								variables_c+=1
								ReDim Preserve variables_x(variables_c)
								ReDim Preserve variables(variables_c)
								variables_x(variables_c)=i-Len(temp_alpha)
								variables(variables_c)=temp_alpha
								temp_alpha=""
							EndIf
					End Select
				Next
				If temp_alpha<>"" Then
					variables_c+=1
					ReDim Preserve variables_x(variables_c)
					ReDim Preserve variables(variables_c)
					variables_x(variables_c)=i-Len(temp_alpha)
					variables(variables_c)=temp_alpha
					temp_alpha=""
				EndIf

				For j=variables_c To 1 Step -1
					For i=1 To macro_variables_info_c-1
						If variables(j)=macro_variables_info(i,1) Then
							Select Case macro_variables_info(i,2)
								Case "LONG_ARRAY"
									openprin_c=0
									openprin_x=0
									closeprin_c=0
									closeprin_x=0
									For x=variables_x(j)+Len(variables(j)) To Len(s2)
										Select Case Mid(s2,x,1)
											Case "("
												openprin_c+=1
												If openprin_c=1 Then openprin_x=x
											Case ")"
												closeprin_c+=1
												If closeprin_c=openprin_c Then
													closeprin_x=x
													stemp=Mid(s2,openprin_x+1,closeprin_x-openprin_x-1)
													If InStr(stemp,",") Then 'this is for 2d and 3d arrays
														stemp_c=0
														ReDim stemp_n(stemp_c)
														stemp_c_x=1
														For c=1 To Len(stemp)
															If Mid(stemp,c,1)="," Then
																stemp_c+=1
																ReDim Preserve stemp_n(stemp_c)
																stemp_n(stemp_c)=CInt(evaluate_string_numeric_expression(Mid(stemp,stemp_c_x,c-stemp_c_x)))
																stemp_c_x=c+1
															EndIf
														Next
														stemp_c+=1
														ReDim Preserve stemp_n(stemp_c)
														stemp_n(stemp_c)=CInt(evaluate_string_numeric_expression(Mid(stemp,stemp_c_x,c-stemp_c_x)))
														s2=get_multi_dim_array_type_s2(s2,i,stemp_n(),j,variables_x(),closeprin_x)
													Else
														s2=get_1d_array_type_s2(s2,i,stemp,j,variables_x(),closeprin_x)
													EndIf
												EndIf
										End Select
									Next
							End Select
							Exit For
						EndIf
					Next
				Next
			EndIf
			macro_variables_long_value(macro_variables_long_c)=CLng(evaluate_string_numeric_expression(s2))
			i=InStr(temp,"=")
			temp=Mid(temp,1,i-1)
			temp=LTrim(RTrim(temp))
			macro_variables_info(macro_variables_info_c,1)=temp
			macro_variables_info(macro_variables_info_c,2)="LONG"
			macro_variables_info(macro_variables_info_c,3)=Str(macro_variables_long_c)
		Else 'this is just a single value variable with no value set 
			macro_variables_long_c+=1
			ReDim Preserve macro_variables_long_value(macro_variables_long_c)
			macro_variables_long_value(macro_variables_long_c)=0
			macro_variables_info(macro_variables_info_c,1)=temp
			macro_variables_info(macro_variables_info_c,2)="LONG"
			macro_variables_info(macro_variables_info_c,3)=Str(macro_variables_long_c)			
		EndIf
	EndIf
End Sub

Sub dim_ulong(temp As String)
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Sub dim_ulong"
		Print #5,"temp:";temp
		'For dbugi=LBound(temp) To UBound(temp)
			'Print #5,"temp("; dbugi; "):"; temp(dbugi)
		'Next
		Print #5,"---------------"
	EndIf
	Dim As Integer i,j,k,x,c,low,hi,n
	Dim As Double dn
	Dim As Byte n_boolean
	Dim As Byte n_byte
	Dim As UByte n_ubyte
	Dim As Short n_short
	Dim As UShort n_ushort
	Dim As Long n_long
	Dim As ULong n_ulong
	Dim As UInteger n_uinteger
	Dim As LongInt n_longint
	Dim As ULongInt n_ulongint
	Dim As Single n_single
	Dim As String n_string
	macro_variables_info_c+=1
	ReDim Preserve macro_variables_info(macro_variables_info_c,8)
	Dim As String s1,s2,stemp
	Dim As Integer stemp_c,stemp_n(),stemp_c_x
	Dim As BOOLEAN quote
	
	If InStr(temp,"=") Then
		i=InStr(temp,"=")
		s1=Mid(temp,1,i-1)
		s2=Mid(temp,i+1)
	Else
		s1=temp
	EndIf
	If InStr(s1,"(") Then 'this variable to dim is an array
		If InStr(temp,"=") Then
			Dim As String temp2
			x=InStr(temp,"=")
			temp2=Mid(temp,x+1)
			temp2=LTrim(RTrim(temp2))
			temp=Mid(temp,1,x-1)
			i=InStr(temp,"(")
			macro_variables_info(macro_variables_info_c,1)=LTrim(RTrim(Left(temp,i-1))) 'name
			macro_variables_info(macro_variables_info_c,2)="ULONG_ARRAY" 'type
			macro_variables_info(macro_variables_info_c,3)="d" 'points to 1st, 2nd, 3rd... of 1d,2d,3d... variables			
			temp=Mid(temp,i) '() or (10) or (10,3) or (1 to 10) or (0 to 10, 0 to 3)
			macro_variables_info(macro_variables_info_c,4)=temp 'array_description
			macro_variables_info(macro_variables_info_c,5)="" 'array_depth ie. 1d,2d,3d
			variable_array_manager(macro_variables_info_c)
			
			c=macro_variables_info_c
			If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
			Select Case macro_variables_info(c,5)
				Case "1d"
					Select Case macro_variables_info(c,3)
						Case "1"
							For i=LBound(macro_variables_ulong_array_1d_1) To UBound(macro_variables_ulong_array_1d_1)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_ulong_array_1d_1(i)=CULng(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "2"
							For i=LBound(macro_variables_ulong_array_1d_2) To UBound(macro_variables_ulong_array_1d_2)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_ulong_array_1d_2(i)=CULng(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "3"
							For i=LBound(macro_variables_ulong_array_1d_3) To UBound(macro_variables_ulong_array_1d_3)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_ulong_array_1d_3(i)=CULng(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "4"
							For i=LBound(macro_variables_ulong_array_1d_4) To UBound(macro_variables_ulong_array_1d_4)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_ulong_array_1d_4(i)=CULng(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "5"
							For i=LBound(macro_variables_ulong_array_1d_5) To UBound(macro_variables_ulong_array_1d_5)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_ulong_array_1d_5(i)=CULng(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "6"
							For i=LBound(macro_variables_ulong_array_1d_6) To UBound(macro_variables_ulong_array_1d_6)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_ulong_array_1d_6(i)=CULng(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "7"
							For i=LBound(macro_variables_ulong_array_1d_7) To UBound(macro_variables_ulong_array_1d_7)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_ulong_array_1d_7(i)=CULng(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "8"
							For i=LBound(macro_variables_ulong_array_1d_8) To UBound(macro_variables_ulong_array_1d_8)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_ulong_array_1d_8(i)=CULng(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "9"
							For i=LBound(macro_variables_ulong_array_1d_9) To UBound(macro_variables_ulong_array_1d_9)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_ulong_array_1d_9(i)=CULng(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
					End Select
				Case "2d"
					Select Case macro_variables_info(c,3)
						Case "1"
							For i= LBound(macro_variables_ulong_array_2d_1) To UBound(macro_variables_ulong_array_2d_1)
								For j= LBound(macro_variables_ulong_array_2d_1,2) To UBound(macro_variables_ulong_array_2d_1,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_ulong_array_2d_1(i,j)=CULng(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "2"
							For i= LBound(macro_variables_ulong_array_2d_2) To UBound(macro_variables_ulong_array_2d_2)
								For j= LBound(macro_variables_ulong_array_2d_2,2) To UBound(macro_variables_ulong_array_2d_2,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_ulong_array_2d_2(i,j)=CULng(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "3"
							For i= LBound(macro_variables_ulong_array_2d_3) To UBound(macro_variables_ulong_array_2d_3)
								For j= LBound(macro_variables_ulong_array_2d_3,2) To UBound(macro_variables_ulong_array_2d_3,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_ulong_array_2d_3(i,j)=CULng(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "4"
							For i= LBound(macro_variables_ulong_array_2d_4) To UBound(macro_variables_ulong_array_2d_4)
								For j= LBound(macro_variables_ulong_array_2d_4,2) To UBound(macro_variables_ulong_array_2d_4,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_ulong_array_2d_4(i,j)=CULng(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "5"
							For i= LBound(macro_variables_ulong_array_2d_5) To UBound(macro_variables_ulong_array_2d_5)
								For j= LBound(macro_variables_ulong_array_2d_5,2) To UBound(macro_variables_ulong_array_2d_5,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_ulong_array_2d_5(i,j)=CULng(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "6"
							For i= LBound(macro_variables_ulong_array_2d_6) To UBound(macro_variables_ulong_array_2d_6)
								For j= LBound(macro_variables_ulong_array_2d_6,2) To UBound(macro_variables_ulong_array_2d_6,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_ulong_array_2d_6(i,j)=CULng(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "7"
							For i= LBound(macro_variables_ulong_array_2d_7) To UBound(macro_variables_ulong_array_2d_7)
								For j= LBound(macro_variables_ulong_array_2d_7,2) To UBound(macro_variables_ulong_array_2d_7,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_ulong_array_2d_7(i,j)=CULng(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "8"
							For i= LBound(macro_variables_ulong_array_2d_8) To UBound(macro_variables_ulong_array_2d_8)
								For j= LBound(macro_variables_ulong_array_2d_8,2) To UBound(macro_variables_ulong_array_2d_8,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_ulong_array_2d_8(i,j)=CULng(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "9"
							For i= LBound(macro_variables_ulong_array_2d_9) To UBound(macro_variables_ulong_array_2d_9)
								For j= LBound(macro_variables_ulong_array_2d_9,2) To UBound(macro_variables_ulong_array_2d_9,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_ulong_array_2d_9(i,j)=CULng(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
					End Select
				Case "3d"
					Select Case macro_variables_info(c,3)
						Case "1"
							For i= LBound(macro_variables_ulong_array_3d_1) To UBound(macro_variables_ulong_array_3d_1)
								For j= LBound(macro_variables_ulong_array_3d_1,2) To UBound(macro_variables_ulong_array_3d_1,2)
									For k= LBound(macro_variables_ulong_array_3d_1,3) To UBound(macro_variables_ulong_array_3d_1,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_ulong_array_3d_1(i,j,k)=CULng(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "2"
							For i= LBound(macro_variables_ulong_array_3d_2) To UBound(macro_variables_ulong_array_3d_2)
								For j= LBound(macro_variables_ulong_array_3d_2,2) To UBound(macro_variables_ulong_array_3d_2,2)
									For k= LBound(macro_variables_ulong_array_3d_2,3) To UBound(macro_variables_ulong_array_3d_2,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_ulong_array_3d_2(i,j,k)=CULng(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "3"
							For i= LBound(macro_variables_ulong_array_3d_3) To UBound(macro_variables_ulong_array_3d_3)
								For j= LBound(macro_variables_ulong_array_3d_3,2) To UBound(macro_variables_ulong_array_3d_3,2)
									For k= LBound(macro_variables_ulong_array_3d_3,3) To UBound(macro_variables_ulong_array_3d_3,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_ulong_array_3d_3(i,j,k)=CULng(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "4"
							For i= LBound(macro_variables_ulong_array_3d_4) To UBound(macro_variables_ulong_array_3d_4)
								For j= LBound(macro_variables_ulong_array_3d_4,2) To UBound(macro_variables_ulong_array_3d_4,2)
									For k= LBound(macro_variables_ulong_array_3d_4,3) To UBound(macro_variables_ulong_array_3d_4,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_ulong_array_3d_4(i,j,k)=CULng(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "5"
							For i= LBound(macro_variables_ulong_array_3d_5) To UBound(macro_variables_ulong_array_3d_5)
								For j= LBound(macro_variables_ulong_array_3d_5,2) To UBound(macro_variables_ulong_array_3d_5,2)
									For k= LBound(macro_variables_ulong_array_3d_5,3) To UBound(macro_variables_ulong_array_3d_5,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_ulong_array_3d_5(i,j,k)=CULng(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "6"
							For i= LBound(macro_variables_ulong_array_3d_6) To UBound(macro_variables_ulong_array_3d_6)
								For j= LBound(macro_variables_ulong_array_3d_6,2) To UBound(macro_variables_ulong_array_3d_6,2)
									For k= LBound(macro_variables_ulong_array_3d_6,3) To UBound(macro_variables_ulong_array_3d_6,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_ulong_array_3d_6(i,j,k)=CULng(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "7"
							For i= LBound(macro_variables_ulong_array_3d_7) To UBound(macro_variables_ulong_array_3d_7)
								For j= LBound(macro_variables_ulong_array_3d_7,2) To UBound(macro_variables_ulong_array_3d_7,2)
									For k= LBound(macro_variables_ulong_array_3d_7,3) To UBound(macro_variables_ulong_array_3d_7,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_ulong_array_3d_7(i,j,k)=CULng(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "8"
							For i= LBound(macro_variables_ulong_array_3d_8) To UBound(macro_variables_ulong_array_3d_8)
								For j= LBound(macro_variables_ulong_array_3d_8,2) To UBound(macro_variables_ulong_array_3d_8,2)
									For k= LBound(macro_variables_ulong_array_3d_8,3) To UBound(macro_variables_ulong_array_3d_8,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_ulong_array_3d_8(i,j,k)=CULng(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "9"
							For i= LBound(macro_variables_ulong_array_3d_9) To UBound(macro_variables_ulong_array_3d_9)
								For j= LBound(macro_variables_ulong_array_3d_9,2) To UBound(macro_variables_ulong_array_3d_9,2)
									For k= LBound(macro_variables_ulong_array_3d_9,3) To UBound(macro_variables_ulong_array_3d_9,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_ulong_array_3d_9(i,j,k)=CULng(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
					End Select
			End Select
		Else
			i=InStr(temp,"(")
			macro_variables_info(macro_variables_info_c,1)=LTrim(RTrim(Left(temp,i-1))) 'name
			macro_variables_info(macro_variables_info_c,2)="ULONG_ARRAY" 'type
			macro_variables_info(macro_variables_info_c,3)="d" 'points to 1st, 2nd, 3rd... of 1d,2d,3d... variables			
			temp=Mid(temp,i) '() or (10) or (10,3) or (1 to 10) or (0 to 10, 0 to 3)
			macro_variables_info(macro_variables_info_c,4)=temp 'array_description
			macro_variables_info(macro_variables_info_c,5)="" 'array_depth ie. 1d,2d,3d
			variable_array_manager(macro_variables_info_c)
		EndIf
	Else 'this variable to dim is not an array
		If InStr(temp,"=") Then
			macro_variables_ulong_c+=1
			ReDim Preserve macro_variables_ulong_value(macro_variables_ulong_c)
			If InStr(s2,"(") Then
				Dim As Integer openprin_c,closeprin_c,openprin_x,closeprin_x,variables_c,variables_x()
				Dim As String temp_alpha,variables()
				For i = 1 To Len(s2)
					Select Case Mid(s2,i,1)
						Case Chr(34)
							temp_alpha=""
							If quote=FALSE Then quote=TRUE Else quote=FALSE
						Case "a" To "z","0" To "9","_"
							If quote=FALSE Then
								temp_alpha+=Mid(s2,i,1)
								If Len(temp_alpha)=1 Then
									Select Case temp_alpha
										Case "0" To "9"
											temp_alpha=""
									End Select
								EndIf
							EndIf
						Case Else
								If temp_alpha<>"" Then
								variables_c+=1
								ReDim Preserve variables_x(variables_c)
								ReDim Preserve variables(variables_c)
								variables_x(variables_c)=i-Len(temp_alpha)
								variables(variables_c)=temp_alpha
								temp_alpha=""
							EndIf
					End Select
				Next
				If temp_alpha<>"" Then
					variables_c+=1
					ReDim Preserve variables_x(variables_c)
					ReDim Preserve variables(variables_c)
					variables_x(variables_c)=i-Len(temp_alpha)
					variables(variables_c)=temp_alpha
					temp_alpha=""
				EndIf

				For j=variables_c To 1 Step -1
					For i=1 To macro_variables_info_c-1
						If variables(j)=macro_variables_info(i,1) Then
							Select Case macro_variables_info(i,2)
								Case "ULONG_ARRAY"
									openprin_c=0
									openprin_x=0
									closeprin_c=0
									closeprin_x=0
									For x=variables_x(j)+Len(variables(j)) To Len(s2)
										Select Case Mid(s2,x,1)
											Case "("
												openprin_c+=1
												If openprin_c=1 Then openprin_x=x
											Case ")"
												closeprin_c+=1
												If closeprin_c=openprin_c Then
													closeprin_x=x
													stemp=Mid(s2,openprin_x+1,closeprin_x-openprin_x-1)
													If InStr(stemp,",") Then 'this is for 2d and 3d arrays
														stemp_c=0
														ReDim stemp_n(stemp_c)
														stemp_c_x=1
														For c=1 To Len(stemp)
															If Mid(stemp,c,1)="," Then
																stemp_c+=1
																ReDim Preserve stemp_n(stemp_c)
																stemp_n(stemp_c)=CInt(evaluate_string_numeric_expression(Mid(stemp,stemp_c_x,c-stemp_c_x)))
																stemp_c_x=c+1
															EndIf
														Next
														stemp_c+=1
														ReDim Preserve stemp_n(stemp_c)
														stemp_n(stemp_c)=CInt(evaluate_string_numeric_expression(Mid(stemp,stemp_c_x,c-stemp_c_x)))
														s2=get_multi_dim_array_type_s2(s2,i,stemp_n(),j,variables_x(),closeprin_x)
													Else
														s2=get_1d_array_type_s2(s2,i,stemp,j,variables_x(),closeprin_x)
													EndIf
												EndIf
										End Select
									Next
							End Select
							Exit For
						EndIf
					Next
				Next
			EndIf
			macro_variables_ulong_value(macro_variables_ulong_c)=CULng(evaluate_string_numeric_expression(s2))
			i=InStr(temp,"=")
			temp=Mid(temp,1,i-1)
			temp=LTrim(RTrim(temp))
			macro_variables_info(macro_variables_info_c,1)=temp
			macro_variables_info(macro_variables_info_c,2)="ULONG"
			macro_variables_info(macro_variables_info_c,3)=Str(macro_variables_ulong_c)
		Else 'this is just a single value variable with no value set 
			macro_variables_ulong_c+=1
			ReDim Preserve macro_variables_ulong_value(macro_variables_ulong_c)
			macro_variables_ulong_value(macro_variables_ulong_c)=0
			macro_variables_info(macro_variables_info_c,1)=temp
			macro_variables_info(macro_variables_info_c,2)="ULONG"
			macro_variables_info(macro_variables_info_c,3)=Str(macro_variables_ulong_c)			
		EndIf
	EndIf
End Sub

Sub dim_integer(temp As String)
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Sub dim_integer"
		Print #5,"temp:";temp
		'For dbugi=LBound(temp) To UBound(temp)
			'Print #5,"temp("; dbugi; "):"; temp(dbugi)
		'Next
		Print #5,"---------------"
	EndIf
	Dim As Integer i,j,k,x,c,low,hi,n
	Dim As Double dn
	Dim As Byte n_boolean
	Dim As Byte n_byte
	Dim As UByte n_ubyte
	Dim As Short n_short
	Dim As UShort n_ushort
	Dim As Long n_long
	Dim As ULong n_ulong
	Dim As UInteger n_uinteger
	Dim As LongInt n_longint
	Dim As ULongInt n_ulongint
	Dim As Single n_single
	Dim As String n_string
	macro_variables_info_c+=1
	ReDim Preserve macro_variables_info(macro_variables_info_c,8)
	Dim As String s1,s2,stemp
	Dim As Integer stemp_c,stemp_n(),stemp_c_x
	Dim As BOOLEAN quote
	
	If InStr(temp,"=") Then
		i=InStr(temp,"=")
		s1=Mid(temp,1,i-1)
		s2=Mid(temp,i+1)
	Else
		s1=temp
	EndIf
	If InStr(s1,"(") Then 'this variable to dim is an array
		If InStr(temp,"=") Then
			Dim As String temp2
			x=InStr(temp,"=")
			temp2=Mid(temp,x+1)
			temp2=LTrim(RTrim(temp2))
			temp=Mid(temp,1,x-1)
			i=InStr(temp,"(")
			macro_variables_info(macro_variables_info_c,1)=LTrim(RTrim(Left(temp,i-1))) 'name
			macro_variables_info(macro_variables_info_c,2)="INTEGER_ARRAY" 'type
			macro_variables_info(macro_variables_info_c,3)="d" 'points to 1st, 2nd, 3rd... of 1d,2d,3d... variables			
			temp=Mid(temp,i) '() or (10) or (10,3) or (1 to 10) or (0 to 10, 0 to 3)
			macro_variables_info(macro_variables_info_c,4)=temp 'array_description
			macro_variables_info(macro_variables_info_c,5)="" 'array_depth ie. 1d,2d,3d
			variable_array_manager(macro_variables_info_c)
			
			c=macro_variables_info_c
			If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
			Select Case macro_variables_info(c,5)
				Case "1d"
					Select Case macro_variables_info(c,3)
						Case "1"
							For i=LBound(macro_variables_integer_array_1d_1) To UBound(macro_variables_integer_array_1d_1)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_integer_array_1d_1(i)=CInt(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "2"
							For i=LBound(macro_variables_integer_array_1d_2) To UBound(macro_variables_integer_array_1d_2)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_integer_array_1d_2(i)=CInt(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "3"
							For i=LBound(macro_variables_integer_array_1d_3) To UBound(macro_variables_integer_array_1d_3)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_integer_array_1d_3(i)=CInt(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "4"
							For i=LBound(macro_variables_integer_array_1d_4) To UBound(macro_variables_integer_array_1d_4)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_integer_array_1d_4(i)=CInt(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "5"
							For i=LBound(macro_variables_integer_array_1d_5) To UBound(macro_variables_integer_array_1d_5)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_integer_array_1d_5(i)=CInt(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "6"
							For i=LBound(macro_variables_integer_array_1d_6) To UBound(macro_variables_integer_array_1d_6)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_integer_array_1d_6(i)=CInt(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "7"
							For i=LBound(macro_variables_integer_array_1d_7) To UBound(macro_variables_integer_array_1d_7)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_integer_array_1d_7(i)=CInt(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "8"
							For i=LBound(macro_variables_integer_array_1d_8) To UBound(macro_variables_integer_array_1d_8)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_integer_array_1d_8(i)=CInt(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "9"
							For i=LBound(macro_variables_integer_array_1d_9) To UBound(macro_variables_integer_array_1d_9)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_integer_array_1d_9(i)=CInt(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
					End Select
				Case "2d"
					Select Case macro_variables_info(c,3)
						Case "1"
							For i= LBound(macro_variables_integer_array_2d_1) To UBound(macro_variables_integer_array_2d_1)
								For j= LBound(macro_variables_integer_array_2d_1,2) To UBound(macro_variables_integer_array_2d_1,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_integer_array_2d_1(i,j)=CInt(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "2"
							For i= LBound(macro_variables_integer_array_2d_2) To UBound(macro_variables_integer_array_2d_2)
								For j= LBound(macro_variables_integer_array_2d_2,2) To UBound(macro_variables_integer_array_2d_2,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_integer_array_2d_2(i,j)=CInt(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "3"
							For i= LBound(macro_variables_integer_array_2d_3) To UBound(macro_variables_integer_array_2d_3)
								For j= LBound(macro_variables_integer_array_2d_3,2) To UBound(macro_variables_integer_array_2d_3,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_integer_array_2d_3(i,j)=CInt(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "4"
							For i= LBound(macro_variables_integer_array_2d_4) To UBound(macro_variables_integer_array_2d_4)
								For j= LBound(macro_variables_integer_array_2d_4,2) To UBound(macro_variables_integer_array_2d_4,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_integer_array_2d_4(i,j)=CInt(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "5"
							For i= LBound(macro_variables_integer_array_2d_5) To UBound(macro_variables_integer_array_2d_5)
								For j= LBound(macro_variables_integer_array_2d_5,2) To UBound(macro_variables_integer_array_2d_5,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_integer_array_2d_5(i,j)=CInt(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "6"
							For i= LBound(macro_variables_integer_array_2d_6) To UBound(macro_variables_integer_array_2d_6)
								For j= LBound(macro_variables_integer_array_2d_6,2) To UBound(macro_variables_integer_array_2d_6,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_integer_array_2d_6(i,j)=CInt(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "7"
							For i= LBound(macro_variables_integer_array_2d_7) To UBound(macro_variables_integer_array_2d_7)
								For j= LBound(macro_variables_integer_array_2d_7,2) To UBound(macro_variables_integer_array_2d_7,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_integer_array_2d_7(i,j)=CInt(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "8"
							For i= LBound(macro_variables_integer_array_2d_8) To UBound(macro_variables_integer_array_2d_8)
								For j= LBound(macro_variables_integer_array_2d_8,2) To UBound(macro_variables_integer_array_2d_8,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_integer_array_2d_8(i,j)=CInt(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "9"
							For i= LBound(macro_variables_integer_array_2d_9) To UBound(macro_variables_integer_array_2d_9)
								For j= LBound(macro_variables_integer_array_2d_9,2) To UBound(macro_variables_integer_array_2d_9,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_integer_array_2d_9(i,j)=CInt(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
					End Select
				Case "3d"
					Select Case macro_variables_info(c,3)
						Case "1"
							For i= LBound(macro_variables_integer_array_3d_1) To UBound(macro_variables_integer_array_3d_1)
								For j= LBound(macro_variables_integer_array_3d_1,2) To UBound(macro_variables_integer_array_3d_1,2)
									For k= LBound(macro_variables_integer_array_3d_1,3) To UBound(macro_variables_integer_array_3d_1,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_integer_array_3d_1(i,j,k)=CInt(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "2"
							For i= LBound(macro_variables_integer_array_3d_2) To UBound(macro_variables_integer_array_3d_2)
								For j= LBound(macro_variables_integer_array_3d_2,2) To UBound(macro_variables_integer_array_3d_2,2)
									For k= LBound(macro_variables_integer_array_3d_2,3) To UBound(macro_variables_integer_array_3d_2,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_integer_array_3d_2(i,j,k)=CInt(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "3"
							For i= LBound(macro_variables_integer_array_3d_3) To UBound(macro_variables_integer_array_3d_3)
								For j= LBound(macro_variables_integer_array_3d_3,2) To UBound(macro_variables_integer_array_3d_3,2)
									For k= LBound(macro_variables_integer_array_3d_3,3) To UBound(macro_variables_integer_array_3d_3,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_integer_array_3d_3(i,j,k)=CInt(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "4"
							For i= LBound(macro_variables_integer_array_3d_4) To UBound(macro_variables_integer_array_3d_4)
								For j= LBound(macro_variables_integer_array_3d_4,2) To UBound(macro_variables_integer_array_3d_4,2)
									For k= LBound(macro_variables_integer_array_3d_4,3) To UBound(macro_variables_integer_array_3d_4,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_integer_array_3d_4(i,j,k)=CInt(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "5"
							For i= LBound(macro_variables_integer_array_3d_5) To UBound(macro_variables_integer_array_3d_5)
								For j= LBound(macro_variables_integer_array_3d_5,2) To UBound(macro_variables_integer_array_3d_5,2)
									For k= LBound(macro_variables_integer_array_3d_5,3) To UBound(macro_variables_integer_array_3d_5,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_integer_array_3d_5(i,j,k)=CInt(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "6"
							For i= LBound(macro_variables_integer_array_3d_6) To UBound(macro_variables_integer_array_3d_6)
								For j= LBound(macro_variables_integer_array_3d_6,2) To UBound(macro_variables_integer_array_3d_6,2)
									For k= LBound(macro_variables_integer_array_3d_6,3) To UBound(macro_variables_integer_array_3d_6,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_integer_array_3d_6(i,j,k)=CInt(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "7"
							For i= LBound(macro_variables_integer_array_3d_7) To UBound(macro_variables_integer_array_3d_7)
								For j= LBound(macro_variables_integer_array_3d_7,2) To UBound(macro_variables_integer_array_3d_7,2)
									For k= LBound(macro_variables_integer_array_3d_7,3) To UBound(macro_variables_integer_array_3d_7,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_integer_array_3d_7(i,j,k)=CInt(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "8"
							For i= LBound(macro_variables_integer_array_3d_8) To UBound(macro_variables_integer_array_3d_8)
								For j= LBound(macro_variables_integer_array_3d_8,2) To UBound(macro_variables_integer_array_3d_8,2)
									For k= LBound(macro_variables_integer_array_3d_8,3) To UBound(macro_variables_integer_array_3d_8,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_integer_array_3d_8(i,j,k)=CInt(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "9"
							For i= LBound(macro_variables_integer_array_3d_9) To UBound(macro_variables_integer_array_3d_9)
								For j= LBound(macro_variables_integer_array_3d_9,2) To UBound(macro_variables_integer_array_3d_9,2)
									For k= LBound(macro_variables_integer_array_3d_9,3) To UBound(macro_variables_integer_array_3d_9,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_integer_array_3d_9(i,j,k)=CInt(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
					End Select
			End Select
		Else
			i=InStr(temp,"(")
			macro_variables_info(macro_variables_info_c,1)=LTrim(RTrim(Left(temp,i-1))) 'name
			macro_variables_info(macro_variables_info_c,2)="INTEGER_ARRAY" 'type
			macro_variables_info(macro_variables_info_c,3)="d" 'points to 1st, 2nd, 3rd... of 1d,2d,3d... variables			
			temp=Mid(temp,i) '() or (10) or (10,3) or (1 to 10) or (0 to 10, 0 to 3)
			macro_variables_info(macro_variables_info_c,4)=temp 'array_description
			macro_variables_info(macro_variables_info_c,5)="" 'array_depth ie. 1d,2d,3d
			variable_array_manager(macro_variables_info_c)
		EndIf
	Else 'this variable to dim is not an array
		If InStr(temp,"=") Then
			macro_variables_integer_c+=1
			ReDim Preserve macro_variables_integer_value(macro_variables_integer_c)
			If InStr(s2,"(") Then
				Dim As Integer openprin_c,closeprin_c,openprin_x,closeprin_x,variables_c,variables_x()
				Dim As String temp_alpha,variables()
				For i = 1 To Len(s2)
					Select Case Mid(s2,i,1)
						Case Chr(34)
							temp_alpha=""
							If quote=FALSE Then quote=TRUE Else quote=FALSE
						Case "a" To "z","0" To "9","_"
							If quote=FALSE Then
								temp_alpha+=Mid(s2,i,1)
								If Len(temp_alpha)=1 Then
									Select Case temp_alpha
										Case "0" To "9"
											temp_alpha=""
									End Select
								EndIf
							EndIf
						Case Else
							If temp_alpha<>"" Then
								variables_c+=1
								ReDim Preserve variables_x(variables_c)
								ReDim Preserve variables(variables_c)
								variables_x(variables_c)=i-Len(temp_alpha)
								variables(variables_c)=temp_alpha
								temp_alpha=""
							EndIf
					End Select
				Next
				If temp_alpha<>"" Then
					variables_c+=1
					ReDim Preserve variables_x(variables_c)
					ReDim Preserve variables(variables_c)
					variables_x(variables_c)=i-Len(temp_alpha)
					variables(variables_c)=temp_alpha
					temp_alpha=""
				EndIf

				For j=variables_c To 1 Step -1
					For i=1 To macro_variables_info_c-1
						If variables(j)=macro_variables_info(i,1) Then
							Select Case macro_variables_info(i,2)
								Case "INTEGER_ARRAY"
									openprin_c=0
									openprin_x=0
									closeprin_c=0
									closeprin_x=0
									For x=variables_x(j)+Len(variables(j)) To Len(s2)
										Select Case Mid(s2,x,1)
											Case "("
												openprin_c+=1
												If openprin_c=1 Then openprin_x=x
											Case ")"
												closeprin_c+=1
												If closeprin_c=openprin_c Then
													closeprin_x=x
													stemp=Mid(s2,openprin_x+1,closeprin_x-openprin_x-1)
													If InStr(stemp,",") Then 'this is for 2d and 3d arrays
														stemp_c=0
														ReDim stemp_n(stemp_c)
														stemp_c_x=1
														For c=1 To Len(stemp)
															If Mid(stemp,c,1)="," Then
																stemp_c+=1
																ReDim Preserve stemp_n(stemp_c)
																stemp_n(stemp_c)=CInt(evaluate_string_numeric_expression(Mid(stemp,stemp_c_x,c-stemp_c_x)))
																stemp_c_x=c+1
															EndIf
														Next
														stemp_c+=1
														ReDim Preserve stemp_n(stemp_c)
														stemp_n(stemp_c)=CInt(evaluate_string_numeric_expression(Mid(stemp,stemp_c_x,c-stemp_c_x)))
														s2=get_multi_dim_array_type_s2(s2,i,stemp_n(),j,variables_x(),closeprin_x)
													Else
														s2=get_1d_array_type_s2(s2,i,stemp,j,variables_x(),closeprin_x)
													EndIf
												EndIf
										End Select
									Next
							End Select
							Exit For
						EndIf
					Next
				Next
			EndIf
			macro_variables_integer_value(macro_variables_integer_c)=CInt(evaluate_string_numeric_expression(s2))
			i=InStr(temp,"=")
			temp=Mid(temp,1,i-1)
			temp=LTrim(RTrim(temp))
			macro_variables_info(macro_variables_info_c,1)=temp
			macro_variables_info(macro_variables_info_c,2)="INTEGER"
			macro_variables_info(macro_variables_info_c,3)=Str(macro_variables_integer_c)
		Else 'this is just a single value variable with no value set 
			macro_variables_integer_c+=1
			ReDim Preserve macro_variables_integer_value(macro_variables_integer_c)
			macro_variables_integer_value(macro_variables_integer_c)=0
			macro_variables_info(macro_variables_info_c,1)=temp
			macro_variables_info(macro_variables_info_c,2)="INTEGER"
			macro_variables_info(macro_variables_info_c,3)=Str(macro_variables_integer_c)			
		EndIf
	EndIf
End Sub

Sub dim_uinteger(temp As String)
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Sub dim_uinteger"
		Print #5,"temp:";temp
		'For dbugi=LBound(temp) To UBound(temp)
			'Print #5,"temp("; dbugi; "):"; temp(dbugi)
		'Next
		Print #5,"---------------"
	EndIf
	Dim As Integer i,j,k,x,c,low,hi,n
	Dim As Double dn
	Dim As Byte n_boolean
	Dim As Byte n_byte
	Dim As UByte n_ubyte
	Dim As Short n_short
	Dim As UShort n_ushort
	Dim As Long n_long
	Dim As ULong n_ulong
	Dim As UInteger n_uinteger
	Dim As LongInt n_longint
	Dim As ULongInt n_ulongint
	Dim As Single n_single
	Dim As String n_string
	macro_variables_info_c+=1
	ReDim Preserve macro_variables_info(macro_variables_info_c,8)
	Dim As String s1,s2,stemp
	Dim As Integer stemp_c,stemp_n(),stemp_c_x
	Dim As BOOLEAN quote
	
	If InStr(temp,"=") Then
		i=InStr(temp,"=")
		s1=Mid(temp,1,i-1)
		s2=Mid(temp,i+1)
	Else
		s1=temp
	EndIf
	If InStr(s1,"(") Then 'this variable to dim is an array
		If InStr(temp,"=") Then
			Dim As String temp2
			x=InStr(temp,"=")
			temp2=Mid(temp,x+1)
			temp2=LTrim(RTrim(temp2))
			temp=Mid(temp,1,x-1)
			i=InStr(temp,"(")
			macro_variables_info(macro_variables_info_c,1)=LTrim(RTrim(Left(temp,i-1))) 'name
			macro_variables_info(macro_variables_info_c,2)="UINTEGER_ARRAY" 'type
			macro_variables_info(macro_variables_info_c,3)="d" 'points to 1st, 2nd, 3rd... of 1d,2d,3d... variables			
			temp=Mid(temp,i) '() or (10) or (10,3) or (1 to 10) or (0 to 10, 0 to 3)
			macro_variables_info(macro_variables_info_c,4)=temp 'array_description
			macro_variables_info(macro_variables_info_c,5)="" 'array_depth ie. 1d,2d,3d
			variable_array_manager(macro_variables_info_c)
			
			c=macro_variables_info_c
			If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
			Select Case macro_variables_info(c,5)
				Case "1d"
					Select Case macro_variables_info(c,3)
						Case "1"
							For i=LBound(macro_variables_uinteger_array_1d_1) To UBound(macro_variables_uinteger_array_1d_1)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_uinteger_array_1d_1(i)=CUInt(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "2"
							For i=LBound(macro_variables_uinteger_array_1d_2) To UBound(macro_variables_uinteger_array_1d_2)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_uinteger_array_1d_2(i)=CUInt(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "3"
							For i=LBound(macro_variables_uinteger_array_1d_3) To UBound(macro_variables_uinteger_array_1d_3)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_uinteger_array_1d_3(i)=CUInt(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "4"
							For i=LBound(macro_variables_uinteger_array_1d_4) To UBound(macro_variables_uinteger_array_1d_4)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_uinteger_array_1d_4(i)=CUInt(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "5"
							For i=LBound(macro_variables_uinteger_array_1d_5) To UBound(macro_variables_uinteger_array_1d_5)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_uinteger_array_1d_5(i)=CUInt(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "6"
							For i=LBound(macro_variables_uinteger_array_1d_6) To UBound(macro_variables_uinteger_array_1d_6)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_uinteger_array_1d_6(i)=CUInt(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "7"
							For i=LBound(macro_variables_uinteger_array_1d_7) To UBound(macro_variables_uinteger_array_1d_7)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_uinteger_array_1d_7(i)=CUInt(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "8"
							For i=LBound(macro_variables_uinteger_array_1d_8) To UBound(macro_variables_uinteger_array_1d_8)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_uinteger_array_1d_8(i)=CUInt(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "9"
							For i=LBound(macro_variables_uinteger_array_1d_9) To UBound(macro_variables_uinteger_array_1d_9)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_uinteger_array_1d_9(i)=CUInt(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
					End Select
				Case "2d"
					Select Case macro_variables_info(c,3)
						Case "1"
							For i= LBound(macro_variables_uinteger_array_2d_1) To UBound(macro_variables_uinteger_array_2d_1)
								For j= LBound(macro_variables_uinteger_array_2d_1,2) To UBound(macro_variables_uinteger_array_2d_1,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_uinteger_array_2d_1(i,j)=CUInt(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "2"
							For i= LBound(macro_variables_uinteger_array_2d_2) To UBound(macro_variables_uinteger_array_2d_2)
								For j= LBound(macro_variables_uinteger_array_2d_2,2) To UBound(macro_variables_uinteger_array_2d_2,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_uinteger_array_2d_2(i,j)=CUInt(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "3"
							For i= LBound(macro_variables_uinteger_array_2d_3) To UBound(macro_variables_uinteger_array_2d_3)
								For j= LBound(macro_variables_uinteger_array_2d_3,2) To UBound(macro_variables_uinteger_array_2d_3,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_uinteger_array_2d_3(i,j)=CUInt(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "4"
							For i= LBound(macro_variables_uinteger_array_2d_4) To UBound(macro_variables_uinteger_array_2d_4)
								For j= LBound(macro_variables_uinteger_array_2d_4,2) To UBound(macro_variables_uinteger_array_2d_4,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_uinteger_array_2d_4(i,j)=CUInt(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "5"
							For i= LBound(macro_variables_uinteger_array_2d_5) To UBound(macro_variables_uinteger_array_2d_5)
								For j= LBound(macro_variables_uinteger_array_2d_5,2) To UBound(macro_variables_uinteger_array_2d_5,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_uinteger_array_2d_5(i,j)=CUInt(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "6"
							For i= LBound(macro_variables_uinteger_array_2d_6) To UBound(macro_variables_uinteger_array_2d_6)
								For j= LBound(macro_variables_uinteger_array_2d_6,2) To UBound(macro_variables_uinteger_array_2d_6,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_uinteger_array_2d_6(i,j)=CUInt(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "7"
							For i= LBound(macro_variables_uinteger_array_2d_7) To UBound(macro_variables_uinteger_array_2d_7)
								For j= LBound(macro_variables_uinteger_array_2d_7,2) To UBound(macro_variables_uinteger_array_2d_7,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_uinteger_array_2d_7(i,j)=CUInt(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "8"
							For i= LBound(macro_variables_uinteger_array_2d_8) To UBound(macro_variables_uinteger_array_2d_8)
								For j= LBound(macro_variables_uinteger_array_2d_8,2) To UBound(macro_variables_uinteger_array_2d_8,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_uinteger_array_2d_8(i,j)=CUInt(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "9"
							For i= LBound(macro_variables_uinteger_array_2d_9) To UBound(macro_variables_uinteger_array_2d_9)
								For j= LBound(macro_variables_uinteger_array_2d_9,2) To UBound(macro_variables_uinteger_array_2d_9,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_uinteger_array_2d_9(i,j)=CUInt(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
					End Select
				Case "3d"
					Select Case macro_variables_info(c,3)
						Case "1"
							For i= LBound(macro_variables_uinteger_array_3d_1) To UBound(macro_variables_uinteger_array_3d_1)
								For j= LBound(macro_variables_uinteger_array_3d_1,2) To UBound(macro_variables_uinteger_array_3d_1,2)
									For k= LBound(macro_variables_uinteger_array_3d_1,3) To UBound(macro_variables_uinteger_array_3d_1,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_uinteger_array_3d_1(i,j,k)=CUInt(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "2"
							For i= LBound(macro_variables_uinteger_array_3d_2) To UBound(macro_variables_uinteger_array_3d_2)
								For j= LBound(macro_variables_uinteger_array_3d_2,2) To UBound(macro_variables_uinteger_array_3d_2,2)
									For k= LBound(macro_variables_uinteger_array_3d_2,3) To UBound(macro_variables_uinteger_array_3d_2,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_uinteger_array_3d_2(i,j,k)=CUInt(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "3"
							For i= LBound(macro_variables_uinteger_array_3d_3) To UBound(macro_variables_uinteger_array_3d_3)
								For j= LBound(macro_variables_uinteger_array_3d_3,2) To UBound(macro_variables_uinteger_array_3d_3,2)
									For k= LBound(macro_variables_uinteger_array_3d_3,3) To UBound(macro_variables_uinteger_array_3d_3,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_uinteger_array_3d_3(i,j,k)=CUInt(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "4"
							For i= LBound(macro_variables_uinteger_array_3d_4) To UBound(macro_variables_uinteger_array_3d_4)
								For j= LBound(macro_variables_uinteger_array_3d_4,2) To UBound(macro_variables_uinteger_array_3d_4,2)
									For k= LBound(macro_variables_uinteger_array_3d_4,3) To UBound(macro_variables_uinteger_array_3d_4,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_uinteger_array_3d_4(i,j,k)=CUInt(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "5"
							For i= LBound(macro_variables_uinteger_array_3d_5) To UBound(macro_variables_uinteger_array_3d_5)
								For j= LBound(macro_variables_uinteger_array_3d_5,2) To UBound(macro_variables_uinteger_array_3d_5,2)
									For k= LBound(macro_variables_uinteger_array_3d_5,3) To UBound(macro_variables_uinteger_array_3d_5,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_uinteger_array_3d_5(i,j,k)=CUInt(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "6"
							For i= LBound(macro_variables_uinteger_array_3d_6) To UBound(macro_variables_uinteger_array_3d_6)
								For j= LBound(macro_variables_uinteger_array_3d_6,2) To UBound(macro_variables_uinteger_array_3d_6,2)
									For k= LBound(macro_variables_uinteger_array_3d_6,3) To UBound(macro_variables_uinteger_array_3d_6,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_uinteger_array_3d_6(i,j,k)=CUInt(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "7"
							For i= LBound(macro_variables_uinteger_array_3d_7) To UBound(macro_variables_uinteger_array_3d_7)
								For j= LBound(macro_variables_uinteger_array_3d_7,2) To UBound(macro_variables_uinteger_array_3d_7,2)
									For k= LBound(macro_variables_uinteger_array_3d_7,3) To UBound(macro_variables_uinteger_array_3d_7,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_uinteger_array_3d_7(i,j,k)=CUInt(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "8"
							For i= LBound(macro_variables_uinteger_array_3d_8) To UBound(macro_variables_uinteger_array_3d_8)
								For j= LBound(macro_variables_uinteger_array_3d_8,2) To UBound(macro_variables_uinteger_array_3d_8,2)
									For k= LBound(macro_variables_uinteger_array_3d_8,3) To UBound(macro_variables_uinteger_array_3d_8,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_uinteger_array_3d_8(i,j,k)=CUInt(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "9"
							For i= LBound(macro_variables_uinteger_array_3d_9) To UBound(macro_variables_uinteger_array_3d_9)
								For j= LBound(macro_variables_uinteger_array_3d_9,2) To UBound(macro_variables_uinteger_array_3d_9,2)
									For k= LBound(macro_variables_uinteger_array_3d_9,3) To UBound(macro_variables_uinteger_array_3d_9,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_uinteger_array_3d_3(i,j,k)=CUInt(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
					End Select
			End Select
		Else
			i=InStr(temp,"(")
			macro_variables_info(macro_variables_info_c,1)=LTrim(RTrim(Left(temp,i-1))) 'name
			macro_variables_info(macro_variables_info_c,2)="UINTEGER_ARRAY" 'type
			macro_variables_info(macro_variables_info_c,3)="d" 'points to 1st, 2nd, 3rd... of 1d,2d,3d... variables			
			temp=Mid(temp,i) '() or (10) or (10,3) or (1 to 10) or (0 to 10, 0 to 3)
			macro_variables_info(macro_variables_info_c,4)=temp 'array_description
			macro_variables_info(macro_variables_info_c,5)="" 'array_depth ie. 1d,2d,3d
			variable_array_manager(macro_variables_info_c)
		EndIf
	Else 'this variable to dim is not an array
		If InStr(temp,"=") Then
			macro_variables_uinteger_c+=1
			ReDim Preserve macro_variables_uinteger_value(macro_variables_uinteger_c)
			If InStr(s2,"(") Then
				Dim As Integer openprin_c,closeprin_c,openprin_x,closeprin_x,variables_c,variables_x()
				Dim As String temp_alpha,variables()
				For i = 1 To Len(s2)
					Select Case Mid(s2,i,1)
						Case Chr(34)
							temp_alpha=""
							If quote=FALSE Then quote=TRUE Else quote=FALSE
						Case "a" To "z","0" To "9","_"
							If quote=FALSE Then
								temp_alpha+=Mid(s2,i,1)
								If Len(temp_alpha)=1 Then
									Select Case temp_alpha
										Case "0" To "9"
											temp_alpha=""
									End Select
								EndIf
							EndIf
						Case Else
							If temp_alpha<>"" Then
								variables_c+=1
								ReDim Preserve variables_x(variables_c)
								ReDim Preserve variables(variables_c)
								variables_x(variables_c)=i-Len(temp_alpha)
								variables(variables_c)=temp_alpha
								temp_alpha=""
							EndIf
					End Select
				Next
				If temp_alpha<>"" Then
					variables_c+=1
					ReDim Preserve variables_x(variables_c)
					ReDim Preserve variables(variables_c)
					variables_x(variables_c)=i-Len(temp_alpha)
					variables(variables_c)=temp_alpha
					temp_alpha=""
				EndIf

				For j=variables_c To 1 Step -1
					For i=1 To macro_variables_info_c-1
						If variables(j)=macro_variables_info(i,1) Then
							Select Case macro_variables_info(i,2)
								Case "UINTEGER_ARRAY"
									openprin_c=0
									openprin_x=0
									closeprin_c=0
									closeprin_x=0
									For x=variables_x(j)+Len(variables(j)) To Len(s2)
										Select Case Mid(s2,x,1)
											Case "("
												openprin_c+=1
												If openprin_c=1 Then openprin_x=x
											Case ")"
												closeprin_c+=1
												If closeprin_c=openprin_c Then
													closeprin_x=x
													stemp=Mid(s2,openprin_x+1,closeprin_x-openprin_x-1)
													If InStr(stemp,",") Then 'this is for 2d and 3d arrays
														stemp_c=0
														ReDim stemp_n(stemp_c)
														stemp_c_x=1
														For c=1 To Len(stemp)
															If Mid(stemp,c,1)="," Then
																stemp_c+=1
																ReDim Preserve stemp_n(stemp_c)
																stemp_n(stemp_c)=CInt(evaluate_string_numeric_expression(Mid(stemp,stemp_c_x,c-stemp_c_x)))
																stemp_c_x=c+1
															EndIf
														Next
														stemp_c+=1
														ReDim Preserve stemp_n(stemp_c)
														stemp_n(stemp_c)=CInt(evaluate_string_numeric_expression(Mid(stemp,stemp_c_x,c-stemp_c_x)))
														s2=get_multi_dim_array_type_s2(s2,i,stemp_n(),j,variables_x(),closeprin_x)
													Else
														s2=get_1d_array_type_s2(s2,i,stemp,j,variables_x(),closeprin_x)
													EndIf
												EndIf
										End Select
									Next
							End Select
							Exit For
						EndIf
					Next
				Next
			EndIf
			macro_variables_uinteger_value(macro_variables_uinteger_c)=CUInt(evaluate_string_numeric_expression(s2))
			i=InStr(temp,"=")
			temp=Mid(temp,1,i-1)
			temp=LTrim(RTrim(temp))
			macro_variables_info(macro_variables_info_c,1)=temp
			macro_variables_info(macro_variables_info_c,2)="UINTEGER"
			macro_variables_info(macro_variables_info_c,3)=Str(macro_variables_uinteger_c)
		Else 'this is just a single value variable with no value set 
			macro_variables_uinteger_c+=1
			ReDim Preserve macro_variables_uinteger_value(macro_variables_uinteger_c)
			macro_variables_uinteger_value(macro_variables_uinteger_c)=0
			macro_variables_info(macro_variables_info_c,1)=temp
			macro_variables_info(macro_variables_info_c,2)="UINTEGER"
			macro_variables_info(macro_variables_info_c,3)=Str(macro_variables_uinteger_c)			
		EndIf
	EndIf
End Sub

Sub dim_longint(temp As String)
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Sub dim_longint"
		Print #5,"temp:";temp
		'For dbugi=LBound(temp) To UBound(temp)
			'Print #5,"temp("; dbugi; "):"; temp(dbugi)
		'Next
		Print #5,"---------------"
	EndIf
	Dim As Integer i,j,k,x,c,low,hi,n
	Dim As Double dn
	Dim As Byte n_boolean
	Dim As Byte n_byte
	Dim As UByte n_ubyte
	Dim As Short n_short
	Dim As UShort n_ushort
	Dim As Long n_long
	Dim As ULong n_ulong
	Dim As UInteger n_uinteger
	Dim As LongInt n_longint
	Dim As ULongInt n_ulongint
	Dim As Single n_single
	Dim As String n_string
	macro_variables_info_c+=1
	ReDim Preserve macro_variables_info(macro_variables_info_c,8)
	Dim As String s1,s2,stemp
	Dim As Integer stemp_c,stemp_n(),stemp_c_x
	Dim As BOOLEAN quote
	
	If InStr(temp,"=") Then
		i=InStr(temp,"=")
		s1=Mid(temp,1,i-1)
		s2=Mid(temp,i+1)
	Else
		s1=temp
	EndIf
	If InStr(s1,"(") Then 'this variable to dim is an array
		If InStr(temp,"=") Then
			Dim As String temp2
			x=InStr(temp,"=")
			temp2=Mid(temp,x+1)
			temp2=LTrim(RTrim(temp2))
			temp=Mid(temp,1,x-1)
			i=InStr(temp,"(")
			macro_variables_info(macro_variables_info_c,1)=LTrim(RTrim(Left(temp,i-1))) 'name
			macro_variables_info(macro_variables_info_c,2)="LONGINT_ARRAY" 'type
			macro_variables_info(macro_variables_info_c,3)="d" 'points to 1st, 2nd, 3rd... of 1d,2d,3d... variables			
			temp=Mid(temp,i) '() or (10) or (10,3) or (1 to 10) or (0 to 10, 0 to 3)
			macro_variables_info(macro_variables_info_c,4)=temp 'array_description
			macro_variables_info(macro_variables_info_c,5)="" 'array_depth ie. 1d,2d,3d
			variable_array_manager(macro_variables_info_c)
			
			c=macro_variables_info_c
			If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
			Select Case macro_variables_info(c,5)
				Case "1d"
					Select Case macro_variables_info(c,3)
						Case "1"
							For i=LBound(macro_variables_longint_array_1d_1) To UBound(macro_variables_longint_array_1d_1)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_longint_array_1d_1(i)=CLngInt(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "2"
							For i=LBound(macro_variables_longint_array_1d_2) To UBound(macro_variables_longint_array_1d_2)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_longint_array_1d_2(i)=CLngInt(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "3"
							For i=LBound(macro_variables_longint_array_1d_3) To UBound(macro_variables_longint_array_1d_3)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_longint_array_1d_3(i)=CLngInt(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "4"
							For i=LBound(macro_variables_longint_array_1d_4) To UBound(macro_variables_longint_array_1d_4)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_longint_array_1d_4(i)=CLngInt(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "5"
							For i=LBound(macro_variables_longint_array_1d_5) To UBound(macro_variables_longint_array_1d_5)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_longint_array_1d_5(i)=CLngInt(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "6"
							For i=LBound(macro_variables_longint_array_1d_6) To UBound(macro_variables_longint_array_1d_6)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_longint_array_1d_6(i)=CLngInt(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "7"
							For i=LBound(macro_variables_longint_array_1d_7) To UBound(macro_variables_longint_array_1d_7)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_longint_array_1d_7(i)=CLngInt(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "8"
							For i=LBound(macro_variables_longint_array_1d_8) To UBound(macro_variables_longint_array_1d_8)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_longint_array_1d_8(i)=CLngInt(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "9"
							For i=LBound(macro_variables_longint_array_1d_9) To UBound(macro_variables_longint_array_1d_9)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_longint_array_1d_9(i)=CLngInt(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
					End Select
				Case "2d"
					Select Case macro_variables_info(c,3)
						Case "1"
							For i= LBound(macro_variables_longint_array_2d_1) To UBound(macro_variables_longint_array_2d_1)
								For j= LBound(macro_variables_longint_array_2d_1,2) To UBound(macro_variables_longint_array_2d_1,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_longint_array_2d_1(i,j)=CLngInt(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "2"
							For i= LBound(macro_variables_longint_array_2d_2) To UBound(macro_variables_longint_array_2d_2)
								For j= LBound(macro_variables_longint_array_2d_2,2) To UBound(macro_variables_longint_array_2d_2,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_longint_array_2d_2(i,j)=CLngInt(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "3"
							For i= LBound(macro_variables_longint_array_2d_3) To UBound(macro_variables_longint_array_2d_3)
								For j= LBound(macro_variables_longint_array_2d_3,2) To UBound(macro_variables_longint_array_2d_3,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_longint_array_2d_3(i,j)=CLngInt(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "4"
							For i= LBound(macro_variables_longint_array_2d_4) To UBound(macro_variables_longint_array_2d_4)
								For j= LBound(macro_variables_longint_array_2d_4,2) To UBound(macro_variables_longint_array_2d_4,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_longint_array_2d_4(i,j)=CLngInt(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "5"
							For i= LBound(macro_variables_longint_array_2d_5) To UBound(macro_variables_longint_array_2d_5)
								For j= LBound(macro_variables_longint_array_2d_5,2) To UBound(macro_variables_longint_array_2d_5,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_longint_array_2d_5(i,j)=CLngInt(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "6"
							For i= LBound(macro_variables_longint_array_2d_6) To UBound(macro_variables_longint_array_2d_6)
								For j= LBound(macro_variables_longint_array_2d_6,2) To UBound(macro_variables_longint_array_2d_6,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_longint_array_2d_6(i,j)=CLngInt(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "7"
							For i= LBound(macro_variables_longint_array_2d_7) To UBound(macro_variables_longint_array_2d_7)
								For j= LBound(macro_variables_longint_array_2d_7,2) To UBound(macro_variables_longint_array_2d_7,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_longint_array_2d_7(i,j)=CLngInt(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "8"
							For i= LBound(macro_variables_longint_array_2d_8) To UBound(macro_variables_longint_array_2d_8)
								For j= LBound(macro_variables_longint_array_2d_8,2) To UBound(macro_variables_longint_array_2d_8,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_longint_array_2d_8(i,j)=CLngInt(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "9"
							For i= LBound(macro_variables_longint_array_2d_9) To UBound(macro_variables_longint_array_2d_9)
								For j= LBound(macro_variables_longint_array_2d_9,2) To UBound(macro_variables_longint_array_2d_9,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_longint_array_2d_9(i,j)=CLngInt(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
					End Select
				Case "3d"
					Select Case macro_variables_info(c,3)
						Case "1"
							For i= LBound(macro_variables_longint_array_3d_1) To UBound(macro_variables_longint_array_3d_1)
								For j= LBound(macro_variables_longint_array_3d_1,2) To UBound(macro_variables_longint_array_3d_1,2)
									For k= LBound(macro_variables_longint_array_3d_1,3) To UBound(macro_variables_longint_array_3d_1,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_longint_array_3d_1(i,j,k)=CLngInt(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "2"
							For i= LBound(macro_variables_longint_array_3d_2) To UBound(macro_variables_longint_array_3d_2)
								For j= LBound(macro_variables_longint_array_3d_2,2) To UBound(macro_variables_longint_array_3d_2,2)
									For k= LBound(macro_variables_longint_array_3d_2,3) To UBound(macro_variables_longint_array_3d_2,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_longint_array_3d_2(i,j,k)=CLngInt(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "3"
							For i= LBound(macro_variables_longint_array_3d_3) To UBound(macro_variables_longint_array_3d_3)
								For j= LBound(macro_variables_longint_array_3d_3,2) To UBound(macro_variables_longint_array_3d_3,2)
									For k= LBound(macro_variables_longint_array_3d_3,3) To UBound(macro_variables_longint_array_3d_3,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_longint_array_3d_3(i,j,k)=CLngInt(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "4"
							For i= LBound(macro_variables_longint_array_3d_4) To UBound(macro_variables_longint_array_3d_4)
								For j= LBound(macro_variables_longint_array_3d_4,2) To UBound(macro_variables_longint_array_3d_4,2)
									For k= LBound(macro_variables_longint_array_3d_4,3) To UBound(macro_variables_longint_array_3d_4,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_longint_array_3d_4(i,j,k)=CLngInt(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "5"
							For i= LBound(macro_variables_longint_array_3d_5) To UBound(macro_variables_longint_array_3d_5)
								For j= LBound(macro_variables_longint_array_3d_5,2) To UBound(macro_variables_longint_array_3d_5,2)
									For k= LBound(macro_variables_longint_array_3d_5,3) To UBound(macro_variables_longint_array_3d_5,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_longint_array_3d_5(i,j,k)=CLngInt(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "6"
							For i= LBound(macro_variables_longint_array_3d_6) To UBound(macro_variables_longint_array_3d_6)
								For j= LBound(macro_variables_longint_array_3d_6,2) To UBound(macro_variables_longint_array_3d_6,2)
									For k= LBound(macro_variables_longint_array_3d_6,3) To UBound(macro_variables_longint_array_3d_6,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_longint_array_3d_6(i,j,k)=CLngInt(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "7"
							For i= LBound(macro_variables_longint_array_3d_7) To UBound(macro_variables_longint_array_3d_7)
								For j= LBound(macro_variables_longint_array_3d_7,2) To UBound(macro_variables_longint_array_3d_7,2)
									For k= LBound(macro_variables_longint_array_3d_7,3) To UBound(macro_variables_longint_array_3d_7,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_longint_array_3d_7(i,j,k)=CLngInt(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "8"
							For i= LBound(macro_variables_longint_array_3d_8) To UBound(macro_variables_longint_array_3d_8)
								For j= LBound(macro_variables_longint_array_3d_8,2) To UBound(macro_variables_longint_array_3d_8,2)
									For k= LBound(macro_variables_longint_array_3d_8,3) To UBound(macro_variables_longint_array_3d_8,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_longint_array_3d_8(i,j,k)=CLngInt(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "9"
							For i= LBound(macro_variables_longint_array_3d_9) To UBound(macro_variables_longint_array_3d_9)
								For j= LBound(macro_variables_longint_array_3d_9,2) To UBound(macro_variables_longint_array_3d_9,2)
									For k= LBound(macro_variables_longint_array_3d_9,3) To UBound(macro_variables_longint_array_3d_9,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_longint_array_3d_9(i,j,k)=CLngInt(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
					End Select
			End Select
		Else
			i=InStr(temp,"(")
			macro_variables_info(macro_variables_info_c,1)=LTrim(RTrim(Left(temp,i-1))) 'name
			macro_variables_info(macro_variables_info_c,2)="LONGINT_ARRAY" 'type
			macro_variables_info(macro_variables_info_c,3)="d" 'points to 1st, 2nd, 3rd... of 1d,2d,3d... variables			
			temp=Mid(temp,i) '() or (10) or (10,3) or (1 to 10) or (0 to 10, 0 to 3)
			macro_variables_info(macro_variables_info_c,4)=temp 'array_description
			macro_variables_info(macro_variables_info_c,5)="" 'array_depth ie. 1d,2d,3d
			variable_array_manager(macro_variables_info_c)
		EndIf
	Else 'this variable to dim is not an array
		If InStr(temp,"=") Then
			macro_variables_longint_c+=1
			ReDim Preserve macro_variables_longint_value(macro_variables_longint_c)
			If InStr(s2,"(") Then
				Dim As Integer openprin_c,closeprin_c,openprin_x,closeprin_x,variables_c,variables_x()
				Dim As String temp_alpha,variables()
				For i = 1 To Len(s2)
					Select Case Mid(s2,i,1)
						Case Chr(34)
							temp_alpha=""
							If quote=FALSE Then quote=TRUE Else quote=FALSE
						Case "a" To "z","0" To "9","_"
							If quote=FALSE Then
								temp_alpha+=Mid(s2,i,1)
								If Len(temp_alpha)=1 Then
									Select Case temp_alpha
										Case "0" To "9"
											temp_alpha=""
									End Select
								EndIf
							EndIf
						Case Else
							If temp_alpha<>"" Then
								variables_c+=1
								ReDim Preserve variables_x(variables_c)
								ReDim Preserve variables(variables_c)
								variables_x(variables_c)=i-Len(temp_alpha)
								variables(variables_c)=temp_alpha
								temp_alpha=""
							EndIf
					End Select
				Next
				If temp_alpha<>"" Then
					variables_c+=1
					ReDim Preserve variables_x(variables_c)
					ReDim Preserve variables(variables_c)
					variables_x(variables_c)=i-Len(temp_alpha)
					variables(variables_c)=temp_alpha
					temp_alpha=""
				EndIf

				For j=variables_c To 1 Step -1
					For i=1 To macro_variables_info_c-1
						If variables(j)=macro_variables_info(i,1) Then
							Select Case macro_variables_info(i,2)
								Case "LONGINT_ARRAY"
									openprin_c=0
									openprin_x=0
									closeprin_c=0
									closeprin_x=0
									For x=variables_x(j)+Len(variables(j)) To Len(s2)
										Select Case Mid(s2,x,1)
											Case "("
												openprin_c+=1
												If openprin_c=1 Then openprin_x=x
											Case ")"
												closeprin_c+=1
												If closeprin_c=openprin_c Then
													closeprin_x=x
													stemp=Mid(s2,openprin_x+1,closeprin_x-openprin_x-1)
													If InStr(stemp,",") Then 'this is for 2d and 3d arrays
														stemp_c=0
														ReDim stemp_n(stemp_c)
														stemp_c_x=1
														For c=1 To Len(stemp)
															If Mid(stemp,c,1)="," Then
																stemp_c+=1
																ReDim Preserve stemp_n(stemp_c)
																stemp_n(stemp_c)=CInt(evaluate_string_numeric_expression(Mid(stemp,stemp_c_x,c-stemp_c_x)))
																stemp_c_x=c+1
															EndIf
														Next
														stemp_c+=1
														ReDim Preserve stemp_n(stemp_c)
														stemp_n(stemp_c)=CInt(evaluate_string_numeric_expression(Mid(stemp,stemp_c_x,c-stemp_c_x)))
														s2=get_multi_dim_array_type_s2(s2,i,stemp_n(),j,variables_x(),closeprin_x)
													Else
														s2=get_1d_array_type_s2(s2,i,stemp,j,variables_x(),closeprin_x)
													EndIf
												EndIf
										End Select
									Next
							End Select
							Exit For
						EndIf
					Next
				Next
			EndIf
			macro_variables_longint_value(macro_variables_longint_c)=CLngInt(evaluate_string_numeric_expression(s2))
			i=InStr(temp,"=")
			temp=Mid(temp,1,i-1)
			temp=LTrim(RTrim(temp))
			macro_variables_info(macro_variables_info_c,1)=temp
			macro_variables_info(macro_variables_info_c,2)="LONGINT"
			macro_variables_info(macro_variables_info_c,3)=Str(macro_variables_longint_c)
		Else 'this is just a single value variable with no value set 
			macro_variables_longint_c+=1
			ReDim Preserve macro_variables_longint_value(macro_variables_longint_c)
			macro_variables_longint_value(macro_variables_longint_c)=0
			macro_variables_info(macro_variables_info_c,1)=temp
			macro_variables_info(macro_variables_info_c,2)="LONGINT"
			macro_variables_info(macro_variables_info_c,3)=Str(macro_variables_longint_c)			
		EndIf
	EndIf
End Sub

Sub dim_ulongint(temp As String)
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Sub dim_ulongint"
		Print #5,"temp:";temp
		'For dbugi=LBound(temp) To UBound(temp)
			'Print #5,"temp("; dbugi; "):"; temp(dbugi)
		'Next
		Print #5,"---------------"
	EndIf
	Dim As Integer i,j,k,x,c,low,hi,n
	Dim As Double dn
	Dim As Byte n_boolean
	Dim As Byte n_byte
	Dim As UByte n_ubyte
	Dim As Short n_short
	Dim As UShort n_ushort
	Dim As Long n_long
	Dim As ULong n_ulong
	Dim As UInteger n_uinteger
	Dim As LongInt n_longint
	Dim As ULongInt n_ulongint
	Dim As Single n_single
	Dim As String n_string
	macro_variables_info_c+=1
	ReDim Preserve macro_variables_info(macro_variables_info_c,8)
	Dim As String s1,s2,stemp
	Dim As Integer stemp_c,stemp_n(),stemp_c_x
	Dim As BOOLEAN quote
	
	If InStr(temp,"=") Then
		i=InStr(temp,"=")
		s1=Mid(temp,1,i-1)
		s2=Mid(temp,i+1)
	Else
		s1=temp
	EndIf
	If InStr(s1,"(") Then 'this variable to dim is an array
		If InStr(temp,"=") Then
			Dim As String temp2
			x=InStr(temp,"=")
			temp2=Mid(temp,x+1)
			temp2=LTrim(RTrim(temp2))
			temp=Mid(temp,1,x-1)
			i=InStr(temp,"(")
			macro_variables_info(macro_variables_info_c,1)=LTrim(RTrim(Left(temp,i-1))) 'name
			macro_variables_info(macro_variables_info_c,2)="ULONGINT_ARRAY" 'type
			macro_variables_info(macro_variables_info_c,3)="d" 'points to 1st, 2nd, 3rd... of 1d,2d,3d... variables			
			temp=Mid(temp,i) '() or (10) or (10,3) or (1 to 10) or (0 to 10, 0 to 3)
			macro_variables_info(macro_variables_info_c,4)=temp 'array_description
			macro_variables_info(macro_variables_info_c,5)="" 'array_depth ie. 1d,2d,3d
			variable_array_manager(macro_variables_info_c)
			
			c=macro_variables_info_c
			If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
			Select Case macro_variables_info(c,5)
				Case "1d"
					Select Case macro_variables_info(c,3)
						Case "1"
							For i=LBound(macro_variables_ulongint_array_1d_1) To UBound(macro_variables_ulongint_array_1d_1)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_ulongint_array_1d_1(i)=CULngInt(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "2"
							For i=LBound(macro_variables_ulongint_array_1d_2) To UBound(macro_variables_ulongint_array_1d_2)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_ulongint_array_1d_2(i)=CULngInt(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "3"
							For i=LBound(macro_variables_ulongint_array_1d_3) To UBound(macro_variables_ulongint_array_1d_3)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_ulongint_array_1d_3(i)=CULngInt(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "4"
							For i=LBound(macro_variables_ulongint_array_1d_4) To UBound(macro_variables_ulongint_array_1d_4)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_ulongint_array_1d_4(i)=CULngInt(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "5"
							For i=LBound(macro_variables_ulongint_array_1d_5) To UBound(macro_variables_ulongint_array_1d_5)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_ulongint_array_1d_5(i)=CULngInt(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "6"
							For i=LBound(macro_variables_ulongint_array_1d_6) To UBound(macro_variables_ulongint_array_1d_6)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_ulongint_array_1d_6(i)=CULngInt(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "7"
							For i=LBound(macro_variables_ulongint_array_1d_7) To UBound(macro_variables_ulongint_array_1d_7)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_ulongint_array_1d_7(i)=CULngInt(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "8"
							For i=LBound(macro_variables_ulongint_array_1d_8) To UBound(macro_variables_ulongint_array_1d_8)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_ulongint_array_1d_8(i)=CULngInt(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "9"
							For i=LBound(macro_variables_ulongint_array_1d_9) To UBound(macro_variables_ulongint_array_1d_9)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_ulongint_array_1d_9(i)=CULngInt(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
					End Select
				Case "2d"
					Select Case macro_variables_info(c,3)
						Case "1"
							For i= LBound(macro_variables_ulongint_array_2d_1) To UBound(macro_variables_ulongint_array_2d_1)
								For j= LBound(macro_variables_ulongint_array_2d_1,2) To UBound(macro_variables_ulongint_array_2d_1,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_ulongint_array_2d_1(i,j)=CULngInt(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "2"
							For i= LBound(macro_variables_ulongint_array_2d_2) To UBound(macro_variables_ulongint_array_2d_2)
								For j= LBound(macro_variables_ulongint_array_2d_2,2) To UBound(macro_variables_ulongint_array_2d_2,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_ulongint_array_2d_2(i,j)=CULngInt(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "3"
							For i= LBound(macro_variables_ulongint_array_2d_3) To UBound(macro_variables_ulongint_array_2d_3)
								For j= LBound(macro_variables_ulongint_array_2d_3,2) To UBound(macro_variables_ulongint_array_2d_3,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_ulongint_array_2d_3(i,j)=CULngInt(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "4"
							For i= LBound(macro_variables_ulongint_array_2d_4) To UBound(macro_variables_ulongint_array_2d_4)
								For j= LBound(macro_variables_ulongint_array_2d_4,2) To UBound(macro_variables_ulongint_array_2d_4,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_ulongint_array_2d_4(i,j)=CULngInt(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "5"
							For i= LBound(macro_variables_ulongint_array_2d_5) To UBound(macro_variables_ulongint_array_2d_5)
								For j= LBound(macro_variables_ulongint_array_2d_5,2) To UBound(macro_variables_ulongint_array_2d_5,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_ulongint_array_2d_5(i,j)=CULngInt(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "6"
							For i= LBound(macro_variables_ulongint_array_2d_6) To UBound(macro_variables_ulongint_array_2d_6)
								For j= LBound(macro_variables_ulongint_array_2d_6,2) To UBound(macro_variables_ulongint_array_2d_6,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_ulongint_array_2d_6(i,j)=CULngInt(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "7"
							For i= LBound(macro_variables_ulongint_array_2d_7) To UBound(macro_variables_ulongint_array_2d_7)
								For j= LBound(macro_variables_ulongint_array_2d_7,2) To UBound(macro_variables_ulongint_array_2d_7,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_ulongint_array_2d_7(i,j)=CULngInt(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "8"
							For i= LBound(macro_variables_ulongint_array_2d_8) To UBound(macro_variables_ulongint_array_2d_8)
								For j= LBound(macro_variables_ulongint_array_2d_8,2) To UBound(macro_variables_ulongint_array_2d_8,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_ulongint_array_2d_8(i,j)=CULngInt(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "9"
							For i= LBound(macro_variables_ulongint_array_2d_9) To UBound(macro_variables_ulongint_array_2d_9)
								For j= LBound(macro_variables_ulongint_array_2d_9,2) To UBound(macro_variables_ulongint_array_2d_9,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_ulongint_array_2d_9(i,j)=CULngInt(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
					End Select
				Case "3d"
					Select Case macro_variables_info(c,3)
						Case "1"
							For i= LBound(macro_variables_ulongint_array_3d_1) To UBound(macro_variables_ulongint_array_3d_1)
								For j= LBound(macro_variables_ulongint_array_3d_1,2) To UBound(macro_variables_ulongint_array_3d_1,2)
									For k= LBound(macro_variables_ulongint_array_3d_1,3) To UBound(macro_variables_ulongint_array_3d_1,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_ulongint_array_3d_1(i,j,k)=CULngInt(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "2"
							For i= LBound(macro_variables_ulongint_array_3d_2) To UBound(macro_variables_ulongint_array_3d_2)
								For j= LBound(macro_variables_ulongint_array_3d_2,2) To UBound(macro_variables_ulongint_array_3d_2,2)
									For k= LBound(macro_variables_ulongint_array_3d_2,3) To UBound(macro_variables_ulongint_array_3d_2,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_ulongint_array_3d_2(i,j,k)=CULngInt(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "3"
							For i= LBound(macro_variables_ulongint_array_3d_3) To UBound(macro_variables_ulongint_array_3d_3)
								For j= LBound(macro_variables_ulongint_array_3d_3,2) To UBound(macro_variables_ulongint_array_3d_3,2)
									For k= LBound(macro_variables_ulongint_array_3d_3,3) To UBound(macro_variables_ulongint_array_3d_3,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_ulongint_array_3d_3(i,j,k)=CULngInt(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "4"
							For i= LBound(macro_variables_ulongint_array_3d_4) To UBound(macro_variables_ulongint_array_3d_4)
								For j= LBound(macro_variables_ulongint_array_3d_4,2) To UBound(macro_variables_ulongint_array_3d_4,2)
									For k= LBound(macro_variables_ulongint_array_3d_4,3) To UBound(macro_variables_ulongint_array_3d_4,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_ulongint_array_3d_4(i,j,k)=CULngInt(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "5"
							For i= LBound(macro_variables_ulongint_array_3d_5) To UBound(macro_variables_ulongint_array_3d_5)
								For j= LBound(macro_variables_ulongint_array_3d_5,2) To UBound(macro_variables_ulongint_array_3d_5,2)
									For k= LBound(macro_variables_ulongint_array_3d_5,3) To UBound(macro_variables_ulongint_array_3d_5,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_ulongint_array_3d_5(i,j,k)=CULngInt(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "6"
							For i= LBound(macro_variables_ulongint_array_3d_6) To UBound(macro_variables_ulongint_array_3d_6)
								For j= LBound(macro_variables_ulongint_array_3d_6,2) To UBound(macro_variables_ulongint_array_3d_6,2)
									For k= LBound(macro_variables_ulongint_array_3d_6,3) To UBound(macro_variables_ulongint_array_3d_6,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_ulongint_array_3d_6(i,j,k)=CULngInt(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "7"
							For i= LBound(macro_variables_ulongint_array_3d_7) To UBound(macro_variables_ulongint_array_3d_7)
								For j= LBound(macro_variables_ulongint_array_3d_7,2) To UBound(macro_variables_ulongint_array_3d_7,2)
									For k= LBound(macro_variables_ulongint_array_3d_7,3) To UBound(macro_variables_ulongint_array_3d_7,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_ulongint_array_3d_7(i,j,k)=CULngInt(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "8"
							For i= LBound(macro_variables_ulongint_array_3d_8) To UBound(macro_variables_ulongint_array_3d_8)
								For j= LBound(macro_variables_ulongint_array_3d_8,2) To UBound(macro_variables_ulongint_array_3d_8,2)
									For k= LBound(macro_variables_ulongint_array_3d_8,3) To UBound(macro_variables_ulongint_array_3d_8,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_ulongint_array_3d_8(i,j,k)=CULngInt(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "9"
							For i= LBound(macro_variables_ulongint_array_3d_9) To UBound(macro_variables_ulongint_array_3d_9)
								For j= LBound(macro_variables_ulongint_array_3d_9,2) To UBound(macro_variables_ulongint_array_3d_9,2)
									For k= LBound(macro_variables_ulongint_array_3d_9,3) To UBound(macro_variables_ulongint_array_3d_9,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_ulongint_array_3d_9(i,j,k)=CULngInt(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
					End Select
			End Select
		Else
			i=InStr(temp,"(")
			macro_variables_info(macro_variables_info_c,1)=LTrim(RTrim(Left(temp,i-1))) 'name
			macro_variables_info(macro_variables_info_c,2)="ULONGINT_ARRAY" 'type
			macro_variables_info(macro_variables_info_c,3)="d" 'points to 1st, 2nd, 3rd... of 1d,2d,3d... variables			
			temp=Mid(temp,i) '() or (10) or (10,3) or (1 to 10) or (0 to 10, 0 to 3)
			macro_variables_info(macro_variables_info_c,4)=temp 'array_description
			macro_variables_info(macro_variables_info_c,5)="" 'array_depth ie. 1d,2d,3d
			variable_array_manager(macro_variables_info_c)
		EndIf
	Else 'this variable to dim is not an array
		If InStr(temp,"=") Then
			macro_variables_ulongint_c+=1
			ReDim Preserve macro_variables_ulongint_value(macro_variables_ulongint_c)
			If InStr(s2,"(") Then
				Dim As Integer openprin_c,closeprin_c,openprin_x,closeprin_x,variables_c,variables_x()
				Dim As String temp_alpha,variables()
				For i = 1 To Len(s2)
					Select Case Mid(s2,i,1)
						Case Chr(34)
							temp_alpha=""
							If quote=FALSE Then quote=TRUE Else quote=FALSE
						Case "a" To "z","0" To "9","_"
							If quote=FALSE Then
								temp_alpha+=Mid(s2,i,1)
								If Len(temp_alpha)=1 Then
									Select Case temp_alpha
										Case "0" To "9"
											temp_alpha=""
									End Select
								EndIf
							EndIf
						Case Else
							If temp_alpha<>"" Then
								variables_c+=1
								ReDim Preserve variables_x(variables_c)
								ReDim Preserve variables(variables_c)
								variables_x(variables_c)=i-Len(temp_alpha)
								variables(variables_c)=temp_alpha
								temp_alpha=""
							EndIf
					End Select
				Next
				If temp_alpha<>"" Then
					variables_c+=1
					ReDim Preserve variables_x(variables_c)
					ReDim Preserve variables(variables_c)
					variables_x(variables_c)=i-Len(temp_alpha)
					variables(variables_c)=temp_alpha
					temp_alpha=""
				EndIf

				For j=variables_c To 1 Step -1
					For i=1 To macro_variables_info_c-1
						If variables(j)=macro_variables_info(i,1) Then
							Select Case macro_variables_info(i,2)
								Case "ULONGINT_ARRAY"
									openprin_c=0
									openprin_x=0
									closeprin_c=0
									closeprin_x=0
									For x=variables_x(j)+Len(variables(j)) To Len(s2)
										Select Case Mid(s2,x,1)
											Case "("
												openprin_c+=1
												If openprin_c=1 Then openprin_x=x
											Case ")"
												closeprin_c+=1
												If closeprin_c=openprin_c Then
													closeprin_x=x
													stemp=Mid(s2,openprin_x+1,closeprin_x-openprin_x-1)
													If InStr(stemp,",") Then 'this is for 2d and 3d arrays
														stemp_c=0
														ReDim stemp_n(stemp_c)
														stemp_c_x=1
														For c=1 To Len(stemp)
															If Mid(stemp,c,1)="," Then
																stemp_c+=1
																ReDim Preserve stemp_n(stemp_c)
																stemp_n(stemp_c)=CInt(evaluate_string_numeric_expression(Mid(stemp,stemp_c_x,c-stemp_c_x)))
																stemp_c_x=c+1
															EndIf
														Next
														stemp_c+=1
														ReDim Preserve stemp_n(stemp_c)
														stemp_n(stemp_c)=CInt(evaluate_string_numeric_expression(Mid(stemp,stemp_c_x,c-stemp_c_x)))
														s2=get_multi_dim_array_type_s2(s2,i,stemp_n(),j,variables_x(),closeprin_x)
													Else
														s2=get_1d_array_type_s2(s2,i,stemp,j,variables_x(),closeprin_x)
													EndIf
												EndIf
										End Select
									Next
							End Select
							Exit For
						EndIf
					Next
				Next
			EndIf
			macro_variables_ulongint_value(macro_variables_ulongint_c)=CULngInt(evaluate_string_numeric_expression(s2))
			i=InStr(temp,"=")
			temp=Mid(temp,1,i-1)
			temp=LTrim(RTrim(temp))
			macro_variables_info(macro_variables_info_c,1)=temp
			macro_variables_info(macro_variables_info_c,2)="ULONGINT"
			macro_variables_info(macro_variables_info_c,3)=Str(macro_variables_ulongint_c)
		Else 'this is just a single value variable with no value set 
			macro_variables_ulongint_c+=1
			ReDim Preserve macro_variables_ulongint_value(macro_variables_ulongint_c)
			macro_variables_ulongint_value(macro_variables_ulongint_c)=0
			macro_variables_info(macro_variables_info_c,1)=temp
			macro_variables_info(macro_variables_info_c,2)="ULONGINT"
			macro_variables_info(macro_variables_info_c,3)=Str(macro_variables_ulongint_c)			
		EndIf
	EndIf
End Sub

Sub dim_single(temp As String)
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Sub dim_single"
		Print #5,"temp:";temp
		'For dbugi=LBound(temp) To UBound(temp)
			'Print #5,"temp("; dbugi; "):"; temp(dbugi)
		'Next
		Print #5,"---------------"
	EndIf
	Dim As Integer i,j,k,x,c,low,hi,n
	Dim As Double dn
	Dim As Byte n_boolean
	Dim As Byte n_byte
	Dim As UByte n_ubyte
	Dim As Short n_short
	Dim As UShort n_ushort
	Dim As Long n_long
	Dim As ULong n_ulong
	Dim As UInteger n_uinteger
	Dim As LongInt n_longint
	Dim As ULongInt n_ulongint
	Dim As Single n_single
	Dim As String n_string
	macro_variables_info_c+=1
	ReDim Preserve macro_variables_info(macro_variables_info_c,8)
	Dim As String s1,s2,stemp
	Dim As Integer stemp_c,stemp_n(),stemp_c_x
	Dim As BOOLEAN quote
	
	If InStr(temp,"=") Then
		i=InStr(temp,"=")
		s1=Mid(temp,1,i-1)
		s2=Mid(temp,i+1)
	Else
		s1=temp
	EndIf
	If InStr(s1,"(") Then 'this variable to dim is an array
		If InStr(temp,"=") Then
			Dim As String temp2
			x=InStr(temp,"=")
			temp2=Mid(temp,x+1)
			temp2=LTrim(RTrim(temp2))
			temp=Mid(temp,1,x-1)
			i=InStr(temp,"(")
			macro_variables_info(macro_variables_info_c,1)=LTrim(RTrim(Left(temp,i-1))) 'name
			macro_variables_info(macro_variables_info_c,2)="SINGLE_ARRAY" 'type
			macro_variables_info(macro_variables_info_c,3)="d" 'points to 1st, 2nd, 3rd... of 1d,2d,3d... variables			
			temp=Mid(temp,i) '() or (10) or (10,3) or (1 to 10) or (0 to 10, 0 to 3)
			macro_variables_info(macro_variables_info_c,4)=temp 'array_description
			macro_variables_info(macro_variables_info_c,5)="" 'array_depth ie. 1d,2d,3d
			variable_array_manager(macro_variables_info_c)
			
			c=macro_variables_info_c
			If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
			Select Case macro_variables_info(c,5)
				Case "1d"
					Select Case macro_variables_info(c,3)
						Case "1"
							For i=LBound(macro_variables_single_array_1d_1) To UBound(macro_variables_single_array_1d_1)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_single_array_1d_1(i)=CSng(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "2"
							For i=LBound(macro_variables_single_array_1d_2) To UBound(macro_variables_single_array_1d_2)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_single_array_1d_2(i)=CSng(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "3"
							For i=LBound(macro_variables_single_array_1d_3) To UBound(macro_variables_single_array_1d_3)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_single_array_1d_3(i)=CSng(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "4"
							For i=LBound(macro_variables_single_array_1d_4) To UBound(macro_variables_single_array_1d_4)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_single_array_1d_4(i)=CSng(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "5"
							For i=LBound(macro_variables_single_array_1d_5) To UBound(macro_variables_single_array_1d_5)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_single_array_1d_5(i)=CSng(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "6"
							For i=LBound(macro_variables_single_array_1d_6) To UBound(macro_variables_single_array_1d_6)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_single_array_1d_6(i)=CSng(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "7"
							For i=LBound(macro_variables_single_array_1d_7) To UBound(macro_variables_single_array_1d_7)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_single_array_1d_7(i)=CSng(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "8"
							For i=LBound(macro_variables_single_array_1d_8) To UBound(macro_variables_single_array_1d_8)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_single_array_1d_8(i)=CSng(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "9"
							For i=LBound(macro_variables_single_array_1d_9) To UBound(macro_variables_single_array_1d_9)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_single_array_1d_9(i)=CSng(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
					End Select
				Case "2d"
					Select Case macro_variables_info(c,3)
						Case "1"
							For i= LBound(macro_variables_single_array_2d_1) To UBound(macro_variables_single_array_2d_1)
								For j= LBound(macro_variables_single_array_2d_1,2) To UBound(macro_variables_single_array_2d_1,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_single_array_2d_1(i,j)=CSng(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "2"
							For i= LBound(macro_variables_single_array_2d_2) To UBound(macro_variables_single_array_2d_2)
								For j= LBound(macro_variables_single_array_2d_2,2) To UBound(macro_variables_single_array_2d_2,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_single_array_2d_2(i,j)=CSng(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "3"
							For i= LBound(macro_variables_single_array_2d_3) To UBound(macro_variables_single_array_2d_3)
								For j= LBound(macro_variables_single_array_2d_3,2) To UBound(macro_variables_single_array_2d_3,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_single_array_2d_3(i,j)=CSng(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "4"
							For i= LBound(macro_variables_single_array_2d_4) To UBound(macro_variables_single_array_2d_4)
								For j= LBound(macro_variables_single_array_2d_4,2) To UBound(macro_variables_single_array_2d_4,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_single_array_2d_4(i,j)=CSng(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "5"
							For i= LBound(macro_variables_single_array_2d_5) To UBound(macro_variables_single_array_2d_5)
								For j= LBound(macro_variables_single_array_2d_5,2) To UBound(macro_variables_single_array_2d_5,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_single_array_2d_5(i,j)=CSng(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "6"
							For i= LBound(macro_variables_single_array_2d_6) To UBound(macro_variables_single_array_2d_6)
								For j= LBound(macro_variables_single_array_2d_6,2) To UBound(macro_variables_single_array_2d_6,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_single_array_2d_6(i,j)=CSng(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "7"
							For i= LBound(macro_variables_single_array_2d_7) To UBound(macro_variables_single_array_2d_7)
								For j= LBound(macro_variables_single_array_2d_7,2) To UBound(macro_variables_single_array_2d_7,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_single_array_2d_7(i,j)=CSng(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "8"
							For i= LBound(macro_variables_single_array_2d_8) To UBound(macro_variables_single_array_2d_8)
								For j= LBound(macro_variables_single_array_2d_8,2) To UBound(macro_variables_single_array_2d_8,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_single_array_2d_8(i,j)=CSng(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "9"
							For i= LBound(macro_variables_single_array_2d_9) To UBound(macro_variables_single_array_2d_9)
								For j= LBound(macro_variables_single_array_2d_9,2) To UBound(macro_variables_single_array_2d_9,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_single_array_2d_9(i,j)=CSng(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
					End Select
				Case "3d"
					Select Case macro_variables_info(c,3)
						Case "1"
							For i= LBound(macro_variables_single_array_3d_1) To UBound(macro_variables_single_array_3d_1)
								For j= LBound(macro_variables_single_array_3d_1,2) To UBound(macro_variables_single_array_3d_1,2)
									For k= LBound(macro_variables_single_array_3d_1,3) To UBound(macro_variables_single_array_3d_1,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_single_array_3d_1(i,j,k)=CSng(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "2"
							For i= LBound(macro_variables_single_array_3d_2) To UBound(macro_variables_single_array_3d_2)
								For j= LBound(macro_variables_single_array_3d_2,2) To UBound(macro_variables_single_array_3d_2,2)
									For k= LBound(macro_variables_single_array_3d_2,3) To UBound(macro_variables_single_array_3d_2,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_single_array_3d_2(i,j,k)=CSng(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "3"
							For i= LBound(macro_variables_single_array_3d_3) To UBound(macro_variables_single_array_3d_3)
								For j= LBound(macro_variables_single_array_3d_3,2) To UBound(macro_variables_single_array_3d_3,2)
									For k= LBound(macro_variables_single_array_3d_3,3) To UBound(macro_variables_single_array_3d_3,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_single_array_3d_3(i,j,k)=CSng(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "4"
							For i= LBound(macro_variables_single_array_3d_4) To UBound(macro_variables_single_array_3d_4)
								For j= LBound(macro_variables_single_array_3d_4,2) To UBound(macro_variables_single_array_3d_4,2)
									For k= LBound(macro_variables_single_array_3d_4,3) To UBound(macro_variables_single_array_3d_4,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_single_array_3d_4(i,j,k)=CSng(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "5"
							For i= LBound(macro_variables_single_array_3d_5) To UBound(macro_variables_single_array_3d_5)
								For j= LBound(macro_variables_single_array_3d_5,2) To UBound(macro_variables_single_array_3d_5,2)
									For k= LBound(macro_variables_single_array_3d_5,3) To UBound(macro_variables_single_array_3d_5,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_single_array_3d_5(i,j,k)=CSng(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "6"
							For i= LBound(macro_variables_single_array_3d_6) To UBound(macro_variables_single_array_3d_6)
								For j= LBound(macro_variables_single_array_3d_6,2) To UBound(macro_variables_single_array_3d_6,2)
									For k= LBound(macro_variables_single_array_3d_6,3) To UBound(macro_variables_single_array_3d_6,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_single_array_3d_6(i,j,k)=CSng(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "7"
							For i= LBound(macro_variables_single_array_3d_7) To UBound(macro_variables_single_array_3d_7)
								For j= LBound(macro_variables_single_array_3d_7,2) To UBound(macro_variables_single_array_3d_7,2)
									For k= LBound(macro_variables_single_array_3d_7,3) To UBound(macro_variables_single_array_3d_7,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_single_array_3d_7(i,j,k)=CSng(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "8"
							For i= LBound(macro_variables_single_array_3d_8) To UBound(macro_variables_single_array_3d_8)
								For j= LBound(macro_variables_single_array_3d_8,2) To UBound(macro_variables_single_array_3d_8,2)
									For k= LBound(macro_variables_single_array_3d_8,3) To UBound(macro_variables_single_array_3d_8,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_single_array_3d_8(i,j,k)=CSng(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "9"
							For i= LBound(macro_variables_single_array_3d_9) To UBound(macro_variables_single_array_3d_9)
								For j= LBound(macro_variables_single_array_3d_9,2) To UBound(macro_variables_single_array_3d_9,2)
									For k= LBound(macro_variables_single_array_3d_9,3) To UBound(macro_variables_single_array_3d_9,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_single_array_3d_9(i,j,k)=CSng(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
					End Select
			End Select
		Else
			i=InStr(temp,"(")
			macro_variables_info(macro_variables_info_c,1)=LTrim(RTrim(Left(temp,i-1))) 'name
			macro_variables_info(macro_variables_info_c,2)="SINGLE_ARRAY" 'type
			macro_variables_info(macro_variables_info_c,3)="d" 'points to 1st, 2nd, 3rd... of 1d,2d,3d... variables			
			temp=Mid(temp,i) '() or (10) or (10,3) or (1 to 10) or (0 to 10, 0 to 3)
			macro_variables_info(macro_variables_info_c,4)=temp 'array_description
			macro_variables_info(macro_variables_info_c,5)="" 'array_depth ie. 1d,2d,3d
			variable_array_manager(macro_variables_info_c)
		EndIf
	Else 'this variable to dim is not an array
		If InStr(temp,"=") Then
			macro_variables_single_c+=1
			ReDim Preserve macro_variables_single_value(macro_variables_single_c)
			If InStr(s2,"(") Then
				Dim As Integer openprin_c,closeprin_c,openprin_x,closeprin_x,variables_c,variables_x()
				Dim As String temp_alpha,variables()
				For i = 1 To Len(s2)
					Select Case Mid(s2,i,1)
						Case Chr(34)
							temp_alpha=""
							If quote=FALSE Then quote=TRUE Else quote=FALSE
						Case "a" To "z","0" To "9","_"
							If quote=FALSE Then
								temp_alpha+=Mid(s2,i,1)
								If Len(temp_alpha)=1 Then
									Select Case temp_alpha
										Case "0" To "9"
											temp_alpha=""
									End Select
								EndIf
							EndIf
						Case Else
							If temp_alpha<>"" Then
								variables_c+=1
								ReDim Preserve variables_x(variables_c)
								ReDim Preserve variables(variables_c)
								variables_x(variables_c)=i-Len(temp_alpha)
								variables(variables_c)=temp_alpha
								temp_alpha=""
							EndIf
					End Select
				Next
				If temp_alpha<>"" Then
					variables_c+=1
					ReDim Preserve variables_x(variables_c)
					ReDim Preserve variables(variables_c)
					variables_x(variables_c)=i-Len(temp_alpha)
					variables(variables_c)=temp_alpha
					temp_alpha=""
				EndIf

				For j=variables_c To 1 Step -1
					For i=1 To macro_variables_info_c-1
						If variables(j)=macro_variables_info(i,1) Then
							Select Case macro_variables_info(i,2)
								Case "SINGLE_ARRAY"
									openprin_c=0
									openprin_x=0
									closeprin_c=0
									closeprin_x=0
									For x=variables_x(j)+Len(variables(j)) To Len(s2)
										Select Case Mid(s2,x,1)
											Case "("
												openprin_c+=1
												If openprin_c=1 Then openprin_x=x
											Case ")"
												closeprin_c+=1
												If closeprin_c=openprin_c Then
													closeprin_x=x
													stemp=Mid(s2,openprin_x+1,closeprin_x-openprin_x-1)
													If InStr(stemp,",") Then 'this is for 2d and 3d arrays
														stemp_c=0
														ReDim stemp_n(stemp_c)
														stemp_c_x=1
														For c=1 To Len(stemp)
															If Mid(stemp,c,1)="," Then
																stemp_c+=1
																ReDim Preserve stemp_n(stemp_c)
																stemp_n(stemp_c)=CInt(evaluate_string_numeric_expression(Mid(stemp,stemp_c_x,c-stemp_c_x)))
																stemp_c_x=c+1
															EndIf
														Next
														stemp_c+=1
														ReDim Preserve stemp_n(stemp_c)
														stemp_n(stemp_c)=CInt(evaluate_string_numeric_expression(Mid(stemp,stemp_c_x,c-stemp_c_x)))
														s2=get_multi_dim_array_type_s2(s2,i,stemp_n(),j,variables_x(),closeprin_x)
													Else
														s2=get_1d_array_type_s2(s2,i,stemp,j,variables_x(),closeprin_x)
													EndIf
												EndIf
										End Select
									Next
							End Select
							Exit For
						EndIf
					Next
				Next
			EndIf
			macro_variables_single_value(macro_variables_single_c)=CSng(evaluate_string_numeric_expression(s2))
			i=InStr(temp,"=")
			temp=Mid(temp,1,i-1)
			temp=LTrim(RTrim(temp))
			macro_variables_info(macro_variables_info_c,1)=temp
			macro_variables_info(macro_variables_info_c,2)="SINGLE"
			macro_variables_info(macro_variables_info_c,3)=Str(macro_variables_single_c)
		Else 'this is just a single value variable with no value set 
			macro_variables_single_c+=1
			ReDim Preserve macro_variables_single_value(macro_variables_single_c)
			macro_variables_single_value(macro_variables_single_c)=0
			macro_variables_info(macro_variables_info_c,1)=temp
			macro_variables_info(macro_variables_info_c,2)="SINGLE"
			macro_variables_info(macro_variables_info_c,3)=Str(macro_variables_single_c)			
		EndIf
	EndIf
End Sub

Sub dim_double(temp As String)
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Sub dim_double"
		Print #5,"temp:";temp
		'For dbugi=LBound(temp) To UBound(temp)
			'Print #5,"temp("; dbugi; "):"; temp(dbugi)
		'Next
		Print #5,"---------------"
	EndIf
	Dim As Integer i,j,k,x,c,low,hi,n
	Dim As Double dn
	Dim As Byte n_boolean
	Dim As Byte n_byte
	Dim As UByte n_ubyte
	Dim As Short n_short
	Dim As UShort n_ushort
	Dim As Long n_long
	Dim As ULong n_ulong
	Dim As UInteger n_uinteger
	Dim As LongInt n_longint
	Dim As ULongInt n_ulongint
	Dim As Single n_single
	Dim As String n_string
	macro_variables_info_c+=1
	ReDim Preserve macro_variables_info(macro_variables_info_c,8)
	Dim As String s1,s2,stemp
	Dim As Integer stemp_c,stemp_n(),stemp_c_x
	Dim As BOOLEAN quote
	
	If InStr(temp,"=") Then
		i=InStr(temp,"=")
		s1=Mid(temp,1,i-1)
		s2=Mid(temp,i+1)
	Else
		s1=temp
	EndIf
	If InStr(s1,"(") Then 'this variable to dim is an array
		If InStr(temp,"=") Then
			Dim As String temp2
			x=InStr(temp,"=")
			temp2=Mid(temp,x+1)
			temp2=LTrim(RTrim(temp2))
			temp=Mid(temp,1,x-1)
			i=InStr(temp,"(")
			macro_variables_info(macro_variables_info_c,1)=LTrim(RTrim(Left(temp,i-1))) 'name
			macro_variables_info(macro_variables_info_c,2)="DOUBLE_ARRAY" 'type
			macro_variables_info(macro_variables_info_c,3)="d" 'points to 1st, 2nd, 3rd... of 1d,2d,3d... variables			
			temp=Mid(temp,i) '() or (10) or (10,3) or (1 to 10) or (0 to 10, 0 to 3)
			macro_variables_info(macro_variables_info_c,4)=temp 'array_description
			macro_variables_info(macro_variables_info_c,5)="" 'array_depth ie. 1d,2d,3d
			variable_array_manager(macro_variables_info_c)
			
			c=macro_variables_info_c
			If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
			Select Case macro_variables_info(c,5)
				Case "1d"
					Select Case macro_variables_info(c,3)
						Case "1"
							For i=LBound(macro_variables_double_array_1d_1) To UBound(macro_variables_double_array_1d_1)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_double_array_1d_1(i)=CDbl(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "2"
							For i=LBound(macro_variables_double_array_1d_2) To UBound(macro_variables_double_array_1d_2)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_double_array_1d_2(i)=CDbl(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "3"
							For i=LBound(macro_variables_double_array_1d_3) To UBound(macro_variables_double_array_1d_3)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_double_array_1d_3(i)=CDbl(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "4"
							For i=LBound(macro_variables_double_array_1d_4) To UBound(macro_variables_double_array_1d_4)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_double_array_1d_4(i)=CDbl(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "5"
							For i=LBound(macro_variables_double_array_1d_5) To UBound(macro_variables_double_array_1d_5)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_double_array_1d_5(i)=CDbl(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "6"
							For i=LBound(macro_variables_double_array_1d_6) To UBound(macro_variables_double_array_1d_6)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_double_array_1d_6(i)=CDbl(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "7"
							For i=LBound(macro_variables_double_array_1d_7) To UBound(macro_variables_double_array_1d_7)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_double_array_1d_7(i)=CDbl(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "8"
							For i=LBound(macro_variables_double_array_1d_8) To UBound(macro_variables_double_array_1d_8)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_double_array_1d_8(i)=CDbl(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "9"
							For i=LBound(macro_variables_double_array_1d_9) To UBound(macro_variables_double_array_1d_9)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_double_array_1d_9(i)=CDbl(temp2)
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
					End Select
				Case "2d"
					Select Case macro_variables_info(c,3)
						Case "1"
							For i= LBound(macro_variables_double_array_2d_1) To UBound(macro_variables_double_array_2d_1)
								For j= LBound(macro_variables_double_array_2d_1,2) To UBound(macro_variables_double_array_2d_1,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_double_array_2d_1(i,j)=CDbl(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "2"
							For i= LBound(macro_variables_double_array_2d_2) To UBound(macro_variables_double_array_2d_2)
								For j= LBound(macro_variables_double_array_2d_2,2) To UBound(macro_variables_double_array_2d_2,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_double_array_2d_2(i,j)=CDbl(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "3"
							For i= LBound(macro_variables_double_array_2d_3) To UBound(macro_variables_double_array_2d_3)
								For j= LBound(macro_variables_double_array_2d_3,2) To UBound(macro_variables_double_array_2d_3,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_double_array_2d_3(i,j)=CDbl(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "4"
							For i= LBound(macro_variables_double_array_2d_4) To UBound(macro_variables_double_array_2d_4)
								For j= LBound(macro_variables_double_array_2d_4,2) To UBound(macro_variables_double_array_2d_4,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_double_array_2d_4(i,j)=CDbl(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "5"
							For i= LBound(macro_variables_double_array_2d_5) To UBound(macro_variables_double_array_2d_5)
								For j= LBound(macro_variables_double_array_2d_5,2) To UBound(macro_variables_double_array_2d_5,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_double_array_2d_5(i,j)=CDbl(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "6"
							For i= LBound(macro_variables_double_array_2d_6) To UBound(macro_variables_double_array_2d_6)
								For j= LBound(macro_variables_double_array_2d_6,2) To UBound(macro_variables_double_array_2d_6,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_double_array_2d_6(i,j)=CDbl(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "7"
							For i= LBound(macro_variables_double_array_2d_7) To UBound(macro_variables_double_array_2d_7)
								For j= LBound(macro_variables_double_array_2d_7,2) To UBound(macro_variables_double_array_2d_7,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_double_array_2d_7(i,j)=CDbl(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "8"
							For i= LBound(macro_variables_double_array_2d_8) To UBound(macro_variables_double_array_2d_8)
								For j= LBound(macro_variables_double_array_2d_8,2) To UBound(macro_variables_double_array_2d_8,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_double_array_2d_8(i,j)=CDbl(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "9"
							For i= LBound(macro_variables_double_array_2d_9) To UBound(macro_variables_double_array_2d_9)
								For j= LBound(macro_variables_double_array_2d_9,2) To UBound(macro_variables_double_array_2d_9,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_double_array_2d_9(i,j)=CDbl(temp2)
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
					End Select
				Case "3d"
					Select Case macro_variables_info(c,3)
						Case "1"
							For i= LBound(macro_variables_double_array_3d_1) To UBound(macro_variables_double_array_3d_1)
								For j= LBound(macro_variables_double_array_3d_1,2) To UBound(macro_variables_double_array_3d_1,2)
									For k= LBound(macro_variables_double_array_3d_1,3) To UBound(macro_variables_double_array_3d_1,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_double_array_3d_1(i,j,k)=CDbl(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "2"
							For i= LBound(macro_variables_double_array_3d_2) To UBound(macro_variables_double_array_3d_2)
								For j= LBound(macro_variables_double_array_3d_2,2) To UBound(macro_variables_double_array_3d_2,2)
									For k= LBound(macro_variables_double_array_3d_2,3) To UBound(macro_variables_double_array_3d_2,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_double_array_3d_2(i,j,k)=CDbl(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "3"
							For i= LBound(macro_variables_double_array_3d_3) To UBound(macro_variables_double_array_3d_3)
								For j= LBound(macro_variables_double_array_3d_3,2) To UBound(macro_variables_double_array_3d_3,2)
									For k= LBound(macro_variables_double_array_3d_3,3) To UBound(macro_variables_double_array_3d_3,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_double_array_3d_3(i,j,k)=CDbl(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "4"
							For i= LBound(macro_variables_double_array_3d_4) To UBound(macro_variables_double_array_3d_4)
								For j= LBound(macro_variables_double_array_3d_4,2) To UBound(macro_variables_double_array_3d_4,2)
									For k= LBound(macro_variables_double_array_3d_4,3) To UBound(macro_variables_double_array_3d_4,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_double_array_3d_4(i,j,k)=CDbl(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "5"
							For i= LBound(macro_variables_double_array_3d_5) To UBound(macro_variables_double_array_3d_5)
								For j= LBound(macro_variables_double_array_3d_5,2) To UBound(macro_variables_double_array_3d_5,2)
									For k= LBound(macro_variables_double_array_3d_5,3) To UBound(macro_variables_double_array_3d_5,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_double_array_3d_5(i,j,k)=CDbl(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "6"
							For i= LBound(macro_variables_double_array_3d_6) To UBound(macro_variables_double_array_3d_6)
								For j= LBound(macro_variables_double_array_3d_6,2) To UBound(macro_variables_double_array_3d_6,2)
									For k= LBound(macro_variables_double_array_3d_6,3) To UBound(macro_variables_double_array_3d_6,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_double_array_3d_6(i,j,k)=CDbl(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "7"
							For i= LBound(macro_variables_double_array_3d_7) To UBound(macro_variables_double_array_3d_7)
								For j= LBound(macro_variables_double_array_3d_7,2) To UBound(macro_variables_double_array_3d_7,2)
									For k= LBound(macro_variables_double_array_3d_7,3) To UBound(macro_variables_double_array_3d_7,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_double_array_3d_7(i,j,k)=CDbl(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "8"
							For i= LBound(macro_variables_double_array_3d_8) To UBound(macro_variables_double_array_3d_8)
								For j= LBound(macro_variables_double_array_3d_8,2) To UBound(macro_variables_double_array_3d_8,2)
									For k= LBound(macro_variables_double_array_3d_8,3) To UBound(macro_variables_double_array_3d_8,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_double_array_3d_8(i,j,k)=CDbl(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "9"
							For i= LBound(macro_variables_double_array_3d_9) To UBound(macro_variables_double_array_3d_9)
								For j= LBound(macro_variables_double_array_3d_9,2) To UBound(macro_variables_double_array_3d_9,2)
									For k= LBound(macro_variables_double_array_3d_9,3) To UBound(macro_variables_double_array_3d_9,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_double_array_3d_9(i,j,k)=CDbl(temp2)
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
					End Select
			End Select
		Else
			i=InStr(temp,"(")
			macro_variables_info(macro_variables_info_c,1)=LTrim(RTrim(Left(temp,i-1))) 'name
			macro_variables_info(macro_variables_info_c,2)="DOUBLE_ARRAY" 'type
			macro_variables_info(macro_variables_info_c,3)="d" 'points to 1st, 2nd, 3rd... of 1d,2d,3d... variables			
			temp=Mid(temp,i) '() or (10) or (10,3) or (1 to 10) or (0 to 10, 0 to 3)
			macro_variables_info(macro_variables_info_c,4)=temp 'array_description
			macro_variables_info(macro_variables_info_c,5)="" 'array_depth ie. 1d,2d,3d
			variable_array_manager(macro_variables_info_c)
		EndIf
	Else 'this variable to dim is not an array
		If InStr(temp,"=") Then
			macro_variables_double_c+=1
			ReDim Preserve macro_variables_double_value(macro_variables_double_c)
			If InStr(s2,"(") Then
				Dim As Integer openprin_c,closeprin_c,openprin_x,closeprin_x,variables_c,variables_x()
				Dim As String temp_alpha,variables()
				For i = 1 To Len(s2)
					Select Case Mid(s2,i,1)
						Case Chr(34)
							temp_alpha=""
							If quote=FALSE Then quote=TRUE Else quote=FALSE
						Case "a" To "z","0" To "9","_"
							If quote=FALSE Then
								temp_alpha+=Mid(s2,i,1)
								If Len(temp_alpha)=1 Then
									Select Case temp_alpha
										Case "0" To "9"
											temp_alpha=""
									End Select
								EndIf
							EndIf
						Case Else
							If temp_alpha<>"" Then
								variables_c+=1
								ReDim Preserve variables_x(variables_c)
								ReDim Preserve variables(variables_c)
								variables_x(variables_c)=i-Len(temp_alpha)
								variables(variables_c)=temp_alpha
								temp_alpha=""
							EndIf
					End Select
				Next
				If temp_alpha<>"" Then
					variables_c+=1
					ReDim Preserve variables_x(variables_c)
					ReDim Preserve variables(variables_c)
					variables_x(variables_c)=i-Len(temp_alpha)
					variables(variables_c)=temp_alpha
					temp_alpha=""
				EndIf

				For j=variables_c To 1 Step -1
					For i=1 To macro_variables_info_c-1
						If variables(j)=macro_variables_info(i,1) Then
							Select Case macro_variables_info(i,2)
								Case "DOUBLE_ARRAY"
									openprin_c=0
									openprin_x=0
									closeprin_c=0
									closeprin_x=0
									For x=variables_x(j)+Len(variables(j)) To Len(s2)
										Select Case Mid(s2,x,1)
											Case "("
												openprin_c+=1
												If openprin_c=1 Then openprin_x=x
											Case ")"
												closeprin_c+=1
												If closeprin_c=openprin_c Then
													closeprin_x=x
													stemp=Mid(s2,openprin_x+1,closeprin_x-openprin_x-1)
													If InStr(stemp,",") Then 'this is for 2d and 3d arrays
														stemp_c=0
														ReDim stemp_n(stemp_c)
														stemp_c_x=1
														For c=1 To Len(stemp)
															If Mid(stemp,c,1)="," Then
																stemp_c+=1
																ReDim Preserve stemp_n(stemp_c)
																stemp_n(stemp_c)=CInt(evaluate_string_numeric_expression(Mid(stemp,stemp_c_x,c-stemp_c_x)))
																stemp_c_x=c+1
															EndIf
														Next
														stemp_c+=1
														ReDim Preserve stemp_n(stemp_c)
														stemp_n(stemp_c)=CInt(evaluate_string_numeric_expression(Mid(stemp,stemp_c_x,c-stemp_c_x)))
														s2=get_multi_dim_array_type_s2(s2,i,stemp_n(),j,variables_x(),closeprin_x)
													Else
														s2=get_1d_array_type_s2(s2,i,stemp,j,variables_x(),closeprin_x)
													EndIf
												EndIf
										End Select
									Next
							End Select
							Exit For
						EndIf
					Next
				Next
			EndIf
			macro_variables_double_value(macro_variables_double_c)=CDbl(evaluate_string_numeric_expression(s2))
			i=InStr(temp,"=")
			temp=Mid(temp,1,i-1)
			temp=LTrim(RTrim(temp))
			macro_variables_info(macro_variables_info_c,1)=temp
			macro_variables_info(macro_variables_info_c,2)="DOUBLE"
			macro_variables_info(macro_variables_info_c,3)=Str(macro_variables_double_c)
		Else 'this is just a single value variable with no value set 
			macro_variables_double_c+=1
			ReDim Preserve macro_variables_double_value(macro_variables_double_c)
			macro_variables_double_value(macro_variables_double_c)=0
			macro_variables_info(macro_variables_info_c,1)=temp
			macro_variables_info(macro_variables_info_c,2)="DOUBLE"
			macro_variables_info(macro_variables_info_c,3)=Str(macro_variables_double_c)			
		EndIf
	EndIf
End Sub

Sub dim_string(temp As String)
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Sub dim_string"
		Print #5,"temp:";temp
		'For dbugi=LBound(temp) To UBound(temp)
			'Print #5,"temp("; dbugi; "):"; temp(dbugi)
		'Next
		Print #5,"---------------"
	EndIf
	Dim As Integer i,j,k,x,c,low,hi,n
	Dim As Double dn
	Dim As Byte n_boolean
	Dim As Byte n_byte
	Dim As UByte n_ubyte
	Dim As Short n_short
	Dim As UShort n_ushort
	Dim As Long n_long
	Dim As ULong n_ulong
	Dim As UInteger n_uinteger
	Dim As LongInt n_longint
	Dim As ULongInt n_ulongint
	Dim As Single n_single
	Dim As String n_string
	macro_variables_info_c+=1
	ReDim Preserve macro_variables_info(macro_variables_info_c,8)
	Dim As String s1,s2,stemp
	Dim As Integer stemp_c,stemp_n(),stemp_c_x
	Dim As BOOLEAN quote
	
	If InStr(temp,"=") Then
		i=InStr(temp,"=")
		s1=Mid(temp,1,i-1)
		s2=Mid(temp,i+1)
	Else
		s1=temp
	EndIf
	If InStr(s1,"(") Then 'this variable to dim is an array
		If InStr(temp,"=") Then
			Dim As String temp2
			x=InStr(temp,"=")
			temp2=Mid(temp,x+1)
			temp2=LTrim(RTrim(temp2))
			temp=Mid(temp,1,x-1)
			i=InStr(temp,"(")
			macro_variables_info(macro_variables_info_c,1)=LTrim(RTrim(Left(temp,i-1))) 'name
			macro_variables_info(macro_variables_info_c,2)="STRING_ARRAY" 'type
			macro_variables_info(macro_variables_info_c,3)="d" 'points to 1st, 2nd, 3rd... of 1d,2d,3d... variables			
			temp=Mid(temp,i) '() or (10) or (10,3) or (1 to 10) or (0 to 10, 0 to 3)
			macro_variables_info(macro_variables_info_c,4)=temp 'array_description
			macro_variables_info(macro_variables_info_c,5)="" 'array_depth ie. 1d,2d,3d
			variable_array_manager(macro_variables_info_c)
			
			c=macro_variables_info_c
			If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
			Select Case macro_variables_info(c,5)
				Case "1d"
					Select Case macro_variables_info(c,3)
						Case "1"
							For i=LBound(macro_variables_string_array_1d_1) To UBound(macro_variables_string_array_1d_1)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_string_array_1d_1(i)=temp2
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "2"
							For i=LBound(macro_variables_string_array_1d_2) To UBound(macro_variables_string_array_1d_2)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_string_array_1d_2(i)=temp2
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "3"
							For i=LBound(macro_variables_string_array_1d_3) To UBound(macro_variables_string_array_1d_3)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_string_array_1d_3(i)=temp2
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "4"
							For i=LBound(macro_variables_string_array_1d_4) To UBound(macro_variables_string_array_1d_4)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_string_array_1d_4(i)=temp2
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "5"
							For i=LBound(macro_variables_string_array_1d_5) To UBound(macro_variables_string_array_1d_5)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_string_array_1d_5(i)=temp2
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "6"
							For i=LBound(macro_variables_string_array_1d_6) To UBound(macro_variables_string_array_1d_6)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_string_array_1d_6(i)=temp2
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "7"
							For i=LBound(macro_variables_string_array_1d_7) To UBound(macro_variables_string_array_1d_7)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_string_array_1d_7(i)=temp2
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "8"
							For i=LBound(macro_variables_string_array_1d_8) To UBound(macro_variables_string_array_1d_8)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_string_array_1d_8(i)=temp2
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
						Case "9"
							For i=LBound(macro_variables_string_array_1d_9) To UBound(macro_variables_string_array_1d_9)
								If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
								macro_variables_string_array_1d_9(i)=temp2
								x=InStr(temp2,",")
								temp2=Mid(temp2,x+1)
							Next
					End Select
				Case "2d"
					Select Case macro_variables_info(c,3)
						Case "1"
							For i= LBound(macro_variables_string_array_2d_1) To UBound(macro_variables_string_array_2d_1)
								For j= LBound(macro_variables_string_array_2d_1,2) To UBound(macro_variables_string_array_2d_1,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_string_array_2d_1(i,j)=temp2
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "2"
							For i= LBound(macro_variables_string_array_2d_2) To UBound(macro_variables_string_array_2d_2)
								For j= LBound(macro_variables_string_array_2d_2,2) To UBound(macro_variables_string_array_2d_2,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_string_array_2d_2(i,j)=temp2
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "3"
							For i= LBound(macro_variables_string_array_2d_3) To UBound(macro_variables_string_array_2d_3)
								For j= LBound(macro_variables_string_array_2d_3,2) To UBound(macro_variables_string_array_2d_3,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_string_array_2d_3(i,j)=temp2
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "4"
							For i= LBound(macro_variables_string_array_2d_4) To UBound(macro_variables_string_array_2d_4)
								For j= LBound(macro_variables_string_array_2d_4,2) To UBound(macro_variables_string_array_2d_4,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_string_array_2d_4(i,j)=temp2
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "5"
							For i= LBound(macro_variables_string_array_2d_5) To UBound(macro_variables_string_array_2d_5)
								For j= LBound(macro_variables_string_array_2d_5,2) To UBound(macro_variables_string_array_2d_5,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_string_array_2d_5(i,j)=temp2
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "6"
							For i= LBound(macro_variables_string_array_2d_6) To UBound(macro_variables_string_array_2d_6)
								For j= LBound(macro_variables_string_array_2d_6,2) To UBound(macro_variables_string_array_2d_6,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_string_array_2d_6(i,j)=temp2
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "7"
							For i= LBound(macro_variables_string_array_2d_7) To UBound(macro_variables_string_array_2d_7)
								For j= LBound(macro_variables_string_array_2d_7,2) To UBound(macro_variables_string_array_2d_7,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_string_array_2d_7(i,j)=temp2
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "8"
							For i= LBound(macro_variables_string_array_2d_8) To UBound(macro_variables_string_array_2d_8)
								For j= LBound(macro_variables_string_array_2d_8,2) To UBound(macro_variables_string_array_2d_8,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_string_array_2d_8(i,j)=temp2
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
						Case "9"
							For i= LBound(macro_variables_string_array_2d_9) To UBound(macro_variables_string_array_2d_9)
								For j= LBound(macro_variables_string_array_2d_9,2) To UBound(macro_variables_string_array_2d_9,2)
									If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
									macro_variables_string_array_2d_9(i,j)=temp2
									x=InStr(temp2,",")
									temp2=Mid(temp2,x+1)
								Next
							Next
					End Select
				Case "3d"
					Select Case macro_variables_info(c,3)
						Case "1"
							For i= LBound(macro_variables_string_array_3d_1) To UBound(macro_variables_string_array_3d_1)
								For j= LBound(macro_variables_string_array_3d_1,2) To UBound(macro_variables_string_array_3d_1,2)
									For k= LBound(macro_variables_string_array_3d_1,3) To UBound(macro_variables_string_array_3d_1,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_string_array_3d_1(i,j,k)=temp2
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "2"
							For i= LBound(macro_variables_string_array_3d_2) To UBound(macro_variables_string_array_3d_2)
								For j= LBound(macro_variables_string_array_3d_2,2) To UBound(macro_variables_string_array_3d_2,2)
									For k= LBound(macro_variables_string_array_3d_2,3) To UBound(macro_variables_string_array_3d_2,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_string_array_3d_2(i,j,k)=temp2
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "3"
							For i= LBound(macro_variables_string_array_3d_3) To UBound(macro_variables_string_array_3d_3)
								For j= LBound(macro_variables_string_array_3d_3,2) To UBound(macro_variables_string_array_3d_3,2)
									For k= LBound(macro_variables_string_array_3d_3,3) To UBound(macro_variables_string_array_3d_3,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_string_array_3d_3(i,j,k)=temp2
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "4"
							For i= LBound(macro_variables_string_array_3d_4) To UBound(macro_variables_string_array_3d_4)
								For j= LBound(macro_variables_string_array_3d_4,2) To UBound(macro_variables_string_array_3d_4,2)
									For k= LBound(macro_variables_string_array_3d_4,3) To UBound(macro_variables_string_array_3d_4,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_string_array_3d_4(i,j,k)=temp2
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "5"
							For i= LBound(macro_variables_string_array_3d_5) To UBound(macro_variables_string_array_3d_5)
								For j= LBound(macro_variables_string_array_3d_5,2) To UBound(macro_variables_string_array_3d_5,2)
									For k= LBound(macro_variables_string_array_3d_5,3) To UBound(macro_variables_string_array_3d_5,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_string_array_3d_5(i,j,k)=temp2
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "6"
							For i= LBound(macro_variables_string_array_3d_6) To UBound(macro_variables_string_array_3d_6)
								For j= LBound(macro_variables_string_array_3d_6,2) To UBound(macro_variables_string_array_3d_6,2)
									For k= LBound(macro_variables_string_array_3d_6,3) To UBound(macro_variables_string_array_3d_6,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_string_array_3d_6(i,j,k)=temp2
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "7"
							For i= LBound(macro_variables_string_array_3d_7) To UBound(macro_variables_string_array_3d_7)
								For j= LBound(macro_variables_string_array_3d_7,2) To UBound(macro_variables_string_array_3d_7,2)
									For k= LBound(macro_variables_string_array_3d_7,3) To UBound(macro_variables_string_array_3d_7,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_string_array_3d_7(i,j,k)=temp2
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "8"
							For i= LBound(macro_variables_string_array_3d_8) To UBound(macro_variables_string_array_3d_8)
								For j= LBound(macro_variables_string_array_3d_8,2) To UBound(macro_variables_string_array_3d_8,2)
									For k= LBound(macro_variables_string_array_3d_8,3) To UBound(macro_variables_string_array_3d_8,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_string_array_3d_8(i,j,k)=temp2
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
						Case "9"
							For i= LBound(macro_variables_string_array_3d_9) To UBound(macro_variables_string_array_3d_9)
								For j= LBound(macro_variables_string_array_3d_9,2) To UBound(macro_variables_string_array_3d_9,2)
									For k= LBound(macro_variables_string_array_3d_9,3) To UBound(macro_variables_string_array_3d_9,3)
										If Left(temp2,1)="{" Or Left(temp2,1)="}" Then temp2=Mid(temp2,2)
										macro_variables_string_array_3d_9(i,j,k)=temp2
										x=InStr(temp2,",")
										temp2=Mid(temp2,x+1)
									Next
								Next
							Next
					End Select
			End Select
		Else
			i=InStr(temp,"(")
			macro_variables_info(macro_variables_info_c,1)=LTrim(RTrim(Left(temp,i-1))) 'name
			macro_variables_info(macro_variables_info_c,2)="STRING_ARRAY" 'type
			macro_variables_info(macro_variables_info_c,3)="d" 'points to 1st, 2nd, 3rd... of 1d,2d,3d... variables			
			temp=Mid(temp,i) '() or (10) or (10,3) or (1 to 10) or (0 to 10, 0 to 3)
			macro_variables_info(macro_variables_info_c,4)=temp 'array_description
			macro_variables_info(macro_variables_info_c,5)="" 'array_depth ie. 1d,2d,3d
			variable_array_manager(macro_variables_info_c)
		EndIf
	Else 'this variable to dim is not an array
		If InStr(temp,"=") Then
			macro_variables_string_c+=1
			ReDim Preserve macro_variables_string_value(macro_variables_string_c)
			If InStr(s2,"(") Then
				Dim As Integer openprin_c,closeprin_c,openprin_x,closeprin_x,variables_c,variables_x()
				Dim As String temp_alpha,variables()
				For i = 1 To Len(s2)
					Select Case Mid(s2,i,1)
						Case Chr(34)
							temp_alpha=""
							If quote=FALSE Then quote=TRUE Else quote=FALSE
						Case "a" To "z","0" To "9","_"
							If quote=FALSE Then
								temp_alpha+=Mid(s2,i,1)
								If Len(temp_alpha)=1 Then
									Select Case temp_alpha
										Case "0" To "9"
											temp_alpha=""
									End Select
								EndIf
							EndIf
						Case Else
							If temp_alpha<>"" Then
								variables_c+=1
								ReDim Preserve variables_x(variables_c)
								ReDim Preserve variables(variables_c)
								variables_x(variables_c)=i-Len(temp_alpha)
								variables(variables_c)=temp_alpha
								temp_alpha=""
							EndIf
					End Select
				Next
				If temp_alpha<>"" Then
					variables_c+=1
					ReDim Preserve variables_x(variables_c)
					ReDim Preserve variables(variables_c)
					variables_x(variables_c)=i-Len(temp_alpha)
					variables(variables_c)=temp_alpha
					temp_alpha=""
				EndIf

				For j=variables_c To 1 Step -1
					For i=1 To macro_variables_info_c-1
						If variables(j)=macro_variables_info(i,1) Then
							Select Case macro_variables_info(i,2)
								Case "STRING_ARRAY"
									openprin_c=0
									openprin_x=0
									closeprin_c=0
									closeprin_x=0
									For x=variables_x(j)+Len(variables(j)) To Len(s2)
										Select Case Mid(s2,x,1)
											Case "("
												openprin_c+=1
												If openprin_c=1 Then openprin_x=x
											Case ")"
												closeprin_c+=1
												If closeprin_c=openprin_c Then
													closeprin_x=x
													stemp=Mid(s2,openprin_x+1,closeprin_x-openprin_x-1)
													If InStr(stemp,",") Then 'this is for 2d and 3d arrays
														stemp_c=0
														ReDim stemp_n(stemp_c)
														stemp_c_x=1
														For c=1 To Len(stemp)
															If Mid(stemp,c,1)="," Then
																stemp_c+=1
																ReDim Preserve stemp_n(stemp_c)
																stemp_n(stemp_c)=CInt(evaluate_string_numeric_expression(Mid(stemp,stemp_c_x,c-stemp_c_x)))
																stemp_c_x=c+1
															EndIf
														Next
														stemp_c+=1
														ReDim Preserve stemp_n(stemp_c)
														stemp_n(stemp_c)=CInt(evaluate_string_numeric_expression(Mid(stemp,stemp_c_x,c-stemp_c_x)))
														s2=get_multi_dim_array_type_s2(s2,i,stemp_n(),j,variables_x(),closeprin_x)
													Else
														s2=get_1d_array_type_s2(s2,i,stemp,j,variables_x(),closeprin_x)
													EndIf
												EndIf
										End Select
									Next
							End Select
							Exit For
						EndIf
					Next
				Next
			EndIf
			'macro_variables_string_value(macro_variables_string_c)=evaluate_string_numeric_expression(s2)
			macro_variables_string_value(macro_variables_string_c)=full_evaluate_expression(s2)
			i=InStr(temp,"=")
			temp=Mid(temp,1,i-1)
			temp=LTrim(RTrim(temp))
			macro_variables_info(macro_variables_info_c,1)=temp
			macro_variables_info(macro_variables_info_c,2)="STRING"
			macro_variables_info(macro_variables_info_c,3)=Str(macro_variables_string_c)
		Else 'this is just a single value variable with no value set 
			macro_variables_string_c+=1
			ReDim Preserve macro_variables_string_value(macro_variables_string_c)
			macro_variables_string_value(macro_variables_string_c)=""
			macro_variables_info(macro_variables_info_c,1)=temp
			macro_variables_info(macro_variables_info_c,2)="STRING"
			macro_variables_info(macro_variables_info_c,3)=Str(macro_variables_string_c)			
		EndIf
	EndIf
End Sub

Sub variable_array_manager(variable_number As Integer)
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Sub variable_array_manager"
		Print #5,"variable_number:";variable_number
		'For dbugi=LBound(temp) To UBound(temp)
			'Print #5,"temp("; dbugi; "):"; temp(dbugi)
		'Next
		Print #5,"---------------"
	EndIf
	Dim As Integer i,j,k,n,c,x
	Dim As String temp, temps()

	If dim_params="redim" Or dim_params="redim preserve" Then
		macro_variables_info_c-=1
		For i=1 To macro_variables_info_c
			If macro_variables_info(i,1)=macro_variables_info(variable_number,1) Then
				variable_number=i
				macro_variables_info(variable_number,4)=macro_variables_info(macro_variables_info_c+1,4)
				Exit For
			EndIf
		Next
	EndIf


	temp=macro_variables_info(variable_number,4)
	'temp=LCase(temp)
	If temp="()" Then Exit Sub 'pending array depth
	temp=Mid(temp,2)
	temp=Left(temp,Len(temp)-1)
	temp=LTrim(RTrim(temp))
	If temp="" Then Exit Sub 'pending array depth
	
	
	c=0 
	If InStr(temp,",") Then 'multi dim
		c=1
		x=InStr(temp,",")
		Do While x>0
		    c+=1
		    x=InStr(x+1,temp,",")
		Loop
		ReDim temps(c)
		c=0
		x=InStr(temp,",")
		Do While x>0
		   c+=1
		   temps(c)=Left(temp,x-1)
		   temp=Mid(temp,x+1)
		   temp=LTrim(RTrim(temp)) 'clean up spaces
		   x=InStr(temp,",")
		Loop
		c+=1
		temps(c)=temp
	EndIf
	If c=0 Then c=1 'if c=0 then this array is not defined yet. uses redim to define 1d,2d,3d later on
	Select Case macro_variables_info(variable_number,2)
		Case "BOOLEAN_ARRAY"
			dim_boolean_array(variable_number,c,temp,temps())
		Case "BYTE_ARRAY"
			dim_byte_array(variable_number,c,temp,temps())
		Case "UBYTE_ARRAY"
			dim_ubyte_array(variable_number,c,temp,temps())
		Case "SHORT_ARRAY"
			dim_short_array(variable_number,c,temp,temps())
		Case "USHORT_ARRAY"
			dim_ushort_array(variable_number,c,temp,temps())
		Case "LONG_ARRAY"
			dim_long_array(variable_number,c,temp,temps())
		Case "ULONG_ARRAY"
			dim_ulong_array(variable_number,c,temp,temps())
		Case "INTEGER_ARRAY"
			dim_integer_array(variable_number,c,temp,temps())
		Case "UINTEGER_ARRAY"
			dim_uinteger_array(variable_number,c,temp,temps())
		Case "LONGINT_ARRAY"
			dim_longint_array(variable_number,c,temp,temps())
		Case "ULONGINT_ARRAY"
			dim_ulongint_array(variable_number,c,temp,temps())
		Case "SINGLE_ARRAY"
			dim_single_array(variable_number,c,temp,temps())
		Case "DOUBLE_ARRAY"
			dim_double_array(variable_number,c,temp,temps())		
		Case "STRING_ARRAY"
			dim_string_array(variable_number,c,temp,temps())		
	End Select
End Sub

Sub dim_boolean_array(variable_number As Integer,c As Integer,temp As String,temps() As String)
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Sub dim_boolean_array"
		Print #5,"variable_number:";variable_number
		Print #5,"c:";c
		Print #5,"temp:";temp
		For dbugi=LBound(temps) To UBound(temps)
			Print #5,"temps("; dbugi; "):"; temps(dbugi)
		Next
		Print #5,"---------------"
	EndIf
	Dim As Integer i,x,low,hi,lows(),his()
	Select Case c
		Case 0 'undefined array depth, to be defined via redim
			macro_variables_info(variable_number,5)="pending array depth"
		Case 1 '1d
			If InStr(temp," to ") Then
				x=InStr(temp," to ")
				low=CInt(Left(temp,x-1))
				hi=CInt(Mid(temp,x+4))
			Else
				low=0
				hi=CInt(temp)
			EndIf
			If dim_params="redim" And macro_variables_info(variable_number,5)="1d" Then
				Select Case macro_variables_info(variable_number,3)
					Case "1"
						ReDim macro_variables_boolean_array_1d_1(low To hi)
					Case "2"
						ReDim macro_variables_boolean_array_1d_2(low To hi)
					Case "3"
						ReDim macro_variables_boolean_array_1d_3(low To hi)
					Case "4"
						ReDim macro_variables_boolean_array_1d_4(low To hi)
					Case "5"
						ReDim macro_variables_boolean_array_1d_5(low To hi)
					Case "6"
						ReDim macro_variables_boolean_array_1d_6(low To hi)
					Case "7"
						ReDim macro_variables_boolean_array_1d_7(low To hi)
					Case "8"
						ReDim macro_variables_boolean_array_1d_8(low To hi)
					Case "9"
						ReDim macro_variables_boolean_array_1d_9(low To hi)
				End Select
			Else
				If dim_params="redim preserve" And macro_variables_info(variable_number,5)="1d" Then
					Select Case macro_variables_info(variable_number,3)
						Case "1"
							ReDim Preserve macro_variables_boolean_array_1d_1(low To hi)
						Case "2"
							ReDim Preserve macro_variables_boolean_array_1d_2(low To hi)
						Case "3"
							ReDim Preserve macro_variables_boolean_array_1d_3(low To hi)
						Case "4"
							ReDim Preserve macro_variables_boolean_array_1d_4(low To hi)
						Case "5"
							ReDim Preserve macro_variables_boolean_array_1d_5(low To hi)
						Case "6"
							ReDim Preserve macro_variables_boolean_array_1d_6(low To hi)
						Case "7"
							ReDim Preserve macro_variables_boolean_array_1d_7(low To hi)
						Case "8"
							ReDim Preserve macro_variables_boolean_array_1d_8(low To hi)
						Case "9"
							ReDim Preserve macro_variables_boolean_array_1d_9(low To hi)
					End Select
				Else
					If macro_variables_info(variable_number,6)<>"" Then
						Select Case macro_variables_info(variable_number,6)
							Case "1"
								ReDim macro_variables_boolean_array_1d_1(low To hi)
							Case "2"
								ReDim macro_variables_boolean_array_1d_2(low To hi)
							Case "3"
								ReDim macro_variables_boolean_array_1d_3(low To hi)
							Case "4"
								ReDim macro_variables_boolean_array_1d_4(low To hi)
							Case "5"
								ReDim macro_variables_boolean_array_1d_5(low To hi)
							Case "6"
								ReDim macro_variables_boolean_array_1d_6(low To hi)
							Case "7"
								ReDim macro_variables_boolean_array_1d_7(low To hi)
							Case "8"
								ReDim macro_variables_boolean_array_1d_8(low To hi)
							Case "9"
								ReDim macro_variables_boolean_array_1d_9(low To hi)
						End Select
					Else
						macro_variables_info(variable_number,5)="1d"
						macro_variables_boolean_array_1d_c+=1
						macro_variables_info(variable_number,3)=LTrim(RTrim(Str(macro_variables_boolean_array_1d_c)))
						macro_variables_info(variable_number,6)=macro_variables_info(variable_number,3)
						Select Case macro_variables_boolean_array_1d_c
							Case 1
								ReDim macro_variables_boolean_array_1d_1(low To hi)
							Case 2
								ReDim macro_variables_boolean_array_1d_2(low To hi)
							Case 3
								ReDim macro_variables_boolean_array_1d_3(low To hi)
							Case 4
								ReDim macro_variables_boolean_array_1d_4(low To hi)
							Case 5
								ReDim macro_variables_boolean_array_1d_5(low To hi)
							Case 6
								ReDim macro_variables_boolean_array_1d_6(low To hi)
							Case 7
								ReDim macro_variables_boolean_array_1d_7(low To hi)
							Case 8
								ReDim macro_variables_boolean_array_1d_8(low To hi)
							Case 9
								ReDim macro_variables_boolean_array_1d_9(low To hi)
						End Select
					EndIf
				EndIf
			EndIf
		Case 2 '2d
			ReDim lows(2),his(2)
			For i=1 To 2
				temp=temps(i)		
				If InStr(temp," to ") Then
					x=InStr(temp," to ")
					lows(i)=CInt(Left(temp,x-1))
					his(i)=CInt(Mid(temp,x+4))
				Else
					lows(i)=0
					his(i)=CInt(temp)
				EndIf
			Next
			If dim_params="redim" And macro_variables_info(variable_number,5)="2d" Then
				Select Case macro_variables_info(variable_number,3)
					Case "1"
						ReDim macro_variables_boolean_array_2d_1(lows(1) To his(1),lows(2) To his(2))
					Case "2"
						ReDim macro_variables_boolean_array_2d_2(lows(1) To his(1),lows(2) To his(2))
					Case "3"
						ReDim macro_variables_boolean_array_2d_3(lows(1) To his(1),lows(2) To his(2))
					Case "4"
						ReDim macro_variables_boolean_array_2d_4(lows(1) To his(1),lows(2) To his(2))
					Case "5"
						ReDim macro_variables_boolean_array_2d_5(lows(1) To his(1),lows(2) To his(2))
					Case "6"
						ReDim macro_variables_boolean_array_2d_6(lows(1) To his(1),lows(2) To his(2))
					Case "7"
						ReDim macro_variables_boolean_array_2d_7(lows(1) To his(1),lows(2) To his(2))
					Case "8"
						ReDim macro_variables_boolean_array_2d_8(lows(1) To his(1),lows(2) To his(2))
					Case "9"
						ReDim macro_variables_boolean_array_2d_9(lows(1) To his(1),lows(2) To his(2))
				End Select
			Else
				If dim_params="redim preserve" And macro_variables_info(variable_number,5)="2d" Then
					Select Case macro_variables_info(variable_number,3)
						Case "1"
							ReDim Preserve macro_variables_boolean_array_2d_1(lows(1) To his(1),lows(2) To his(2))
						Case "2"
							ReDim Preserve macro_variables_boolean_array_2d_2(lows(1) To his(1),lows(2) To his(2))
						Case "3"
							ReDim Preserve macro_variables_boolean_array_2d_3(lows(1) To his(1),lows(2) To his(2))
						Case "4"
							ReDim Preserve macro_variables_boolean_array_2d_4(lows(1) To his(1),lows(2) To his(2))
						Case "5"
							ReDim Preserve macro_variables_boolean_array_2d_5(lows(1) To his(1),lows(2) To his(2))
						Case "6"
							ReDim Preserve macro_variables_boolean_array_2d_6(lows(1) To his(1),lows(2) To his(2))
						Case "7"
							ReDim Preserve macro_variables_boolean_array_2d_7(lows(1) To his(1),lows(2) To his(2))
						Case "8"
							ReDim Preserve macro_variables_boolean_array_2d_8(lows(1) To his(1),lows(2) To his(2))
						Case "9"
							ReDim Preserve macro_variables_boolean_array_2d_9(lows(1) To his(1),lows(2) To his(2))
					End Select
				Else
					If macro_variables_info(variable_number,7)<>"" Then
						Select Case macro_variables_info(variable_number,7)
							Case "1"
								ReDim macro_variables_boolean_array_2d_1(lows(1) To his(1),lows(2) To his(2))
							Case "2"
								ReDim macro_variables_boolean_array_2d_2(lows(1) To his(1),lows(2) To his(2))
							Case "3"
								ReDim macro_variables_boolean_array_2d_3(lows(1) To his(1),lows(2) To his(2))
							Case "4"
								ReDim macro_variables_boolean_array_2d_4(lows(1) To his(1),lows(2) To his(2))
							Case "5"
								ReDim macro_variables_boolean_array_2d_5(lows(1) To his(1),lows(2) To his(2))
							Case "6"
								ReDim macro_variables_boolean_array_2d_6(lows(1) To his(1),lows(2) To his(2))
							Case "7"
								ReDim macro_variables_boolean_array_2d_7(lows(1) To his(1),lows(2) To his(2))
							Case "8"
								ReDim macro_variables_boolean_array_2d_8(lows(1) To his(1),lows(2) To his(2))
							Case "9"
								ReDim macro_variables_boolean_array_2d_9(lows(1) To his(1),lows(2) To his(2))
						End Select
					Else
						macro_variables_info(variable_number,5)="2d"
						macro_variables_boolean_array_2d_c+=1
						macro_variables_info(variable_number,3)=LTrim(RTrim(Str(macro_variables_boolean_array_2d_c)))
						macro_variables_info(variable_number,7)=macro_variables_info(variable_number,3)
						Select Case macro_variables_boolean_array_2d_c
							Case 1
								ReDim macro_variables_boolean_array_2d_1(lows(1) To his(1),lows(2) To his(2))
							Case 2
								ReDim macro_variables_boolean_array_2d_2(lows(1) To his(1),lows(2) To his(2))
							Case 3
								ReDim macro_variables_boolean_array_2d_3(lows(1) To his(1),lows(2) To his(2))
							Case 4
								ReDim macro_variables_boolean_array_2d_4(lows(1) To his(1),lows(2) To his(2))
							Case 5
								ReDim macro_variables_boolean_array_2d_5(lows(1) To his(1),lows(2) To his(2))
							Case 6
								ReDim macro_variables_boolean_array_2d_6(lows(1) To his(1),lows(2) To his(2))
							Case 7
								ReDim macro_variables_boolean_array_2d_7(lows(1) To his(1),lows(2) To his(2))
							Case 8
								ReDim macro_variables_boolean_array_2d_8(lows(1) To his(1),lows(2) To his(2))
							Case 9
								ReDim macro_variables_boolean_array_2d_9(lows(1) To his(1),lows(2) To his(2))
						End Select
					EndIf
				EndIf
			EndIf
		Case 3 '3d
			ReDim lows(3),his(3)
			For i=1 To 3
				temp=temps(i)		
				If InStr(temp," to ") Then
					x=InStr(temp," to ")
					lows(i)=CInt(Left(temp,x-1))
					his(i)=CInt(Mid(temp,x+4))
				Else
					lows(i)=0
					his(i)=CInt(temp)
				EndIf
			Next
			If dim_params="redim" And macro_variables_info(variable_number,5)="3d" Then
				Select Case macro_variables_info(variable_number,3)
					Case "1"
						ReDim macro_variables_boolean_array_3d_1(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "2"
						ReDim macro_variables_boolean_array_3d_2(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "3"
						ReDim macro_variables_boolean_array_3d_3(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "4"
						ReDim macro_variables_boolean_array_3d_4(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "5"
						ReDim macro_variables_boolean_array_3d_5(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "6"
						ReDim macro_variables_boolean_array_3d_6(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "7"
						ReDim macro_variables_boolean_array_3d_7(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "8"
						ReDim macro_variables_boolean_array_3d_8(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "9"
						ReDim macro_variables_boolean_array_3d_9(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
				End Select
			Else
				If dim_params="redim preserve" And macro_variables_info(variable_number,5)="3d" Then
					Select Case macro_variables_info(variable_number,3)
						Case "1"
							ReDim Preserve macro_variables_boolean_array_3d_1(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "2"
							ReDim Preserve macro_variables_boolean_array_3d_2(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "3"
							ReDim Preserve macro_variables_boolean_array_3d_3(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "4"
							ReDim Preserve macro_variables_boolean_array_3d_4(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "5"
							ReDim Preserve macro_variables_boolean_array_3d_5(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "6"
							ReDim Preserve macro_variables_boolean_array_3d_6(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "7"
							ReDim Preserve macro_variables_boolean_array_3d_7(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "8"
							ReDim Preserve macro_variables_boolean_array_3d_8(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "9"
							ReDim Preserve macro_variables_boolean_array_3d_9(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					End Select
				Else
					If macro_variables_info(variable_number,8)<>"" Then
						Select Case macro_variables_info(variable_number,8)
							Case "1"
								ReDim macro_variables_boolean_array_3d_1(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "2"
								ReDim macro_variables_boolean_array_3d_2(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "3"
								ReDim macro_variables_boolean_array_3d_3(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "4"
								ReDim macro_variables_boolean_array_3d_4(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "5"
								ReDim macro_variables_boolean_array_3d_5(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "6"
								ReDim macro_variables_boolean_array_3d_6(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "7"
								ReDim macro_variables_boolean_array_3d_7(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "8"
								ReDim macro_variables_boolean_array_3d_8(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "9"
								ReDim macro_variables_boolean_array_3d_9(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						End Select
					Else
						macro_variables_info(variable_number,5)="3d"
						macro_variables_boolean_array_3d_c+=1
						macro_variables_info(variable_number,3)=LTrim(RTrim(Str(macro_variables_boolean_array_3d_c)))
						macro_variables_info(variable_number,8)=macro_variables_info(variable_number,3)
						Select Case macro_variables_boolean_array_3d_c
							Case 1
								ReDim macro_variables_boolean_array_3d_1(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 2
								ReDim macro_variables_boolean_array_3d_2(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 3
								ReDim macro_variables_boolean_array_3d_3(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 4
								ReDim macro_variables_boolean_array_3d_4(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 5
								ReDim macro_variables_boolean_array_3d_5(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 6
								ReDim macro_variables_boolean_array_3d_6(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 7
								ReDim macro_variables_boolean_array_3d_7(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 8
								ReDim macro_variables_boolean_array_3d_8(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 9
								ReDim macro_variables_boolean_array_3d_9(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						End Select
					EndIf
				EndIf
			EndIf
	End Select
End Sub

Sub dim_byte_array(variable_number As Integer,c As Integer,temp As String,temps() As String)
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Sub dim_byte_array"
		Print #5,"variable_number:";variable_number
		Print #5,"c:";c
		Print #5,"temp:";temp
		For dbugi=LBound(temps) To UBound(temps)
			Print #5,"temps("; dbugi; "):"; temps(dbugi)
		Next
		Print #5,"---------------"
	EndIf
	Dim As Integer i,x,low,hi,lows(),his()
	Select Case c
		Case 0 'undefined array depth, to be defined via redim
			macro_variables_info(variable_number,5)="pending array depth"
		Case 1 '1d
			If InStr(temp," to ") Then
				x=InStr(temp," to ")
				low=CInt(Left(temp,x-1))
				hi=CInt(Mid(temp,x+4))
			Else
				low=0
				hi=CInt(temp)
			EndIf
			If dim_params="redim" And macro_variables_info(variable_number,5)="1d" Then
				Select Case macro_variables_info(variable_number,3)
					Case "1"
						ReDim macro_variables_byte_array_1d_1(low To hi)
					Case "2"
						ReDim macro_variables_byte_array_1d_2(low To hi)
					Case "3"
						ReDim macro_variables_byte_array_1d_3(low To hi)
					Case "4"
						ReDim macro_variables_byte_array_1d_4(low To hi)
					Case "5"
						ReDim macro_variables_byte_array_1d_5(low To hi)
					Case "6"
						ReDim macro_variables_byte_array_1d_6(low To hi)
					Case "7"
						ReDim macro_variables_byte_array_1d_7(low To hi)
					Case "8"
						ReDim macro_variables_byte_array_1d_8(low To hi)
					Case "9"
						ReDim macro_variables_byte_array_1d_9(low To hi)
				End Select
			Else
				If dim_params="redim preserve" And macro_variables_info(variable_number,5)="1d" Then
					Select Case macro_variables_info(variable_number,3)
						Case "1"
							ReDim Preserve macro_variables_byte_array_1d_1(low To hi)
						Case "2"
							ReDim Preserve macro_variables_byte_array_1d_2(low To hi)
						Case "3"
							ReDim Preserve macro_variables_byte_array_1d_3(low To hi)
						Case "4"
							ReDim Preserve macro_variables_byte_array_1d_4(low To hi)
						Case "5"
							ReDim Preserve macro_variables_byte_array_1d_5(low To hi)
						Case "6"
							ReDim Preserve macro_variables_byte_array_1d_6(low To hi)
						Case "7"
							ReDim Preserve macro_variables_byte_array_1d_7(low To hi)
						Case "8"
							ReDim Preserve macro_variables_byte_array_1d_8(low To hi)
						Case "9"
							ReDim Preserve macro_variables_byte_array_1d_9(low To hi)
					End Select
				Else
					If macro_variables_info(variable_number,6)<>"" Then
						Select Case macro_variables_info(variable_number,6)
							Case "1"
								ReDim macro_variables_byte_array_1d_1(low To hi)
							Case "2"
								ReDim macro_variables_byte_array_1d_2(low To hi)
							Case "3"
								ReDim macro_variables_byte_array_1d_3(low To hi)
							Case "4"
								ReDim macro_variables_byte_array_1d_4(low To hi)
							Case "5"
								ReDim macro_variables_byte_array_1d_5(low To hi)
							Case "6"
								ReDim macro_variables_byte_array_1d_6(low To hi)
							Case "7"
								ReDim macro_variables_byte_array_1d_7(low To hi)
							Case "8"
								ReDim macro_variables_byte_array_1d_8(low To hi)
							Case "9"
								ReDim macro_variables_byte_array_1d_9(low To hi)
						End Select
					Else
						macro_variables_info(variable_number,5)="1d"
						macro_variables_byte_array_1d_c+=1
						macro_variables_info(variable_number,3)=LTrim(RTrim(Str(macro_variables_byte_array_1d_c)))
						macro_variables_info(variable_number,6)=macro_variables_info(variable_number,3)
						Select Case macro_variables_byte_array_1d_c
							Case 1
								ReDim macro_variables_byte_array_1d_1(low To hi)
							Case 2
								ReDim macro_variables_byte_array_1d_2(low To hi)
							Case 3
								ReDim macro_variables_byte_array_1d_3(low To hi)
							Case 4
								ReDim macro_variables_byte_array_1d_4(low To hi)
							Case 5
								ReDim macro_variables_byte_array_1d_5(low To hi)
							Case 6
								ReDim macro_variables_byte_array_1d_6(low To hi)
							Case 7
								ReDim macro_variables_byte_array_1d_7(low To hi)
							Case 8
								ReDim macro_variables_byte_array_1d_8(low To hi)
							Case 9
								ReDim macro_variables_byte_array_1d_9(low To hi)
						End Select
					EndIf
				EndIf
			EndIf
		Case 2 '2d
			ReDim lows(2),his(2)
			For i=1 To 2
				temp=temps(i)		
				If InStr(temp," to ") Then
					x=InStr(temp," to ")
					lows(i)=CInt(Left(temp,x-1))
					his(i)=CInt(Mid(temp,x+4))
				Else
					lows(i)=0
					his(i)=CInt(temp)
				EndIf
			Next
			If dim_params="redim" And macro_variables_info(variable_number,5)="2d" Then
				Select Case macro_variables_info(variable_number,3)
					Case "1"
						ReDim macro_variables_byte_array_2d_1(lows(1) To his(1),lows(2) To his(2))
					Case "2"
						ReDim macro_variables_byte_array_2d_2(lows(1) To his(1),lows(2) To his(2))
					Case "3"
						ReDim macro_variables_byte_array_2d_3(lows(1) To his(1),lows(2) To his(2))
					Case "4"
						ReDim macro_variables_byte_array_2d_4(lows(1) To his(1),lows(2) To his(2))
					Case "5"
						ReDim macro_variables_byte_array_2d_5(lows(1) To his(1),lows(2) To his(2))
					Case "6"
						ReDim macro_variables_byte_array_2d_6(lows(1) To his(1),lows(2) To his(2))
					Case "7"
						ReDim macro_variables_byte_array_2d_7(lows(1) To his(1),lows(2) To his(2))
					Case "8"
						ReDim macro_variables_byte_array_2d_8(lows(1) To his(1),lows(2) To his(2))
					Case "9"
						ReDim macro_variables_byte_array_2d_9(lows(1) To his(1),lows(2) To his(2))
				End Select
			Else
				If dim_params="redim preserve" And macro_variables_info(variable_number,5)="2d" Then
					Select Case macro_variables_info(variable_number,3)
						Case "1"
							ReDim Preserve macro_variables_byte_array_2d_1(lows(1) To his(1),lows(2) To his(2))
						Case "2"
							ReDim Preserve macro_variables_byte_array_2d_2(lows(1) To his(1),lows(2) To his(2))
						Case "3"
							ReDim Preserve macro_variables_byte_array_2d_3(lows(1) To his(1),lows(2) To his(2))
						Case "4"
							ReDim Preserve macro_variables_byte_array_2d_4(lows(1) To his(1),lows(2) To his(2))
						Case "5"
							ReDim Preserve macro_variables_byte_array_2d_5(lows(1) To his(1),lows(2) To his(2))
						Case "6"
							ReDim Preserve macro_variables_byte_array_2d_6(lows(1) To his(1),lows(2) To his(2))
						Case "7"
							ReDim Preserve macro_variables_byte_array_2d_7(lows(1) To his(1),lows(2) To his(2))
						Case "8"
							ReDim Preserve macro_variables_byte_array_2d_8(lows(1) To his(1),lows(2) To his(2))
						Case "9"
							ReDim Preserve macro_variables_byte_array_2d_9(lows(1) To his(1),lows(2) To his(2))
					End Select
				Else
					If macro_variables_info(variable_number,7)<>"" Then
						Select Case macro_variables_info(variable_number,7)
							Case "1"
								ReDim macro_variables_byte_array_2d_1(lows(1) To his(1),lows(2) To his(2))
							Case "2"
								ReDim macro_variables_byte_array_2d_2(lows(1) To his(1),lows(2) To his(2))
							Case "3"
								ReDim macro_variables_byte_array_2d_3(lows(1) To his(1),lows(2) To his(2))
							Case "4"
								ReDim macro_variables_byte_array_2d_4(lows(1) To his(1),lows(2) To his(2))
							Case "5"
								ReDim macro_variables_byte_array_2d_5(lows(1) To his(1),lows(2) To his(2))
							Case "6"
								ReDim macro_variables_byte_array_2d_6(lows(1) To his(1),lows(2) To his(2))
							Case "7"
								ReDim macro_variables_byte_array_2d_7(lows(1) To his(1),lows(2) To his(2))
							Case "8"
								ReDim macro_variables_byte_array_2d_8(lows(1) To his(1),lows(2) To his(2))
							Case "9"
								ReDim macro_variables_byte_array_2d_9(lows(1) To his(1),lows(2) To his(2))
						End Select
					Else
						macro_variables_info(variable_number,5)="2d"
						macro_variables_byte_array_2d_c+=1
						macro_variables_info(variable_number,3)=LTrim(RTrim(Str(macro_variables_byte_array_2d_c)))
						macro_variables_info(variable_number,7)=macro_variables_info(variable_number,3)
						Select Case macro_variables_byte_array_2d_c
							Case 1
								ReDim macro_variables_byte_array_2d_1(lows(1) To his(1),lows(2) To his(2))
							Case 2
								ReDim macro_variables_byte_array_2d_2(lows(1) To his(1),lows(2) To his(2))
							Case 3
								ReDim macro_variables_byte_array_2d_3(lows(1) To his(1),lows(2) To his(2))
							Case 4
								ReDim macro_variables_byte_array_2d_4(lows(1) To his(1),lows(2) To his(2))
							Case 5
								ReDim macro_variables_byte_array_2d_5(lows(1) To his(1),lows(2) To his(2))
							Case 6
								ReDim macro_variables_byte_array_2d_6(lows(1) To his(1),lows(2) To his(2))
							Case 7
								ReDim macro_variables_byte_array_2d_7(lows(1) To his(1),lows(2) To his(2))
							Case 8
								ReDim macro_variables_byte_array_2d_8(lows(1) To his(1),lows(2) To his(2))
							Case 9
								ReDim macro_variables_byte_array_2d_9(lows(1) To his(1),lows(2) To his(2))
						End Select
					EndIf
				EndIf
			EndIf
		Case 3 '3d
			ReDim lows(3),his(3)
			For i=1 To 3
				temp=temps(i)		
				If InStr(temp," to ") Then
					x=InStr(temp," to ")
					lows(i)=CInt(Left(temp,x-1))
					his(i)=CInt(Mid(temp,x+4))
				Else
					lows(i)=0
					his(i)=CInt(temp)
				EndIf
			Next
			If dim_params="redim" And macro_variables_info(variable_number,5)="3d" Then
				Select Case macro_variables_info(variable_number,3)
					Case "1"
						ReDim macro_variables_byte_array_3d_1(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "2"
						ReDim macro_variables_byte_array_3d_2(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "3"
						ReDim macro_variables_byte_array_3d_3(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "4"
						ReDim macro_variables_byte_array_3d_4(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "5"
						ReDim macro_variables_byte_array_3d_5(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "6"
						ReDim macro_variables_byte_array_3d_6(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "7"
						ReDim macro_variables_byte_array_3d_7(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "8"
						ReDim macro_variables_byte_array_3d_8(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "9"
						ReDim macro_variables_byte_array_3d_9(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
				End Select
			Else
				If dim_params="redim preserve" And macro_variables_info(variable_number,5)="3d" Then
					Select Case macro_variables_info(variable_number,3)
						Case "1"
							ReDim Preserve macro_variables_byte_array_3d_1(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "2"
							ReDim Preserve macro_variables_byte_array_3d_2(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "3"
							ReDim Preserve macro_variables_byte_array_3d_3(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "4"
							ReDim Preserve macro_variables_byte_array_3d_4(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "5"
							ReDim Preserve macro_variables_byte_array_3d_5(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "6"
							ReDim Preserve macro_variables_byte_array_3d_6(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "7"
							ReDim Preserve macro_variables_byte_array_3d_7(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "8"
							ReDim Preserve macro_variables_byte_array_3d_8(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "9"
							ReDim Preserve macro_variables_byte_array_3d_9(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					End Select
				Else
					If macro_variables_info(variable_number,8)<>"" Then
						Select Case macro_variables_info(variable_number,8)
							Case "1"
								ReDim macro_variables_byte_array_3d_1(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "2"
								ReDim macro_variables_byte_array_3d_2(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "3"
								ReDim macro_variables_byte_array_3d_3(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "4"
								ReDim macro_variables_byte_array_3d_4(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "5"
								ReDim macro_variables_byte_array_3d_5(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "6"
								ReDim macro_variables_byte_array_3d_6(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "7"
								ReDim macro_variables_byte_array_3d_7(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "8"
								ReDim macro_variables_byte_array_3d_8(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "9"
								ReDim macro_variables_byte_array_3d_9(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						End Select
					Else
						macro_variables_info(variable_number,5)="3d"
						macro_variables_byte_array_3d_c+=1
						macro_variables_info(variable_number,3)=LTrim(RTrim(Str(macro_variables_byte_array_3d_c)))
						macro_variables_info(variable_number,8)=macro_variables_info(variable_number,3)
						Select Case macro_variables_byte_array_3d_c
							Case 1
								ReDim macro_variables_byte_array_3d_1(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 2
								ReDim macro_variables_byte_array_3d_2(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 3
								ReDim macro_variables_byte_array_3d_3(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 4
								ReDim macro_variables_byte_array_3d_4(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 5
								ReDim macro_variables_byte_array_3d_5(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 6
								ReDim macro_variables_byte_array_3d_6(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 7
								ReDim macro_variables_byte_array_3d_7(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 8
								ReDim macro_variables_byte_array_3d_8(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 9
								ReDim macro_variables_byte_array_3d_9(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						End Select
					EndIf
				EndIf
			EndIf
	End Select
End Sub

Sub dim_ubyte_array(variable_number As Integer,c As Integer,temp As String,temps() As String)
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Sub dim_ubyte_array"
		Print #5,"variable_number:";variable_number
		Print #5,"c:";c
		Print #5,"temp:";temp
		For dbugi=LBound(temps) To UBound(temps)
			Print #5,"temps("; dbugi; "):"; temps(dbugi)
		Next
		Print #5,"---------------"
	EndIf
	Dim As Integer i,x,low,hi,lows(),his()
	Select Case c
		Case 0 'undefined array depth, to be defined via redim
			macro_variables_info(variable_number,5)="pending array depth"
		Case 1 '1d
			If InStr(temp," to ") Then
				x=InStr(temp," to ")
				low=CInt(Left(temp,x-1))
				hi=CInt(Mid(temp,x+4))
			Else
				low=0
				hi=CInt(temp)
			EndIf
			If dim_params="redim" And macro_variables_info(variable_number,5)="1d" Then
				Select Case macro_variables_info(variable_number,3)
					Case "1"
						ReDim macro_variables_ubyte_array_1d_1(low To hi)
					Case "2"
						ReDim macro_variables_ubyte_array_1d_2(low To hi)
					Case "3"
						ReDim macro_variables_ubyte_array_1d_3(low To hi)
					Case "4"
						ReDim macro_variables_ubyte_array_1d_4(low To hi)
					Case "5"
						ReDim macro_variables_ubyte_array_1d_5(low To hi)
					Case "6"
						ReDim macro_variables_ubyte_array_1d_6(low To hi)
					Case "7"
						ReDim macro_variables_ubyte_array_1d_7(low To hi)
					Case "8"
						ReDim macro_variables_ubyte_array_1d_8(low To hi)
					Case "9"
						ReDim macro_variables_ubyte_array_1d_9(low To hi)
				End Select
			Else
				If dim_params="redim preserve" And macro_variables_info(variable_number,5)="1d" Then
					Select Case macro_variables_info(variable_number,3)
						Case "1"
							ReDim Preserve macro_variables_ubyte_array_1d_1(low To hi)
						Case "2"
							ReDim Preserve macro_variables_ubyte_array_1d_2(low To hi)
						Case "3"
							ReDim Preserve macro_variables_ubyte_array_1d_3(low To hi)
						Case "4"
							ReDim Preserve macro_variables_ubyte_array_1d_4(low To hi)
						Case "5"
							ReDim Preserve macro_variables_ubyte_array_1d_5(low To hi)
						Case "6"
							ReDim Preserve macro_variables_ubyte_array_1d_6(low To hi)
						Case "7"
							ReDim Preserve macro_variables_ubyte_array_1d_7(low To hi)
						Case "8"
							ReDim Preserve macro_variables_ubyte_array_1d_8(low To hi)
						Case "9"
							ReDim Preserve macro_variables_ubyte_array_1d_9(low To hi)
					End Select
				Else
					If macro_variables_info(variable_number,6)<>"" Then
						Select Case macro_variables_info(variable_number,6)
							Case "1"
								ReDim macro_variables_ubyte_array_1d_1(low To hi)
							Case "2"
								ReDim macro_variables_ubyte_array_1d_2(low To hi)
							Case "3"
								ReDim macro_variables_ubyte_array_1d_3(low To hi)
							Case "4"
								ReDim macro_variables_ubyte_array_1d_4(low To hi)
							Case "5"
								ReDim macro_variables_ubyte_array_1d_5(low To hi)
							Case "6"
								ReDim macro_variables_ubyte_array_1d_6(low To hi)
							Case "7"
								ReDim macro_variables_ubyte_array_1d_7(low To hi)
							Case "8"
								ReDim macro_variables_ubyte_array_1d_8(low To hi)
							Case "9"
								ReDim macro_variables_ubyte_array_1d_9(low To hi)
						End Select
					Else
						macro_variables_info(variable_number,5)="1d"
						macro_variables_ubyte_array_1d_c+=1
						macro_variables_info(variable_number,3)=LTrim(RTrim(Str(macro_variables_ubyte_array_1d_c)))
						macro_variables_info(variable_number,6)=macro_variables_info(variable_number,3)
						Select Case macro_variables_ubyte_array_1d_c
							Case 1
								ReDim macro_variables_ubyte_array_1d_1(low To hi)
							Case 2
								ReDim macro_variables_ubyte_array_1d_2(low To hi)
							Case 3
								ReDim macro_variables_ubyte_array_1d_3(low To hi)
							Case 4
								ReDim macro_variables_ubyte_array_1d_4(low To hi)
							Case 5
								ReDim macro_variables_ubyte_array_1d_5(low To hi)
							Case 6
								ReDim macro_variables_ubyte_array_1d_6(low To hi)
							Case 7
								ReDim macro_variables_ubyte_array_1d_7(low To hi)
							Case 8
								ReDim macro_variables_ubyte_array_1d_8(low To hi)
							Case 9
								ReDim macro_variables_ubyte_array_1d_9(low To hi)
						End Select
					EndIf
				EndIf
			EndIf
		Case 2 '2d
			ReDim lows(2),his(2)
			For i=1 To 2
				temp=temps(i)		
				If InStr(temp," to ") Then
					x=InStr(temp," to ")
					lows(i)=CInt(Left(temp,x-1))
					his(i)=CInt(Mid(temp,x+4))
				Else
					lows(i)=0
					his(i)=CInt(temp)
				EndIf
			Next
			If dim_params="redim" And macro_variables_info(variable_number,5)="2d" Then
				Select Case macro_variables_info(variable_number,3)
					Case "1"
						ReDim macro_variables_ubyte_array_2d_1(lows(1) To his(1),lows(2) To his(2))
					Case "2"
						ReDim macro_variables_ubyte_array_2d_2(lows(1) To his(1),lows(2) To his(2))
					Case "3"
						ReDim macro_variables_ubyte_array_2d_3(lows(1) To his(1),lows(2) To his(2))
					Case "4"
						ReDim macro_variables_ubyte_array_2d_4(lows(1) To his(1),lows(2) To his(2))
					Case "5"
						ReDim macro_variables_ubyte_array_2d_5(lows(1) To his(1),lows(2) To his(2))
					Case "6"
						ReDim macro_variables_ubyte_array_2d_6(lows(1) To his(1),lows(2) To his(2))
					Case "7"
						ReDim macro_variables_ubyte_array_2d_7(lows(1) To his(1),lows(2) To his(2))
					Case "8"
						ReDim macro_variables_ubyte_array_2d_8(lows(1) To his(1),lows(2) To his(2))
					Case "9"
						ReDim macro_variables_ubyte_array_2d_9(lows(1) To his(1),lows(2) To his(2))
				End Select
			Else
				If dim_params="redim preserve" And macro_variables_info(variable_number,5)="2d" Then
					Select Case macro_variables_info(variable_number,3)
						Case "1"
							ReDim Preserve macro_variables_ubyte_array_2d_1(lows(1) To his(1),lows(2) To his(2))
						Case "2"
							ReDim Preserve macro_variables_ubyte_array_2d_2(lows(1) To his(1),lows(2) To his(2))
						Case "3"
							ReDim Preserve macro_variables_ubyte_array_2d_3(lows(1) To his(1),lows(2) To his(2))
						Case "4"
							ReDim Preserve macro_variables_ubyte_array_2d_4(lows(1) To his(1),lows(2) To his(2))
						Case "5"
							ReDim Preserve macro_variables_ubyte_array_2d_5(lows(1) To his(1),lows(2) To his(2))
						Case "6"
							ReDim Preserve macro_variables_ubyte_array_2d_6(lows(1) To his(1),lows(2) To his(2))
						Case "7"
							ReDim Preserve macro_variables_ubyte_array_2d_7(lows(1) To his(1),lows(2) To his(2))
						Case "8"
							ReDim Preserve macro_variables_ubyte_array_2d_8(lows(1) To his(1),lows(2) To his(2))
						Case "9"
							ReDim Preserve macro_variables_ubyte_array_2d_9(lows(1) To his(1),lows(2) To his(2))
					End Select
				Else
					If macro_variables_info(variable_number,7)<>"" Then
						Select Case macro_variables_info(variable_number,7)
							Case "1"
								ReDim macro_variables_ubyte_array_2d_1(lows(1) To his(1),lows(2) To his(2))
							Case "2"
								ReDim macro_variables_ubyte_array_2d_2(lows(1) To his(1),lows(2) To his(2))
							Case "3"
								ReDim macro_variables_ubyte_array_2d_3(lows(1) To his(1),lows(2) To his(2))
							Case "4"
								ReDim macro_variables_ubyte_array_2d_4(lows(1) To his(1),lows(2) To his(2))
							Case "5"
								ReDim macro_variables_ubyte_array_2d_5(lows(1) To his(1),lows(2) To his(2))
							Case "6"
								ReDim macro_variables_ubyte_array_2d_6(lows(1) To his(1),lows(2) To his(2))
							Case "7"
								ReDim macro_variables_ubyte_array_2d_7(lows(1) To his(1),lows(2) To his(2))
							Case "8"
								ReDim macro_variables_ubyte_array_2d_8(lows(1) To his(1),lows(2) To his(2))
							Case "9"
								ReDim macro_variables_ubyte_array_2d_9(lows(1) To his(1),lows(2) To his(2))
						End Select
					Else
						macro_variables_info(variable_number,5)="2d"
						macro_variables_ubyte_array_2d_c+=1
						macro_variables_info(variable_number,3)=LTrim(RTrim(Str(macro_variables_ubyte_array_2d_c)))
						macro_variables_info(variable_number,7)=macro_variables_info(variable_number,3)
						Select Case macro_variables_ubyte_array_2d_c
							Case 1
								ReDim macro_variables_ubyte_array_2d_1(lows(1) To his(1),lows(2) To his(2))
							Case 2
								ReDim macro_variables_ubyte_array_2d_2(lows(1) To his(1),lows(2) To his(2))
							Case 3
								ReDim macro_variables_ubyte_array_2d_3(lows(1) To his(1),lows(2) To his(2))
							Case 4
								ReDim macro_variables_ubyte_array_2d_4(lows(1) To his(1),lows(2) To his(2))
							Case 5
								ReDim macro_variables_ubyte_array_2d_5(lows(1) To his(1),lows(2) To his(2))
							Case 6
								ReDim macro_variables_ubyte_array_2d_6(lows(1) To his(1),lows(2) To his(2))
							Case 7
								ReDim macro_variables_ubyte_array_2d_7(lows(1) To his(1),lows(2) To his(2))
							Case 8
								ReDim macro_variables_ubyte_array_2d_8(lows(1) To his(1),lows(2) To his(2))
							Case 9
								ReDim macro_variables_ubyte_array_2d_9(lows(1) To his(1),lows(2) To his(2))
						End Select
					EndIf
				EndIf
			EndIf
		Case 3 '3d
			ReDim lows(3),his(3)
			For i=1 To 3
				temp=temps(i)		
				If InStr(temp," to ") Then
					x=InStr(temp," to ")
					lows(i)=CInt(Left(temp,x-1))
					his(i)=CInt(Mid(temp,x+4))
				Else
					lows(i)=0
					his(i)=CInt(temp)
				EndIf
			Next
			If dim_params="redim" And macro_variables_info(variable_number,5)="3d" Then
				Select Case macro_variables_info(variable_number,3)
					Case "1"
						ReDim macro_variables_ubyte_array_3d_1(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "2"
						ReDim macro_variables_ubyte_array_3d_2(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "3"
						ReDim macro_variables_ubyte_array_3d_3(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "4"
						ReDim macro_variables_ubyte_array_3d_4(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "5"
						ReDim macro_variables_ubyte_array_3d_5(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "6"
						ReDim macro_variables_ubyte_array_3d_6(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "7"
						ReDim macro_variables_ubyte_array_3d_7(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "8"
						ReDim macro_variables_ubyte_array_3d_8(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "9"
						ReDim macro_variables_ubyte_array_3d_9(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
				End Select
			Else
				If dim_params="redim preserve" And macro_variables_info(variable_number,5)="3d" Then
					Select Case macro_variables_info(variable_number,3)
						Case "1"
							ReDim Preserve macro_variables_ubyte_array_3d_1(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "2"
							ReDim Preserve macro_variables_ubyte_array_3d_2(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "3"
							ReDim Preserve macro_variables_ubyte_array_3d_3(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "4"
							ReDim Preserve macro_variables_ubyte_array_3d_4(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "5"
							ReDim Preserve macro_variables_ubyte_array_3d_5(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "6"
							ReDim Preserve macro_variables_ubyte_array_3d_6(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "7"
							ReDim Preserve macro_variables_ubyte_array_3d_7(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "8"
							ReDim Preserve macro_variables_ubyte_array_3d_8(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "9"
							ReDim Preserve macro_variables_ubyte_array_3d_9(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					End Select
				Else
					If macro_variables_info(variable_number,8)<>"" Then
						Select Case macro_variables_info(variable_number,8)
							Case "1"
								ReDim macro_variables_ubyte_array_3d_1(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "2"
								ReDim macro_variables_ubyte_array_3d_2(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "3"
								ReDim macro_variables_ubyte_array_3d_3(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "4"
								ReDim macro_variables_ubyte_array_3d_4(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "5"
								ReDim macro_variables_ubyte_array_3d_5(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "6"
								ReDim macro_variables_ubyte_array_3d_6(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "7"
								ReDim macro_variables_ubyte_array_3d_7(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "8"
								ReDim macro_variables_ubyte_array_3d_8(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "9"
								ReDim macro_variables_ubyte_array_3d_9(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						End Select
					Else
						macro_variables_info(variable_number,5)="3d"
						macro_variables_ubyte_array_3d_c+=1
						macro_variables_info(variable_number,3)=LTrim(RTrim(Str(macro_variables_ubyte_array_3d_c)))
						macro_variables_info(variable_number,8)=macro_variables_info(variable_number,3)
						Select Case macro_variables_ubyte_array_3d_c
							Case 1
								ReDim macro_variables_ubyte_array_3d_1(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 2
								ReDim macro_variables_ubyte_array_3d_2(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 3
								ReDim macro_variables_ubyte_array_3d_3(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 4
								ReDim macro_variables_ubyte_array_3d_4(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 5
								ReDim macro_variables_ubyte_array_3d_5(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 6
								ReDim macro_variables_ubyte_array_3d_6(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 7
								ReDim macro_variables_ubyte_array_3d_7(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 8
								ReDim macro_variables_ubyte_array_3d_8(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 9
								ReDim macro_variables_ubyte_array_3d_9(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						End Select
					EndIf
				EndIf
			EndIf
	End Select
End Sub

Sub dim_short_array(variable_number As Integer,c As Integer,temp As String,temps() As String)
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Sub dim_short_array"
		Print #5,"variable_number:";variable_number
		Print #5,"c:";c
		Print #5,"temp:";temp
		For dbugi=LBound(temps) To UBound(temps)
			Print #5,"temps("; dbugi; "):"; temps(dbugi)
		Next
		Print #5,"---------------"
	EndIf
	Dim As Integer i,x,low,hi,lows(),his()
	Select Case c
		Case 0 'undefined array depth, to be defined via redim
			macro_variables_info(variable_number,5)="pending array depth"
		Case 1 '1d
			If InStr(temp," to ") Then
				x=InStr(temp," to ")
				low=CInt(Left(temp,x-1))
				hi=CInt(Mid(temp,x+4))
			Else
				low=0
				hi=CInt(temp)
			EndIf
			If dim_params="redim" And macro_variables_info(variable_number,5)="1d" Then
				Select Case macro_variables_info(variable_number,3)
					Case "1"
						ReDim macro_variables_short_array_1d_1(low To hi)
					Case "2"
						ReDim macro_variables_short_array_1d_2(low To hi)
					Case "3"
						ReDim macro_variables_short_array_1d_3(low To hi)
					Case "4"
						ReDim macro_variables_short_array_1d_4(low To hi)
					Case "5"
						ReDim macro_variables_short_array_1d_5(low To hi)
					Case "6"
						ReDim macro_variables_short_array_1d_6(low To hi)
					Case "7"
						ReDim macro_variables_short_array_1d_7(low To hi)
					Case "8"
						ReDim macro_variables_short_array_1d_8(low To hi)
					Case "9"
						ReDim macro_variables_short_array_1d_9(low To hi)
				End Select
			Else
				If dim_params="redim preserve" And macro_variables_info(variable_number,5)="1d" Then
					Select Case macro_variables_info(variable_number,3)
						Case "1"
							ReDim Preserve macro_variables_short_array_1d_1(low To hi)
						Case "2"
							ReDim Preserve macro_variables_short_array_1d_2(low To hi)
						Case "3"
							ReDim Preserve macro_variables_short_array_1d_3(low To hi)
						Case "4"
							ReDim Preserve macro_variables_short_array_1d_4(low To hi)
						Case "5"
							ReDim Preserve macro_variables_short_array_1d_5(low To hi)
						Case "6"
							ReDim Preserve macro_variables_short_array_1d_6(low To hi)
						Case "7"
							ReDim Preserve macro_variables_short_array_1d_7(low To hi)
						Case "8"
							ReDim Preserve macro_variables_short_array_1d_8(low To hi)
						Case "9"
							ReDim Preserve macro_variables_short_array_1d_9(low To hi)
					End Select
				Else
					If macro_variables_info(variable_number,6)<>"" Then
						Select Case macro_variables_info(variable_number,6)
							Case "1"
								ReDim macro_variables_short_array_1d_1(low To hi)
							Case "2"
								ReDim macro_variables_short_array_1d_2(low To hi)
							Case "3"
								ReDim macro_variables_short_array_1d_3(low To hi)
							Case "4"
								ReDim macro_variables_short_array_1d_4(low To hi)
							Case "5"
								ReDim macro_variables_short_array_1d_5(low To hi)
							Case "6"
								ReDim macro_variables_short_array_1d_6(low To hi)
							Case "7"
								ReDim macro_variables_short_array_1d_7(low To hi)
							Case "8"
								ReDim macro_variables_short_array_1d_8(low To hi)
							Case "9"
								ReDim macro_variables_short_array_1d_9(low To hi)
						End Select
					Else
						macro_variables_info(variable_number,5)="1d"
						macro_variables_short_array_1d_c+=1
						macro_variables_info(variable_number,3)=LTrim(RTrim(Str(macro_variables_short_array_1d_c)))
						macro_variables_info(variable_number,6)=macro_variables_info(variable_number,3)
						Select Case macro_variables_short_array_1d_c
							Case 1
								ReDim macro_variables_short_array_1d_1(low To hi)
							Case 2
								ReDim macro_variables_short_array_1d_2(low To hi)
							Case 3
								ReDim macro_variables_short_array_1d_3(low To hi)
							Case 4
								ReDim macro_variables_short_array_1d_4(low To hi)
							Case 5
								ReDim macro_variables_short_array_1d_5(low To hi)
							Case 6
								ReDim macro_variables_short_array_1d_6(low To hi)
							Case 7
								ReDim macro_variables_short_array_1d_7(low To hi)
							Case 8
								ReDim macro_variables_short_array_1d_8(low To hi)
							Case 9
								ReDim macro_variables_short_array_1d_9(low To hi)
						End Select
					EndIf
				EndIf
			EndIf
		Case 2 '2d
			ReDim lows(2),his(2)
			For i=1 To 2
				temp=temps(i)		
				If InStr(temp," to ") Then
					x=InStr(temp," to ")
					lows(i)=CInt(Left(temp,x-1))
					his(i)=CInt(Mid(temp,x+4))
				Else
					lows(i)=0
					his(i)=CInt(temp)
				EndIf
			Next
			If dim_params="redim" And macro_variables_info(variable_number,5)="2d" Then
				Select Case macro_variables_info(variable_number,3)
					Case "1"
						ReDim macro_variables_short_array_2d_1(lows(1) To his(1),lows(2) To his(2))
					Case "2"
						ReDim macro_variables_short_array_2d_2(lows(1) To his(1),lows(2) To his(2))
					Case "3"
						ReDim macro_variables_short_array_2d_3(lows(1) To his(1),lows(2) To his(2))
					Case "4"
						ReDim macro_variables_short_array_2d_4(lows(1) To his(1),lows(2) To his(2))
					Case "5"
						ReDim macro_variables_short_array_2d_5(lows(1) To his(1),lows(2) To his(2))
					Case "6"
						ReDim macro_variables_short_array_2d_6(lows(1) To his(1),lows(2) To his(2))
					Case "7"
						ReDim macro_variables_short_array_2d_7(lows(1) To his(1),lows(2) To his(2))
					Case "8"
						ReDim macro_variables_short_array_2d_8(lows(1) To his(1),lows(2) To his(2))
					Case "9"
						ReDim macro_variables_short_array_2d_9(lows(1) To his(1),lows(2) To his(2))
				End Select
			Else
				If dim_params="redim preserve" And macro_variables_info(variable_number,5)="2d" Then
					Select Case macro_variables_info(variable_number,3)
						Case "1"
							ReDim Preserve macro_variables_short_array_2d_1(lows(1) To his(1),lows(2) To his(2))
						Case "2"
							ReDim Preserve macro_variables_short_array_2d_2(lows(1) To his(1),lows(2) To his(2))
						Case "3"
							ReDim Preserve macro_variables_short_array_2d_3(lows(1) To his(1),lows(2) To his(2))
						Case "4"
							ReDim Preserve macro_variables_short_array_2d_4(lows(1) To his(1),lows(2) To his(2))
						Case "5"
							ReDim Preserve macro_variables_short_array_2d_5(lows(1) To his(1),lows(2) To his(2))
						Case "6"
							ReDim Preserve macro_variables_short_array_2d_6(lows(1) To his(1),lows(2) To his(2))
						Case "7"
							ReDim Preserve macro_variables_short_array_2d_7(lows(1) To his(1),lows(2) To his(2))
						Case "8"
							ReDim Preserve macro_variables_short_array_2d_8(lows(1) To his(1),lows(2) To his(2))
						Case "9"
							ReDim Preserve macro_variables_short_array_2d_9(lows(1) To his(1),lows(2) To his(2))
					End Select
				Else
					If macro_variables_info(variable_number,7)<>"" Then
						Select Case macro_variables_info(variable_number,7)
							Case "1"
								ReDim macro_variables_short_array_2d_1(lows(1) To his(1),lows(2) To his(2))
							Case "2"
								ReDim macro_variables_short_array_2d_2(lows(1) To his(1),lows(2) To his(2))
							Case "3"
								ReDim macro_variables_short_array_2d_3(lows(1) To his(1),lows(2) To his(2))
							Case "4"
								ReDim macro_variables_short_array_2d_4(lows(1) To his(1),lows(2) To his(2))
							Case "5"
								ReDim macro_variables_short_array_2d_5(lows(1) To his(1),lows(2) To his(2))
							Case "6"
								ReDim macro_variables_short_array_2d_6(lows(1) To his(1),lows(2) To his(2))
							Case "7"
								ReDim macro_variables_short_array_2d_7(lows(1) To his(1),lows(2) To his(2))
							Case "8"
								ReDim macro_variables_short_array_2d_8(lows(1) To his(1),lows(2) To his(2))
							Case "9"
								ReDim macro_variables_short_array_2d_9(lows(1) To his(1),lows(2) To his(2))
						End Select
					Else
						macro_variables_info(variable_number,5)="2d"
						macro_variables_short_array_2d_c+=1
						macro_variables_info(variable_number,3)=LTrim(RTrim(Str(macro_variables_short_array_2d_c)))
						macro_variables_info(variable_number,7)=macro_variables_info(variable_number,3)
						Select Case macro_variables_short_array_2d_c
							Case 1
								ReDim macro_variables_short_array_2d_1(lows(1) To his(1),lows(2) To his(2))
							Case 2
								ReDim macro_variables_short_array_2d_2(lows(1) To his(1),lows(2) To his(2))
							Case 3
								ReDim macro_variables_short_array_2d_3(lows(1) To his(1),lows(2) To his(2))
							Case 4
								ReDim macro_variables_short_array_2d_4(lows(1) To his(1),lows(2) To his(2))
							Case 5
								ReDim macro_variables_short_array_2d_5(lows(1) To his(1),lows(2) To his(2))
							Case 6
								ReDim macro_variables_short_array_2d_6(lows(1) To his(1),lows(2) To his(2))
							Case 7
								ReDim macro_variables_short_array_2d_7(lows(1) To his(1),lows(2) To his(2))
							Case 8
								ReDim macro_variables_short_array_2d_8(lows(1) To his(1),lows(2) To his(2))
							Case 9
								ReDim macro_variables_short_array_2d_9(lows(1) To his(1),lows(2) To his(2))
						End Select
					EndIf
				EndIf
			EndIf
		Case 3 '3d
			ReDim lows(3),his(3)
			For i=1 To 3
				temp=temps(i)		
				If InStr(temp," to ") Then
					x=InStr(temp," to ")
					lows(i)=CInt(Left(temp,x-1))
					his(i)=CInt(Mid(temp,x+4))
				Else
					lows(i)=0
					his(i)=CInt(temp)
				EndIf
			Next
			If dim_params="redim" And macro_variables_info(variable_number,5)="3d" Then
				Select Case macro_variables_info(variable_number,3)
					Case "1"
						ReDim macro_variables_short_array_3d_1(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "2"
						ReDim macro_variables_short_array_3d_2(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "3"
						ReDim macro_variables_short_array_3d_3(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "4"
						ReDim macro_variables_short_array_3d_4(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "5"
						ReDim macro_variables_short_array_3d_5(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "6"
						ReDim macro_variables_short_array_3d_6(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "7"
						ReDim macro_variables_short_array_3d_7(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "8"
						ReDim macro_variables_short_array_3d_8(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "9"
						ReDim macro_variables_short_array_3d_9(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
				End Select
			Else
				If dim_params="redim preserve" And macro_variables_info(variable_number,5)="3d" Then
					Select Case macro_variables_info(variable_number,3)
						Case "1"
							ReDim Preserve macro_variables_short_array_3d_1(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "2"
							ReDim Preserve macro_variables_short_array_3d_2(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "3"
							ReDim Preserve macro_variables_short_array_3d_3(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "4"
							ReDim Preserve macro_variables_short_array_3d_4(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "5"
							ReDim Preserve macro_variables_short_array_3d_5(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "6"
							ReDim Preserve macro_variables_short_array_3d_6(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "7"
							ReDim Preserve macro_variables_short_array_3d_7(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "8"
							ReDim Preserve macro_variables_short_array_3d_8(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "9"
							ReDim Preserve macro_variables_short_array_3d_9(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					End Select
				Else
					If macro_variables_info(variable_number,8)<>"" Then
						Select Case macro_variables_info(variable_number,8)
							Case "1"
								ReDim macro_variables_short_array_3d_1(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "2"
								ReDim macro_variables_short_array_3d_2(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "3"
								ReDim macro_variables_short_array_3d_3(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "4"
								ReDim macro_variables_short_array_3d_4(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "5"
								ReDim macro_variables_short_array_3d_5(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "6"
								ReDim macro_variables_short_array_3d_6(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "7"
								ReDim macro_variables_short_array_3d_7(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "8"
								ReDim macro_variables_short_array_3d_8(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "9"
								ReDim macro_variables_short_array_3d_9(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						End Select
					Else
						macro_variables_info(variable_number,5)="3d"
						macro_variables_short_array_3d_c+=1
						macro_variables_info(variable_number,3)=LTrim(RTrim(Str(macro_variables_short_array_3d_c)))
						macro_variables_info(variable_number,8)=macro_variables_info(variable_number,3)
						Select Case macro_variables_short_array_3d_c
							Case 1
								ReDim macro_variables_short_array_3d_1(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 2
								ReDim macro_variables_short_array_3d_2(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 3
								ReDim macro_variables_short_array_3d_3(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 4
								ReDim macro_variables_short_array_3d_4(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 5
								ReDim macro_variables_short_array_3d_5(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 6
								ReDim macro_variables_short_array_3d_6(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 7
								ReDim macro_variables_short_array_3d_7(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 8
								ReDim macro_variables_short_array_3d_8(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 9
								ReDim macro_variables_short_array_3d_9(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						End Select
					EndIf
				EndIf
			EndIf
	End Select
End Sub

Sub dim_ushort_array(variable_number As Integer,c As Integer,temp As String,temps() As String)
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Sub dim_ushort_array"
		Print #5,"variable_number:";variable_number
		Print #5,"c:";c
		Print #5,"temp:";temp
		For dbugi=LBound(temps) To UBound(temps)
			Print #5,"temps("; dbugi; "):"; temps(dbugi)
		Next
		Print #5,"---------------"
	EndIf
	Dim As Integer i,x,low,hi,lows(),his()
	Select Case c
		Case 0 'undefined array depth, to be defined via redim
			macro_variables_info(variable_number,5)="pending array depth"
		Case 1 '1d
			If InStr(temp," to ") Then
				x=InStr(temp," to ")
				low=CInt(Left(temp,x-1))
				hi=CInt(Mid(temp,x+4))
			Else
				low=0
				hi=CInt(temp)
			EndIf
			If dim_params="redim" And macro_variables_info(variable_number,5)="1d" Then
				Select Case macro_variables_info(variable_number,3)
					Case "1"
						ReDim macro_variables_ushort_array_1d_1(low To hi)
					Case "2"
						ReDim macro_variables_ushort_array_1d_2(low To hi)
					Case "3"
						ReDim macro_variables_ushort_array_1d_3(low To hi)
					Case "4"
						ReDim macro_variables_ushort_array_1d_4(low To hi)
					Case "5"
						ReDim macro_variables_ushort_array_1d_5(low To hi)
					Case "6"
						ReDim macro_variables_ushort_array_1d_6(low To hi)
					Case "7"
						ReDim macro_variables_ushort_array_1d_7(low To hi)
					Case "8"
						ReDim macro_variables_ushort_array_1d_8(low To hi)
					Case "9"
						ReDim macro_variables_ushort_array_1d_9(low To hi)
				End Select
			Else
				If dim_params="redim preserve" And macro_variables_info(variable_number,5)="1d" Then
					Select Case macro_variables_info(variable_number,3)
						Case "1"
							ReDim Preserve macro_variables_ushort_array_1d_1(low To hi)
						Case "2"
							ReDim Preserve macro_variables_ushort_array_1d_2(low To hi)
						Case "3"
							ReDim Preserve macro_variables_ushort_array_1d_3(low To hi)
						Case "4"
							ReDim Preserve macro_variables_ushort_array_1d_4(low To hi)
						Case "5"
							ReDim Preserve macro_variables_ushort_array_1d_5(low To hi)
						Case "6"
							ReDim Preserve macro_variables_ushort_array_1d_6(low To hi)
						Case "7"
							ReDim Preserve macro_variables_ushort_array_1d_7(low To hi)
						Case "8"
							ReDim Preserve macro_variables_ushort_array_1d_8(low To hi)
						Case "9"
							ReDim Preserve macro_variables_ushort_array_1d_9(low To hi)
					End Select
				Else
					If macro_variables_info(variable_number,6)<>"" Then
						Select Case macro_variables_info(variable_number,6)
							Case "1"
								ReDim macro_variables_ushort_array_1d_1(low To hi)
							Case "2"
								ReDim macro_variables_ushort_array_1d_2(low To hi)
							Case "3"
								ReDim macro_variables_ushort_array_1d_3(low To hi)
							Case "4"
								ReDim macro_variables_ushort_array_1d_4(low To hi)
							Case "5"
								ReDim macro_variables_ushort_array_1d_5(low To hi)
							Case "6"
								ReDim macro_variables_ushort_array_1d_6(low To hi)
							Case "7"
								ReDim macro_variables_ushort_array_1d_7(low To hi)
							Case "8"
								ReDim macro_variables_ushort_array_1d_8(low To hi)
							Case "9"
								ReDim macro_variables_ushort_array_1d_9(low To hi)
						End Select
					Else
						macro_variables_info(variable_number,5)="1d"
						macro_variables_ushort_array_1d_c+=1
						macro_variables_info(variable_number,3)=LTrim(RTrim(Str(macro_variables_ushort_array_1d_c)))
						macro_variables_info(variable_number,6)=macro_variables_info(variable_number,3)
						Select Case macro_variables_ushort_array_1d_c
							Case 1
								ReDim macro_variables_ushort_array_1d_1(low To hi)
							Case 2
								ReDim macro_variables_ushort_array_1d_2(low To hi)
							Case 3
								ReDim macro_variables_ushort_array_1d_3(low To hi)
							Case 4
								ReDim macro_variables_ushort_array_1d_4(low To hi)
							Case 5
								ReDim macro_variables_ushort_array_1d_5(low To hi)
							Case 6
								ReDim macro_variables_ushort_array_1d_6(low To hi)
							Case 7
								ReDim macro_variables_ushort_array_1d_7(low To hi)
							Case 8
								ReDim macro_variables_ushort_array_1d_8(low To hi)
							Case 9
								ReDim macro_variables_ushort_array_1d_9(low To hi)
						End Select
					EndIf
				EndIf
			EndIf
		Case 2 '2d
			ReDim lows(2),his(2)
			For i=1 To 2
				temp=temps(i)		
				If InStr(temp," to ") Then
					x=InStr(temp," to ")
					lows(i)=CInt(Left(temp,x-1))
					his(i)=CInt(Mid(temp,x+4))
				Else
					lows(i)=0
					his(i)=CInt(temp)
				EndIf
			Next
			If dim_params="redim" And macro_variables_info(variable_number,5)="2d" Then
				Select Case macro_variables_info(variable_number,3)
					Case "1"
						ReDim macro_variables_ushort_array_2d_1(lows(1) To his(1),lows(2) To his(2))
					Case "2"
						ReDim macro_variables_ushort_array_2d_2(lows(1) To his(1),lows(2) To his(2))
					Case "3"
						ReDim macro_variables_ushort_array_2d_3(lows(1) To his(1),lows(2) To his(2))
					Case "4"
						ReDim macro_variables_ushort_array_2d_4(lows(1) To his(1),lows(2) To his(2))
					Case "5"
						ReDim macro_variables_ushort_array_2d_5(lows(1) To his(1),lows(2) To his(2))
					Case "6"
						ReDim macro_variables_ushort_array_2d_6(lows(1) To his(1),lows(2) To his(2))
					Case "7"
						ReDim macro_variables_ushort_array_2d_7(lows(1) To his(1),lows(2) To his(2))
					Case "8"
						ReDim macro_variables_ushort_array_2d_8(lows(1) To his(1),lows(2) To his(2))
					Case "9"
						ReDim macro_variables_ushort_array_2d_9(lows(1) To his(1),lows(2) To his(2))
				End Select
			Else
				If dim_params="redim preserve" And macro_variables_info(variable_number,5)="2d" Then
					Select Case macro_variables_info(variable_number,3)
						Case "1"
							ReDim Preserve macro_variables_ushort_array_2d_1(lows(1) To his(1),lows(2) To his(2))
						Case "2"
							ReDim Preserve macro_variables_ushort_array_2d_2(lows(1) To his(1),lows(2) To his(2))
						Case "3"
							ReDim Preserve macro_variables_ushort_array_2d_3(lows(1) To his(1),lows(2) To his(2))
						Case "4"
							ReDim Preserve macro_variables_ushort_array_2d_4(lows(1) To his(1),lows(2) To his(2))
						Case "5"
							ReDim Preserve macro_variables_ushort_array_2d_5(lows(1) To his(1),lows(2) To his(2))
						Case "6"
							ReDim Preserve macro_variables_ushort_array_2d_6(lows(1) To his(1),lows(2) To his(2))
						Case "7"
							ReDim Preserve macro_variables_ushort_array_2d_7(lows(1) To his(1),lows(2) To his(2))
						Case "8"
							ReDim Preserve macro_variables_ushort_array_2d_8(lows(1) To his(1),lows(2) To his(2))
						Case "9"
							ReDim Preserve macro_variables_ushort_array_2d_9(lows(1) To his(1),lows(2) To his(2))
					End Select
				Else
					If macro_variables_info(variable_number,7)<>"" Then
						Select Case macro_variables_info(variable_number,7)
							Case "1"
								ReDim macro_variables_ushort_array_2d_1(lows(1) To his(1),lows(2) To his(2))
							Case "2"
								ReDim macro_variables_ushort_array_2d_2(lows(1) To his(1),lows(2) To his(2))
							Case "3"
								ReDim macro_variables_ushort_array_2d_3(lows(1) To his(1),lows(2) To his(2))
							Case "4"
								ReDim macro_variables_ushort_array_2d_4(lows(1) To his(1),lows(2) To his(2))
							Case "5"
								ReDim macro_variables_ushort_array_2d_5(lows(1) To his(1),lows(2) To his(2))
							Case "6"
								ReDim macro_variables_ushort_array_2d_6(lows(1) To his(1),lows(2) To his(2))
							Case "7"
								ReDim macro_variables_ushort_array_2d_7(lows(1) To his(1),lows(2) To his(2))
							Case "8"
								ReDim macro_variables_ushort_array_2d_8(lows(1) To his(1),lows(2) To his(2))
							Case "9"
								ReDim macro_variables_ushort_array_2d_9(lows(1) To his(1),lows(2) To his(2))
						End Select
					Else
						macro_variables_info(variable_number,5)="2d"
						macro_variables_ushort_array_2d_c+=1
						macro_variables_info(variable_number,3)=LTrim(RTrim(Str(macro_variables_ushort_array_2d_c)))
						macro_variables_info(variable_number,7)=macro_variables_info(variable_number,3)
						Select Case macro_variables_ushort_array_2d_c
							Case 1
								ReDim macro_variables_ushort_array_2d_1(lows(1) To his(1),lows(2) To his(2))
							Case 2
								ReDim macro_variables_ushort_array_2d_2(lows(1) To his(1),lows(2) To his(2))
							Case 3
								ReDim macro_variables_ushort_array_2d_3(lows(1) To his(1),lows(2) To his(2))
							Case 4
								ReDim macro_variables_ushort_array_2d_4(lows(1) To his(1),lows(2) To his(2))
							Case 5
								ReDim macro_variables_ushort_array_2d_5(lows(1) To his(1),lows(2) To his(2))
							Case 6
								ReDim macro_variables_ushort_array_2d_6(lows(1) To his(1),lows(2) To his(2))
							Case 7
								ReDim macro_variables_ushort_array_2d_7(lows(1) To his(1),lows(2) To his(2))
							Case 8
								ReDim macro_variables_ushort_array_2d_8(lows(1) To his(1),lows(2) To his(2))
							Case 9
								ReDim macro_variables_ushort_array_2d_9(lows(1) To his(1),lows(2) To his(2))
						End Select
					EndIf
				EndIf
			EndIf
		Case 3 '3d
			ReDim lows(3),his(3)
			For i=1 To 3
				temp=temps(i)		
				If InStr(temp," to ") Then
					x=InStr(temp," to ")
					lows(i)=CInt(Left(temp,x-1))
					his(i)=CInt(Mid(temp,x+4))
				Else
					lows(i)=0
					his(i)=CInt(temp)
				EndIf
			Next
			If dim_params="redim" And macro_variables_info(variable_number,5)="3d" Then
				Select Case macro_variables_info(variable_number,3)
					Case "1"
						ReDim macro_variables_ushort_array_3d_1(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "2"
						ReDim macro_variables_ushort_array_3d_2(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "3"
						ReDim macro_variables_ushort_array_3d_3(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "4"
						ReDim macro_variables_ushort_array_3d_4(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "5"
						ReDim macro_variables_ushort_array_3d_5(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "6"
						ReDim macro_variables_ushort_array_3d_6(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "7"
						ReDim macro_variables_ushort_array_3d_7(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "8"
						ReDim macro_variables_ushort_array_3d_8(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "9"
						ReDim macro_variables_ushort_array_3d_9(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
				End Select
			Else
				If dim_params="redim preserve" And macro_variables_info(variable_number,5)="3d" Then
					Select Case macro_variables_info(variable_number,3)
						Case "1"
							ReDim Preserve macro_variables_ushort_array_3d_1(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "2"
							ReDim Preserve macro_variables_ushort_array_3d_2(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "3"
							ReDim Preserve macro_variables_ushort_array_3d_3(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "4"
							ReDim Preserve macro_variables_ushort_array_3d_4(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "5"
							ReDim Preserve macro_variables_ushort_array_3d_5(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "6"
							ReDim Preserve macro_variables_ushort_array_3d_6(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "7"
							ReDim Preserve macro_variables_ushort_array_3d_7(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "8"
							ReDim Preserve macro_variables_ushort_array_3d_8(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "9"
							ReDim Preserve macro_variables_ushort_array_3d_9(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					End Select
				Else
					If macro_variables_info(variable_number,8)<>"" Then
						Select Case macro_variables_info(variable_number,8)
							Case "1"
								ReDim macro_variables_ushort_array_3d_1(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "2"
								ReDim macro_variables_ushort_array_3d_2(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "3"
								ReDim macro_variables_ushort_array_3d_3(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "4"
								ReDim macro_variables_ushort_array_3d_4(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "5"
								ReDim macro_variables_ushort_array_3d_5(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "6"
								ReDim macro_variables_ushort_array_3d_6(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "7"
								ReDim macro_variables_ushort_array_3d_7(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "8"
								ReDim macro_variables_ushort_array_3d_8(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "9"
								ReDim macro_variables_ushort_array_3d_9(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						End Select
					Else
						macro_variables_info(variable_number,5)="3d"
						macro_variables_ushort_array_3d_c+=1
						macro_variables_info(variable_number,3)=LTrim(RTrim(Str(macro_variables_ushort_array_3d_c)))
						macro_variables_info(variable_number,8)=macro_variables_info(variable_number,3)
						Select Case macro_variables_ushort_array_3d_c
							Case 1
								ReDim macro_variables_ushort_array_3d_1(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 2
								ReDim macro_variables_ushort_array_3d_2(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 3
								ReDim macro_variables_ushort_array_3d_3(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 4
								ReDim macro_variables_ushort_array_3d_4(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 5
								ReDim macro_variables_ushort_array_3d_5(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 6
								ReDim macro_variables_ushort_array_3d_6(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 7
								ReDim macro_variables_ushort_array_3d_7(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 8
								ReDim macro_variables_ushort_array_3d_8(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 9
								ReDim macro_variables_ushort_array_3d_9(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						End Select
					EndIf
				EndIf
			EndIf
	End Select
End Sub

Sub dim_long_array(variable_number As Integer,c As Integer,temp As String,temps() As String)
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Sub dim_long_array"
		Print #5,"variable_number:";variable_number
		Print #5,"c:";c
		Print #5,"temp:";temp
		For dbugi=LBound(temps) To UBound(temps)
			Print #5,"temps("; dbugi; "):"; temps(dbugi)
		Next
		Print #5,"---------------"
	EndIf
	Dim As Integer i,x,low,hi,lows(),his()
	Select Case c
		Case 0 'undefined array depth, to be defined via redim
			macro_variables_info(variable_number,5)="pending array depth"
		Case 1 '1d
			If InStr(temp," to ") Then
				x=InStr(temp," to ")
				low=CInt(Left(temp,x-1))
				hi=CInt(Mid(temp,x+4))
			Else
				low=0
				hi=CInt(temp)
			EndIf
			If dim_params="redim" And macro_variables_info(variable_number,5)="1d" Then
				Select Case macro_variables_info(variable_number,3)
					Case "1"
						ReDim macro_variables_long_array_1d_1(low To hi)
					Case "2"
						ReDim macro_variables_long_array_1d_2(low To hi)
					Case "3"
						ReDim macro_variables_long_array_1d_3(low To hi)
					Case "4"
						ReDim macro_variables_long_array_1d_4(low To hi)
					Case "5"
						ReDim macro_variables_long_array_1d_5(low To hi)
					Case "6"
						ReDim macro_variables_long_array_1d_6(low To hi)
					Case "7"
						ReDim macro_variables_long_array_1d_7(low To hi)
					Case "8"
						ReDim macro_variables_long_array_1d_8(low To hi)
					Case "9"
						ReDim macro_variables_long_array_1d_9(low To hi)
				End Select
			Else
				If dim_params="redim preserve" And macro_variables_info(variable_number,5)="1d" Then
					Select Case macro_variables_info(variable_number,3)
						Case "1"
							ReDim Preserve macro_variables_long_array_1d_1(low To hi)
						Case "2"
							ReDim Preserve macro_variables_long_array_1d_2(low To hi)
						Case "3"
							ReDim Preserve macro_variables_long_array_1d_3(low To hi)
						Case "4"
							ReDim Preserve macro_variables_long_array_1d_4(low To hi)
						Case "5"
							ReDim Preserve macro_variables_long_array_1d_5(low To hi)
						Case "6"
							ReDim Preserve macro_variables_long_array_1d_6(low To hi)
						Case "7"
							ReDim Preserve macro_variables_long_array_1d_7(low To hi)
						Case "8"
							ReDim Preserve macro_variables_long_array_1d_8(low To hi)
						Case "9"
							ReDim Preserve macro_variables_long_array_1d_9(low To hi)
					End Select
				Else
					If macro_variables_info(variable_number,6)<>"" Then
						Select Case macro_variables_info(variable_number,6)
							Case "1"
								ReDim macro_variables_long_array_1d_1(low To hi)
							Case "2"
								ReDim macro_variables_long_array_1d_2(low To hi)
							Case "3"
								ReDim macro_variables_long_array_1d_3(low To hi)
							Case "4"
								ReDim macro_variables_long_array_1d_4(low To hi)
							Case "5"
								ReDim macro_variables_long_array_1d_5(low To hi)
							Case "6"
								ReDim macro_variables_long_array_1d_6(low To hi)
							Case "7"
								ReDim macro_variables_long_array_1d_7(low To hi)
							Case "8"
								ReDim macro_variables_long_array_1d_8(low To hi)
							Case "9"
								ReDim macro_variables_long_array_1d_9(low To hi)
						End Select
					Else
						macro_variables_info(variable_number,5)="1d"
						macro_variables_long_array_1d_c+=1
						macro_variables_info(variable_number,3)=LTrim(RTrim(Str(macro_variables_long_array_1d_c)))
						macro_variables_info(variable_number,6)=macro_variables_info(variable_number,3)
						Select Case macro_variables_long_array_1d_c
							Case 1
								ReDim macro_variables_long_array_1d_1(low To hi)
							Case 2
								ReDim macro_variables_long_array_1d_2(low To hi)
							Case 3
								ReDim macro_variables_long_array_1d_3(low To hi)
							Case 4
								ReDim macro_variables_long_array_1d_4(low To hi)
							Case 5
								ReDim macro_variables_long_array_1d_5(low To hi)
							Case 6
								ReDim macro_variables_long_array_1d_6(low To hi)
							Case 7
								ReDim macro_variables_long_array_1d_7(low To hi)
							Case 8
								ReDim macro_variables_long_array_1d_8(low To hi)
							Case 9
								ReDim macro_variables_long_array_1d_9(low To hi)
						End Select
					EndIf
				EndIf
			EndIf
		Case 2 '2d
			ReDim lows(2),his(2)
			For i=1 To 2
				temp=temps(i)		
				If InStr(temp," to ") Then
					x=InStr(temp," to ")
					lows(i)=CInt(Left(temp,x-1))
					his(i)=CInt(Mid(temp,x+4))
				Else
					lows(i)=0
					his(i)=CInt(temp)
				EndIf
			Next
			If dim_params="redim" And macro_variables_info(variable_number,5)="2d" Then
				Select Case macro_variables_info(variable_number,3)
					Case "1"
						ReDim macro_variables_long_array_2d_1(lows(1) To his(1),lows(2) To his(2))
					Case "2"
						ReDim macro_variables_long_array_2d_2(lows(1) To his(1),lows(2) To his(2))
					Case "3"
						ReDim macro_variables_long_array_2d_3(lows(1) To his(1),lows(2) To his(2))
					Case "4"
						ReDim macro_variables_long_array_2d_4(lows(1) To his(1),lows(2) To his(2))
					Case "5"
						ReDim macro_variables_long_array_2d_5(lows(1) To his(1),lows(2) To his(2))
					Case "6"
						ReDim macro_variables_long_array_2d_6(lows(1) To his(1),lows(2) To his(2))
					Case "7"
						ReDim macro_variables_long_array_2d_7(lows(1) To his(1),lows(2) To his(2))
					Case "8"
						ReDim macro_variables_long_array_2d_8(lows(1) To his(1),lows(2) To his(2))
					Case "9"
						ReDim macro_variables_long_array_2d_9(lows(1) To his(1),lows(2) To his(2))
				End Select
			Else
				If dim_params="redim preserve" And macro_variables_info(variable_number,5)="2d" Then
					Select Case macro_variables_info(variable_number,3)
						Case "1"
							ReDim Preserve macro_variables_long_array_2d_1(lows(1) To his(1),lows(2) To his(2))
						Case "2"
							ReDim Preserve macro_variables_long_array_2d_2(lows(1) To his(1),lows(2) To his(2))
						Case "3"
							ReDim Preserve macro_variables_long_array_2d_3(lows(1) To his(1),lows(2) To his(2))
						Case "4"
							ReDim Preserve macro_variables_long_array_2d_4(lows(1) To his(1),lows(2) To his(2))
						Case "5"
							ReDim Preserve macro_variables_long_array_2d_5(lows(1) To his(1),lows(2) To his(2))
						Case "6"
							ReDim Preserve macro_variables_long_array_2d_6(lows(1) To his(1),lows(2) To his(2))
						Case "7"
							ReDim Preserve macro_variables_long_array_2d_7(lows(1) To his(1),lows(2) To his(2))
						Case "8"
							ReDim Preserve macro_variables_long_array_2d_8(lows(1) To his(1),lows(2) To his(2))
						Case "9"
							ReDim Preserve macro_variables_long_array_2d_9(lows(1) To his(1),lows(2) To his(2))
					End Select
				Else
					If macro_variables_info(variable_number,7)<>"" Then
						Select Case macro_variables_info(variable_number,7)
							Case "1"
								ReDim macro_variables_long_array_2d_1(lows(1) To his(1),lows(2) To his(2))
							Case "2"
								ReDim macro_variables_long_array_2d_2(lows(1) To his(1),lows(2) To his(2))
							Case "3"
								ReDim macro_variables_long_array_2d_3(lows(1) To his(1),lows(2) To his(2))
							Case "4"
								ReDim macro_variables_long_array_2d_4(lows(1) To his(1),lows(2) To his(2))
							Case "5"
								ReDim macro_variables_long_array_2d_5(lows(1) To his(1),lows(2) To his(2))
							Case "6"
								ReDim macro_variables_long_array_2d_6(lows(1) To his(1),lows(2) To his(2))
							Case "7"
								ReDim macro_variables_long_array_2d_7(lows(1) To his(1),lows(2) To his(2))
							Case "8"
								ReDim macro_variables_long_array_2d_8(lows(1) To his(1),lows(2) To his(2))
							Case "9"
								ReDim macro_variables_long_array_2d_9(lows(1) To his(1),lows(2) To his(2))
						End Select
					Else
						macro_variables_info(variable_number,5)="2d"
						macro_variables_long_array_2d_c+=1
						macro_variables_info(variable_number,3)=LTrim(RTrim(Str(macro_variables_long_array_2d_c)))
						macro_variables_info(variable_number,7)=macro_variables_info(variable_number,3)
						Select Case macro_variables_long_array_2d_c
							Case 1
								ReDim macro_variables_long_array_2d_1(lows(1) To his(1),lows(2) To his(2))
							Case 2
								ReDim macro_variables_long_array_2d_2(lows(1) To his(1),lows(2) To his(2))
							Case 3
								ReDim macro_variables_long_array_2d_3(lows(1) To his(1),lows(2) To his(2))
							Case 4
								ReDim macro_variables_long_array_2d_4(lows(1) To his(1),lows(2) To his(2))
							Case 5
								ReDim macro_variables_long_array_2d_5(lows(1) To his(1),lows(2) To his(2))
							Case 6
								ReDim macro_variables_long_array_2d_6(lows(1) To his(1),lows(2) To his(2))
							Case 7
								ReDim macro_variables_long_array_2d_7(lows(1) To his(1),lows(2) To his(2))
							Case 8
								ReDim macro_variables_long_array_2d_8(lows(1) To his(1),lows(2) To his(2))
							Case 9
								ReDim macro_variables_long_array_2d_9(lows(1) To his(1),lows(2) To his(2))
						End Select
					EndIf
				EndIf
			EndIf
		Case 3 '3d
			ReDim lows(3),his(3)
			For i=1 To 3
				temp=temps(i)		
				If InStr(temp," to ") Then
					x=InStr(temp," to ")
					lows(i)=CInt(Left(temp,x-1))
					his(i)=CInt(Mid(temp,x+4))
				Else
					lows(i)=0
					his(i)=CInt(temp)
				EndIf
			Next
			If dim_params="redim" And macro_variables_info(variable_number,5)="3d" Then
				Select Case macro_variables_info(variable_number,3)
					Case "1"
						ReDim macro_variables_long_array_3d_1(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "2"
						ReDim macro_variables_long_array_3d_2(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "3"
						ReDim macro_variables_long_array_3d_3(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "4"
						ReDim macro_variables_long_array_3d_4(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "5"
						ReDim macro_variables_long_array_3d_5(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "6"
						ReDim macro_variables_long_array_3d_6(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "7"
						ReDim macro_variables_long_array_3d_7(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "8"
						ReDim macro_variables_long_array_3d_8(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "9"
						ReDim macro_variables_long_array_3d_9(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
				End Select
			Else
				If dim_params="redim preserve" And macro_variables_info(variable_number,5)="3d" Then
					Select Case macro_variables_info(variable_number,3)
						Case "1"
							ReDim Preserve macro_variables_long_array_3d_1(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "2"
							ReDim Preserve macro_variables_long_array_3d_2(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "3"
							ReDim Preserve macro_variables_long_array_3d_3(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "4"
							ReDim Preserve macro_variables_long_array_3d_4(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "5"
							ReDim Preserve macro_variables_long_array_3d_5(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "6"
							ReDim Preserve macro_variables_long_array_3d_6(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "7"
							ReDim Preserve macro_variables_long_array_3d_7(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "8"
							ReDim Preserve macro_variables_long_array_3d_8(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "9"
							ReDim Preserve macro_variables_long_array_3d_9(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					End Select
				Else
					If macro_variables_info(variable_number,8)<>"" Then
						Select Case macro_variables_info(variable_number,8)
							Case "1"
								ReDim macro_variables_long_array_3d_1(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "2"
								ReDim macro_variables_long_array_3d_2(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "3"
								ReDim macro_variables_long_array_3d_3(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "4"
								ReDim macro_variables_long_array_3d_4(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "5"
								ReDim macro_variables_long_array_3d_5(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "6"
								ReDim macro_variables_long_array_3d_6(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "7"
								ReDim macro_variables_long_array_3d_7(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "8"
								ReDim macro_variables_long_array_3d_8(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "9"
								ReDim macro_variables_long_array_3d_9(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						End Select
					Else
						macro_variables_info(variable_number,5)="3d"
						macro_variables_long_array_3d_c+=1
						macro_variables_info(variable_number,3)=LTrim(RTrim(Str(macro_variables_long_array_3d_c)))
						macro_variables_info(variable_number,8)=macro_variables_info(variable_number,3)
						Select Case macro_variables_long_array_3d_c
							Case 1
								ReDim macro_variables_long_array_3d_1(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 2
								ReDim macro_variables_long_array_3d_2(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 3
								ReDim macro_variables_long_array_3d_3(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 4
								ReDim macro_variables_long_array_3d_4(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 5
								ReDim macro_variables_long_array_3d_5(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 6
								ReDim macro_variables_long_array_3d_6(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 7
								ReDim macro_variables_long_array_3d_7(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 8
								ReDim macro_variables_long_array_3d_8(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 9
								ReDim macro_variables_long_array_3d_9(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						End Select
					EndIf
				EndIf
			EndIf
	End Select
End Sub

Sub dim_ulong_array(variable_number As Integer,c As Integer,temp As String,temps() As String)
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Sub dim_ulong_array"
		Print #5,"variable_number:";variable_number
		Print #5,"c:";c
		Print #5,"temp:";temp
		For dbugi=LBound(temps) To UBound(temps)
			Print #5,"temps("; dbugi; "):"; temps(dbugi)
		Next
		Print #5,"---------------"
	EndIf
	Dim As Integer i,x,low,hi,lows(),his()
	Select Case c
		Case 0 'undefined array depth, to be defined via redim
			macro_variables_info(variable_number,5)="pending array depth"
		Case 1 '1d
			If InStr(temp," to ") Then
				x=InStr(temp," to ")
				low=CInt(Left(temp,x-1))
				hi=CInt(Mid(temp,x+4))
			Else
				low=0
				hi=CInt(temp)
			EndIf
			If dim_params="redim" And macro_variables_info(variable_number,5)="1d" Then
				Select Case macro_variables_info(variable_number,3)
					Case "1"
						ReDim macro_variables_ulong_array_1d_1(low To hi)
					Case "2"
						ReDim macro_variables_ulong_array_1d_2(low To hi)
					Case "3"
						ReDim macro_variables_ulong_array_1d_3(low To hi)
					Case "4"
						ReDim macro_variables_ulong_array_1d_4(low To hi)
					Case "5"
						ReDim macro_variables_ulong_array_1d_5(low To hi)
					Case "6"
						ReDim macro_variables_ulong_array_1d_6(low To hi)
					Case "7"
						ReDim macro_variables_ulong_array_1d_7(low To hi)
					Case "8"
						ReDim macro_variables_ulong_array_1d_8(low To hi)
					Case "9"
						ReDim macro_variables_ulong_array_1d_9(low To hi)
				End Select
			Else
				If dim_params="redim preserve" And macro_variables_info(variable_number,5)="1d" Then
					Select Case macro_variables_info(variable_number,3)
						Case "1"
							ReDim Preserve macro_variables_ulong_array_1d_1(low To hi)
						Case "2"
							ReDim Preserve macro_variables_ulong_array_1d_2(low To hi)
						Case "3"
							ReDim Preserve macro_variables_ulong_array_1d_3(low To hi)
						Case "4"
							ReDim Preserve macro_variables_ulong_array_1d_4(low To hi)
						Case "5"
							ReDim Preserve macro_variables_ulong_array_1d_5(low To hi)
						Case "6"
							ReDim Preserve macro_variables_ulong_array_1d_6(low To hi)
						Case "7"
							ReDim Preserve macro_variables_ulong_array_1d_7(low To hi)
						Case "8"
							ReDim Preserve macro_variables_ulong_array_1d_8(low To hi)
						Case "9"
							ReDim Preserve macro_variables_ulong_array_1d_9(low To hi)
					End Select
				Else
					If macro_variables_info(variable_number,6)<>"" Then
						Select Case macro_variables_info(variable_number,6)
							Case "1"
								ReDim macro_variables_ulong_array_1d_1(low To hi)
							Case "2"
								ReDim macro_variables_ulong_array_1d_2(low To hi)
							Case "3"
								ReDim macro_variables_ulong_array_1d_3(low To hi)
							Case "4"
								ReDim macro_variables_ulong_array_1d_4(low To hi)
							Case "5"
								ReDim macro_variables_ulong_array_1d_5(low To hi)
							Case "6"
								ReDim macro_variables_ulong_array_1d_6(low To hi)
							Case "7"
								ReDim macro_variables_ulong_array_1d_7(low To hi)
							Case "8"
								ReDim macro_variables_ulong_array_1d_8(low To hi)
							Case "9"
								ReDim macro_variables_ulong_array_1d_9(low To hi)
						End Select
					Else
						macro_variables_info(variable_number,5)="1d"
						macro_variables_ulong_array_1d_c+=1
						macro_variables_info(variable_number,3)=LTrim(RTrim(Str(macro_variables_ulong_array_1d_c)))
						macro_variables_info(variable_number,6)=macro_variables_info(variable_number,3)
						Select Case macro_variables_ulong_array_1d_c
							Case 1
								ReDim macro_variables_ulong_array_1d_1(low To hi)
							Case 2
								ReDim macro_variables_ulong_array_1d_2(low To hi)
							Case 3
								ReDim macro_variables_ulong_array_1d_3(low To hi)
							Case 4
								ReDim macro_variables_ulong_array_1d_4(low To hi)
							Case 5
								ReDim macro_variables_ulong_array_1d_5(low To hi)
							Case 6
								ReDim macro_variables_ulong_array_1d_6(low To hi)
							Case 7
								ReDim macro_variables_ulong_array_1d_7(low To hi)
							Case 8
								ReDim macro_variables_ulong_array_1d_8(low To hi)
							Case 9
								ReDim macro_variables_ulong_array_1d_9(low To hi)
						End Select
					EndIf
				EndIf
			EndIf
		Case 2 '2d
			ReDim lows(2),his(2)
			For i=1 To 2
				temp=temps(i)		
				If InStr(temp," to ") Then
					x=InStr(temp," to ")
					lows(i)=CInt(Left(temp,x-1))
					his(i)=CInt(Mid(temp,x+4))
				Else
					lows(i)=0
					his(i)=CInt(temp)
				EndIf
			Next
			If dim_params="redim" And macro_variables_info(variable_number,5)="2d" Then
				Select Case macro_variables_info(variable_number,3)
					Case "1"
						ReDim macro_variables_ulong_array_2d_1(lows(1) To his(1),lows(2) To his(2))
					Case "2"
						ReDim macro_variables_ulong_array_2d_2(lows(1) To his(1),lows(2) To his(2))
					Case "3"
						ReDim macro_variables_ulong_array_2d_3(lows(1) To his(1),lows(2) To his(2))
					Case "4"
						ReDim macro_variables_ulong_array_2d_4(lows(1) To his(1),lows(2) To his(2))
					Case "5"
						ReDim macro_variables_ulong_array_2d_5(lows(1) To his(1),lows(2) To his(2))
					Case "6"
						ReDim macro_variables_ulong_array_2d_6(lows(1) To his(1),lows(2) To his(2))
					Case "7"
						ReDim macro_variables_ulong_array_2d_7(lows(1) To his(1),lows(2) To his(2))
					Case "8"
						ReDim macro_variables_ulong_array_2d_8(lows(1) To his(1),lows(2) To his(2))
					Case "9"
						ReDim macro_variables_ulong_array_2d_9(lows(1) To his(1),lows(2) To his(2))
				End Select
			Else
				If dim_params="redim preserve" And macro_variables_info(variable_number,5)="2d" Then
					Select Case macro_variables_info(variable_number,3)
						Case "1"
							ReDim Preserve macro_variables_ulong_array_2d_1(lows(1) To his(1),lows(2) To his(2))
						Case "2"
							ReDim Preserve macro_variables_ulong_array_2d_2(lows(1) To his(1),lows(2) To his(2))
						Case "3"
							ReDim Preserve macro_variables_ulong_array_2d_3(lows(1) To his(1),lows(2) To his(2))
						Case "4"
							ReDim Preserve macro_variables_ulong_array_2d_4(lows(1) To his(1),lows(2) To his(2))
						Case "5"
							ReDim Preserve macro_variables_ulong_array_2d_5(lows(1) To his(1),lows(2) To his(2))
						Case "6"
							ReDim Preserve macro_variables_ulong_array_2d_6(lows(1) To his(1),lows(2) To his(2))
						Case "7"
							ReDim Preserve macro_variables_ulong_array_2d_7(lows(1) To his(1),lows(2) To his(2))
						Case "8"
							ReDim Preserve macro_variables_ulong_array_2d_8(lows(1) To his(1),lows(2) To his(2))
						Case "9"
							ReDim Preserve macro_variables_ulong_array_2d_9(lows(1) To his(1),lows(2) To his(2))
					End Select
				Else
					If macro_variables_info(variable_number,7)<>"" Then
						Select Case macro_variables_info(variable_number,7)
							Case "1"
								ReDim macro_variables_ulong_array_2d_1(lows(1) To his(1),lows(2) To his(2))
							Case "2"
								ReDim macro_variables_ulong_array_2d_2(lows(1) To his(1),lows(2) To his(2))
							Case "3"
								ReDim macro_variables_ulong_array_2d_3(lows(1) To his(1),lows(2) To his(2))
							Case "4"
								ReDim macro_variables_ulong_array_2d_4(lows(1) To his(1),lows(2) To his(2))
							Case "5"
								ReDim macro_variables_ulong_array_2d_5(lows(1) To his(1),lows(2) To his(2))
							Case "6"
								ReDim macro_variables_ulong_array_2d_6(lows(1) To his(1),lows(2) To his(2))
							Case "7"
								ReDim macro_variables_ulong_array_2d_7(lows(1) To his(1),lows(2) To his(2))
							Case "8"
								ReDim macro_variables_ulong_array_2d_8(lows(1) To his(1),lows(2) To his(2))
							Case "9"
								ReDim macro_variables_ulong_array_2d_9(lows(1) To his(1),lows(2) To his(2))
						End Select
					Else
						macro_variables_info(variable_number,5)="2d"
						macro_variables_ulong_array_2d_c+=1
						macro_variables_info(variable_number,3)=LTrim(RTrim(Str(macro_variables_ulong_array_2d_c)))
						macro_variables_info(variable_number,7)=macro_variables_info(variable_number,3)
						Select Case macro_variables_ulong_array_2d_c
							Case 1
								ReDim macro_variables_ulong_array_2d_1(lows(1) To his(1),lows(2) To his(2))
							Case 2
								ReDim macro_variables_ulong_array_2d_2(lows(1) To his(1),lows(2) To his(2))
							Case 3
								ReDim macro_variables_ulong_array_2d_3(lows(1) To his(1),lows(2) To his(2))
							Case 4
								ReDim macro_variables_ulong_array_2d_4(lows(1) To his(1),lows(2) To his(2))
							Case 5
								ReDim macro_variables_ulong_array_2d_5(lows(1) To his(1),lows(2) To his(2))
							Case 6
								ReDim macro_variables_ulong_array_2d_6(lows(1) To his(1),lows(2) To his(2))
							Case 7
								ReDim macro_variables_ulong_array_2d_7(lows(1) To his(1),lows(2) To his(2))
							Case 8
								ReDim macro_variables_ulong_array_2d_8(lows(1) To his(1),lows(2) To his(2))
							Case 9
								ReDim macro_variables_ulong_array_2d_9(lows(1) To his(1),lows(2) To his(2))
						End Select
					EndIf
				EndIf
			EndIf
		Case 3 '3d
			ReDim lows(3),his(3)
			For i=1 To 3
				temp=temps(i)		
				If InStr(temp," to ") Then
					x=InStr(temp," to ")
					lows(i)=CInt(Left(temp,x-1))
					his(i)=CInt(Mid(temp,x+4))
				Else
					lows(i)=0
					his(i)=CInt(temp)
				EndIf
			Next
			If dim_params="redim" And macro_variables_info(variable_number,5)="3d" Then
				Select Case macro_variables_info(variable_number,3)
					Case "1"
						ReDim macro_variables_ulong_array_3d_1(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "2"
						ReDim macro_variables_ulong_array_3d_2(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "3"
						ReDim macro_variables_ulong_array_3d_3(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "4"
						ReDim macro_variables_ulong_array_3d_4(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "5"
						ReDim macro_variables_ulong_array_3d_5(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "6"
						ReDim macro_variables_ulong_array_3d_6(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "7"
						ReDim macro_variables_ulong_array_3d_7(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "8"
						ReDim macro_variables_ulong_array_3d_8(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "9"
						ReDim macro_variables_ulong_array_3d_9(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
				End Select
			Else
				If dim_params="redim preserve" And macro_variables_info(variable_number,5)="3d" Then
					Select Case macro_variables_info(variable_number,3)
						Case "1"
							ReDim Preserve macro_variables_ulong_array_3d_1(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "2"
							ReDim Preserve macro_variables_ulong_array_3d_2(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "3"
							ReDim Preserve macro_variables_ulong_array_3d_3(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "4"
							ReDim Preserve macro_variables_ulong_array_3d_4(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "5"
							ReDim Preserve macro_variables_ulong_array_3d_5(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "6"
							ReDim Preserve macro_variables_ulong_array_3d_6(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "7"
							ReDim Preserve macro_variables_ulong_array_3d_7(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "8"
							ReDim Preserve macro_variables_ulong_array_3d_8(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "9"
							ReDim Preserve macro_variables_ulong_array_3d_9(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					End Select
				Else
					If macro_variables_info(variable_number,8)<>"" Then
						Select Case macro_variables_info(variable_number,8)
							Case "1"
								ReDim macro_variables_ulong_array_3d_1(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "2"
								ReDim macro_variables_ulong_array_3d_2(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "3"
								ReDim macro_variables_ulong_array_3d_3(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "4"
								ReDim macro_variables_ulong_array_3d_4(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "5"
								ReDim macro_variables_ulong_array_3d_5(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "6"
								ReDim macro_variables_ulong_array_3d_6(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "7"
								ReDim macro_variables_ulong_array_3d_7(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "8"
								ReDim macro_variables_ulong_array_3d_8(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "9"
								ReDim macro_variables_ulong_array_3d_9(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						End Select
					Else
						macro_variables_info(variable_number,5)="3d"
						macro_variables_ulong_array_3d_c+=1
						macro_variables_info(variable_number,3)=LTrim(RTrim(Str(macro_variables_ulong_array_3d_c)))
						macro_variables_info(variable_number,8)=macro_variables_info(variable_number,3)
						Select Case macro_variables_ulong_array_3d_c
							Case 1
								ReDim macro_variables_ulong_array_3d_1(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 2
								ReDim macro_variables_ulong_array_3d_2(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 3
								ReDim macro_variables_ulong_array_3d_3(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 4
								ReDim macro_variables_ulong_array_3d_4(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 5
								ReDim macro_variables_ulong_array_3d_5(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 6
								ReDim macro_variables_ulong_array_3d_6(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 7
								ReDim macro_variables_ulong_array_3d_7(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 8
								ReDim macro_variables_ulong_array_3d_8(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 9
								ReDim macro_variables_ulong_array_3d_9(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						End Select
					EndIf
				EndIf
			EndIf
	End Select
End Sub

Sub dim_integer_array(variable_number As Integer,c As Integer,temp As String,temps() As String)
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Sub dim_integer_array"
		Print #5,"variable_number:";variable_number
		Print #5,"c:";c
		Print #5,"temp:";temp
		For dbugi=LBound(temps) To UBound(temps)
			Print #5,"temps("; dbugi; "):"; temps(dbugi)
		Next
		Print #5,"---------------"
	EndIf
	Dim As Integer i,x,low,hi,lows(),his()
	Select Case c
		Case 0 'undefined array depth, to be defined via redim
			macro_variables_info(variable_number,5)="pending array depth"
		Case 1 '1d
			If InStr(temp," to ") Then
				x=InStr(temp," to ")
				low=CInt(Left(temp,x-1))
				hi=CInt(Mid(temp,x+4))
			Else
				low=0
				hi=CInt(temp)
			EndIf
			If dim_params="redim" And macro_variables_info(variable_number,5)="1d" Then
				Select Case macro_variables_info(variable_number,3)
					Case "1"
						ReDim macro_variables_integer_array_1d_1(low To hi)
					Case "2"
						ReDim macro_variables_integer_array_1d_2(low To hi)
					Case "3"
						ReDim macro_variables_integer_array_1d_3(low To hi)
					Case "4"
						ReDim macro_variables_integer_array_1d_4(low To hi)
					Case "5"
						ReDim macro_variables_integer_array_1d_5(low To hi)
					Case "6"
						ReDim macro_variables_integer_array_1d_6(low To hi)
					Case "7"
						ReDim macro_variables_integer_array_1d_7(low To hi)
					Case "8"
						ReDim macro_variables_integer_array_1d_8(low To hi)
					Case "9"
						ReDim macro_variables_integer_array_1d_9(low To hi)
				End Select
			Else
				If dim_params="redim preserve" And macro_variables_info(variable_number,5)="1d" Then
					Select Case macro_variables_info(variable_number,3)
						Case "1"
							ReDim Preserve macro_variables_integer_array_1d_1(low To hi)
						Case "2"
							ReDim Preserve macro_variables_integer_array_1d_2(low To hi)
						Case "3"
							ReDim Preserve macro_variables_integer_array_1d_3(low To hi)
						Case "4"
							ReDim Preserve macro_variables_integer_array_1d_4(low To hi)
						Case "5"
							ReDim Preserve macro_variables_integer_array_1d_5(low To hi)
						Case "6"
							ReDim Preserve macro_variables_integer_array_1d_6(low To hi)
						Case "7"
							ReDim Preserve macro_variables_integer_array_1d_7(low To hi)
						Case "8"
							ReDim Preserve macro_variables_integer_array_1d_8(low To hi)
						Case "9"
							ReDim Preserve macro_variables_integer_array_1d_9(low To hi)
					End Select
				Else
					If macro_variables_info(variable_number,6)<>"" Then
						Select Case macro_variables_info(variable_number,6)
							Case "1"
								ReDim macro_variables_integer_array_1d_1(low To hi)
							Case "2"
								ReDim macro_variables_integer_array_1d_2(low To hi)
							Case "3"
								ReDim macro_variables_integer_array_1d_3(low To hi)
							Case "4"
								ReDim macro_variables_integer_array_1d_4(low To hi)
							Case "5"
								ReDim macro_variables_integer_array_1d_5(low To hi)
							Case "6"
								ReDim macro_variables_integer_array_1d_6(low To hi)
							Case "7"
								ReDim macro_variables_integer_array_1d_7(low To hi)
							Case "8"
								ReDim macro_variables_integer_array_1d_8(low To hi)
							Case "9"
								ReDim macro_variables_integer_array_1d_9(low To hi)
						End Select
					Else
						macro_variables_info(variable_number,5)="1d"
						macro_variables_integer_array_1d_c+=1
						macro_variables_info(variable_number,3)=LTrim(RTrim(Str(macro_variables_integer_array_1d_c)))
						macro_variables_info(variable_number,6)=macro_variables_info(variable_number,3)
						Select Case macro_variables_integer_array_1d_c
							Case 1
								ReDim macro_variables_integer_array_1d_1(low To hi)
							Case 2
								ReDim macro_variables_integer_array_1d_2(low To hi)
							Case 3
								ReDim macro_variables_integer_array_1d_3(low To hi)
							Case 4
								ReDim macro_variables_integer_array_1d_4(low To hi)
							Case 5
								ReDim macro_variables_integer_array_1d_5(low To hi)
							Case 6
								ReDim macro_variables_integer_array_1d_6(low To hi)
							Case 7
								ReDim macro_variables_integer_array_1d_7(low To hi)
							Case 8
								ReDim macro_variables_integer_array_1d_8(low To hi)
							Case 9
								ReDim macro_variables_integer_array_1d_9(low To hi)
						End Select
					EndIf
				EndIf
			EndIf
		Case 2 '2d
			ReDim lows(2),his(2)
			For i=1 To 2
				temp=temps(i)		
				If InStr(temp," to ") Then
					x=InStr(temp," to ")
					lows(i)=CInt(Left(temp,x-1))
					his(i)=CInt(Mid(temp,x+4))
				Else
					lows(i)=0
					his(i)=CInt(temp)
				EndIf
			Next
			If dim_params="redim" And macro_variables_info(variable_number,5)="2d" Then
				Select Case macro_variables_info(variable_number,3)
					Case "1"
						ReDim macro_variables_integer_array_2d_1(lows(1) To his(1),lows(2) To his(2))
					Case "2"
						ReDim macro_variables_integer_array_2d_2(lows(1) To his(1),lows(2) To his(2))
					Case "3"
						ReDim macro_variables_integer_array_2d_3(lows(1) To his(1),lows(2) To his(2))
					Case "4"
						ReDim macro_variables_integer_array_2d_4(lows(1) To his(1),lows(2) To his(2))
					Case "5"
						ReDim macro_variables_integer_array_2d_5(lows(1) To his(1),lows(2) To his(2))
					Case "6"
						ReDim macro_variables_integer_array_2d_6(lows(1) To his(1),lows(2) To his(2))
					Case "7"
						ReDim macro_variables_integer_array_2d_7(lows(1) To his(1),lows(2) To his(2))
					Case "8"
						ReDim macro_variables_integer_array_2d_8(lows(1) To his(1),lows(2) To his(2))
					Case "9"
						ReDim macro_variables_integer_array_2d_9(lows(1) To his(1),lows(2) To his(2))
				End Select
			Else
				If dim_params="redim preserve" And macro_variables_info(variable_number,5)="2d" Then
					Select Case macro_variables_info(variable_number,3)
						Case "1"
							ReDim Preserve macro_variables_integer_array_2d_1(lows(1) To his(1),lows(2) To his(2))
						Case "2"
							ReDim Preserve macro_variables_integer_array_2d_2(lows(1) To his(1),lows(2) To his(2))
						Case "3"
							ReDim Preserve macro_variables_integer_array_2d_3(lows(1) To his(1),lows(2) To his(2))
						Case "4"
							ReDim Preserve macro_variables_integer_array_2d_4(lows(1) To his(1),lows(2) To his(2))
						Case "5"
							ReDim Preserve macro_variables_integer_array_2d_5(lows(1) To his(1),lows(2) To his(2))
						Case "6"
							ReDim Preserve macro_variables_integer_array_2d_6(lows(1) To his(1),lows(2) To his(2))
						Case "7"
							ReDim Preserve macro_variables_integer_array_2d_7(lows(1) To his(1),lows(2) To his(2))
						Case "8"
							ReDim Preserve macro_variables_integer_array_2d_8(lows(1) To his(1),lows(2) To his(2))
						Case "9"
							ReDim Preserve macro_variables_integer_array_2d_9(lows(1) To his(1),lows(2) To his(2))
					End Select
				Else
					If macro_variables_info(variable_number,7)<>"" Then
						Select Case macro_variables_info(variable_number,7)
							Case "1"
								ReDim macro_variables_integer_array_2d_1(lows(1) To his(1),lows(2) To his(2))
							Case "2"
								ReDim macro_variables_integer_array_2d_2(lows(1) To his(1),lows(2) To his(2))
							Case "3"
								ReDim macro_variables_integer_array_2d_3(lows(1) To his(1),lows(2) To his(2))
							Case "4"
								ReDim macro_variables_integer_array_2d_4(lows(1) To his(1),lows(2) To his(2))
							Case "5"
								ReDim macro_variables_integer_array_2d_5(lows(1) To his(1),lows(2) To his(2))
							Case "6"
								ReDim macro_variables_integer_array_2d_6(lows(1) To his(1),lows(2) To his(2))
							Case "7"
								ReDim macro_variables_integer_array_2d_7(lows(1) To his(1),lows(2) To his(2))
							Case "8"
								ReDim macro_variables_integer_array_2d_8(lows(1) To his(1),lows(2) To his(2))
							Case "9"
								ReDim macro_variables_integer_array_2d_9(lows(1) To his(1),lows(2) To his(2))
						End Select
					Else
						macro_variables_info(variable_number,5)="2d"
						macro_variables_integer_array_2d_c+=1
						macro_variables_info(variable_number,3)=LTrim(RTrim(Str(macro_variables_integer_array_2d_c)))
						macro_variables_info(variable_number,7)=macro_variables_info(variable_number,3)
						Select Case macro_variables_integer_array_2d_c
							Case 1
								ReDim macro_variables_integer_array_2d_1(lows(1) To his(1),lows(2) To his(2))
							Case 2
								ReDim macro_variables_integer_array_2d_2(lows(1) To his(1),lows(2) To his(2))
							Case 3
								ReDim macro_variables_integer_array_2d_3(lows(1) To his(1),lows(2) To his(2))
							Case 4
								ReDim macro_variables_integer_array_2d_4(lows(1) To his(1),lows(2) To his(2))
							Case 5
								ReDim macro_variables_integer_array_2d_5(lows(1) To his(1),lows(2) To his(2))
							Case 6
								ReDim macro_variables_integer_array_2d_6(lows(1) To his(1),lows(2) To his(2))
							Case 7
								ReDim macro_variables_integer_array_2d_7(lows(1) To his(1),lows(2) To his(2))
							Case 8
								ReDim macro_variables_integer_array_2d_8(lows(1) To his(1),lows(2) To his(2))
							Case 9
								ReDim macro_variables_integer_array_2d_9(lows(1) To his(1),lows(2) To his(2))
						End Select
					EndIf
				EndIf
			EndIf
		Case 3 '3d
			ReDim lows(3),his(3)
			For i=1 To 3
				temp=temps(i)		
				If InStr(temp," to ") Then
					x=InStr(temp," to ")
					lows(i)=CInt(Left(temp,x-1))
					his(i)=CInt(Mid(temp,x+4))
				Else
					lows(i)=0
					his(i)=CInt(temp)
				EndIf
			Next
			If dim_params="redim" And macro_variables_info(variable_number,5)="3d" Then
				Select Case macro_variables_info(variable_number,3)
					Case "1"
						ReDim macro_variables_integer_array_3d_1(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "2"
						ReDim macro_variables_integer_array_3d_2(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "3"
						ReDim macro_variables_integer_array_3d_3(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "4"
						ReDim macro_variables_integer_array_3d_4(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "5"
						ReDim macro_variables_integer_array_3d_5(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "6"
						ReDim macro_variables_integer_array_3d_6(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "7"
						ReDim macro_variables_integer_array_3d_7(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "8"
						ReDim macro_variables_integer_array_3d_8(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "9"
						ReDim macro_variables_integer_array_3d_9(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
				End Select
			Else
				If dim_params="redim preserve" And macro_variables_info(variable_number,5)="3d" Then
					Select Case macro_variables_info(variable_number,3)
						Case "1"
							ReDim Preserve macro_variables_integer_array_3d_1(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "2"
							ReDim Preserve macro_variables_integer_array_3d_2(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "3"
							ReDim Preserve macro_variables_integer_array_3d_3(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "4"
							ReDim Preserve macro_variables_integer_array_3d_4(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "5"
							ReDim Preserve macro_variables_integer_array_3d_5(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "6"
							ReDim Preserve macro_variables_integer_array_3d_6(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "7"
							ReDim Preserve macro_variables_integer_array_3d_7(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "8"
							ReDim Preserve macro_variables_integer_array_3d_8(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "9"
							ReDim Preserve macro_variables_integer_array_3d_9(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					End Select
				Else
					If macro_variables_info(variable_number,8)<>"" Then
						Select Case macro_variables_info(variable_number,8)
							Case "1"
								ReDim macro_variables_integer_array_3d_1(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "2"
								ReDim macro_variables_integer_array_3d_2(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "3"
								ReDim macro_variables_integer_array_3d_3(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "4"
								ReDim macro_variables_integer_array_3d_4(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "5"
								ReDim macro_variables_integer_array_3d_5(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "6"
								ReDim macro_variables_integer_array_3d_6(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "7"
								ReDim macro_variables_integer_array_3d_7(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "8"
								ReDim macro_variables_integer_array_3d_8(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "9"
								ReDim macro_variables_integer_array_3d_9(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						End Select
					Else
						macro_variables_info(variable_number,5)="3d"
						macro_variables_integer_array_3d_c+=1
						macro_variables_info(variable_number,3)=LTrim(RTrim(Str(macro_variables_integer_array_3d_c)))
						macro_variables_info(variable_number,8)=macro_variables_info(variable_number,3)
						Select Case macro_variables_integer_array_3d_c
							Case 1
								ReDim macro_variables_integer_array_3d_1(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 2
								ReDim macro_variables_integer_array_3d_2(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 3
								ReDim macro_variables_integer_array_3d_3(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 4
								ReDim macro_variables_integer_array_3d_4(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 5
								ReDim macro_variables_integer_array_3d_5(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 6
								ReDim macro_variables_integer_array_3d_6(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 7
								ReDim macro_variables_integer_array_3d_7(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 8
								ReDim macro_variables_integer_array_3d_8(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 9
								ReDim macro_variables_integer_array_3d_9(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						End Select
					EndIf
				EndIf
			EndIf
	End Select
End Sub

Sub dim_uinteger_array(variable_number As Integer,c As Integer,temp As String,temps() As String)
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Sub dim_uinteger_array"
		Print #5,"variable_number:";variable_number
		Print #5,"c:";c
		Print #5,"temp:";temp
		For dbugi=LBound(temps) To UBound(temps)
			Print #5,"temps("; dbugi; "):"; temps(dbugi)
		Next
		Print #5,"---------------"
	EndIf
	Dim As Integer i,x,low,hi,lows(),his()
	Select Case c
		Case 0 'undefined array depth, to be defined via redim
			macro_variables_info(variable_number,5)="pending array depth"
		Case 1 '1d
			If InStr(temp," to ") Then
				x=InStr(temp," to ")
				low=CInt(Left(temp,x-1))
				hi=CInt(Mid(temp,x+4))
			Else
				low=0
				hi=CInt(temp)
			EndIf
			If dim_params="redim" And macro_variables_info(variable_number,5)="1d" Then
				Select Case macro_variables_info(variable_number,3)
					Case "1"
						ReDim macro_variables_uinteger_array_1d_1(low To hi)
					Case "2"
						ReDim macro_variables_uinteger_array_1d_2(low To hi)
					Case "3"
						ReDim macro_variables_uinteger_array_1d_3(low To hi)
					Case "4"
						ReDim macro_variables_uinteger_array_1d_4(low To hi)
					Case "5"
						ReDim macro_variables_uinteger_array_1d_5(low To hi)
					Case "6"
						ReDim macro_variables_uinteger_array_1d_6(low To hi)
					Case "7"
						ReDim macro_variables_uinteger_array_1d_7(low To hi)
					Case "8"
						ReDim macro_variables_uinteger_array_1d_8(low To hi)
					Case "9"
						ReDim macro_variables_uinteger_array_1d_9(low To hi)
				End Select
			Else
				If dim_params="redim preserve" And macro_variables_info(variable_number,5)="1d" Then
					Select Case macro_variables_info(variable_number,3)
						Case "1"
							ReDim Preserve macro_variables_uinteger_array_1d_1(low To hi)
						Case "2"
							ReDim Preserve macro_variables_uinteger_array_1d_2(low To hi)
						Case "3"
							ReDim Preserve macro_variables_uinteger_array_1d_3(low To hi)
						Case "4"
							ReDim Preserve macro_variables_uinteger_array_1d_4(low To hi)
						Case "5"
							ReDim Preserve macro_variables_uinteger_array_1d_5(low To hi)
						Case "6"
							ReDim Preserve macro_variables_uinteger_array_1d_6(low To hi)
						Case "7"
							ReDim Preserve macro_variables_uinteger_array_1d_7(low To hi)
						Case "8"
							ReDim Preserve macro_variables_uinteger_array_1d_8(low To hi)
						Case "9"
							ReDim Preserve macro_variables_uinteger_array_1d_9(low To hi)
					End Select
				Else
					If macro_variables_info(variable_number,6)<>"" Then
						Select Case macro_variables_info(variable_number,6)
							Case "1"
								ReDim macro_variables_uinteger_array_1d_1(low To hi)
							Case "2"
								ReDim macro_variables_uinteger_array_1d_2(low To hi)
							Case "3"
								ReDim macro_variables_uinteger_array_1d_3(low To hi)
							Case "4"
								ReDim macro_variables_uinteger_array_1d_4(low To hi)
							Case "5"
								ReDim macro_variables_uinteger_array_1d_5(low To hi)
							Case "6"
								ReDim macro_variables_uinteger_array_1d_6(low To hi)
							Case "7"
								ReDim macro_variables_uinteger_array_1d_7(low To hi)
							Case "8"
								ReDim macro_variables_uinteger_array_1d_8(low To hi)
							Case "9"
								ReDim macro_variables_uinteger_array_1d_9(low To hi)
						End Select
					Else
						macro_variables_info(variable_number,5)="1d"
						macro_variables_uinteger_array_1d_c+=1
						macro_variables_info(variable_number,3)=LTrim(RTrim(Str(macro_variables_uinteger_array_1d_c)))
						macro_variables_info(variable_number,6)=macro_variables_info(variable_number,3)
						Select Case macro_variables_uinteger_array_1d_c
							Case 1
								ReDim macro_variables_uinteger_array_1d_1(low To hi)
							Case 2
								ReDim macro_variables_uinteger_array_1d_2(low To hi)
							Case 3
								ReDim macro_variables_uinteger_array_1d_3(low To hi)
							Case 4
								ReDim macro_variables_uinteger_array_1d_4(low To hi)
							Case 5
								ReDim macro_variables_uinteger_array_1d_5(low To hi)
							Case 6
								ReDim macro_variables_uinteger_array_1d_6(low To hi)
							Case 7
								ReDim macro_variables_uinteger_array_1d_7(low To hi)
							Case 8
								ReDim macro_variables_uinteger_array_1d_8(low To hi)
							Case 9
								ReDim macro_variables_uinteger_array_1d_9(low To hi)
						End Select
					EndIf
				EndIf
			EndIf
		Case 2 '2d
			ReDim lows(2),his(2)
			For i=1 To 2
				temp=temps(i)		
				If InStr(temp," to ") Then
					x=InStr(temp," to ")
					lows(i)=CInt(Left(temp,x-1))
					his(i)=CInt(Mid(temp,x+4))
				Else
					lows(i)=0
					his(i)=CInt(temp)
				EndIf
			Next
			If dim_params="redim" And macro_variables_info(variable_number,5)="2d" Then
				Select Case macro_variables_info(variable_number,3)
					Case "1"
						ReDim macro_variables_uinteger_array_2d_1(lows(1) To his(1),lows(2) To his(2))
					Case "2"
						ReDim macro_variables_uinteger_array_2d_2(lows(1) To his(1),lows(2) To his(2))
					Case "3"
						ReDim macro_variables_uinteger_array_2d_3(lows(1) To his(1),lows(2) To his(2))
					Case "4"
						ReDim macro_variables_uinteger_array_2d_4(lows(1) To his(1),lows(2) To his(2))
					Case "5"
						ReDim macro_variables_uinteger_array_2d_5(lows(1) To his(1),lows(2) To his(2))
					Case "6"
						ReDim macro_variables_uinteger_array_2d_6(lows(1) To his(1),lows(2) To his(2))
					Case "7"
						ReDim macro_variables_uinteger_array_2d_7(lows(1) To his(1),lows(2) To his(2))
					Case "8"
						ReDim macro_variables_uinteger_array_2d_8(lows(1) To his(1),lows(2) To his(2))
					Case "9"
						ReDim macro_variables_uinteger_array_2d_9(lows(1) To his(1),lows(2) To his(2))
				End Select
			Else
				If dim_params="redim preserve" And macro_variables_info(variable_number,5)="2d" Then
					Select Case macro_variables_info(variable_number,3)
						Case "1"
							ReDim Preserve macro_variables_uinteger_array_2d_1(lows(1) To his(1),lows(2) To his(2))
						Case "2"
							ReDim Preserve macro_variables_uinteger_array_2d_2(lows(1) To his(1),lows(2) To his(2))
						Case "3"
							ReDim Preserve macro_variables_uinteger_array_2d_3(lows(1) To his(1),lows(2) To his(2))
						Case "4"
							ReDim Preserve macro_variables_uinteger_array_2d_4(lows(1) To his(1),lows(2) To his(2))
						Case "5"
							ReDim Preserve macro_variables_uinteger_array_2d_5(lows(1) To his(1),lows(2) To his(2))
						Case "6"
							ReDim Preserve macro_variables_uinteger_array_2d_6(lows(1) To his(1),lows(2) To his(2))
						Case "7"
							ReDim Preserve macro_variables_uinteger_array_2d_7(lows(1) To his(1),lows(2) To his(2))
						Case "8"
							ReDim Preserve macro_variables_uinteger_array_2d_8(lows(1) To his(1),lows(2) To his(2))
						Case "9"
							ReDim Preserve macro_variables_uinteger_array_2d_9(lows(1) To his(1),lows(2) To his(2))
					End Select
				Else
					If macro_variables_info(variable_number,7)<>"" Then
						Select Case macro_variables_info(variable_number,7)
							Case "1"
								ReDim macro_variables_uinteger_array_2d_1(lows(1) To his(1),lows(2) To his(2))
							Case "2"
								ReDim macro_variables_uinteger_array_2d_2(lows(1) To his(1),lows(2) To his(2))
							Case "3"
								ReDim macro_variables_uinteger_array_2d_3(lows(1) To his(1),lows(2) To his(2))
							Case "4"
								ReDim macro_variables_uinteger_array_2d_4(lows(1) To his(1),lows(2) To his(2))
							Case "5"
								ReDim macro_variables_uinteger_array_2d_5(lows(1) To his(1),lows(2) To his(2))
							Case "6"
								ReDim macro_variables_uinteger_array_2d_6(lows(1) To his(1),lows(2) To his(2))
							Case "7"
								ReDim macro_variables_uinteger_array_2d_7(lows(1) To his(1),lows(2) To his(2))
							Case "8"
								ReDim macro_variables_uinteger_array_2d_8(lows(1) To his(1),lows(2) To his(2))
							Case "9"
								ReDim macro_variables_uinteger_array_2d_9(lows(1) To his(1),lows(2) To his(2))
						End Select
					Else
						macro_variables_info(variable_number,5)="2d"
						macro_variables_uinteger_array_2d_c+=1
						macro_variables_info(variable_number,3)=LTrim(RTrim(Str(macro_variables_uinteger_array_2d_c)))
						macro_variables_info(variable_number,7)=macro_variables_info(variable_number,3)
						Select Case macro_variables_uinteger_array_2d_c
							Case 1
								ReDim macro_variables_uinteger_array_2d_1(lows(1) To his(1),lows(2) To his(2))
							Case 2
								ReDim macro_variables_uinteger_array_2d_2(lows(1) To his(1),lows(2) To his(2))
							Case 3
								ReDim macro_variables_uinteger_array_2d_3(lows(1) To his(1),lows(2) To his(2))
							Case 4
								ReDim macro_variables_uinteger_array_2d_4(lows(1) To his(1),lows(2) To his(2))
							Case 5
								ReDim macro_variables_uinteger_array_2d_5(lows(1) To his(1),lows(2) To his(2))
							Case 6
								ReDim macro_variables_uinteger_array_2d_6(lows(1) To his(1),lows(2) To his(2))
							Case 7
								ReDim macro_variables_uinteger_array_2d_7(lows(1) To his(1),lows(2) To his(2))
							Case 8
								ReDim macro_variables_uinteger_array_2d_8(lows(1) To his(1),lows(2) To his(2))
							Case 9
								ReDim macro_variables_uinteger_array_2d_9(lows(1) To his(1),lows(2) To his(2))
						End Select
					EndIf
				EndIf
			EndIf
		Case 3 '3d
			ReDim lows(3),his(3)
			For i=1 To 3
				temp=temps(i)		
				If InStr(temp," to ") Then
					x=InStr(temp," to ")
					lows(i)=CInt(Left(temp,x-1))
					his(i)=CInt(Mid(temp,x+4))
				Else
					lows(i)=0
					his(i)=CInt(temp)
				EndIf
			Next
			If dim_params="redim" And macro_variables_info(variable_number,5)="3d" Then
				Select Case macro_variables_info(variable_number,3)
					Case "1"
						ReDim macro_variables_uinteger_array_3d_1(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "2"
						ReDim macro_variables_uinteger_array_3d_2(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "3"
						ReDim macro_variables_uinteger_array_3d_3(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "4"
						ReDim macro_variables_uinteger_array_3d_4(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "5"
						ReDim macro_variables_uinteger_array_3d_5(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "6"
						ReDim macro_variables_uinteger_array_3d_6(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "7"
						ReDim macro_variables_uinteger_array_3d_7(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "8"
						ReDim macro_variables_uinteger_array_3d_8(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "9"
						ReDim macro_variables_uinteger_array_3d_9(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
				End Select
			Else
				If dim_params="redim preserve" And macro_variables_info(variable_number,5)="3d" Then
					Select Case macro_variables_info(variable_number,3)
						Case "1"
							ReDim Preserve macro_variables_uinteger_array_3d_1(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "2"
							ReDim Preserve macro_variables_uinteger_array_3d_2(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "3"
							ReDim Preserve macro_variables_uinteger_array_3d_3(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "4"
							ReDim Preserve macro_variables_uinteger_array_3d_4(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "5"
							ReDim Preserve macro_variables_uinteger_array_3d_5(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "6"
							ReDim Preserve macro_variables_uinteger_array_3d_6(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "7"
							ReDim Preserve macro_variables_uinteger_array_3d_7(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "8"
							ReDim Preserve macro_variables_uinteger_array_3d_8(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "9"
							ReDim Preserve macro_variables_uinteger_array_3d_9(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					End Select
				Else
					If macro_variables_info(variable_number,8)<>"" Then
						Select Case macro_variables_info(variable_number,8)
							Case "1"
								ReDim macro_variables_uinteger_array_3d_1(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "2"
								ReDim macro_variables_uinteger_array_3d_2(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "3"
								ReDim macro_variables_uinteger_array_3d_3(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "4"
								ReDim macro_variables_uinteger_array_3d_4(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "5"
								ReDim macro_variables_uinteger_array_3d_5(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "6"
								ReDim macro_variables_uinteger_array_3d_6(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "7"
								ReDim macro_variables_uinteger_array_3d_7(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "8"
								ReDim macro_variables_uinteger_array_3d_8(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "9"
								ReDim macro_variables_uinteger_array_3d_9(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						End Select
					Else
						macro_variables_info(variable_number,5)="3d"
						macro_variables_uinteger_array_3d_c+=1
						macro_variables_info(variable_number,3)=LTrim(RTrim(Str(macro_variables_uinteger_array_3d_c)))
						macro_variables_info(variable_number,8)=macro_variables_info(variable_number,3)
						Select Case macro_variables_uinteger_array_3d_c
							Case 1
								ReDim macro_variables_uinteger_array_3d_1(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 2
								ReDim macro_variables_uinteger_array_3d_2(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 3
								ReDim macro_variables_uinteger_array_3d_3(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 4
								ReDim macro_variables_uinteger_array_3d_4(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 5
								ReDim macro_variables_uinteger_array_3d_5(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 6
								ReDim macro_variables_uinteger_array_3d_6(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 7
								ReDim macro_variables_uinteger_array_3d_7(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 8
								ReDim macro_variables_uinteger_array_3d_8(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 9
								ReDim macro_variables_uinteger_array_3d_9(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						End Select
					EndIf
				EndIf
			EndIf
	End Select
End Sub

Sub dim_longint_array(variable_number As Integer,c As Integer,temp As String,temps() As String)
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Sub dim_longint_array"
		Print #5,"variable_number:";variable_number
		Print #5,"c:";c
		Print #5,"temp:";temp
		For dbugi=LBound(temps) To UBound(temps)
			Print #5,"temps("; dbugi; "):"; temps(dbugi)
		Next
		Print #5,"---------------"
	EndIf
	Dim As Integer i,x,low,hi,lows(),his()
	Select Case c
		Case 0 'undefined array depth, to be defined via redim
			macro_variables_info(variable_number,5)="pending array depth"
		Case 1 '1d
			If InStr(temp," to ") Then
				x=InStr(temp," to ")
				low=CInt(Left(temp,x-1))
				hi=CInt(Mid(temp,x+4))
			Else
				low=0
				hi=CInt(temp)
			EndIf
			If dim_params="redim" And macro_variables_info(variable_number,5)="1d" Then
				Select Case macro_variables_info(variable_number,3)
					Case "1"
						ReDim macro_variables_longint_array_1d_1(low To hi)
					Case "2"
						ReDim macro_variables_longint_array_1d_2(low To hi)
					Case "3"
						ReDim macro_variables_longint_array_1d_3(low To hi)
					Case "4"
						ReDim macro_variables_longint_array_1d_4(low To hi)
					Case "5"
						ReDim macro_variables_longint_array_1d_5(low To hi)
					Case "6"
						ReDim macro_variables_longint_array_1d_6(low To hi)
					Case "7"
						ReDim macro_variables_longint_array_1d_7(low To hi)
					Case "8"
						ReDim macro_variables_longint_array_1d_8(low To hi)
					Case "9"
						ReDim macro_variables_longint_array_1d_9(low To hi)
				End Select
			Else
				If dim_params="redim preserve" And macro_variables_info(variable_number,5)="1d" Then
					Select Case macro_variables_info(variable_number,3)
						Case "1"
							ReDim Preserve macro_variables_longint_array_1d_1(low To hi)
						Case "2"
							ReDim Preserve macro_variables_longint_array_1d_2(low To hi)
						Case "3"
							ReDim Preserve macro_variables_longint_array_1d_3(low To hi)
						Case "4"
							ReDim Preserve macro_variables_longint_array_1d_4(low To hi)
						Case "5"
							ReDim Preserve macro_variables_longint_array_1d_5(low To hi)
						Case "6"
							ReDim Preserve macro_variables_longint_array_1d_6(low To hi)
						Case "7"
							ReDim Preserve macro_variables_longint_array_1d_7(low To hi)
						Case "8"
							ReDim Preserve macro_variables_longint_array_1d_8(low To hi)
						Case "9"
							ReDim Preserve macro_variables_longint_array_1d_9(low To hi)
					End Select
				Else
					If macro_variables_info(variable_number,6)<>"" Then
						Select Case macro_variables_info(variable_number,6)
							Case "1"
								ReDim macro_variables_longint_array_1d_1(low To hi)
							Case "2"
								ReDim macro_variables_longint_array_1d_2(low To hi)
							Case "3"
								ReDim macro_variables_longint_array_1d_3(low To hi)
							Case "4"
								ReDim macro_variables_longint_array_1d_4(low To hi)
							Case "5"
								ReDim macro_variables_longint_array_1d_5(low To hi)
							Case "6"
								ReDim macro_variables_longint_array_1d_6(low To hi)
							Case "7"
								ReDim macro_variables_longint_array_1d_7(low To hi)
							Case "8"
								ReDim macro_variables_longint_array_1d_8(low To hi)
							Case "9"
								ReDim macro_variables_longint_array_1d_9(low To hi)
						End Select
					Else
						macro_variables_info(variable_number,5)="1d"
						macro_variables_longint_array_1d_c+=1
						macro_variables_info(variable_number,3)=LTrim(RTrim(Str(macro_variables_longint_array_1d_c)))
						macro_variables_info(variable_number,6)=macro_variables_info(variable_number,3)
						Select Case macro_variables_longint_array_1d_c
							Case 1
								ReDim macro_variables_longint_array_1d_1(low To hi)
							Case 2
								ReDim macro_variables_longint_array_1d_2(low To hi)
							Case 3
								ReDim macro_variables_longint_array_1d_3(low To hi)
							Case 4
								ReDim macro_variables_longint_array_1d_4(low To hi)
							Case 5
								ReDim macro_variables_longint_array_1d_5(low To hi)
							Case 6
								ReDim macro_variables_longint_array_1d_6(low To hi)
							Case 7
								ReDim macro_variables_longint_array_1d_7(low To hi)
							Case 8
								ReDim macro_variables_longint_array_1d_8(low To hi)
							Case 9
								ReDim macro_variables_longint_array_1d_9(low To hi)
						End Select
					EndIf
				EndIf
			EndIf
		Case 2 '2d
			ReDim lows(2),his(2)
			For i=1 To 2
				temp=temps(i)		
				If InStr(temp," to ") Then
					x=InStr(temp," to ")
					lows(i)=CInt(Left(temp,x-1))
					his(i)=CInt(Mid(temp,x+4))
				Else
					lows(i)=0
					his(i)=CInt(temp)
				EndIf
			Next
			If dim_params="redim" And macro_variables_info(variable_number,5)="2d" Then
				Select Case macro_variables_info(variable_number,3)
					Case "1"
						ReDim macro_variables_longint_array_2d_1(lows(1) To his(1),lows(2) To his(2))
					Case "2"
						ReDim macro_variables_longint_array_2d_2(lows(1) To his(1),lows(2) To his(2))
					Case "3"
						ReDim macro_variables_longint_array_2d_3(lows(1) To his(1),lows(2) To his(2))
					Case "4"
						ReDim macro_variables_longint_array_2d_4(lows(1) To his(1),lows(2) To his(2))
					Case "5"
						ReDim macro_variables_longint_array_2d_5(lows(1) To his(1),lows(2) To his(2))
					Case "6"
						ReDim macro_variables_longint_array_2d_6(lows(1) To his(1),lows(2) To his(2))
					Case "7"
						ReDim macro_variables_longint_array_2d_7(lows(1) To his(1),lows(2) To his(2))
					Case "8"
						ReDim macro_variables_longint_array_2d_8(lows(1) To his(1),lows(2) To his(2))
					Case "9"
						ReDim macro_variables_longint_array_2d_9(lows(1) To his(1),lows(2) To his(2))
				End Select
			Else
				If dim_params="redim preserve" And macro_variables_info(variable_number,5)="2d" Then
					Select Case macro_variables_info(variable_number,3)
						Case "1"
							ReDim Preserve macro_variables_longint_array_2d_1(lows(1) To his(1),lows(2) To his(2))
						Case "2"
							ReDim Preserve macro_variables_longint_array_2d_2(lows(1) To his(1),lows(2) To his(2))
						Case "3"
							ReDim Preserve macro_variables_longint_array_2d_3(lows(1) To his(1),lows(2) To his(2))
						Case "4"
							ReDim Preserve macro_variables_longint_array_2d_4(lows(1) To his(1),lows(2) To his(2))
						Case "5"
							ReDim Preserve macro_variables_longint_array_2d_5(lows(1) To his(1),lows(2) To his(2))
						Case "6"
							ReDim Preserve macro_variables_longint_array_2d_6(lows(1) To his(1),lows(2) To his(2))
						Case "7"
							ReDim Preserve macro_variables_longint_array_2d_7(lows(1) To his(1),lows(2) To his(2))
						Case "8"
							ReDim Preserve macro_variables_longint_array_2d_8(lows(1) To his(1),lows(2) To his(2))
						Case "9"
							ReDim Preserve macro_variables_longint_array_2d_9(lows(1) To his(1),lows(2) To his(2))
					End Select
				Else
					If macro_variables_info(variable_number,7)<>"" Then
						Select Case macro_variables_info(variable_number,7)
							Case "1"
								ReDim macro_variables_longint_array_2d_1(lows(1) To his(1),lows(2) To his(2))
							Case "2"
								ReDim macro_variables_longint_array_2d_2(lows(1) To his(1),lows(2) To his(2))
							Case "3"
								ReDim macro_variables_longint_array_2d_3(lows(1) To his(1),lows(2) To his(2))
							Case "4"
								ReDim macro_variables_longint_array_2d_4(lows(1) To his(1),lows(2) To his(2))
							Case "5"
								ReDim macro_variables_longint_array_2d_5(lows(1) To his(1),lows(2) To his(2))
							Case "6"
								ReDim macro_variables_longint_array_2d_6(lows(1) To his(1),lows(2) To his(2))
							Case "7"
								ReDim macro_variables_longint_array_2d_7(lows(1) To his(1),lows(2) To his(2))
							Case "8"
								ReDim macro_variables_longint_array_2d_8(lows(1) To his(1),lows(2) To his(2))
							Case "9"
								ReDim macro_variables_longint_array_2d_9(lows(1) To his(1),lows(2) To his(2))
						End Select
					Else
						macro_variables_info(variable_number,5)="2d"
						macro_variables_longint_array_2d_c+=1
						macro_variables_info(variable_number,3)=LTrim(RTrim(Str(macro_variables_longint_array_2d_c)))
						macro_variables_info(variable_number,7)=macro_variables_info(variable_number,3)
						Select Case macro_variables_longint_array_2d_c
							Case 1
								ReDim macro_variables_longint_array_2d_1(lows(1) To his(1),lows(2) To his(2))
							Case 2
								ReDim macro_variables_longint_array_2d_2(lows(1) To his(1),lows(2) To his(2))
							Case 3
								ReDim macro_variables_longint_array_2d_3(lows(1) To his(1),lows(2) To his(2))
							Case 4
								ReDim macro_variables_longint_array_2d_4(lows(1) To his(1),lows(2) To his(2))
							Case 5
								ReDim macro_variables_longint_array_2d_5(lows(1) To his(1),lows(2) To his(2))
							Case 6
								ReDim macro_variables_longint_array_2d_6(lows(1) To his(1),lows(2) To his(2))
							Case 7
								ReDim macro_variables_longint_array_2d_7(lows(1) To his(1),lows(2) To his(2))
							Case 8
								ReDim macro_variables_longint_array_2d_8(lows(1) To his(1),lows(2) To his(2))
							Case 9
								ReDim macro_variables_longint_array_2d_9(lows(1) To his(1),lows(2) To his(2))
						End Select
					EndIf
				EndIf
			EndIf
		Case 3 '3d
			ReDim lows(3),his(3)
			For i=1 To 3
				temp=temps(i)		
				If InStr(temp," to ") Then
					x=InStr(temp," to ")
					lows(i)=CInt(Left(temp,x-1))
					his(i)=CInt(Mid(temp,x+4))
				Else
					lows(i)=0
					his(i)=CInt(temp)
				EndIf
			Next
			If dim_params="redim" And macro_variables_info(variable_number,5)="3d" Then
				Select Case macro_variables_info(variable_number,3)
					Case "1"
						ReDim macro_variables_longint_array_3d_1(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "2"
						ReDim macro_variables_longint_array_3d_2(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "3"
						ReDim macro_variables_longint_array_3d_3(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "4"
						ReDim macro_variables_longint_array_3d_4(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "5"
						ReDim macro_variables_longint_array_3d_5(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "6"
						ReDim macro_variables_longint_array_3d_6(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "7"
						ReDim macro_variables_longint_array_3d_7(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "8"
						ReDim macro_variables_longint_array_3d_8(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "9"
						ReDim macro_variables_longint_array_3d_9(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
				End Select
			Else
				If dim_params="redim preserve" And macro_variables_info(variable_number,5)="3d" Then
					Select Case macro_variables_info(variable_number,3)
						Case "1"
							ReDim Preserve macro_variables_longint_array_3d_1(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "2"
							ReDim Preserve macro_variables_longint_array_3d_2(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "3"
							ReDim Preserve macro_variables_longint_array_3d_3(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "4"
							ReDim Preserve macro_variables_longint_array_3d_4(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "5"
							ReDim Preserve macro_variables_longint_array_3d_5(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "6"
							ReDim Preserve macro_variables_longint_array_3d_6(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "7"
							ReDim Preserve macro_variables_longint_array_3d_7(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "8"
							ReDim Preserve macro_variables_longint_array_3d_8(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "9"
							ReDim Preserve macro_variables_longint_array_3d_9(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					End Select
				Else
					If macro_variables_info(variable_number,8)<>"" Then
						Select Case macro_variables_info(variable_number,8)
							Case "1"
								ReDim macro_variables_longint_array_3d_1(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "2"
								ReDim macro_variables_longint_array_3d_2(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "3"
								ReDim macro_variables_longint_array_3d_3(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "4"
								ReDim macro_variables_longint_array_3d_4(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "5"
								ReDim macro_variables_longint_array_3d_5(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "6"
								ReDim macro_variables_longint_array_3d_6(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "7"
								ReDim macro_variables_longint_array_3d_7(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "8"
								ReDim macro_variables_longint_array_3d_8(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "9"
								ReDim macro_variables_longint_array_3d_9(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						End Select
					Else
						macro_variables_info(variable_number,5)="3d"
						macro_variables_longint_array_3d_c+=1
						macro_variables_info(variable_number,3)=LTrim(RTrim(Str(macro_variables_longint_array_3d_c)))
						macro_variables_info(variable_number,8)=macro_variables_info(variable_number,3)
						Select Case macro_variables_longint_array_3d_c
							Case 1
								ReDim macro_variables_longint_array_3d_1(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 2
								ReDim macro_variables_longint_array_3d_2(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 3
								ReDim macro_variables_longint_array_3d_3(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 4
								ReDim macro_variables_longint_array_3d_4(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 5
								ReDim macro_variables_longint_array_3d_5(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 6
								ReDim macro_variables_longint_array_3d_6(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 7
								ReDim macro_variables_longint_array_3d_7(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 8
								ReDim macro_variables_longint_array_3d_8(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 9
								ReDim macro_variables_longint_array_3d_9(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						End Select
					EndIf
				EndIf
			EndIf
	End Select
End Sub

Sub dim_ulongint_array(variable_number As Integer,c As Integer,temp As String,temps() As String)
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Sub dim_ulongint_array"
		Print #5,"variable_number:";variable_number
		Print #5,"c:";c
		Print #5,"temp:";temp
		For dbugi=LBound(temps) To UBound(temps)
			Print #5,"temps("; dbugi; "):"; temps(dbugi)
		Next
		Print #5,"---------------"
	EndIf
	Dim As Integer i,x,low,hi,lows(),his()
	Select Case c
		Case 0 'undefined array depth, to be defined via redim
			macro_variables_info(variable_number,5)="pending array depth"
		Case 1 '1d
			If InStr(temp," to ") Then
				x=InStr(temp," to ")
				low=CInt(Left(temp,x-1))
				hi=CInt(Mid(temp,x+4))
			Else
				low=0
				hi=CInt(temp)
			EndIf
			If dim_params="redim" And macro_variables_info(variable_number,5)="1d" Then
				Select Case macro_variables_info(variable_number,3)
					Case "1"
						ReDim macro_variables_ulongint_array_1d_1(low To hi)
					Case "2"
						ReDim macro_variables_ulongint_array_1d_2(low To hi)
					Case "3"
						ReDim macro_variables_ulongint_array_1d_3(low To hi)
					Case "4"
						ReDim macro_variables_ulongint_array_1d_4(low To hi)
					Case "5"
						ReDim macro_variables_ulongint_array_1d_5(low To hi)
					Case "6"
						ReDim macro_variables_ulongint_array_1d_6(low To hi)
					Case "7"
						ReDim macro_variables_ulongint_array_1d_7(low To hi)
					Case "8"
						ReDim macro_variables_ulongint_array_1d_8(low To hi)
					Case "9"
						ReDim macro_variables_ulongint_array_1d_9(low To hi)
				End Select
			Else
				If dim_params="redim preserve" And macro_variables_info(variable_number,5)="1d" Then
					Select Case macro_variables_info(variable_number,3)
						Case "1"
							ReDim Preserve macro_variables_ulongint_array_1d_1(low To hi)
						Case "2"
							ReDim Preserve macro_variables_ulongint_array_1d_2(low To hi)
						Case "3"
							ReDim Preserve macro_variables_ulongint_array_1d_3(low To hi)
						Case "4"
							ReDim Preserve macro_variables_ulongint_array_1d_4(low To hi)
						Case "5"
							ReDim Preserve macro_variables_ulongint_array_1d_5(low To hi)
						Case "6"
							ReDim Preserve macro_variables_ulongint_array_1d_6(low To hi)
						Case "7"
							ReDim Preserve macro_variables_ulongint_array_1d_7(low To hi)
						Case "8"
							ReDim Preserve macro_variables_ulongint_array_1d_8(low To hi)
						Case "9"
							ReDim Preserve macro_variables_ulongint_array_1d_9(low To hi)
					End Select
				Else
					If macro_variables_info(variable_number,6)<>"" Then
						Select Case macro_variables_info(variable_number,6)
							Case "1"
								ReDim macro_variables_ulongint_array_1d_1(low To hi)
							Case "2"
								ReDim macro_variables_ulongint_array_1d_2(low To hi)
							Case "3"
								ReDim macro_variables_ulongint_array_1d_3(low To hi)
							Case "4"
								ReDim macro_variables_ulongint_array_1d_4(low To hi)
							Case "5"
								ReDim macro_variables_ulongint_array_1d_5(low To hi)
							Case "6"
								ReDim macro_variables_ulongint_array_1d_6(low To hi)
							Case "7"
								ReDim macro_variables_ulongint_array_1d_7(low To hi)
							Case "8"
								ReDim macro_variables_ulongint_array_1d_8(low To hi)
							Case "9"
								ReDim macro_variables_ulongint_array_1d_9(low To hi)
						End Select
					Else
						macro_variables_info(variable_number,5)="1d"
						macro_variables_ulongint_array_1d_c+=1
						macro_variables_info(variable_number,3)=LTrim(RTrim(Str(macro_variables_ulongint_array_1d_c)))
						macro_variables_info(variable_number,6)=macro_variables_info(variable_number,3)
						Select Case macro_variables_ulongint_array_1d_c
							Case 1
								ReDim macro_variables_ulongint_array_1d_1(low To hi)
							Case 2
								ReDim macro_variables_ulongint_array_1d_2(low To hi)
							Case 3
								ReDim macro_variables_ulongint_array_1d_3(low To hi)
							Case 4
								ReDim macro_variables_ulongint_array_1d_4(low To hi)
							Case 5
								ReDim macro_variables_ulongint_array_1d_5(low To hi)
							Case 6
								ReDim macro_variables_ulongint_array_1d_6(low To hi)
							Case 7
								ReDim macro_variables_ulongint_array_1d_7(low To hi)
							Case 8
								ReDim macro_variables_ulongint_array_1d_8(low To hi)
							Case 9
								ReDim macro_variables_ulongint_array_1d_9(low To hi)
						End Select
					EndIf
				EndIf
			EndIf
		Case 2 '2d
			ReDim lows(2),his(2)
			For i=1 To 2
				temp=temps(i)		
				If InStr(temp," to ") Then
					x=InStr(temp," to ")
					lows(i)=CInt(Left(temp,x-1))
					his(i)=CInt(Mid(temp,x+4))
				Else
					lows(i)=0
					his(i)=CInt(temp)
				EndIf
			Next
			If dim_params="redim" And macro_variables_info(variable_number,5)="2d" Then
				Select Case macro_variables_info(variable_number,3)
					Case "1"
						ReDim macro_variables_ulongint_array_2d_1(lows(1) To his(1),lows(2) To his(2))
					Case "2"
						ReDim macro_variables_ulongint_array_2d_2(lows(1) To his(1),lows(2) To his(2))
					Case "3"
						ReDim macro_variables_ulongint_array_2d_3(lows(1) To his(1),lows(2) To his(2))
					Case "4"
						ReDim macro_variables_ulongint_array_2d_4(lows(1) To his(1),lows(2) To his(2))
					Case "5"
						ReDim macro_variables_ulongint_array_2d_5(lows(1) To his(1),lows(2) To his(2))
					Case "6"
						ReDim macro_variables_ulongint_array_2d_6(lows(1) To his(1),lows(2) To his(2))
					Case "7"
						ReDim macro_variables_ulongint_array_2d_7(lows(1) To his(1),lows(2) To his(2))
					Case "8"
						ReDim macro_variables_ulongint_array_2d_8(lows(1) To his(1),lows(2) To his(2))
					Case "9"
						ReDim macro_variables_ulongint_array_2d_9(lows(1) To his(1),lows(2) To his(2))
				End Select
			Else
				If dim_params="redim preserve" And macro_variables_info(variable_number,5)="2d" Then
					Select Case macro_variables_info(variable_number,3)
						Case "1"
							ReDim Preserve macro_variables_ulongint_array_2d_1(lows(1) To his(1),lows(2) To his(2))
						Case "2"
							ReDim Preserve macro_variables_ulongint_array_2d_2(lows(1) To his(1),lows(2) To his(2))
						Case "3"
							ReDim Preserve macro_variables_ulongint_array_2d_3(lows(1) To his(1),lows(2) To his(2))
						Case "4"
							ReDim Preserve macro_variables_ulongint_array_2d_4(lows(1) To his(1),lows(2) To his(2))
						Case "5"
							ReDim Preserve macro_variables_ulongint_array_2d_5(lows(1) To his(1),lows(2) To his(2))
						Case "6"
							ReDim Preserve macro_variables_ulongint_array_2d_6(lows(1) To his(1),lows(2) To his(2))
						Case "7"
							ReDim Preserve macro_variables_ulongint_array_2d_7(lows(1) To his(1),lows(2) To his(2))
						Case "8"
							ReDim Preserve macro_variables_ulongint_array_2d_8(lows(1) To his(1),lows(2) To his(2))
						Case "9"
							ReDim Preserve macro_variables_ulongint_array_2d_9(lows(1) To his(1),lows(2) To his(2))
					End Select
				Else
					If macro_variables_info(variable_number,7)<>"" Then
						Select Case macro_variables_info(variable_number,7)
							Case "1"
								ReDim macro_variables_ulongint_array_2d_1(lows(1) To his(1),lows(2) To his(2))
							Case "2"
								ReDim macro_variables_ulongint_array_2d_2(lows(1) To his(1),lows(2) To his(2))
							Case "3"
								ReDim macro_variables_ulongint_array_2d_3(lows(1) To his(1),lows(2) To his(2))
							Case "4"
								ReDim macro_variables_ulongint_array_2d_4(lows(1) To his(1),lows(2) To his(2))
							Case "5"
								ReDim macro_variables_ulongint_array_2d_5(lows(1) To his(1),lows(2) To his(2))
							Case "6"
								ReDim macro_variables_ulongint_array_2d_6(lows(1) To his(1),lows(2) To his(2))
							Case "7"
								ReDim macro_variables_ulongint_array_2d_7(lows(1) To his(1),lows(2) To his(2))
							Case "8"
								ReDim macro_variables_ulongint_array_2d_8(lows(1) To his(1),lows(2) To his(2))
							Case "9"
								ReDim macro_variables_ulongint_array_2d_9(lows(1) To his(1),lows(2) To his(2))
						End Select
					Else
						macro_variables_info(variable_number,5)="2d"
						macro_variables_ulongint_array_2d_c+=1
						macro_variables_info(variable_number,3)=LTrim(RTrim(Str(macro_variables_ulongint_array_2d_c)))
						macro_variables_info(variable_number,7)=macro_variables_info(variable_number,3)
						Select Case macro_variables_ulongint_array_2d_c
							Case 1
								ReDim macro_variables_ulongint_array_2d_1(lows(1) To his(1),lows(2) To his(2))
							Case 2
								ReDim macro_variables_ulongint_array_2d_2(lows(1) To his(1),lows(2) To his(2))
							Case 3
								ReDim macro_variables_ulongint_array_2d_3(lows(1) To his(1),lows(2) To his(2))
							Case 4
								ReDim macro_variables_ulongint_array_2d_4(lows(1) To his(1),lows(2) To his(2))
							Case 5
								ReDim macro_variables_ulongint_array_2d_5(lows(1) To his(1),lows(2) To his(2))
							Case 6
								ReDim macro_variables_ulongint_array_2d_6(lows(1) To his(1),lows(2) To his(2))
							Case 7
								ReDim macro_variables_ulongint_array_2d_7(lows(1) To his(1),lows(2) To his(2))
							Case 8
								ReDim macro_variables_ulongint_array_2d_8(lows(1) To his(1),lows(2) To his(2))
							Case 9
								ReDim macro_variables_ulongint_array_2d_9(lows(1) To his(1),lows(2) To his(2))
						End Select
					EndIf
				EndIf
			EndIf
		Case 3 '3d
			ReDim lows(3),his(3)
			For i=1 To 3
				temp=temps(i)		
				If InStr(temp," to ") Then
					x=InStr(temp," to ")
					lows(i)=CInt(Left(temp,x-1))
					his(i)=CInt(Mid(temp,x+4))
				Else
					lows(i)=0
					his(i)=CInt(temp)
				EndIf
			Next
			If dim_params="redim" And macro_variables_info(variable_number,5)="3d" Then
				Select Case macro_variables_info(variable_number,3)
					Case "1"
						ReDim macro_variables_ulongint_array_3d_1(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "2"
						ReDim macro_variables_ulongint_array_3d_2(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "3"
						ReDim macro_variables_ulongint_array_3d_3(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "4"
						ReDim macro_variables_ulongint_array_3d_4(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "5"
						ReDim macro_variables_ulongint_array_3d_5(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "6"
						ReDim macro_variables_ulongint_array_3d_6(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "7"
						ReDim macro_variables_ulongint_array_3d_7(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "8"
						ReDim macro_variables_ulongint_array_3d_8(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "9"
						ReDim macro_variables_ulongint_array_3d_9(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
				End Select
			Else
				If dim_params="redim preserve" And macro_variables_info(variable_number,5)="3d" Then
					Select Case macro_variables_info(variable_number,3)
						Case "1"
							ReDim Preserve macro_variables_ulongint_array_3d_1(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "2"
							ReDim Preserve macro_variables_ulongint_array_3d_2(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "3"
							ReDim Preserve macro_variables_ulongint_array_3d_3(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "4"
							ReDim Preserve macro_variables_ulongint_array_3d_4(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "5"
							ReDim Preserve macro_variables_ulongint_array_3d_5(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "6"
							ReDim Preserve macro_variables_ulongint_array_3d_6(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "7"
							ReDim Preserve macro_variables_ulongint_array_3d_7(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "8"
							ReDim Preserve macro_variables_ulongint_array_3d_8(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "9"
							ReDim Preserve macro_variables_ulongint_array_3d_9(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					End Select
				Else
					If macro_variables_info(variable_number,8)<>"" Then
						Select Case macro_variables_info(variable_number,8)
							Case "1"
								ReDim macro_variables_ulongint_array_3d_1(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "2"
								ReDim macro_variables_ulongint_array_3d_2(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "3"
								ReDim macro_variables_ulongint_array_3d_3(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "4"
								ReDim macro_variables_ulongint_array_3d_4(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "5"
								ReDim macro_variables_ulongint_array_3d_5(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "6"
								ReDim macro_variables_ulongint_array_3d_6(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "7"
								ReDim macro_variables_ulongint_array_3d_7(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "8"
								ReDim macro_variables_ulongint_array_3d_8(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "9"
								ReDim macro_variables_ulongint_array_3d_9(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						End Select
					Else
						macro_variables_info(variable_number,5)="3d"
						macro_variables_ulongint_array_3d_c+=1
						macro_variables_info(variable_number,3)=LTrim(RTrim(Str(macro_variables_ulongint_array_3d_c)))
						macro_variables_info(variable_number,8)=macro_variables_info(variable_number,3)
						Select Case macro_variables_ulongint_array_3d_c
							Case 1
								ReDim macro_variables_ulongint_array_3d_1(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 2
								ReDim macro_variables_ulongint_array_3d_2(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 3
								ReDim macro_variables_ulongint_array_3d_3(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 4
								ReDim macro_variables_ulongint_array_3d_4(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 5
								ReDim macro_variables_ulongint_array_3d_5(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 6
								ReDim macro_variables_ulongint_array_3d_6(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 7
								ReDim macro_variables_ulongint_array_3d_7(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 8
								ReDim macro_variables_ulongint_array_3d_8(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 9
								ReDim macro_variables_ulongint_array_3d_9(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						End Select
					EndIf
				EndIf
			EndIf
	End Select
End Sub

Sub dim_single_array(variable_number As Integer,c As Integer,temp As String,temps() As String)
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Sub dim_single_array"
		Print #5,"variable_number:";variable_number
		Print #5,"c:";c
		Print #5,"temp:";temp
		For dbugi=LBound(temps) To UBound(temps)
			Print #5,"temps("; dbugi; "):"; temps(dbugi)
		Next
		Print #5,"---------------"
	EndIf
	Dim As Integer i,x,low,hi,lows(),his()
	Select Case c
		Case 0 'undefined array depth, to be defined via redim
			macro_variables_info(variable_number,5)="pending array depth"
		Case 1 '1d
			If InStr(temp," to ") Then
				x=InStr(temp," to ")
				low=CInt(Left(temp,x-1))
				hi=CInt(Mid(temp,x+4))
			Else
				low=0
				hi=CInt(temp)
			EndIf
			If dim_params="redim" And macro_variables_info(variable_number,5)="1d" Then
				Select Case macro_variables_info(variable_number,3)
					Case "1"
						ReDim macro_variables_single_array_1d_1(low To hi)
					Case "2"
						ReDim macro_variables_single_array_1d_2(low To hi)
					Case "3"
						ReDim macro_variables_single_array_1d_3(low To hi)
					Case "4"
						ReDim macro_variables_single_array_1d_4(low To hi)
					Case "5"
						ReDim macro_variables_single_array_1d_5(low To hi)
					Case "6"
						ReDim macro_variables_single_array_1d_6(low To hi)
					Case "7"
						ReDim macro_variables_single_array_1d_7(low To hi)
					Case "8"
						ReDim macro_variables_single_array_1d_8(low To hi)
					Case "9"
						ReDim macro_variables_single_array_1d_9(low To hi)
				End Select
			Else
				If dim_params="redim preserve" And macro_variables_info(variable_number,5)="1d" Then
					Select Case macro_variables_info(variable_number,3)
						Case "1"
							ReDim Preserve macro_variables_single_array_1d_1(low To hi)
						Case "2"
							ReDim Preserve macro_variables_single_array_1d_2(low To hi)
						Case "3"
							ReDim Preserve macro_variables_single_array_1d_3(low To hi)
						Case "4"
							ReDim Preserve macro_variables_single_array_1d_4(low To hi)
						Case "5"
							ReDim Preserve macro_variables_single_array_1d_5(low To hi)
						Case "6"
							ReDim Preserve macro_variables_single_array_1d_6(low To hi)
						Case "7"
							ReDim Preserve macro_variables_single_array_1d_7(low To hi)
						Case "8"
							ReDim Preserve macro_variables_single_array_1d_8(low To hi)
						Case "9"
							ReDim Preserve macro_variables_single_array_1d_9(low To hi)
					End Select
				Else
					If macro_variables_info(variable_number,6)<>"" Then
						Select Case macro_variables_info(variable_number,6)
							Case "1"
								ReDim macro_variables_single_array_1d_1(low To hi)
							Case "2"
								ReDim macro_variables_single_array_1d_2(low To hi)
							Case "3"
								ReDim macro_variables_single_array_1d_3(low To hi)
							Case "4"
								ReDim macro_variables_single_array_1d_4(low To hi)
							Case "5"
								ReDim macro_variables_single_array_1d_5(low To hi)
							Case "6"
								ReDim macro_variables_single_array_1d_6(low To hi)
							Case "7"
								ReDim macro_variables_single_array_1d_7(low To hi)
							Case "8"
								ReDim macro_variables_single_array_1d_8(low To hi)
							Case "9"
								ReDim macro_variables_single_array_1d_9(low To hi)
						End Select
					Else
						macro_variables_info(variable_number,5)="1d"
						macro_variables_single_array_1d_c+=1
						macro_variables_info(variable_number,3)=LTrim(RTrim(Str(macro_variables_single_array_1d_c)))
						macro_variables_info(variable_number,6)=macro_variables_info(variable_number,3)
						Select Case macro_variables_single_array_1d_c
							Case 1
								ReDim macro_variables_single_array_1d_1(low To hi)
							Case 2
								ReDim macro_variables_single_array_1d_2(low To hi)
							Case 3
								ReDim macro_variables_single_array_1d_3(low To hi)
							Case 4
								ReDim macro_variables_single_array_1d_4(low To hi)
							Case 5
								ReDim macro_variables_single_array_1d_5(low To hi)
							Case 6
								ReDim macro_variables_single_array_1d_6(low To hi)
							Case 7
								ReDim macro_variables_single_array_1d_7(low To hi)
							Case 8
								ReDim macro_variables_single_array_1d_8(low To hi)
							Case 9
								ReDim macro_variables_single_array_1d_9(low To hi)
						End Select
					EndIf
				EndIf
			EndIf
		Case 2 '2d
			ReDim lows(2),his(2)
			For i=1 To 2
				temp=temps(i)		
				If InStr(temp," to ") Then
					x=InStr(temp," to ")
					lows(i)=CInt(Left(temp,x-1))
					his(i)=CInt(Mid(temp,x+4))
				Else
					lows(i)=0
					his(i)=CInt(temp)
				EndIf
			Next
			If dim_params="redim" And macro_variables_info(variable_number,5)="2d" Then
				Select Case macro_variables_info(variable_number,3)
					Case "1"
						ReDim macro_variables_single_array_2d_1(lows(1) To his(1),lows(2) To his(2))
					Case "2"
						ReDim macro_variables_single_array_2d_2(lows(1) To his(1),lows(2) To his(2))
					Case "3"
						ReDim macro_variables_single_array_2d_3(lows(1) To his(1),lows(2) To his(2))
					Case "4"
						ReDim macro_variables_single_array_2d_4(lows(1) To his(1),lows(2) To his(2))
					Case "5"
						ReDim macro_variables_single_array_2d_5(lows(1) To his(1),lows(2) To his(2))
					Case "6"
						ReDim macro_variables_single_array_2d_6(lows(1) To his(1),lows(2) To his(2))
					Case "7"
						ReDim macro_variables_single_array_2d_7(lows(1) To his(1),lows(2) To his(2))
					Case "8"
						ReDim macro_variables_single_array_2d_8(lows(1) To his(1),lows(2) To his(2))
					Case "9"
						ReDim macro_variables_single_array_2d_9(lows(1) To his(1),lows(2) To his(2))
				End Select
			Else
				If dim_params="redim preserve" And macro_variables_info(variable_number,5)="2d" Then
					Select Case macro_variables_info(variable_number,3)
						Case "1"
							ReDim Preserve macro_variables_single_array_2d_1(lows(1) To his(1),lows(2) To his(2))
						Case "2"
							ReDim Preserve macro_variables_single_array_2d_2(lows(1) To his(1),lows(2) To his(2))
						Case "3"
							ReDim Preserve macro_variables_single_array_2d_3(lows(1) To his(1),lows(2) To his(2))
						Case "4"
							ReDim Preserve macro_variables_single_array_2d_4(lows(1) To his(1),lows(2) To his(2))
						Case "5"
							ReDim Preserve macro_variables_single_array_2d_5(lows(1) To his(1),lows(2) To his(2))
						Case "6"
							ReDim Preserve macro_variables_single_array_2d_6(lows(1) To his(1),lows(2) To his(2))
						Case "7"
							ReDim Preserve macro_variables_single_array_2d_7(lows(1) To his(1),lows(2) To his(2))
						Case "8"
							ReDim Preserve macro_variables_single_array_2d_8(lows(1) To his(1),lows(2) To his(2))
						Case "9"
							ReDim Preserve macro_variables_single_array_2d_9(lows(1) To his(1),lows(2) To his(2))
					End Select
				Else
					If macro_variables_info(variable_number,7)<>"" Then
						Select Case macro_variables_info(variable_number,7)
							Case "1"
								ReDim macro_variables_single_array_2d_1(lows(1) To his(1),lows(2) To his(2))
							Case "2"
								ReDim macro_variables_single_array_2d_2(lows(1) To his(1),lows(2) To his(2))
							Case "3"
								ReDim macro_variables_single_array_2d_3(lows(1) To his(1),lows(2) To his(2))
							Case "4"
								ReDim macro_variables_single_array_2d_4(lows(1) To his(1),lows(2) To his(2))
							Case "5"
								ReDim macro_variables_single_array_2d_5(lows(1) To his(1),lows(2) To his(2))
							Case "6"
								ReDim macro_variables_single_array_2d_6(lows(1) To his(1),lows(2) To his(2))
							Case "7"
								ReDim macro_variables_single_array_2d_7(lows(1) To his(1),lows(2) To his(2))
							Case "8"
								ReDim macro_variables_single_array_2d_8(lows(1) To his(1),lows(2) To his(2))
							Case "9"
								ReDim macro_variables_single_array_2d_9(lows(1) To his(1),lows(2) To his(2))
						End Select
					Else
						macro_variables_info(variable_number,5)="2d"
						macro_variables_single_array_2d_c+=1
						macro_variables_info(variable_number,3)=LTrim(RTrim(Str(macro_variables_single_array_2d_c)))
						macro_variables_info(variable_number,7)=macro_variables_info(variable_number,3)
						Select Case macro_variables_single_array_2d_c
							Case 1
								ReDim macro_variables_single_array_2d_1(lows(1) To his(1),lows(2) To his(2))
							Case 2
								ReDim macro_variables_single_array_2d_2(lows(1) To his(1),lows(2) To his(2))
							Case 3
								ReDim macro_variables_single_array_2d_3(lows(1) To his(1),lows(2) To his(2))
							Case 4
								ReDim macro_variables_single_array_2d_4(lows(1) To his(1),lows(2) To his(2))
							Case 5
								ReDim macro_variables_single_array_2d_5(lows(1) To his(1),lows(2) To his(2))
							Case 6
								ReDim macro_variables_single_array_2d_6(lows(1) To his(1),lows(2) To his(2))
							Case 7
								ReDim macro_variables_single_array_2d_7(lows(1) To his(1),lows(2) To his(2))
							Case 8
								ReDim macro_variables_single_array_2d_8(lows(1) To his(1),lows(2) To his(2))
							Case 9
								ReDim macro_variables_single_array_2d_9(lows(1) To his(1),lows(2) To his(2))
						End Select
					EndIf
				EndIf
			EndIf
		Case 3 '3d
			ReDim lows(3),his(3)
			For i=1 To 3
				temp=temps(i)		
				If InStr(temp," to ") Then
					x=InStr(temp," to ")
					lows(i)=CInt(Left(temp,x-1))
					his(i)=CInt(Mid(temp,x+4))
				Else
					lows(i)=0
					his(i)=CInt(temp)
				EndIf
			Next
			If dim_params="redim" And macro_variables_info(variable_number,5)="3d" Then
				Select Case macro_variables_info(variable_number,3)
					Case "1"
						ReDim macro_variables_single_array_3d_1(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "2"
						ReDim macro_variables_single_array_3d_2(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "3"
						ReDim macro_variables_single_array_3d_3(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "4"
						ReDim macro_variables_single_array_3d_4(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "5"
						ReDim macro_variables_single_array_3d_5(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "6"
						ReDim macro_variables_single_array_3d_6(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "7"
						ReDim macro_variables_single_array_3d_7(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "8"
						ReDim macro_variables_single_array_3d_8(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "9"
						ReDim macro_variables_single_array_3d_9(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
				End Select
			Else
				If dim_params="redim preserve" And macro_variables_info(variable_number,5)="3d" Then
					Select Case macro_variables_info(variable_number,3)
						Case "1"
							ReDim Preserve macro_variables_single_array_3d_1(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "2"
							ReDim Preserve macro_variables_single_array_3d_2(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "3"
							ReDim Preserve macro_variables_single_array_3d_3(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "4"
							ReDim Preserve macro_variables_single_array_3d_4(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "5"
							ReDim Preserve macro_variables_single_array_3d_5(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "6"
							ReDim Preserve macro_variables_single_array_3d_6(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "7"
							ReDim Preserve macro_variables_single_array_3d_7(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "8"
							ReDim Preserve macro_variables_single_array_3d_8(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "9"
							ReDim Preserve macro_variables_single_array_3d_9(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					End Select
				Else
					If macro_variables_info(variable_number,8)<>"" Then
						Select Case macro_variables_info(variable_number,8)
							Case "1"
								ReDim macro_variables_single_array_3d_1(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "2"
								ReDim macro_variables_single_array_3d_2(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "3"
								ReDim macro_variables_single_array_3d_3(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "4"
								ReDim macro_variables_single_array_3d_4(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "5"
								ReDim macro_variables_single_array_3d_5(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "6"
								ReDim macro_variables_single_array_3d_6(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "7"
								ReDim macro_variables_single_array_3d_7(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "8"
								ReDim macro_variables_single_array_3d_8(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "9"
								ReDim macro_variables_single_array_3d_9(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						End Select
					Else
						macro_variables_info(variable_number,5)="3d"
						macro_variables_single_array_3d_c+=1
						macro_variables_info(variable_number,3)=LTrim(RTrim(Str(macro_variables_single_array_3d_c)))
						macro_variables_info(variable_number,8)=macro_variables_info(variable_number,3)
						Select Case macro_variables_single_array_3d_c
							Case 1
								ReDim macro_variables_single_array_3d_1(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 2
								ReDim macro_variables_single_array_3d_2(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 3
								ReDim macro_variables_single_array_3d_3(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 4
								ReDim macro_variables_single_array_3d_4(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 5
								ReDim macro_variables_single_array_3d_5(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 6
								ReDim macro_variables_single_array_3d_6(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 7
								ReDim macro_variables_single_array_3d_7(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 8
								ReDim macro_variables_single_array_3d_8(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 9
								ReDim macro_variables_single_array_3d_9(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						End Select
					EndIf
				EndIf
			EndIf
	End Select
End Sub

Sub dim_double_array(variable_number As Integer,c As Integer,temp As String,temps() As String)
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Sub dim_double_array"
		Print #5,"variable_number:";variable_number
		Print #5,"c:";c
		Print #5,"temp:";temp
		For dbugi=LBound(temps) To UBound(temps)
			Print #5,"temps("; dbugi; "):"; temps(dbugi)
		Next
		Print #5,"---------------"
	EndIf
	Dim As Integer i,x,low,hi,lows(),his()
	Select Case c
		Case 0 'undefined array depth, to be defined via redim
			macro_variables_info(variable_number,5)="pending array depth"
		Case 1 '1d
			If InStr(temp," to ") Then
				x=InStr(temp," to ")
				low=CInt(Left(temp,x-1))
				hi=CInt(Mid(temp,x+4))
			Else
				low=0
				hi=CInt(temp)
			EndIf
			If dim_params="redim" And macro_variables_info(variable_number,5)="1d" Then
				Select Case macro_variables_info(variable_number,3)
					Case "1"
						ReDim macro_variables_double_array_1d_1(low To hi)
					Case "2"
						ReDim macro_variables_double_array_1d_2(low To hi)
					Case "3"
						ReDim macro_variables_double_array_1d_3(low To hi)
					Case "4"
						ReDim macro_variables_double_array_1d_4(low To hi)
					Case "5"
						ReDim macro_variables_double_array_1d_5(low To hi)
					Case "6"
						ReDim macro_variables_double_array_1d_6(low To hi)
					Case "7"
						ReDim macro_variables_double_array_1d_7(low To hi)
					Case "8"
						ReDim macro_variables_double_array_1d_8(low To hi)
					Case "9"
						ReDim macro_variables_double_array_1d_9(low To hi)
				End Select
			Else
				If dim_params="redim preserve" And macro_variables_info(variable_number,5)="1d" Then
					Select Case macro_variables_info(variable_number,3)
						Case "1"
							ReDim Preserve macro_variables_double_array_1d_1(low To hi)
						Case "2"
							ReDim Preserve macro_variables_double_array_1d_2(low To hi)
						Case "3"
							ReDim Preserve macro_variables_double_array_1d_3(low To hi)
						Case "4"
							ReDim Preserve macro_variables_double_array_1d_4(low To hi)
						Case "5"
							ReDim Preserve macro_variables_double_array_1d_5(low To hi)
						Case "6"
							ReDim Preserve macro_variables_double_array_1d_6(low To hi)
						Case "7"
							ReDim Preserve macro_variables_double_array_1d_7(low To hi)
						Case "8"
							ReDim Preserve macro_variables_double_array_1d_8(low To hi)
						Case "9"
							ReDim Preserve macro_variables_double_array_1d_9(low To hi)
					End Select
				Else
					If macro_variables_info(variable_number,6)<>"" Then
						Select Case macro_variables_info(variable_number,6)
							Case "1"
								ReDim macro_variables_double_array_1d_1(low To hi)
							Case "2"
								ReDim macro_variables_double_array_1d_2(low To hi)
							Case "3"
								ReDim macro_variables_double_array_1d_3(low To hi)
							Case "4"
								ReDim macro_variables_double_array_1d_4(low To hi)
							Case "5"
								ReDim macro_variables_double_array_1d_5(low To hi)
							Case "6"
								ReDim macro_variables_double_array_1d_6(low To hi)
							Case "7"
								ReDim macro_variables_double_array_1d_7(low To hi)
							Case "8"
								ReDim macro_variables_double_array_1d_8(low To hi)
							Case "9"
								ReDim macro_variables_double_array_1d_9(low To hi)
						End Select
					Else
						macro_variables_info(variable_number,5)="1d"
						macro_variables_double_array_1d_c+=1
						macro_variables_info(variable_number,3)=LTrim(RTrim(Str(macro_variables_double_array_1d_c)))
						macro_variables_info(variable_number,6)=macro_variables_info(variable_number,3)
						Select Case macro_variables_double_array_1d_c
							Case 1
								ReDim macro_variables_double_array_1d_1(low To hi)
							Case 2
								ReDim macro_variables_double_array_1d_2(low To hi)
							Case 3
								ReDim macro_variables_double_array_1d_3(low To hi)
							Case 4
								ReDim macro_variables_double_array_1d_4(low To hi)
							Case 5
								ReDim macro_variables_double_array_1d_5(low To hi)
							Case 6
								ReDim macro_variables_double_array_1d_6(low To hi)
							Case 7
								ReDim macro_variables_double_array_1d_7(low To hi)
							Case 8
								ReDim macro_variables_double_array_1d_8(low To hi)
							Case 9
								ReDim macro_variables_double_array_1d_9(low To hi)
						End Select
					EndIf
				EndIf
			EndIf
		Case 2 '2d
			ReDim lows(2),his(2)
			For i=1 To 2
				temp=temps(i)		
				If InStr(temp," to ") Then
					x=InStr(temp," to ")
					lows(i)=CInt(Left(temp,x-1))
					his(i)=CInt(Mid(temp,x+4))
				Else
					lows(i)=0
					his(i)=CInt(temp)
				EndIf
			Next
			If dim_params="redim" And macro_variables_info(variable_number,5)="2d" Then
				Select Case macro_variables_info(variable_number,3)
					Case "1"
						ReDim macro_variables_double_array_2d_1(lows(1) To his(1),lows(2) To his(2))
					Case "2"
						ReDim macro_variables_double_array_2d_2(lows(1) To his(1),lows(2) To his(2))
					Case "3"
						ReDim macro_variables_double_array_2d_3(lows(1) To his(1),lows(2) To his(2))
					Case "4"
						ReDim macro_variables_double_array_2d_4(lows(1) To his(1),lows(2) To his(2))
					Case "5"
						ReDim macro_variables_double_array_2d_5(lows(1) To his(1),lows(2) To his(2))
					Case "6"
						ReDim macro_variables_double_array_2d_6(lows(1) To his(1),lows(2) To his(2))
					Case "7"
						ReDim macro_variables_double_array_2d_7(lows(1) To his(1),lows(2) To his(2))
					Case "8"
						ReDim macro_variables_double_array_2d_8(lows(1) To his(1),lows(2) To his(2))
					Case "9"
						ReDim macro_variables_double_array_2d_9(lows(1) To his(1),lows(2) To his(2))
				End Select
			Else
				If dim_params="redim preserve" And macro_variables_info(variable_number,5)="2d" Then
					Select Case macro_variables_info(variable_number,3)
						Case "1"
							ReDim Preserve macro_variables_double_array_2d_1(lows(1) To his(1),lows(2) To his(2))
						Case "2"
							ReDim Preserve macro_variables_double_array_2d_2(lows(1) To his(1),lows(2) To his(2))
						Case "3"
							ReDim Preserve macro_variables_double_array_2d_3(lows(1) To his(1),lows(2) To his(2))
						Case "4"
							ReDim Preserve macro_variables_double_array_2d_4(lows(1) To his(1),lows(2) To his(2))
						Case "5"
							ReDim Preserve macro_variables_double_array_2d_5(lows(1) To his(1),lows(2) To his(2))
						Case "6"
							ReDim Preserve macro_variables_double_array_2d_6(lows(1) To his(1),lows(2) To his(2))
						Case "7"
							ReDim Preserve macro_variables_double_array_2d_7(lows(1) To his(1),lows(2) To his(2))
						Case "8"
							ReDim Preserve macro_variables_double_array_2d_8(lows(1) To his(1),lows(2) To his(2))
						Case "9"
							ReDim Preserve macro_variables_double_array_2d_9(lows(1) To his(1),lows(2) To his(2))
					End Select
				Else
					If macro_variables_info(variable_number,7)<>"" Then
						Select Case macro_variables_info(variable_number,7)
							Case "1"
								ReDim macro_variables_double_array_2d_1(lows(1) To his(1),lows(2) To his(2))
							Case "2"
								ReDim macro_variables_double_array_2d_2(lows(1) To his(1),lows(2) To his(2))
							Case "3"
								ReDim macro_variables_double_array_2d_3(lows(1) To his(1),lows(2) To his(2))
							Case "4"
								ReDim macro_variables_double_array_2d_4(lows(1) To his(1),lows(2) To his(2))
							Case "5"
								ReDim macro_variables_double_array_2d_5(lows(1) To his(1),lows(2) To his(2))
							Case "6"
								ReDim macro_variables_double_array_2d_6(lows(1) To his(1),lows(2) To his(2))
							Case "7"
								ReDim macro_variables_double_array_2d_7(lows(1) To his(1),lows(2) To his(2))
							Case "8"
								ReDim macro_variables_double_array_2d_8(lows(1) To his(1),lows(2) To his(2))
							Case "9"
								ReDim macro_variables_double_array_2d_9(lows(1) To his(1),lows(2) To his(2))
						End Select
					Else
						macro_variables_info(variable_number,5)="2d"
						macro_variables_double_array_2d_c+=1
						macro_variables_info(variable_number,3)=LTrim(RTrim(Str(macro_variables_double_array_2d_c)))
						macro_variables_info(variable_number,7)=macro_variables_info(variable_number,3)
						Select Case macro_variables_double_array_2d_c
							Case 1
								ReDim macro_variables_double_array_2d_1(lows(1) To his(1),lows(2) To his(2))
							Case 2
								ReDim macro_variables_double_array_2d_2(lows(1) To his(1),lows(2) To his(2))
							Case 3
								ReDim macro_variables_double_array_2d_3(lows(1) To his(1),lows(2) To his(2))
							Case 4
								ReDim macro_variables_double_array_2d_4(lows(1) To his(1),lows(2) To his(2))
							Case 5
								ReDim macro_variables_double_array_2d_5(lows(1) To his(1),lows(2) To his(2))
							Case 6
								ReDim macro_variables_double_array_2d_6(lows(1) To his(1),lows(2) To his(2))
							Case 7
								ReDim macro_variables_double_array_2d_7(lows(1) To his(1),lows(2) To his(2))
							Case 8
								ReDim macro_variables_double_array_2d_8(lows(1) To his(1),lows(2) To his(2))
							Case 9
								ReDim macro_variables_double_array_2d_9(lows(1) To his(1),lows(2) To his(2))
						End Select
					EndIf
				EndIf
			EndIf
		Case 3 '3d
			ReDim lows(3),his(3)
			For i=1 To 3
				temp=temps(i)		
				If InStr(temp," to ") Then
					x=InStr(temp," to ")
					lows(i)=CInt(Left(temp,x-1))
					his(i)=CInt(Mid(temp,x+4))
				Else
					lows(i)=0
					his(i)=CInt(temp)
				EndIf
			Next
			If dim_params="redim" And macro_variables_info(variable_number,5)="3d" Then
				Select Case macro_variables_info(variable_number,3)
					Case "1"
						ReDim macro_variables_double_array_3d_1(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "2"
						ReDim macro_variables_double_array_3d_2(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "3"
						ReDim macro_variables_double_array_3d_3(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "4"
						ReDim macro_variables_double_array_3d_4(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "5"
						ReDim macro_variables_double_array_3d_5(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "6"
						ReDim macro_variables_double_array_3d_6(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "7"
						ReDim macro_variables_double_array_3d_7(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "8"
						ReDim macro_variables_double_array_3d_8(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "9"
						ReDim macro_variables_double_array_3d_9(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
				End Select
			Else
				If dim_params="redim preserve" And macro_variables_info(variable_number,5)="3d" Then
					Select Case macro_variables_info(variable_number,3)
						Case "1"
							ReDim Preserve macro_variables_double_array_3d_1(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "2"
							ReDim Preserve macro_variables_double_array_3d_2(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "3"
							ReDim Preserve macro_variables_double_array_3d_3(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "4"
							ReDim Preserve macro_variables_double_array_3d_4(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "5"
							ReDim Preserve macro_variables_double_array_3d_5(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "6"
							ReDim Preserve macro_variables_double_array_3d_6(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "7"
							ReDim Preserve macro_variables_double_array_3d_7(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "8"
							ReDim Preserve macro_variables_double_array_3d_8(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "9"
							ReDim Preserve macro_variables_double_array_3d_9(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					End Select
				Else
					If macro_variables_info(variable_number,8)<>"" Then
						Select Case macro_variables_info(variable_number,8)
							Case "1"
								ReDim macro_variables_double_array_3d_1(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "2"
								ReDim macro_variables_double_array_3d_2(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "3"
								ReDim macro_variables_double_array_3d_3(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "4"
								ReDim macro_variables_double_array_3d_4(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "5"
								ReDim macro_variables_double_array_3d_5(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "6"
								ReDim macro_variables_double_array_3d_6(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "7"
								ReDim macro_variables_double_array_3d_7(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "8"
								ReDim macro_variables_double_array_3d_8(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "9"
								ReDim macro_variables_double_array_3d_9(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						End Select
					Else
						macro_variables_info(variable_number,5)="3d"
						macro_variables_double_array_3d_c+=1
						macro_variables_info(variable_number,3)=LTrim(RTrim(Str(macro_variables_double_array_3d_c)))
						macro_variables_info(variable_number,8)=macro_variables_info(variable_number,3)
						Select Case macro_variables_double_array_3d_c
							Case 1
								ReDim macro_variables_double_array_3d_1(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 2
								ReDim macro_variables_double_array_3d_2(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 3
								ReDim macro_variables_double_array_3d_3(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 4
								ReDim macro_variables_double_array_3d_4(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 5
								ReDim macro_variables_double_array_3d_5(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 6
								ReDim macro_variables_double_array_3d_6(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 7
								ReDim macro_variables_double_array_3d_7(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 8
								ReDim macro_variables_double_array_3d_8(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 9
								ReDim macro_variables_double_array_3d_9(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						End Select
					EndIf
				EndIf
			EndIf
	End Select
End Sub

Sub dim_string_array(variable_number As Integer,c As Integer,temp As String,temps() As String)
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Sub dim_string_array"
		Print #5,"variable_number:";variable_number
		Print #5,"c:";c
		Print #5,"temp:";temp
		For dbugi=LBound(temps) To UBound(temps)
			Print #5,"temps("; dbugi; "):"; temps(dbugi)
		Next
		Print #5,"---------------"
	EndIf
	Dim As Integer i,x,low,hi,lows(),his()
	Select Case c
		Case 0 'undefined array depth, to be defined via redim
			macro_variables_info(variable_number,5)="pending array depth"
		Case 1 '1d
			If InStr(temp," to ") Then
				x=InStr(temp," to ")
				low=CInt(Left(temp,x-1))
				hi=CInt(Mid(temp,x+4))
			Else
				low=0
				hi=CInt(temp)
			EndIf
			If dim_params="redim" And macro_variables_info(variable_number,5)="1d" Then
				Select Case macro_variables_info(variable_number,3)
					Case "1"
						ReDim macro_variables_string_array_1d_1(low To hi)
					Case "2"
						ReDim macro_variables_string_array_1d_2(low To hi)
					Case "3"
						ReDim macro_variables_string_array_1d_3(low To hi)
					Case "4"
						ReDim macro_variables_string_array_1d_4(low To hi)
					Case "5"
						ReDim macro_variables_string_array_1d_5(low To hi)
					Case "6"
						ReDim macro_variables_string_array_1d_6(low To hi)
					Case "7"
						ReDim macro_variables_string_array_1d_7(low To hi)
					Case "8"
						ReDim macro_variables_string_array_1d_8(low To hi)
					Case "9"
						ReDim macro_variables_string_array_1d_9(low To hi)
				End Select
			Else
				If dim_params="redim preserve" And macro_variables_info(variable_number,5)="1d" Then
					Select Case macro_variables_info(variable_number,3)
						Case "1"
							ReDim Preserve macro_variables_string_array_1d_1(low To hi)
						Case "2"
							ReDim Preserve macro_variables_string_array_1d_2(low To hi)
						Case "3"
							ReDim Preserve macro_variables_string_array_1d_3(low To hi)
						Case "4"
							ReDim Preserve macro_variables_string_array_1d_4(low To hi)
						Case "5"
							ReDim Preserve macro_variables_string_array_1d_5(low To hi)
						Case "6"
							ReDim Preserve macro_variables_string_array_1d_6(low To hi)
						Case "7"
							ReDim Preserve macro_variables_string_array_1d_7(low To hi)
						Case "8"
							ReDim Preserve macro_variables_string_array_1d_8(low To hi)
						Case "9"
							ReDim Preserve macro_variables_string_array_1d_9(low To hi)
					End Select
				Else
					If macro_variables_info(variable_number,6)<>"" Then
						Select Case macro_variables_info(variable_number,6)
							Case "1"
								ReDim macro_variables_string_array_1d_1(low To hi)
							Case "2"
								ReDim macro_variables_string_array_1d_2(low To hi)
							Case "3"
								ReDim macro_variables_string_array_1d_3(low To hi)
							Case "4"
								ReDim macro_variables_string_array_1d_4(low To hi)
							Case "5"
								ReDim macro_variables_string_array_1d_5(low To hi)
							Case "6"
								ReDim macro_variables_string_array_1d_6(low To hi)
							Case "7"
								ReDim macro_variables_string_array_1d_7(low To hi)
							Case "8"
								ReDim macro_variables_string_array_1d_8(low To hi)
							Case "9"
								ReDim macro_variables_string_array_1d_9(low To hi)
						End Select
					Else
						macro_variables_info(variable_number,5)="1d"
						macro_variables_string_array_1d_c+=1
						macro_variables_info(variable_number,3)=LTrim(RTrim(Str(macro_variables_string_array_1d_c)))
						macro_variables_info(variable_number,6)=macro_variables_info(variable_number,3)
						Select Case macro_variables_string_array_1d_c
							Case 1
								ReDim macro_variables_string_array_1d_1(low To hi)
							Case 2
								ReDim macro_variables_string_array_1d_2(low To hi)
							Case 3
								ReDim macro_variables_string_array_1d_3(low To hi)
							Case 4
								ReDim macro_variables_string_array_1d_4(low To hi)
							Case 5
								ReDim macro_variables_string_array_1d_5(low To hi)
							Case 6
								ReDim macro_variables_string_array_1d_6(low To hi)
							Case 7
								ReDim macro_variables_string_array_1d_7(low To hi)
							Case 8
								ReDim macro_variables_string_array_1d_8(low To hi)
							Case 9
								ReDim macro_variables_string_array_1d_9(low To hi)
						End Select
					EndIf
				EndIf
			EndIf
		Case 2 '2d
			ReDim lows(2),his(2)
			For i=1 To 2
				temp=temps(i)		
				If InStr(temp," to ") Then
					x=InStr(temp," to ")
					lows(i)=CInt(Left(temp,x-1))
					his(i)=CInt(Mid(temp,x+4))
				Else
					lows(i)=0
					his(i)=CInt(temp)
				EndIf
			Next
			If dim_params="redim" And macro_variables_info(variable_number,5)="2d" Then
				Select Case macro_variables_info(variable_number,3)
					Case "1"
						ReDim macro_variables_string_array_2d_1(lows(1) To his(1),lows(2) To his(2))
					Case "2"
						ReDim macro_variables_string_array_2d_2(lows(1) To his(1),lows(2) To his(2))
					Case "3"
						ReDim macro_variables_string_array_2d_3(lows(1) To his(1),lows(2) To his(2))
					Case "4"
						ReDim macro_variables_string_array_2d_4(lows(1) To his(1),lows(2) To his(2))
					Case "5"
						ReDim macro_variables_string_array_2d_5(lows(1) To his(1),lows(2) To his(2))
					Case "6"
						ReDim macro_variables_string_array_2d_6(lows(1) To his(1),lows(2) To his(2))
					Case "7"
						ReDim macro_variables_string_array_2d_7(lows(1) To his(1),lows(2) To his(2))
					Case "8"
						ReDim macro_variables_string_array_2d_8(lows(1) To his(1),lows(2) To his(2))
					Case "9"
						ReDim macro_variables_string_array_2d_9(lows(1) To his(1),lows(2) To his(2))
				End Select
			Else
				If dim_params="redim preserve" And macro_variables_info(variable_number,5)="2d" Then
					Select Case macro_variables_info(variable_number,3)
						Case "1"
							ReDim Preserve macro_variables_string_array_2d_1(lows(1) To his(1),lows(2) To his(2))
						Case "2"
							ReDim Preserve macro_variables_string_array_2d_2(lows(1) To his(1),lows(2) To his(2))
						Case "3"
							ReDim Preserve macro_variables_string_array_2d_3(lows(1) To his(1),lows(2) To his(2))
						Case "4"
							ReDim Preserve macro_variables_string_array_2d_4(lows(1) To his(1),lows(2) To his(2))
						Case "5"
							ReDim Preserve macro_variables_string_array_2d_5(lows(1) To his(1),lows(2) To his(2))
						Case "6"
							ReDim Preserve macro_variables_string_array_2d_6(lows(1) To his(1),lows(2) To his(2))
						Case "7"
							ReDim Preserve macro_variables_string_array_2d_7(lows(1) To his(1),lows(2) To his(2))
						Case "8"
							ReDim Preserve macro_variables_string_array_2d_8(lows(1) To his(1),lows(2) To his(2))
						Case "9"
							ReDim Preserve macro_variables_string_array_2d_9(lows(1) To his(1),lows(2) To his(2))
					End Select
				Else
					If macro_variables_info(variable_number,7)<>"" Then
						Select Case macro_variables_info(variable_number,7)
							Case "1"
								ReDim macro_variables_string_array_2d_1(lows(1) To his(1),lows(2) To his(2))
							Case "2"
								ReDim macro_variables_string_array_2d_2(lows(1) To his(1),lows(2) To his(2))
							Case "3"
								ReDim macro_variables_string_array_2d_3(lows(1) To his(1),lows(2) To his(2))
							Case "4"
								ReDim macro_variables_string_array_2d_4(lows(1) To his(1),lows(2) To his(2))
							Case "5"
								ReDim macro_variables_string_array_2d_5(lows(1) To his(1),lows(2) To his(2))
							Case "6"
								ReDim macro_variables_string_array_2d_6(lows(1) To his(1),lows(2) To his(2))
							Case "7"
								ReDim macro_variables_string_array_2d_7(lows(1) To his(1),lows(2) To his(2))
							Case "8"
								ReDim macro_variables_string_array_2d_8(lows(1) To his(1),lows(2) To his(2))
							Case "9"
								ReDim macro_variables_string_array_2d_9(lows(1) To his(1),lows(2) To his(2))
						End Select
					Else
						macro_variables_info(variable_number,5)="2d"
						macro_variables_string_array_2d_c+=1
						macro_variables_info(variable_number,3)=LTrim(RTrim(Str(macro_variables_string_array_2d_c)))
						macro_variables_info(variable_number,7)=macro_variables_info(variable_number,3)
						Select Case macro_variables_string_array_2d_c
							Case 1
								ReDim macro_variables_string_array_2d_1(lows(1) To his(1),lows(2) To his(2))
							Case 2
								ReDim macro_variables_string_array_2d_2(lows(1) To his(1),lows(2) To his(2))
							Case 3
								ReDim macro_variables_string_array_2d_3(lows(1) To his(1),lows(2) To his(2))
							Case 4
								ReDim macro_variables_string_array_2d_4(lows(1) To his(1),lows(2) To his(2))
							Case 5
								ReDim macro_variables_string_array_2d_5(lows(1) To his(1),lows(2) To his(2))
							Case 6
								ReDim macro_variables_string_array_2d_6(lows(1) To his(1),lows(2) To his(2))
							Case 7
								ReDim macro_variables_string_array_2d_7(lows(1) To his(1),lows(2) To his(2))
							Case 8
								ReDim macro_variables_string_array_2d_8(lows(1) To his(1),lows(2) To his(2))
							Case 9
								ReDim macro_variables_string_array_2d_9(lows(1) To his(1),lows(2) To his(2))
						End Select
					EndIf
				EndIf
			EndIf
		Case 3 '3d
			ReDim lows(3),his(3)
			For i=1 To 3
				temp=temps(i)		
				If InStr(temp," to ") Then
					x=InStr(temp," to ")
					lows(i)=CInt(Left(temp,x-1))
					his(i)=CInt(Mid(temp,x+4))
				Else
					lows(i)=0
					his(i)=CInt(temp)
				EndIf
			Next
			If dim_params="redim" And macro_variables_info(variable_number,5)="3d" Then
				Select Case macro_variables_info(variable_number,3)
					Case "1"
						ReDim macro_variables_string_array_3d_1(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "2"
						ReDim macro_variables_string_array_3d_2(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "3"
						ReDim macro_variables_string_array_3d_3(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "4"
						ReDim macro_variables_string_array_3d_4(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "5"
						ReDim macro_variables_string_array_3d_5(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "6"
						ReDim macro_variables_string_array_3d_6(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "7"
						ReDim macro_variables_string_array_3d_7(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "8"
						ReDim macro_variables_string_array_3d_8(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					Case "9"
						ReDim macro_variables_string_array_3d_9(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
				End Select
			Else
				If dim_params="redim preserve" And macro_variables_info(variable_number,5)="3d" Then
					Select Case macro_variables_info(variable_number,3)
						Case "1"
							ReDim Preserve macro_variables_string_array_3d_1(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "2"
							ReDim Preserve macro_variables_string_array_3d_2(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "3"
							ReDim Preserve macro_variables_string_array_3d_3(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "4"
							ReDim Preserve macro_variables_string_array_3d_4(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "5"
							ReDim Preserve macro_variables_string_array_3d_5(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "6"
							ReDim Preserve macro_variables_string_array_3d_6(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "7"
							ReDim Preserve macro_variables_string_array_3d_7(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "8"
							ReDim Preserve macro_variables_string_array_3d_8(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						Case "9"
							ReDim Preserve macro_variables_string_array_3d_9(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
					End Select
				Else
					If macro_variables_info(variable_number,8)<>"" Then
						Select Case macro_variables_info(variable_number,8)
							Case "1"
								ReDim macro_variables_string_array_3d_1(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "2"
								ReDim macro_variables_string_array_3d_2(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "3"
								ReDim macro_variables_string_array_3d_3(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "4"
								ReDim macro_variables_string_array_3d_4(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "5"
								ReDim macro_variables_string_array_3d_5(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "6"
								ReDim macro_variables_string_array_3d_6(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "7"
								ReDim macro_variables_string_array_3d_7(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "8"
								ReDim macro_variables_string_array_3d_8(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case "9"
								ReDim macro_variables_string_array_3d_9(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						End Select
					Else
						macro_variables_info(variable_number,5)="3d"
						macro_variables_string_array_3d_c+=1
						macro_variables_info(variable_number,3)=LTrim(RTrim(Str(macro_variables_string_array_3d_c)))
						macro_variables_info(variable_number,8)=macro_variables_info(variable_number,3)
						Select Case macro_variables_string_array_3d_c
							Case 1
								ReDim macro_variables_string_array_3d_1(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 2
								ReDim macro_variables_string_array_3d_2(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 3
								ReDim macro_variables_string_array_3d_3(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 4
								ReDim macro_variables_string_array_3d_4(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 5
								ReDim macro_variables_string_array_3d_5(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 6
								ReDim macro_variables_string_array_3d_6(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 7
								ReDim macro_variables_string_array_3d_7(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 8
								ReDim macro_variables_string_array_3d_8(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
							Case 9
								ReDim macro_variables_string_array_3d_9(lows(1) To his(1),lows(2) To his(2),lows(3) To his(3))
						End Select
					EndIf
				EndIf
			EndIf
	End Select
End Sub

Function find_delimeter(temp As String,delimiter As String) As Integer
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Function find_delimeter"
		Print #5,"temp:";temp
		'For dbugi=LBound(temp) To UBound(temp)
			'Print #5,"temp("; dbugi; "):"; temp(dbugi)
		'Next
		Print #5,"---------------"
	EndIf
	'returns first comma not inside quotes or parins
	Dim As Integer quote_c, quote_x_start(), quote_x_end()
	Dim As Integer i,x,delimiter_x,openp_c,closep_c,openb_c,closeb_c,openc_c,closec_c
	Dim As BOOLEAN delimiter_found,quote,has_quotes,skip
	
	If InStr(temp,Chr(34)) Then
		has_quotes=TRUE
		quote=FALSE
		For i=1 To Len(temp)
			Select Case Mid(temp,i,1)
				Case Chr(34)
					If quote=FALSE Then
						quote=TRUE
						quote_c+=1
						ReDim Preserve quote_x_start(quote_c)
						ReDim Preserve quote_x_end(quote_c)
						quote_x_start(quote_c)=i
					Else
						quote=FALSE
						quote_x_end(quote_c)=i
					EndIf
			End Select
		Next
	EndIf

	
	delimiter_found=FALSE
	delimiter_x=0
	For x=1 To Len(temp)
		skip=FALSE
		If has_quotes=TRUE Then
			For i=1 To quote_c
				If x>=quote_x_start(i) And x<=quote_x_end(i) Then
					skip=TRUE
					x=quote_x_end(i)
					Exit For
				EndIf
			Next
		EndIf
		If skip=FALSE Then
			If Mid(temp,x,1)="(" Then openp_c+=1
			If Mid(temp,x,1)=")" Then closep_c+=1
			If Mid(temp,x,1)="[" Then openb_c+=1
			If Mid(temp,x,1)="]" Then closeb_c+=1
			If Mid(temp,x,1)="{" Then openc_c+=1
			If Mid(temp,x,1)="}" Then closec_c+=1
			If Mid(temp,x,1)=delimiter Then
				If openp_c=closep_c And openb_c=closeb_c And openc_c=closec_c Then
					delimiter_found=TRUE
					delimiter_x=x
					Exit For
				EndIf
			EndIf
		EndIf
	Next
	If delimiter_found=TRUE Then
		Return delimiter_x
	Else
		Return 0
	EndIf
End Function

Function evaluate_string_numeric_expression(temp As String) As String
	'todo
	'replace note: "is part of a word" with "skip this one"
	
	'arithmetic_op_cmd(7)=" mod " are padded with spaces now
	'arithmetic_op_cmd(8)=" shl " so fix all code to handle the spaces
	'arithmetic_op_cmd(9)=" shr "
	
	
	
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Function evaluate_string_numeric_expression"
		Print #5,"temp:";temp
		'For dbugi=LBound(temp) To UBound(temp)
			'Print #5,"temp("; dbugi; "):"; temp(dbugi)
		'Next
		Print #5,"---------------"
	EndIf
	Dim As Integer i,j,k,x
	Dim As Double n
	Dim As String s
	Dim As BOOLEAN _
		is_numeric_only, _
		is_variable_only, _
		has_numerics, _
		has_variables, _
		has_arithmetic_op, _
		has_bitwise_op, _
		has_math_dtc_op, _
		has_conditional_op, _
		has_quotes, _
		has_strings, _
		has_string_op
	
	Dim As Integer numerics_c, numerics_x()
	Dim As Double numerics()
	Dim As String numerics_s()
	Dim As Integer variables_c, variables_x()
	Dim As String variables(), variables_value(),variables_type()
	Dim As BOOLEAN variable_found
	Dim As Integer arithmetic_op_c, arithmetic_op_x()
	Dim As String arithmetic_op()
	Dim As Integer bitwise_op_c, bitwise_op_x()
	Dim As String bitwise_op()
	Dim As Integer math_dtc_op_c, math_dtc_op_x()
	Dim As String math_dtc_op()
	Dim As Integer conditional_op_c, conditional_op_x()
	Dim As String conditional_op()
	Dim As Integer string_op_c, string_op_x()
	Dim As String string_op()
	Dim As String temp_number
	Dim As String temp_alpha
	Dim As BOOLEAN skip
	Dim As String t
	Dim As Integer prin,prinmax,prinplus,prin_math_dtc_op(100)
	Dim As Integer opnc,opfc,opfn(100),opf_priority(100)
	Dim As Double opn(200)
	Dim As String opn_type(200)
	Dim As String opf(100)
	Dim As BOOLEAN opset
	Dim As Byte n_boolean
	Dim As Byte n_byte
	Dim As UByte n_ubyte
	Dim As Short n_short
	Dim As UShort n_ushort
	Dim As Long n_long
	Dim As ULong n_ulong
	Dim As Integer n_integer
	Dim As UInteger n_uinteger
	Dim As LongInt n_longint
	Dim As ULongInt n_ulongint
	Dim As Single n_single
	Dim As String n_string
	Dim As BOOLEAN quote,is_string
	Dim As String temp_minus_quoted_text,temp_with_quoted_text
	Dim As Integer quote_c, quote_x_start(), quote_x_end()
	Dim As String quoted_text()
	Dim As Integer openprin_c,closeprin_c,openprin_x,closeprin_x
	Dim As String string_command
	Dim As Integer string_command_length
	Dim As Integer comma_delimeter_x
	Dim As String s1,s2,s3
	Dim As Integer qx
	Dim As String arithmetic_op_cmd(10)
	Dim As Integer arithmetic_op_cmd_c,arithmetic_op_cmd_len
	Dim As String bitwise_op_cmd(8)
	Dim As Integer bitwise_op_cmd_c,bitwise_op_cmd_len
	Dim As String math_dtc_op_cmd(31)
	Dim As Integer math_dtc_op_cmd_c,math_dtc_op_cmd_len
	Dim As Integer aoi,lhsqti,rhsqti,lhsvi,rhsvi,lhs_qt_v,rhs_qt_v
	Dim As String  concatenation
	
	arithmetic_op_cmd_c=10
	arithmetic_op_cmd(1)="&"
	arithmetic_op_cmd(2)="+"
	arithmetic_op_cmd(3)="-"
	arithmetic_op_cmd(4)="*"
	arithmetic_op_cmd(5)="/"
	arithmetic_op_cmd(6)="\"
	arithmetic_op_cmd(7)="^"
	arithmetic_op_cmd(8)=" mod "
	arithmetic_op_cmd(9)=" shl "
	arithmetic_op_cmd(10)=" shr "
	
	bitwise_op_cmd_c=8
	bitwise_op_cmd(1)="not "
	bitwise_op_cmd(2)=" and "
	bitwise_op_cmd(3)=" or "
	bitwise_op_cmd(4)=" eqv "
	bitwise_op_cmd(5)=" imp "
	bitwise_op_cmd(6)=" xor "
	bitwise_op_cmd(7)=" andalso "
	bitwise_op_cmd(8)=" orelse "
	
	math_dtc_op_cmd_c=31
	math_dtc_op_cmd(1)="cbyte("
	math_dtc_op_cmd(2)="cubyte("
	math_dtc_op_cmd(3)="cshort("
	math_dtc_op_cmd(4)="cushort("
	math_dtc_op_cmd(5)="clng("
	math_dtc_op_cmd(6)="culng("
	math_dtc_op_cmd(7)="cint("
	math_dtc_op_cmd(8)="cuint("
	math_dtc_op_cmd(9)="clngint("
	math_dtc_op_cmd(10)="culngint("
	math_dtc_op_cmd(11)="csign("
	math_dtc_op_cmd(12)="cunsg("
	math_dtc_op_cmd(13)="csng("
	math_dtc_op_cmd(14)="cdbl("
	math_dtc_op_cmd(15)="cbool("
	math_dtc_op_cmd(16)="abs("
	math_dtc_op_cmd(17)="acos("
	math_dtc_op_cmd(18)="asin("
	math_dtc_op_cmd(19)="atan2("
	math_dtc_op_cmd(20)="atn("
	math_dtc_op_cmd(21)="cos("
	math_dtc_op_cmd(22)="exp("
	math_dtc_op_cmd(23)="fix("
	math_dtc_op_cmd(24)="frac("
	math_dtc_op_cmd(25)="int("
	math_dtc_op_cmd(26)="log("
	math_dtc_op_cmd(27)="rnd("
	math_dtc_op_cmd(28)="sgn("
	math_dtc_op_cmd(29)="sin("
	math_dtc_op_cmd(30)="sqr("
	math_dtc_op_cmd(31)="tan("

	
	
	'string functions
	If _
		InStr(temp,"chr(") Or _
		InStr(temp,"str(") Or _
		InStr(temp,"lcase(") Or _
		InStr(temp,"ucase(") Or _
		InStr(temp,"string(") Or _
		InStr(temp,"space(") Or _
		InStr(temp,"right(") Or _
		InStr(temp,"left(") Or _
		InStr(temp,"mid(") Or _
		InStr(temp,"trim(") Or _
		InStr(temp,"ltrim(") Or _
		InStr(temp,"rtrim(") Or _
		InStr(temp,"instr(") Or _
		InStr(temp,"instrrev(") Or _
		InStr(temp,"len(") Or _
		InStr(temp,"asc(") Or _
		InStr(temp,"val(") _
	Then
		
		has_quotes=FALSE
		quote_c=0
		ReDim quote_x_start(quote_c)
		ReDim quote_x_end(quote_c)
		If InStr(temp,Chr(34)) Then
			has_quotes=TRUE
			qx=InStr(temp,Chr(34))
			Do While qx<>0
				quote_c+=1
				ReDim Preserve quote_x_start(quote_c)
				ReDim Preserve quote_x_end(quote_c)
				quote_x_start(quote_c)=qx
				qx=InStr(qx+1,temp,Chr(34))
				If Mid(temp,qx+1,1)= Chr(34) Then
					qx+=1
					qx=InStr(qx+1,temp,Chr(34))
					qx+=1
					qx=InStr(qx+1,temp,Chr(34))
					quote_x_end(quote_c)=qx
				Else
					quote_x_end(quote_c)=qx
				EndIf
				qx=InStr(qx+1,temp,Chr(34))
			Loop
		EndIf
		
		string_command="chr("
		string_command_length=Len(string_command)
		If InStr(temp,string_command) Then
			x=InStr(temp,string_command)
			Do While x<>0
				skip=FALSE
				If has_quotes=TRUE Then
					For i=1 To quote_c
						Select Case x
							Case quote_x_start(i) To quote_x_end(i)
								skip=TRUE
								x=quote_x_end(i)
								Exit For
						End Select
					Next
				EndIf
				If skip=FALSE Then
					openprin_c=0
					closeprin_c=0
					For i=x+string_command_length To Len(temp)
						If Mid(temp,i,1)="(" Then openprin_c+=1
						If Mid(temp,i,1)=")" Then closeprin_c+=1
						If closeprin_c>openprin_c Then
							s1=Mid(temp,x+string_command_length,i-(string_command_length+1))
							s1=full_evaluate_expression(s1)
							s1=Chr(34)+Chr(CInt(s1))+Chr(34)
							temp=Left(temp,x-1)+s1+Mid(temp,i+1)
							has_quotes=FALSE
							quote_c=0
							ReDim quote_x_start(quote_c)
							ReDim quote_x_end(quote_c)
							If InStr(temp,Chr(34)) Then
								has_quotes=TRUE
								qx=InStr(temp,Chr(34))
								Do While qx<>0
									quote_c+=1
									ReDim Preserve quote_x_start(quote_c)
									ReDim Preserve quote_x_end(quote_c)
									quote_x_start(quote_c)=qx
									qx=InStr(qx+1,temp,Chr(34))
									If Mid(temp,qx+1,1)= Chr(34) Then
										qx+=1
										qx=InStr(qx+1,temp,Chr(34))
										qx+=1
										qx=InStr(qx+1,temp,Chr(34))
										quote_x_end(quote_c)=qx
									Else
										quote_x_end(quote_c)=qx
									EndIf
									qx=InStr(qx+1,temp,Chr(34))
								Loop
							EndIf
							Exit For
						EndIf
					Next
					x=InStr(x+1,temp,string_command)
				Else
					x=InStr(x+1,temp,string_command)
				EndIf
			Loop
		EndIf
		
		string_command="str("
		string_command_length=Len(string_command)
		If InStr(temp,string_command) Then
			x=InStr(temp,string_command)
			Do While x<>0
				skip=FALSE
				If has_quotes=TRUE Then
					For i=1 To quote_c
						Select Case x
							Case quote_x_start(i) To quote_x_end(i)
								skip=TRUE
								x=quote_x_end(i)
								Exit For
						End Select
					Next
				EndIf
				If skip=FALSE Then
					If Mid(temp,x-2,2)<>"in" Then
						openprin_c=0
						closeprin_c=0
						For i=x+string_command_length To Len(temp)
							If Mid(temp,i,1)="(" Then openprin_c+=1
							If Mid(temp,i,1)=")" Then closeprin_c+=1
							If closeprin_c>openprin_c Then
								s1=Mid(temp,x+string_command_length,i-(string_command_length+1))
								s1=full_evaluate_expression(s1)
								s1=Chr(34)+LTrim(Str(s1))+Chr(34)
								temp=Left(temp,x-1)+s1+Mid(temp,i+1)
								has_quotes=FALSE
								quote_c=0
								ReDim quote_x_start(quote_c)
								ReDim quote_x_end(quote_c)
								If InStr(temp,Chr(34)) Then
									has_quotes=TRUE
									qx=InStr(temp,Chr(34))
									Do While qx<>0
										quote_c+=1
										ReDim Preserve quote_x_start(quote_c)
										ReDim Preserve quote_x_end(quote_c)
										quote_x_start(quote_c)=qx
										qx=InStr(qx+1,temp,Chr(34))
										If Mid(temp,qx+1,1)= Chr(34) Then
											qx+=1
											qx=InStr(qx+1,temp,Chr(34))
											qx+=1
											qx=InStr(qx+1,temp,Chr(34))
											quote_x_end(quote_c)=qx
										Else
											quote_x_end(quote_c)=qx
										EndIf
										qx=InStr(qx+1,temp,Chr(34))
									Loop
								EndIf
								Exit For
							EndIf
						Next
					EndIf
					x=InStr(x+1,temp,string_command)
				Else
					x=InStr(x+1,temp,string_command)
				EndIf
			Loop
		EndIf
		
		string_command="lcase("
		string_command_length=Len(string_command)
		If InStr(temp,string_command) Then
			x=InStr(temp,string_command)
			Do While x<>0
				skip=FALSE
				If has_quotes=TRUE Then
					For i=1 To quote_c
						Select Case x
							Case quote_x_start(i) To quote_x_end(i)
								skip=TRUE
								x=quote_x_end(i)
								Exit For
						End Select
					Next
				EndIf
				If skip=FALSE Then
					openprin_c=0
					closeprin_c=0
					For i=x+string_command_length To Len(temp)
						If Mid(temp,i,1)="(" Then openprin_c+=1
						If Mid(temp,i,1)=")" Then closeprin_c+=1
						If closeprin_c>openprin_c Then
							s1=Mid(temp,x+string_command_length,i-(string_command_length+1))
							s1=full_evaluate_expression(s1)
							s1=Chr(34)+LCase(s1)+Chr(34)
							temp=Left(temp,x-1)+s1+Mid(temp,i+1)
							has_quotes=FALSE
							quote_c=0
							ReDim quote_x_start(quote_c)
							ReDim quote_x_end(quote_c)
							If InStr(temp,Chr(34)) Then
								has_quotes=TRUE
								qx=InStr(temp,Chr(34))
								Do While qx<>0
									quote_c+=1
									ReDim Preserve quote_x_start(quote_c)
									ReDim Preserve quote_x_end(quote_c)
									quote_x_start(quote_c)=qx
									qx=InStr(qx+1,temp,Chr(34))
									If Mid(temp,qx+1,1)= Chr(34) Then
										qx+=1
										qx=InStr(qx+1,temp,Chr(34))
										qx+=1
										qx=InStr(qx+1,temp,Chr(34))
										quote_x_end(quote_c)=qx
									Else
										quote_x_end(quote_c)=qx
									EndIf
									qx=InStr(qx+1,temp,Chr(34))
								Loop
							EndIf
							Exit For
						EndIf
					Next
					x=InStr(x+1,temp,string_command)
				Else
					x=InStr(x+1,temp,string_command)
				EndIf
			Loop
		EndIf
		
		string_command="ucase("
		string_command_length=Len(string_command)
		If InStr(temp,string_command) Then
			x=InStr(temp,string_command)
			Do While x<>0
				skip=FALSE
				If has_quotes=TRUE Then
					For i=1 To quote_c
						Select Case x
							Case quote_x_start(i) To quote_x_end(i)
								skip=TRUE
								x=quote_x_end(i)
								Exit For
						End Select
					Next
				EndIf
				If skip=FALSE Then
					openprin_c=0
					closeprin_c=0
					For i=x+string_command_length To Len(temp)
						If Mid(temp,i,1)="(" Then openprin_c+=1
						If Mid(temp,i,1)=")" Then closeprin_c+=1
						If closeprin_c>openprin_c Then
							s1=Mid(temp,x+string_command_length,i-(string_command_length+1))
							s1=full_evaluate_expression(s1)
							s1=Chr(34)+UCase(s1)+Chr(34)
							temp=Left(temp,x-1)+s1+Mid(temp,i+1)
							has_quotes=FALSE
							quote_c=0
							ReDim quote_x_start(quote_c)
							ReDim quote_x_end(quote_c)
							If InStr(temp,Chr(34)) Then
								has_quotes=TRUE
								qx=InStr(temp,Chr(34))
								Do While qx<>0
									quote_c+=1
									ReDim Preserve quote_x_start(quote_c)
									ReDim Preserve quote_x_end(quote_c)
									quote_x_start(quote_c)=qx
									qx=InStr(qx+1,temp,Chr(34))
									If Mid(temp,qx+1,1)= Chr(34) Then
										qx+=1
										qx=InStr(qx+1,temp,Chr(34))
										qx+=1
										qx=InStr(qx+1,temp,Chr(34))
										quote_x_end(quote_c)=qx
									Else
										quote_x_end(quote_c)=qx
									EndIf
									qx=InStr(qx+1,temp,Chr(34))
								Loop
							EndIf
							Exit For
						EndIf
					Next
					x=InStr(x+1,temp,string_command)
				Else
					x=InStr(x+1,temp,string_command)
				EndIf
			Loop
		EndIf
		
		string_command="string("
		string_command_length=Len(string_command)
		If InStr(temp,string_command) Then
			x=InStr(temp,string_command)
			Do While x<>0
				skip=FALSE
				If has_quotes=TRUE Then
					For i=1 To quote_c
						Select Case x
							Case quote_x_start(i) To quote_x_end(i)
								skip=TRUE
								x=quote_x_end(i)
								Exit For
						End Select
					Next
				EndIf
				If skip=FALSE Then
					openprin_c=0
					closeprin_c=0
					For i=x+string_command_length To Len(temp)
						If Mid(temp,i,1)="(" Then openprin_c+=1
						If Mid(temp,i,1)=")" Then closeprin_c+=1
						If closeprin_c>openprin_c Then
							comma_delimeter_x=find_delimeter(Mid(temp,x+string_command_length,i-(string_command_length+1)),",")
							s1=Mid(temp,x+string_command_length,comma_delimeter_x-1)
							s2=Mid(temp,x+string_command_length+comma_delimeter_x,i-(x+string_command_length+comma_delimeter_x))
							s1=full_evaluate_expression(s1)
							If LTrim(Str(Val(s2)))=LTrim(RTrim(s2)) Then
								s2=full_evaluate_expression(s2)
								s1=Chr(34)+String(CInt(s1),CInt(s2))+Chr(34)
							Else
								s2=full_evaluate_expression(s2)
								s1=Chr(34)+String(CInt(s1),s2)+Chr(34)
							EndIf
							temp=Left(temp,x-1)+s1+Mid(temp,i+1)
							has_quotes=FALSE
							quote_c=0
							ReDim quote_x_start(quote_c)
							ReDim quote_x_end(quote_c)
							If InStr(temp,Chr(34)) Then
								has_quotes=TRUE
								qx=InStr(temp,Chr(34))
								Do While qx<>0
									quote_c+=1
									ReDim Preserve quote_x_start(quote_c)
									ReDim Preserve quote_x_end(quote_c)
									quote_x_start(quote_c)=qx
									qx=InStr(qx+1,temp,Chr(34))
									If Mid(temp,qx+1,1)= Chr(34) Then
										qx+=1
										qx=InStr(qx+1,temp,Chr(34))
										qx+=1
										qx=InStr(qx+1,temp,Chr(34))
										quote_x_end(quote_c)=qx
									Else
										quote_x_end(quote_c)=qx
									EndIf
									qx=InStr(qx+1,temp,Chr(34))
								Loop
							EndIf
							Exit For
						EndIf
					Next
					x=InStr(x+1,temp,string_command)
				Else
					x=InStr(x+1,temp,string_command)
				EndIf
			Loop
		EndIf
		
		string_command="space("
		string_command_length=Len(string_command)
		If InStr(temp,string_command) Then
			x=InStr(temp,string_command)
			Do While x<>0
				skip=FALSE
				If has_quotes=TRUE Then
					For i=1 To quote_c
						Select Case x
							Case quote_x_start(i) To quote_x_end(i)
								skip=TRUE
								x=quote_x_end(i)
								Exit For
						End Select
					Next
				EndIf
				If skip=FALSE Then
					openprin_c=0
					closeprin_c=0
					For i=x+string_command_length To Len(temp)
						If Mid(temp,i,1)="(" Then openprin_c+=1
						If Mid(temp,i,1)=")" Then closeprin_c+=1
						If closeprin_c>openprin_c Then
							s1=Mid(temp,x+string_command_length,i-(string_command_length+1))
							s1=full_evaluate_expression(s1)
							s1=Chr(34)+Space(CInt(s1))+Chr(34)
							temp=Left(temp,x-1)+s1+Mid(temp,i+1)
							has_quotes=FALSE
							quote_c=0
							ReDim quote_x_start(quote_c)
							ReDim quote_x_end(quote_c)
							If InStr(temp,Chr(34)) Then
								has_quotes=TRUE
								qx=InStr(temp,Chr(34))
								Do While qx<>0
									quote_c+=1
									ReDim Preserve quote_x_start(quote_c)
									ReDim Preserve quote_x_end(quote_c)
									quote_x_start(quote_c)=qx
									qx=InStr(qx+1,temp,Chr(34))
									If Mid(temp,qx+1,1)= Chr(34) Then
										qx+=1
										qx=InStr(qx+1,temp,Chr(34))
										qx+=1
										qx=InStr(qx+1,temp,Chr(34))
										quote_x_end(quote_c)=qx
									Else
										quote_x_end(quote_c)=qx
									EndIf
									qx=InStr(qx+1,temp,Chr(34))
								Loop
							EndIf
							Exit For
						EndIf
					Next
					x=InStr(x+1,temp,string_command)
				Else
					x=InStr(x+1,temp,string_command)
				EndIf
			Loop
		EndIf
		
		string_command="right("
		string_command_length=Len(string_command)
		If InStr(temp,string_command) Then
			x=InStr(temp,string_command)
			Do While x<>0
				skip=FALSE
				If has_quotes=TRUE Then
					For i=1 To quote_c
						Select Case x
							Case quote_x_start(i) To quote_x_end(i)
								skip=TRUE
								x=quote_x_end(i)
								Exit For
						End Select
					Next
				EndIf
				If skip=FALSE Then
					openprin_c=0
					closeprin_c=0
					For i=x+string_command_length To Len(temp)
						If Mid(temp,i,1)="(" Then openprin_c+=1
						If Mid(temp,i,1)=")" Then closeprin_c+=1
						If closeprin_c>openprin_c Then
							comma_delimeter_x=find_delimeter(Mid(temp,x+string_command_length,i-(string_command_length+1)),",")
							s1=Mid(temp,x+string_command_length,comma_delimeter_x-1)
							s2=Mid(temp,x+string_command_length+comma_delimeter_x,i-(string_command_length+3))
							s1=full_evaluate_expression(s1)
							s2=full_evaluate_expression(s2)
							s1=Chr(34)+Right(s1,CInt(s2))+Chr(34)
							temp=Left(temp,x-1)+s1+Mid(temp,i+1)
							has_quotes=FALSE
							quote_c=0
							ReDim quote_x_start(quote_c)
							ReDim quote_x_end(quote_c)
							If InStr(temp,Chr(34)) Then
								has_quotes=TRUE
								qx=InStr(temp,Chr(34))
								Do While qx<>0
									quote_c+=1
									ReDim Preserve quote_x_start(quote_c)
									ReDim Preserve quote_x_end(quote_c)
									quote_x_start(quote_c)=qx
									qx=InStr(qx+1,temp,Chr(34))
									If Mid(temp,qx+1,1)= Chr(34) Then
										qx+=1
										qx=InStr(qx+1,temp,Chr(34))
										qx+=1
										qx=InStr(qx+1,temp,Chr(34))
										quote_x_end(quote_c)=qx
									Else
										quote_x_end(quote_c)=qx
									EndIf
									qx=InStr(qx+1,temp,Chr(34))
								Loop
							EndIf
							Exit For
						EndIf
					Next
					x=InStr(x+1,temp,string_command)
				Else
					x=InStr(x+1,temp,string_command)
				EndIf
			Loop
		EndIf
		
		string_command="left("
		string_command_length=Len(string_command)
		If InStr(temp,string_command) Then
			x=InStr(temp,string_command)
			Do While x<>0
				skip=FALSE
				If has_quotes=TRUE Then
					For i=1 To quote_c
						Select Case x
							Case quote_x_start(i) To quote_x_end(i)
								skip=TRUE
								x=quote_x_end(i)
								Exit For
						End Select
					Next
				EndIf
				If skip=FALSE Then
					openprin_c=0
					closeprin_c=0
					For i=x+string_command_length To Len(temp)
						If Mid(temp,i,1)="(" Then openprin_c+=1
						If Mid(temp,i,1)=")" Then closeprin_c+=1
						If closeprin_c>openprin_c Then
							comma_delimeter_x=find_delimeter(Mid(temp,x+string_command_length,i-(string_command_length+1)),",")
							s1=Mid(temp,x+string_command_length,comma_delimeter_x-1)
							s2=Mid(temp,x+string_command_length+comma_delimeter_x,i-(string_command_length+3))
							s1=full_evaluate_expression(s1)
							s2=full_evaluate_expression(s2)
							s1=Chr(34)+Left(s1,CInt(s2))+Chr(34)
							temp=Left(temp,x-1)+s1+Mid(temp,i+1)
							has_quotes=FALSE
							quote_c=0
							ReDim quote_x_start(quote_c)
							ReDim quote_x_end(quote_c)
							If InStr(temp,Chr(34)) Then
								has_quotes=TRUE
								qx=InStr(temp,Chr(34))
								Do While qx<>0
									quote_c+=1
									ReDim Preserve quote_x_start(quote_c)
									ReDim Preserve quote_x_end(quote_c)
									quote_x_start(quote_c)=qx
									qx=InStr(qx+1,temp,Chr(34))
									If Mid(temp,qx+1,1)= Chr(34) Then
										qx+=1
										qx=InStr(qx+1,temp,Chr(34))
										qx+=1
										qx=InStr(qx+1,temp,Chr(34))
										quote_x_end(quote_c)=qx
									Else
										quote_x_end(quote_c)=qx
									EndIf
									qx=InStr(qx+1,temp,Chr(34))
								Loop
							EndIf
							Exit For
						EndIf
					Next
					x=InStr(x+1,temp,string_command)
				Else
					x=InStr(x+1,temp,string_command)
				EndIf
			Loop
		EndIf
		
		string_command="mid("
		string_command_length=Len(string_command)
		If InStr(temp,string_command) Then
			x=InStr(temp,string_command)
			Do While x<>0
				skip=FALSE
				If has_quotes=TRUE Then
					For i=1 To quote_c
						Select Case x
							Case quote_x_start(i) To quote_x_end(i)
								skip=TRUE
								x=quote_x_end(i)
								Exit For
						End Select
					Next
				EndIf
				If skip=FALSE Then
					openprin_c=0
					closeprin_c=0
					For i=x+string_command_length To Len(temp)
						If Mid(temp,i,1)="(" Then openprin_c+=1
						If Mid(temp,i,1)=")" Then closeprin_c+=1
						If closeprin_c>openprin_c Then
							comma_delimeter_x=find_delimeter(Mid(temp,x+string_command_length,i-(string_command_length+1)),",")
							s1=Mid(temp,x+string_command_length,comma_delimeter_x-1)
							s2=Mid(temp,x+string_command_length+comma_delimeter_x,i-(string_command_length+3))
							s1=full_evaluate_expression(s1)
							comma_delimeter_x=find_delimeter(s2,",")
							If comma_delimeter_x<>0 Then
								s3=Mid(s2,comma_delimeter_x+1)
								s2=Left(s2,comma_delimeter_x-1)
								s2=full_evaluate_expression(s2)
								s3=full_evaluate_expression(s3)
								s1=Chr(34)+Mid(s1,CInt(s2),CInt(s3))+Chr(34)
								
							Else
								s2=full_evaluate_expression(s2)
								s1=Chr(34)+Mid(s1,CInt(s2))+Chr(34)
							EndIf
							temp=Left(temp,x-1)+s1+Mid(temp,i+1)
							has_quotes=FALSE
							quote_c=0
							ReDim quote_x_start(quote_c)
							ReDim quote_x_end(quote_c)
							If InStr(temp,Chr(34)) Then
								has_quotes=TRUE
								qx=InStr(temp,Chr(34))
								Do While qx<>0
									quote_c+=1
									ReDim Preserve quote_x_start(quote_c)
									ReDim Preserve quote_x_end(quote_c)
									quote_x_start(quote_c)=qx
									qx=InStr(qx+1,temp,Chr(34))
									If Mid(temp,qx+1,1)= Chr(34) Then
										qx+=1
										qx=InStr(qx+1,temp,Chr(34))
										qx+=1
										qx=InStr(qx+1,temp,Chr(34))
										quote_x_end(quote_c)=qx
									Else
										quote_x_end(quote_c)=qx
									EndIf
									qx=InStr(qx+1,temp,Chr(34))
								Loop
							EndIf
							Exit For
						EndIf
					Next
					x=InStr(x+1,temp,string_command)
				Else
					x=InStr(x+1,temp,string_command)
				EndIf
			Loop
		EndIf
		
		string_command="ltrim("
		string_command_length=Len(string_command)
		If InStr(temp,string_command) Then
			x=InStr(temp,string_command)
			Do While x<>0
				skip=FALSE
				If has_quotes=TRUE Then
					For i=1 To quote_c
						Select Case x
							Case quote_x_start(i) To quote_x_end(i)
								skip=TRUE
								x=quote_x_end(i)
								Exit For
						End Select
					Next
				EndIf
				If skip=FALSE Then
					openprin_c=0
					closeprin_c=0
					For i=x+string_command_length To Len(temp)
						If Mid(temp,i,1)="(" Then openprin_c+=1
						If Mid(temp,i,1)=")" Then closeprin_c+=1
						If closeprin_c>openprin_c Then
							s1=Mid(temp,x+string_command_length,i-(string_command_length+1))
							comma_delimeter_x=find_delimeter(s1,",")
							If comma_delimeter_x<>0 Then
								s2=Mid(s1,comma_delimeter_x+1)
								s1=Left(s1,comma_delimeter_x-1)
								s1=full_evaluate_expression(s1)
								s2=full_evaluate_expression(s2)
								If LCase(Left(LTrim(s2),3))="any" Then
									s2=LTrim(s2)
									s2=Mid(s2,4)
									s2=full_evaluate_expression(s2)
									s1=Chr(34)+LTrim(s1,Any s2)+Chr(34)
								Else
									s1=Chr(34)+LTrim(s1,s2)+Chr(34)
								EndIf
								temp=Left(temp,x-1)+s1+Mid(temp,i+1)
							Else
								s1=full_evaluate_expression(s1)
								s1=Chr(34)+LTrim(s1)+Chr(34)
								temp=Left(temp,x-1)+s1+Mid(temp,i+1)
							EndIf
							has_quotes=FALSE
							quote_c=0
							ReDim quote_x_start(quote_c)
							ReDim quote_x_end(quote_c)
							If InStr(temp,Chr(34)) Then
								has_quotes=TRUE
								qx=InStr(temp,Chr(34))
								Do While qx<>0
									quote_c+=1
									ReDim Preserve quote_x_start(quote_c)
									ReDim Preserve quote_x_end(quote_c)
									quote_x_start(quote_c)=qx
									qx=InStr(qx+1,temp,Chr(34))
									If Mid(temp,qx+1,1)= Chr(34) Then
										qx+=1
										qx=InStr(qx+1,temp,Chr(34))
										qx+=1
										qx=InStr(qx+1,temp,Chr(34))
										quote_x_end(quote_c)=qx
									Else
										quote_x_end(quote_c)=qx
									EndIf
									qx=InStr(qx+1,temp,Chr(34))
								Loop
							EndIf
							Exit For
						EndIf
					Next
					x=InStr(x+1,temp,string_command)
				Else
					x=InStr(x+1,temp,string_command)
				EndIf
			Loop
		EndIf
		
		string_command="rtrim("
		string_command_length=Len(string_command)
		If InStr(temp,string_command) Then
			x=InStr(temp,string_command)
			Do While x<>0
				skip=FALSE
				If has_quotes=TRUE Then
					For i=1 To quote_c
						Select Case x
							Case quote_x_start(i) To quote_x_end(i)
								skip=TRUE
								x=quote_x_end(i)
								Exit For
						End Select
					Next
				EndIf
				If skip=FALSE Then
					openprin_c=0
					closeprin_c=0
					For i=x+string_command_length To Len(temp)
						If Mid(temp,i,1)="(" Then openprin_c+=1
						If Mid(temp,i,1)=")" Then closeprin_c+=1
						If closeprin_c>openprin_c Then
							s1=Mid(temp,x+string_command_length,i-(string_command_length+1))
							comma_delimeter_x=find_delimeter(s1,",")
							If comma_delimeter_x<>0 Then
								s2=Mid(s1,comma_delimeter_x+1)
								s1=Left(s1,comma_delimeter_x-1)
								s1=full_evaluate_expression(s1)
								s2=full_evaluate_expression(s2)
								If LCase(Left(LTrim(s2),3))="any" Then
									s2=LTrim(s2)
									s2=Mid(s2,4)
									s2=full_evaluate_expression(s2)
									s1=Chr(34)+RTrim(s1,Any s2)+Chr(34)
								Else
									s1=Chr(34)+RTrim(s1,s2)+Chr(34)
								EndIf
								temp=Left(temp,x-1)+s1+Mid(temp,i+1)
							Else
								s1=full_evaluate_expression(s1)
								s1=Chr(34)+RTrim(s1)+Chr(34)
								temp=Left(temp,x-1)+s1+Mid(temp,i+1)
							EndIf
							has_quotes=FALSE
							quote_c=0
							ReDim quote_x_start(quote_c)
							ReDim quote_x_end(quote_c)
							If InStr(temp,Chr(34)) Then
								has_quotes=TRUE
								qx=InStr(temp,Chr(34))
								Do While qx<>0
									quote_c+=1
									ReDim Preserve quote_x_start(quote_c)
									ReDim Preserve quote_x_end(quote_c)
									quote_x_start(quote_c)=qx
									qx=InStr(qx+1,temp,Chr(34))
									If Mid(temp,qx+1,1)= Chr(34) Then
										qx+=1
										qx=InStr(qx+1,temp,Chr(34))
										qx+=1
										qx=InStr(qx+1,temp,Chr(34))
										quote_x_end(quote_c)=qx
									Else
										quote_x_end(quote_c)=qx
									EndIf
									qx=InStr(qx+1,temp,Chr(34))
								Loop
							EndIf
							Exit For
						EndIf
					Next
					x=InStr(x+1,temp,string_command)
				Else
					x=InStr(x+1,temp,string_command)
				EndIf
			Loop
		EndIf
		
		string_command="trim("
		string_command_length=Len(string_command)
		If InStr(temp,string_command) Then
			x=InStr(temp,string_command)
			Do While x<>0
				skip=FALSE
				If has_quotes=TRUE Then
					For i=1 To quote_c
						Select Case x
							Case quote_x_start(i) To quote_x_end(i)
								skip=TRUE
								x=quote_x_end(i)
								Exit For
						End Select
					Next
				EndIf
				If skip=FALSE Then
					openprin_c=0
					closeprin_c=0
					For i=x+string_command_length To Len(temp)
						If Mid(temp,i,1)="(" Then openprin_c+=1
						If Mid(temp,i,1)=")" Then closeprin_c+=1
						If closeprin_c>openprin_c Then
							s1=Mid(temp,x+string_command_length,i-(string_command_length+1))
							comma_delimeter_x=find_delimeter(s1,",")
							If comma_delimeter_x<>0 Then
								s2=Mid(s1,comma_delimeter_x+1)
								s1=Left(s1,comma_delimeter_x-1)
								s1=full_evaluate_expression(s1)
								s2=full_evaluate_expression(s2)
								If LCase(Left(LTrim(s2),3))="any" Then
									s2=LTrim(s2)
									s2=Mid(s2,4)
									s2=full_evaluate_expression(s2)
									s1=Chr(34)+Trim(s1,Any s2)+Chr(34)
								Else
									s1=Chr(34)+Trim(s1,s2)+Chr(34)
								EndIf
								temp=Left(temp,x-1)+s1+Mid(temp,i+1)
							Else
								s1=full_evaluate_expression(s1)
								s1=Chr(34)+Trim(s1)+Chr(34)
								temp=Left(temp,x-1)+s1+Mid(temp,i+1)
							EndIf
							has_quotes=FALSE
							quote_c=0
							ReDim quote_x_start(quote_c)
							ReDim quote_x_end(quote_c)
							If InStr(temp,Chr(34)) Then
								has_quotes=TRUE
								qx=InStr(temp,Chr(34))
								Do While qx<>0
									quote_c+=1
									ReDim Preserve quote_x_start(quote_c)
									ReDim Preserve quote_x_end(quote_c)
									quote_x_start(quote_c)=qx
									qx=InStr(qx+1,temp,Chr(34))
									If Mid(temp,qx+1,1)= Chr(34) Then
										qx+=1
										qx=InStr(qx+1,temp,Chr(34))
										qx+=1
										qx=InStr(qx+1,temp,Chr(34))
										quote_x_end(quote_c)=qx
									Else
										quote_x_end(quote_c)=qx
									EndIf
									qx=InStr(qx+1,temp,Chr(34))
								Loop
							EndIf
							Exit For
						EndIf
					Next
					x=InStr(x+1,temp,string_command)
				Else
					x=InStr(x+1,temp,string_command)
				EndIf
			Loop
		EndIf
		
		string_command="instr("
		string_command_length=Len(string_command)
		If InStr(temp,string_command) Then
			x=InStr(temp,string_command)
			Do While x<>0
				skip=FALSE
				If has_quotes=TRUE Then
					For i=1 To quote_c
						Select Case x
							Case quote_x_start(i) To quote_x_end(i)
								skip=TRUE
								x=quote_x_end(i)
								Exit For
						End Select
					Next
				EndIf
				If skip=FALSE Then
					openprin_c=0
					closeprin_c=0
					For i=x+string_command_length To Len(temp)
						If Mid(temp,i,1)="(" Then openprin_c+=1
						If Mid(temp,i,1)=")" Then closeprin_c+=1
						If closeprin_c>openprin_c Then
							s1=Mid(temp,x+string_command_length,i-(string_command_length+1))
							comma_delimeter_x=find_delimeter(s1,",")
							If comma_delimeter_x<>0 Then
								s2=Mid(s1,comma_delimeter_x+1)
								s1=Left(s1,comma_delimeter_x-1)
								comma_delimeter_x=find_delimeter(s2,",")
								If comma_delimeter_x<>0 Then
									s3=Mid(s2,comma_delimeter_x+1)
									s2=Left(s2,comma_delimeter_x-1)
									s1=full_evaluate_expression(s1)
									s2=full_evaluate_expression(s2)
									s3=full_evaluate_expression(s3)
									If LCase(Left(LTrim(s3),3))="any" Then
										s3=LTrim(s3)
										s3=Mid(s3,4)
										s3=full_evaluate_expression(s2)
										s1=LTrim(Str(InStr(CInt(s1),s2,Any s3)))
									Else
										s1=LTrim(Str(InStr(CInt(s1),s2,s3)))
									EndIf
								Else
									s1=full_evaluate_expression(s1)
									s2=full_evaluate_expression(s2)
									If LCase(Left(LTrim(s2),3))="any" Then
										s2=LTrim(s2)
										s2=Mid(s2,4)
										s2=full_evaluate_expression(s2)
										s1=LTrim(Str(InStr(s1,Any s2)))
									Else
										s1=LTrim(Str(InStr(s1,s2)))
									EndIf
								EndIf
							EndIf
							temp=Left(temp,x-1)+s1+Mid(temp,i+1)
							has_quotes=FALSE
							quote_c=0
							ReDim quote_x_start(quote_c)
							ReDim quote_x_end(quote_c)
							If InStr(temp,Chr(34)) Then
								has_quotes=TRUE
								qx=InStr(temp,Chr(34))
								Do While qx<>0
									quote_c+=1
									ReDim Preserve quote_x_start(quote_c)
									ReDim Preserve quote_x_end(quote_c)
									quote_x_start(quote_c)=qx
									qx=InStr(qx+1,temp,Chr(34))
									If Mid(temp,qx+1,1)= Chr(34) Then
										qx+=1
										qx=InStr(qx+1,temp,Chr(34))
										qx+=1
										qx=InStr(qx+1,temp,Chr(34))
										quote_x_end(quote_c)=qx
									Else
										quote_x_end(quote_c)=qx
									EndIf
									qx=InStr(qx+1,temp,Chr(34))
								Loop
							EndIf
							Exit For
						EndIf
					Next
					x=InStr(x+1,temp,string_command)
				Else
					x=InStr(x+1,temp,string_command)
				EndIf
			Loop
		EndIf

		string_command="instrrev("
		string_command_length=Len(string_command)
		If InStr(temp,string_command) Then
			x=InStr(temp,string_command)
			Do While x<>0
				skip=FALSE
				If has_quotes=TRUE Then
					For i=1 To quote_c
						Select Case x
							Case quote_x_start(i) To quote_x_end(i)
								skip=TRUE
								x=quote_x_end(i)
								Exit For
						End Select
					Next
				EndIf
				If skip=FALSE Then
					openprin_c=0
					closeprin_c=0
					For i=x+string_command_length To Len(temp)
						If Mid(temp,i,1)="(" Then openprin_c+=1
						If Mid(temp,i,1)=")" Then closeprin_c+=1
						If closeprin_c>openprin_c Then
							s1=Mid(temp,x+string_command_length,i-(string_command_length+1))
							comma_delimeter_x=find_delimeter(s1,",")
							If comma_delimeter_x<>0 Then
								s2=Mid(s1,comma_delimeter_x+1)
								s1=Left(s1,comma_delimeter_x-1)
								comma_delimeter_x=find_delimeter(s2,",")
								If comma_delimeter_x<>0 Then
									s3=Mid(s2,comma_delimeter_x+1)
									s2=Left(s2,comma_delimeter_x-1)
									s1=full_evaluate_expression(s1)
									s2=full_evaluate_expression(s2)
									s3=full_evaluate_expression(s3)
									If LCase(Left(LTrim(s2),3))="any" Then
										s2=LTrim(s2)
										s2=Mid(s2,4)
										s2=full_evaluate_expression(s2)
										s1=LTrim(Str(InStrRev(s1,Any s2,CInt(s3))))
									Else
										s1=LTrim(Str(InStrRev(s1,s2,CInt(s3))))
									EndIf
								Else
									s1=full_evaluate_expression(s1)
									s2=full_evaluate_expression(s2)
									If LCase(Left(LTrim(s2),3))="any" Then
										s2=LTrim(s2)
										s2=Mid(s2,4)
										s2=full_evaluate_expression(s2)
										s1=LTrim(Str(InStrRev(s1,Any s2)))
									Else
										s1=LTrim(Str(InStrRev(s1,s2)))
									EndIf
								EndIf
							EndIf
							temp=Left(temp,x-1)+s1+Mid(temp,i+1)
							has_quotes=FALSE
							quote_c=0
							ReDim quote_x_start(quote_c)
							ReDim quote_x_end(quote_c)
							If InStr(temp,Chr(34)) Then
								has_quotes=TRUE
								qx=InStr(temp,Chr(34))
								Do While qx<>0
									quote_c+=1
									ReDim Preserve quote_x_start(quote_c)
									ReDim Preserve quote_x_end(quote_c)
									quote_x_start(quote_c)=qx
									qx=InStr(qx+1,temp,Chr(34))
									If Mid(temp,qx+1,1)= Chr(34) Then
										qx+=1
										qx=InStr(qx+1,temp,Chr(34))
										qx+=1
										qx=InStr(qx+1,temp,Chr(34))
										quote_x_end(quote_c)=qx
									Else
										quote_x_end(quote_c)=qx
									EndIf
									qx=InStr(qx+1,temp,Chr(34))
								Loop
							EndIf
							Exit For
						EndIf
					Next
					x=InStr(x+1,temp,string_command)
				Else
					x=InStr(x+1,temp,string_command)
				EndIf
			Loop
		EndIf
		
		string_command="len("
		string_command_length=Len(string_command)
		If InStr(temp,string_command) Then
			x=InStr(temp,string_command)
			Do While x<>0
				skip=FALSE
				If has_quotes=TRUE Then
					For i=1 To quote_c
						Select Case x
							Case quote_x_start(i) To quote_x_end(i)
								skip=TRUE
								x=quote_x_end(i)
								Exit For
						End Select
					Next
				EndIf
				If skip=FALSE Then
					openprin_c=0
					closeprin_c=0
					For i=x+string_command_length To Len(temp)
						If Mid(temp,i,1)="(" Then openprin_c+=1
						If Mid(temp,i,1)=")" Then closeprin_c+=1
						If closeprin_c>openprin_c Then
							s1=Mid(temp,x+string_command_length,i-(string_command_length+1))
							s1=full_evaluate_expression(s1)
							s1=LTrim(Str(len(s1)))
							temp=Left(temp,x-1)+s1+Mid(temp,i+1)
							has_quotes=FALSE
							quote_c=0
							ReDim quote_x_start(quote_c)
							ReDim quote_x_end(quote_c)
							If InStr(temp,Chr(34)) Then
								has_quotes=TRUE
								qx=InStr(temp,Chr(34))
								Do While qx<>0
									quote_c+=1
									ReDim Preserve quote_x_start(quote_c)
									ReDim Preserve quote_x_end(quote_c)
									quote_x_start(quote_c)=qx
									qx=InStr(qx+1,temp,Chr(34))
									If Mid(temp,qx+1,1)= Chr(34) Then
										qx+=1
										qx=InStr(qx+1,temp,Chr(34))
										qx+=1
										qx=InStr(qx+1,temp,Chr(34))
										quote_x_end(quote_c)=qx
									Else
										quote_x_end(quote_c)=qx
									EndIf
									qx=InStr(qx+1,temp,Chr(34))
								Loop
							EndIf
							Exit For
						EndIf
					Next
					x=InStr(x+1,temp,string_command)
				Else
					x=InStr(x+1,temp,string_command)
				EndIf
			Loop
		EndIf
		
		string_command="asc("
		string_command_length=Len(string_command)
		If InStr(temp,string_command) Then
			x=InStr(temp,string_command)
			Do While x<>0
				skip=FALSE
				If has_quotes=TRUE Then
					For i=1 To quote_c
						Select Case x
							Case quote_x_start(i) To quote_x_end(i)
								skip=TRUE
								x=quote_x_end(i)
								Exit For
						End Select
					Next
				EndIf
				If skip=FALSE Then
					openprin_c=0
					closeprin_c=0
					For i=x+string_command_length To Len(temp)
						If Mid(temp,i,1)="(" Then openprin_c+=1
						If Mid(temp,i,1)=")" Then closeprin_c+=1
						If closeprin_c>openprin_c Then
							s1=Mid(temp,x+string_command_length,i-(string_command_length+1))
							s1=full_evaluate_expression(s1)
							s1=LTrim(Str(Asc(s1)))
							temp=Left(temp,x-1)+s1+Mid(temp,i+1)
							has_quotes=FALSE
							quote_c=0
							ReDim quote_x_start(quote_c)
							ReDim quote_x_end(quote_c)
							If InStr(temp,Chr(34)) Then
								has_quotes=TRUE
								qx=InStr(temp,Chr(34))
								Do While qx<>0
									quote_c+=1
									ReDim Preserve quote_x_start(quote_c)
									ReDim Preserve quote_x_end(quote_c)
									quote_x_start(quote_c)=qx
									qx=InStr(qx+1,temp,Chr(34))
									If Mid(temp,qx+1,1)= Chr(34) Then
										qx+=1
										qx=InStr(qx+1,temp,Chr(34))
										qx+=1
										qx=InStr(qx+1,temp,Chr(34))
										quote_x_end(quote_c)=qx
									Else
										quote_x_end(quote_c)=qx
									EndIf
									qx=InStr(qx+1,temp,Chr(34))
								Loop
							EndIf
							Exit For
						EndIf
					Next
					x=InStr(x+1,temp,string_command)
				Else
					x=InStr(x+1,temp,string_command)
				EndIf
			Loop
		EndIf
		
		string_command="val("
		string_command_length=Len(string_command)
		If InStr(temp,string_command) Then
			x=InStr(temp,string_command)
			Do While x<>0
				skip=FALSE
				If has_quotes=TRUE Then
					For i=1 To quote_c
						Select Case x
							Case quote_x_start(i) To quote_x_end(i)
								skip=TRUE
								x=quote_x_end(i)
								Exit For
						End Select
					Next
				EndIf
				If skip=FALSE Then
					openprin_c=0
					closeprin_c=0
					For i=x+string_command_length To Len(temp)
						If Mid(temp,i,1)="(" Then openprin_c+=1
						If Mid(temp,i,1)=")" Then closeprin_c+=1
						If closeprin_c>openprin_c Then
							s1=Mid(temp,x+string_command_length,i-(string_command_length+1))
							s1=full_evaluate_expression(s1)
							s1=LTrim(Str(Val(s1)))
							temp=Left(temp,x-1)+s1+Mid(temp,i+1)
							has_quotes=FALSE
							quote_c=0
							ReDim quote_x_start(quote_c)
							ReDim quote_x_end(quote_c)
							If InStr(temp,Chr(34)) Then
								has_quotes=TRUE
								qx=InStr(temp,Chr(34))
								Do While qx<>0
									quote_c+=1
									ReDim Preserve quote_x_start(quote_c)
									ReDim Preserve quote_x_end(quote_c)
									quote_x_start(quote_c)=qx
									qx=InStr(qx+1,temp,Chr(34))
									If Mid(temp,qx+1,1)= Chr(34) Then
										qx+=1
										qx=InStr(qx+1,temp,Chr(34))
										qx+=1
										qx=InStr(qx+1,temp,Chr(34))
										quote_x_end(quote_c)=qx
									Else
										quote_x_end(quote_c)=qx
									EndIf
									qx=InStr(qx+1,temp,Chr(34))
								Loop
							EndIf
							Exit For
						EndIf
					Next
					x=InStr(x+1,temp,string_command)
				Else
					x=InStr(x+1,temp,string_command)
				EndIf
			Loop
		EndIf
	EndIf 
	
	
	
	is_numeric_only=TRUE
	is_variable_only=TRUE
	
	temp=LTrim(RTrim(temp))

	quote_c=0
	quote=FALSE
	has_quotes=FALSE
	ReDim quote_x_start(quote_c)
	ReDim quote_x_end(quote_c)
	ReDim quoted_text(quote_c)
	If InStr(temp,Chr(34)) Then
		has_quotes=TRUE
		has_strings=TRUE
		temp_with_quoted_text=temp
		quote=FALSE
		For i=1 To Len(temp)
			Select Case Mid(temp,i,1)
				Case Chr(34)
					If quote=FALSE Then
						quote=TRUE
						quote_c+=1
						ReDim Preserve quoted_text(quote_c)
						ReDim Preserve quote_x_start(quote_c)
						ReDim Preserve quote_x_end(quote_c)
						quote_x_start(quote_c)=i
					Else
						If Mid(temp,i+1,1)=Chr(34) Then
							quoted_text(quote_c)+=Chr(34)
							i+=1
						Else
							quote=FALSE
							quote_x_end(quote_c)=i
						EndIf
					EndIf
				Case Else
					If quote=TRUE Then
						quoted_text(quote_c)+=Mid(temp,i,1)
					Else
						temp_minus_quoted_text+=Mid(temp,i,1)
					EndIf
			End Select
		Next
		temp=temp_minus_quoted_text
	EndIf
	
	'screen for arithmetic_ops
	For i = 1 To arithmetic_op_cmd_c
		If InStr(temp,arithmetic_op_cmd(i)) Then
			has_arithmetic_op=TRUE
			is_numeric_only=FALSE
			is_variable_only=FALSE
			Exit For
		EndIf
	Next
	
	'screen for bitwise_ops
	For i = 1 To bitwise_op_cmd_c
		If InStr(temp,bitwise_op_cmd(i)) Then
			has_bitwise_op=TRUE
			is_numeric_only=FALSE
			is_variable_only=FALSE
			Exit For
		EndIf
	Next

	'math_dtc_op (math ops and data type converters)
	'screen for math_dtc_ops
	For i = 1 To math_dtc_op_cmd_c
		If InStr(temp,math_dtc_op_cmd(i)) Then
			has_math_dtc_op=TRUE
			is_numeric_only=FALSE
			is_variable_only=FALSE
			Exit For
		EndIf
	Next

	'conditional_op
	If _
		InStr(temp,"=") Or _
		InStr(temp,">") Or _
		InStr(temp,">") _
	Then
		has_conditional_op=TRUE
		is_numeric_only=FALSE
		is_variable_only=FALSE
	EndIf
	
	If has_quotes=TRUE Then temp=temp_with_quoted_text
	
	If has_arithmetic_op=TRUE Then
		For i = 1 To arithmetic_op_cmd_c
			If InStr(temp,arithmetic_op_cmd(i)) Then
				x=InStr(temp,arithmetic_op_cmd(i))
				Do While x>0
					skip=FALSE
					For j=1 To quote_c
						If x>quote_x_start(j) And x<quote_x_end(j) Then
							skip=TRUE
							x=quote_x_end(j)
							Exit For
						EndIf
					Next
					If skip=FALSE Then	
						arithmetic_op_c+=1
						ReDim Preserve arithmetic_op_x(arithmetic_op_c)
						ReDim Preserve arithmetic_op(arithmetic_op_c)
						Select Case arithmetic_op_cmd(i)
							Case "-"
								arithmetic_op_x(arithmetic_op_c)=x
								If x=1 Then
									'this is a negate
									arithmetic_op(arithmetic_op_c)="negate"
								Else
									'if there are no variable or numerics between
									'this operator and the previous operator
									'ie. a- -b or a--b
									'then this is a negate
									For j = x-1 To 1 Step -1
										Select Case Mid(temp,j,1)
											Case "^","*","/","\","+","-","&"
												arithmetic_op(arithmetic_op_c)="negate"
												Exit For
											Case "0" To "9","a" To "z","_"
												arithmetic_op(arithmetic_op_c)="-"
												Exit For
										End Select
									Next
								EndIf
							Case " mod ", " shl ", " shr "
								arithmetic_op_x(arithmetic_op_c)=x+1
								arithmetic_op_cmd_len=Len(arithmetic_op_cmd(i))-2
								arithmetic_op(arithmetic_op_c)=Mid(arithmetic_op_cmd(i),2,arithmetic_op_cmd_len)
							Case Else
								arithmetic_op_x(arithmetic_op_c)=x
								arithmetic_op(arithmetic_op_c)=arithmetic_op_cmd(i)
						End Select
					EndIf
					x=InStr(x+1,temp,arithmetic_op_cmd(i))
				Loop
			EndIf
		Next
	EndIf
	If arithmetic_op_c=0 Then has_arithmetic_op=FALSE
	
	If has_bitwise_op=TRUE Then
		For i = 1 To bitwise_op_cmd_c
			If InStr(temp,bitwise_op_cmd(i)) Then
				x=InStr(temp,bitwise_op_cmd(i))
				Do While x>0
					skip=FALSE
					For j=1 To quote_c
						If x>quote_x_start(j) And x<quote_x_end(j) Then
							skip=TRUE
							Exit For
						EndIf
					Next
					If skip=FALSE Then	
						bitwise_op_c+=1
						ReDim Preserve bitwise_op_x(bitwise_op_c)
						ReDim Preserve bitwise_op(bitwise_op_c)
						Select Case bitwise_op_cmd(i)
							Case "not "
								bitwise_op_x(bitwise_op_c)=x
								bitwise_op(bitwise_op_c)="not"
							Case Else
								bitwise_op_x(bitwise_op_c)=x+1
								bitwise_op_cmd_len=Len(bitwise_op_cmd(i))-2
								bitwise_op(bitwise_op_c)=Mid(bitwise_op_cmd(i),2,bitwise_op_cmd_len)
						End Select
					EndIf
					x=InStr(x+1,temp,bitwise_op_cmd(i))
				Loop
			EndIf
		Next
	EndIf
	If bitwise_op_c=0 Then has_bitwise_op=FALSE

	If has_math_dtc_op=TRUE Then
		For i = 1 To math_dtc_op_cmd_c
			If InStr(temp,math_dtc_op_cmd(i)) Then
				x=InStr(temp,math_dtc_op_cmd(i))
				Do While x>0
					skip=FALSE
					For j=1 To quote_c
						If x>quote_x_start(j) And x<quote_x_end(j) Then
							skip=TRUE
							Exit For
						EndIf
					Next
					If skip=FALSE Then	
						math_dtc_op_c+=1
						ReDim Preserve math_dtc_op_x(math_dtc_op_c)
						ReDim Preserve math_dtc_op(math_dtc_op_c)
						math_dtc_op_x(math_dtc_op_c)=x
						math_dtc_op_cmd_len=Len(math_dtc_op_cmd(i))-1
						math_dtc_op(math_dtc_op_c)=Left(math_dtc_op_cmd(i),math_dtc_op_cmd_len)
					EndIf
					x=InStr(x+1,temp,math_dtc_op_cmd(i))
				Loop
			EndIf
		Next
	EndIf
	If math_dtc_op_c=0 Then has_math_dtc_op=FALSE
	
	If has_conditional_op=TRUE Then
		If has_quotes=TRUE Then
			x=InStr(temp,"=")
			Do While x>0
				skip=FALSE
				For i=1 To quote_c
					Select Case x
						Case quote_x_start(i) To quote_x_end(i)
							skip=TRUE
							x=quote_x_end(i)
							Exit For
					End Select
				Next
				If skip=FALSE Then	
					Select Case Mid(temp,x-1,1)
						Case "<",">"
							'skip
						Case Else
							conditional_op_c+=1
							ReDim Preserve conditional_op_x(conditional_op_c)
							ReDim Preserve conditional_op(conditional_op_c)
							conditional_op_x(conditional_op_c)=x
							conditional_op(conditional_op_c)="="
					End Select
				EndIf
				x=InStr(x+1,temp,"=")
			Loop
			x=InStr(temp,"<")
			Do While x>0
				skip=FALSE
				For i=1 To quote_c
					Select Case x
						Case quote_x_start(i) To quote_x_end(i)
							skip=TRUE
							x=quote_x_end(i)
							Exit For
					End Select
				Next
				If skip=FALSE Then	
					Select Case Mid(temp,x+1,1)
						Case ">","="
							'skip
						Case Else
							conditional_op_c+=1
							ReDim Preserve conditional_op_x(conditional_op_c)
							ReDim Preserve conditional_op(conditional_op_c)
							conditional_op_x(conditional_op_c)=x
							conditional_op(conditional_op_c)="<"
					End Select
				EndIf
				x=InStr(x+1,temp,"<")
			Loop
			x=InStr(temp,">")
			Do While x>0
				skip=FALSE
				For i=1 To quote_c
					Select Case x
						Case quote_x_start(i) To quote_x_end(i)
							skip=TRUE
							x=quote_x_end(i)
							Exit For
					End Select
				Next
				If skip=FALSE Then	
					If Mid(temp,x-1,1)<>"<" Then
						If Mid(temp,x-1,1)<>"=" Then
							conditional_op_c+=1
							ReDim Preserve conditional_op_x(conditional_op_c)
							ReDim Preserve conditional_op(conditional_op_c)
							conditional_op_x(conditional_op_c)=x
							conditional_op(conditional_op_c)=">"
						EndIf
					EndIf
				EndIf
				x=InStr(x+1,temp,">")
			Loop
			x=InStr(temp,"<=")
			Do While x>0
				skip=FALSE
				For i=1 To quote_c
					Select Case x
						Case quote_x_start(i) To quote_x_end(i)
							skip=TRUE
							x=quote_x_end(i)
							Exit For
					End Select
				Next
				If skip=FALSE Then	
					conditional_op_c+=1
					ReDim Preserve conditional_op_x(conditional_op_c)
					ReDim Preserve conditional_op(conditional_op_c)
					conditional_op_x(conditional_op_c)=x
					conditional_op(conditional_op_c)="<="
				EndIf
				x=InStr(x+1,temp,"<=")
			Loop
			x=InStr(temp,">=")
			Do While x>0
				skip=FALSE
				For i=1 To quote_c
					Select Case x
						Case quote_x_start(i) To quote_x_end(i)
							skip=TRUE
							x=quote_x_end(i)
							Exit For
					End Select
				Next
				If skip=FALSE Then	
					conditional_op_c+=1
					ReDim Preserve conditional_op_x(conditional_op_c)
					ReDim Preserve conditional_op(conditional_op_c)
					conditional_op_x(conditional_op_c)=x
					conditional_op(conditional_op_c)=">="
				EndIf
				x=InStr(x+1,temp,">=")
			Loop
			x=InStr(temp,"<>")
			Do While x>0
				skip=FALSE
				For i=1 To quote_c
					Select Case x
						Case quote_x_start(i) To quote_x_end(i)
							skip=TRUE
							x=quote_x_end(i)
							Exit For
					End Select
				Next
				If skip=FALSE Then	
					conditional_op_c+=1
					ReDim Preserve conditional_op_x(conditional_op_c)
					ReDim Preserve conditional_op(conditional_op_c)
					conditional_op_x(conditional_op_c)=x
					conditional_op(conditional_op_c)="<>"
				EndIf
				x=InStr(x+1,temp,"<>")
			Loop
		Else
			x=InStr(temp,"=")
			Do While x>0
				Select Case Mid(temp,x-1,1)
					Case "<",">"
						'skip
					Case Else
						conditional_op_c+=1
						ReDim Preserve conditional_op_x(conditional_op_c)
						ReDim Preserve conditional_op(conditional_op_c)
						conditional_op_x(conditional_op_c)=x
						conditional_op(conditional_op_c)="="
				End Select
				x=InStr(x+1,temp,"=")
			Loop
			x=InStr(temp,"<")
			Do While x>0
				Select Case Mid(temp,x+1,1)
					Case ">","="
						'skip
					Case Else
						conditional_op_c+=1
						ReDim Preserve conditional_op_x(conditional_op_c)
						ReDim Preserve conditional_op(conditional_op_c)
						conditional_op_x(conditional_op_c)=x
						conditional_op(conditional_op_c)="<"
				End Select
				x=InStr(x+1,temp,"<")
			Loop
			x=InStr(temp,">")
			Do While x>0
				If Mid(temp,x-1,1)<>"<" Then
					If Mid(temp,x-1,1)<>"=" Then
						conditional_op_c+=1
						ReDim Preserve conditional_op_x(conditional_op_c)
						ReDim Preserve conditional_op(conditional_op_c)
						conditional_op_x(conditional_op_c)=x
						conditional_op(conditional_op_c)=">"
					EndIf
				EndIf
				x=InStr(x+1,temp,">")
			Loop
			x=InStr(temp,"<=")
			Do While x>0
				conditional_op_c+=1
				ReDim Preserve conditional_op_x(conditional_op_c)
				ReDim Preserve conditional_op(conditional_op_c)
				conditional_op_x(conditional_op_c)=x
				conditional_op(conditional_op_c)="<="
				x=InStr(x+1,temp,"<=")
			Loop
			x=InStr(temp,">=")
			Do While x>0
				conditional_op_c+=1
				ReDim Preserve conditional_op_x(conditional_op_c)
				ReDim Preserve conditional_op(conditional_op_c)
				conditional_op_x(conditional_op_c)=x
				conditional_op(conditional_op_c)=">="
				x=InStr(x+1,temp,">=")
			Loop
			x=InStr(temp,"<>")
			Do While x>0
				conditional_op_c+=1
				ReDim Preserve conditional_op_x(conditional_op_c)
				ReDim Preserve conditional_op(conditional_op_c)
				conditional_op_x(conditional_op_c)=x
				conditional_op(conditional_op_c)="<>"
				x=InStr(x+1,temp,"<>")
			Loop
		EndIf
	EndIf
	If conditional_op_c=0 Then has_conditional_op=FALSE
	
	
	
	'get numeric values
	''numerics can not be preceeded with an alphachar (a to z) or underscore _
	temp_number=""
	For i=1 To Len(temp)
		skip=FALSE
		For j=1 To quote_c
			Select Case i
				Case quote_x_start(j) To quote_x_end(j)
					skip=TRUE
					i=quote_x_end(j)
					Exit For
			End Select
		Next
		If skip=FALSE Then
			Select Case Mid(temp,i,1)
				Case "0" To "9", "."
					Select Case Mid(temp,i-1,1)
						Case "a" To "z", "_",Chr(34)
							'invalid
						Case Else
							Select Case Mid(temp,i+1,1)
								Case "a" To "z", "_",Chr(34)
									'invalid
								Case Else
									temp_number+=Mid(temp,i,1)
							End Select
							
					End Select
				Case Else
					If temp_number<>"" Then
						has_numerics=TRUE
						is_variable_only=FALSE
						numerics_c+=1
						ReDim Preserve numerics_x(numerics_c)
						ReDim Preserve numerics(numerics_c)
						ReDim Preserve numerics_s(numerics_c)
						numerics_x(numerics_c)=i-Len(temp_number)
						numerics(numerics_c)=Val(temp_number)
						numerics_s(numerics_c)=temp_number
						temp_number=""
					EndIf
			End Select
		EndIf
	Next
	If temp_number<>"" Then
		has_numerics=TRUE
		is_variable_only=FALSE
		numerics_c+=1
		ReDim Preserve numerics_x(numerics_c)
		ReDim Preserve numerics(numerics_c)
		ReDim Preserve numerics_s(numerics_c)
		numerics_x(numerics_c)=i-Len(temp_number)
		numerics(numerics_c)=Val(temp_number)
		numerics_s(numerics_c)=temp_number
		temp_number=""
	EndIf
	
	'find variable usage
	'mark each usage location along with the name of the variable used
	'variable values are found after this section of code
	temp_alpha=""
	quote=FALSE
	For i=1 To Len(temp)
		skip=FALSE
		For j=1 To quote_c
			Select Case i
				Case quote_x_start(j) To quote_x_end(j)
					skip=TRUE
					i=quote_x_end(j)
					Exit For
			End Select
		Next
		If skip=FALSE Then
			For j=1 To numerics_c
				Select Case i
					Case numerics_x(j) To numerics_x(j)+Len(numerics_s(j))-1
						skip=TRUE
						Exit For
				End Select
			Next
		EndIf
		If skip=FALSE Then
			For j=1 To arithmetic_op_c
				If arithmetic_op(j)="negate" Then
					Select Case i
						Case arithmetic_op_x(j)
							skip=TRUE
							Exit For
					End Select
				Else
					Select Case i
						Case arithmetic_op_x(j) To arithmetic_op_x(j)+Len(arithmetic_op(j))-1
							skip=TRUE
							Exit For
					End Select
				EndIf
			Next
		EndIf
		If skip=FALSE Then
			For j=1 To bitwise_op_c
				Select Case i
					Case bitwise_op_x(j) To bitwise_op_x(j)+Len(bitwise_op(j))-1
						skip=TRUE
						Exit For
				End Select
			Next
		EndIf
		If skip=FALSE Then
			For j=1 To math_dtc_op_c
				Select Case i
					Case math_dtc_op_x(j) To math_dtc_op_x(j)+Len(math_dtc_op(j))-1
						skip=TRUE
						Exit For
				End Select
			Next
		EndIf
		If skip=FALSE Then
			For j=1 To conditional_op_c
				Select Case i
					Case conditional_op_x(j) To conditional_op_x(j)+Len(conditional_op(j))-1
						skip=TRUE
						Exit For
				End Select
			Next
		EndIf
		If skip=FALSE Then
			Select Case Mid(temp,i,1)
				Case "a" To "z","0" To "9","_"
					temp_alpha+=Mid(temp,i,1)
					If Len(temp_alpha)=1 Then
						Select Case temp_alpha
							Case "0" To "9"
								temp_alpha=""
						End Select
					EndIf
				Case Else
					If temp_alpha<>"" Then
						has_variables=TRUE
						is_numeric_only=FALSE
						variables_c+=1
						ReDim Preserve variables_x(variables_c)
						ReDim Preserve variables(variables_c)
						variables_x(variables_c)=i-Len(temp_alpha)
						variables(variables_c)=temp_alpha
						temp_alpha=""
					EndIf
			End Select
		Else
			If temp_alpha<>"" Then
				has_variables=TRUE
				is_numeric_only=FALSE
				variables_c+=1
				ReDim Preserve variables_x(variables_c)
				ReDim Preserve variables(variables_c)
				variables_x(variables_c)=i-Len(temp_alpha)
				variables(variables_c)=temp_alpha
				temp_alpha=""
			EndIf
		EndIf
	Next
	If temp_alpha<>"" Then
		has_variables=TRUE
		is_numeric_only=FALSE
		variables_c+=1
		ReDim Preserve variables_x(variables_c)
		ReDim Preserve variables(variables_c)
		variables_x(variables_c)=i-Len(temp_alpha)
		variables(variables_c)=temp_alpha
		temp_alpha=""
	EndIf
	'here is where the variable values are identified
	'along with the variable type ie. string or numeric
	If has_variables=TRUE Then
		redim variables_value(variables_c)
		redim variables_type(variables_c)
		t=temp
		For i=1 To variables_c
			For j=1 To macro_variables_info_c
				If variables(i)=macro_variables_info(j,1) Then
					is_string=FALSE
					Select Case macro_variables_info(j,2)
						Case "BOOLEAN"
							variables_type(i)="BOOLEAN"
							n=CDbl(macro_variables_boolean_value(CInt(macro_variables_info(j,3))))
						Case "BYTE"
							variables_type(i)="BYTE"
							n=CDbl(macro_variables_byte_value(CInt(macro_variables_info(j,3))))
						Case "UBYTE"
							variables_type(i)="UBYTE"
							n=CDbl(macro_variables_ubyte_value(CInt(macro_variables_info(j,3))))
						Case "SHORT"
							variables_type(i)="SHORT"
							n=CDbl(macro_variables_short_value(CInt(macro_variables_info(j,3))))
						Case "USHORT"
							variables_type(i)="USHORT"
							n=CDbl(macro_variables_ushort_value(CInt(macro_variables_info(j,3))))
						Case "LONG"
							variables_type(i)="LONG"
							n=CDbl(macro_variables_long_value(CInt(macro_variables_info(j,3))))
						Case "ULONG"
							variables_type(i)="ULONG"
							n=CDbl(macro_variables_ulong_value(CInt(macro_variables_info(j,3))))
						Case "INTEGER"
							variables_type(i)="INTEGER"
							n=CDbl(macro_variables_integer_value(CInt(macro_variables_info(j,3))))
						Case "UINTEGER"
							variables_type(i)="UINTEGER"
							n=CDbl(macro_variables_uinteger_value(CInt(macro_variables_info(j,3))))
						Case "LONGINT"
							variables_type(i)="LONGINT"
							n=CDbl(macro_variables_longint_value(CInt(macro_variables_info(j,3))))
						Case "ULONGINT"
							variables_type(i)="ULONGINT"
							n=CDbl(macro_variables_ulongint_value(CInt(macro_variables_info(j,3))))
						Case "SINGLE"
							variables_type(i)="SINGLE"
							n=CDbl(macro_variables_single_value(CInt(macro_variables_info(j,3))))
						Case "DOUBLE"
							variables_type(i)="DOUBLE"
							n=macro_variables_double_value(CInt(macro_variables_info(j,3)))
						Case "STRING"
							variables_value(i)=macro_variables_string_value(CInt(macro_variables_info(j,3)))
							variables_type(i)="STRING"
							x=variables_x(i)
							t=Mid(t,1,x-1)+variables_value(i)+Mid(t,x+1)
							is_string=TRUE
							has_strings=TRUE
					End Select
					If is_string=FALSE Then
						variables_value(i)=Str(n)
						x=variables_x(i)
						t=Mid(t,1,x-1)+LTrim(Str(n))+Mid(t,x+1)
					EndIf
					Exit For
				EndIf
			Next
		Next
	EndIf
	If variables_c>1 Or variables_c=0 Then is_variable_only=FALSE
	If numerics_c>1 Or numerics_c=0 Then is_numeric_only=FALSE
	
	'im not sure why but maybe just double checking if
	'programmer used variable correctly.
	variable_found=FALSE
	For i=1 To variables_c
		For j=1 To macro_variables_info_c
			If variables(i)=macro_variables_info(j,1) Then
				variable_found=TRUE
				Exit For
			EndIf
		Next
		If variable_found=TRUE Then Exit For
	Next
	If variable_found=FALSE Then
		has_variables=FALSE
		variables_c=0
	EndIf
	
	If is_numeric_only=TRUE Then
		Return " "+Str(numerics(1))
	Else
		If is_variable_only=TRUE Then
			Select Case variables_type(1)
				Case "STRING"
					If InStr(temp,Chr(34)) Then
						Return "error "+temp
					Else
						Return variables_value(1)
					EndIf
				Case Else
					If Val(variables_value(1))<0 Then
						Return variables_value(1)
					Else
						Return " "+variables_value(1)
					EndIf
			End Select
		Else
			'in the case there are no strings
			'here is where the math is done
			'taking into consideration "oder of precedence"
			If has_variables=TRUE Or has_numerics=TRUE Then 'try to convert variables to values
				If has_strings=FALSE And has_quotes=FALSE Then
					opnc=0
					opfc=0
					For i=1 To Len(temp)
						If has_numerics=TRUE Then
							For j= 1 To numerics_c
								If i=numerics_x(j) Then
									opnc+=1
									opn(opnc)=numerics(j)
									Exit For
								EndIf
							Next
						EndIf
						If has_variables=TRUE Then
							For j= 1 To variables_c
								If i=variables_x(j) Then
									opnc+=1
									opn(opnc)=CDbl(variables_value(j))
									opn_type(opnc)=variables_type(j)
									Exit For
								EndIf
							Next
						EndIf
						For j= 1 To arithmetic_op_c
							If i=arithmetic_op_x(j) Then
								If arithmetic_op(j)="negate" Then
									opfc+=1
									opfn(opfc)=opnc+1
									opf_priority(opfc)=prin
									opf(opfc)=arithmetic_op(j)
								Else
									opfc+=1
									opfn(opfc)=opnc
									opf_priority(opfc)=prin
									opf(opfc)=arithmetic_op(j)
								EndIf
								Exit For
							EndIf
						Next
						For j= 1 To bitwise_op_c
							If i=bitwise_op_x(j) Then
								If bitwise_op(j)="not" Then
									opfc+=1
									opfn(opfc)=opnc+1
									opf_priority(opfc)=prin
									opf(opfc)=bitwise_op(j)
								Else
									opfc+=1
									opfn(opfc)=opnc
									opf_priority(opfc)=prin
									opf(opfc)=bitwise_op(j)
								EndIf
								Exit For
							EndIf
						Next
						For j= 1 To math_dtc_op_c
							If i=math_dtc_op_x(j) Then
								opfc+=1
								opfn(opfc)=opnc+1
								opf(opfc)=math_dtc_op(j)
								prin+=1
								prinplus+=1
								prin_math_dtc_op(prinplus)=prin
								opf_priority(opfc)=prin
								If prin>prinmax Then prinmax=prin
								Exit For
							EndIf
						Next
						For j= 1 To conditional_op_c
							If i=conditional_op_x(j) Then
								opfc+=1
								opfn(opfc)=opnc
								opf_priority(opfc)=prin
								opf(opfc)=conditional_op(j)
								Exit For
							EndIf
						Next
						If Mid(temp,i,1)="(" Then
							prin+=1
							If prin>prinmax Then prinmax=prin
						EndIf
						If Mid(temp,i,1)=")" Then
							prin-=1
							If prinplus>0 Then
								For j= 1 To prinplus
									If prin=prin_math_dtc_op(j) Then
										prin-=1
										prinplus-=1
										Exit For
									EndIf
								Next
							EndIf
						EndIf
					Next
					'do it in order of operation precedence
	 				Select Case opfc
	 					Case 1
	 						'only one operator, no order of op needed
							For i=1 To opfc
								Select Case opf(i)
									Case "="
										opn(0)=opn(opfn(i))=opn(opfn(i)+1)
									Case "<"
										opn(0)=opn(opfn(i))<opn(opfn(i)+1)
									Case ">"
										opn(0)=opn(opfn(i))>opn(opfn(i)+1)
									Case "<="
										opn(0)=opn(opfn(i))<=opn(opfn(i)+1)
									Case ">="
										opn(0)=opn(opfn(i))>=opn(opfn(i)+1)
									Case "<>"
										opn(0)=opn(opfn(i))<>opn(opfn(i)+1)
									Case "+"
										opn(0)=opn(opfn(i))+opn(opfn(i)+1)
									Case "shl"
										opn(0)=opn(opfn(i)) Shl opn(opfn(i)+1)
									Case "shr"
										opn(0)=opn(opfn(i)) Shr opn(opfn(i)+1)
									Case "negate"
										opn(0)= -opn(opfn(i))
									Case "-"
										opn(0)=opn(opfn(i))-opn(opfn(i)+1)
									Case "*"
										opn(0)=opn(opfn(i))*opn(opfn(i)+1)
									Case "/"
										If opn(opfn(i)+1)=0 Then 
											opn(0)=0
										Else
											opn(0)=opn(opfn(i))/opn(opfn(i)+1)
										EndIf
									Case "\"
										If opn(opfn(i)+1)=0 Then 
											opn(0)=0
										Else
											opn(0)=opn(opfn(i))\opn(opfn(i)+1)
										EndIf
									Case "^"
										opn(0)=opn(opfn(i))^opn(opfn(i)+1)
									Case "mod"
										opn(0)=opn(opfn(i)) Mod opn(opfn(i)+1)
									Case "and"
										opn(0)=opn(opfn(i)) And opn(opfn(i)+1)
									Case "andalso"
										opn(0)=opn(opfn(i)) AndAlso opn(opfn(i)+1)
									Case "eqv"
										opn(0)=opn(opfn(i)) Eqv opn(opfn(i)+1)
									Case "imp"
										opn(0)=opn(opfn(i)) Imp opn(opfn(i)+1)
									Case "or"
										opn(0)=opn(opfn(i)) Or opn(opfn(i)+1)
									Case "orelse"
										opn(0)=opn(opfn(i)) OrElse opn(opfn(i)+1)
									Case "not"
										opn(0)= Not opn(opfn(i))
									Case "xor"
										opn(0)=opn(opfn(i)) Xor opn(opfn(i)+1)
									Case "abs"
										opn(0)=Abs(opn(opfn(i)))
									Case "acos"
										opn(0)=ACos(opn(opfn(i)))
									Case "asin"
										opn(0)=ASin(opn(opfn(i)))
									Case "atan2"
										opn(0)=ATan2(opn(opfn(i)),opn(opfn(i)+1))
									Case "atn"
										opn(0)=Atn(opn(opfn(i)))
									Case "cos"
										opn(0)=Cos(opn(opfn(i)))
									Case "exp"
										opn(0)=Exp(opn(opfn(i)))
									Case "fix"
										opn(0)=Fix(opn(opfn(i)))
									Case "frac"
										opn(0)=Frac(opn(opfn(i)))
									Case "int"
										opn(0)=Int(opn(opfn(i)))
									Case "log"
										opn(0)=Log(opn(opfn(i)))
									Case "rnd"
										opn(0)=Rnd*opn(opfn(i))
									Case "sgn"
										opn(0)=Sgn(opn(opfn(i)))
									Case "sin"
										opn(0)=Sin(opn(opfn(i)))
									Case "sqr"
										opn(0)=Sqr(opn(opfn(i)))
									Case "tan"
										opn(0)=Tan(opn(opfn(i)))
									Case "cbyte"
										opn(0)=CByte(opn(opfn(i)))
									Case "cubyte"
										opn(0)=CUByte(opn(opfn(i)))
									Case "cshort"
										opn(0)=CShort(opn(opfn(i)))
									Case "cushort"
										opn(0)=CUShort(opn(opfn(i)))
									Case "clng"
										opn(0)=CLng(opn(opfn(i)))
									Case "culng"
										opn(0)=CULng(opn(opfn(i)))
									Case "cint"
										opn(0)=CInt(opn(opfn(i)))
									Case "cuint"
										opn(0)=CUInt(opn(opfn(i)))
									Case "clngint"
										opn(0)=CLngInt(opn(opfn(i)))
									Case "culngint"
										opn(0)=CULngInt(opn(opfn(i)))
									Case "csign"
										Select Case opn_type(opfn(i))
											Case "UBYTE"
												n_ubyte=CUByte(opn(opfn(i)))
												opn(0)=CSign(n_ubyte)
											Case "USHORT"
												n_ushort=CUShort(opn(opfn(i)))
												opn(0)=CSign(n_ushort)
											Case "ULONG"
												n_ulong=CULng(opn(opfn(i)))
												opn(0)=CSign(n_ulong)
											Case "UINTEGER"
												n_uinteger=CUInt(opn(opfn(i)))
												opn(0)=CSign(n_uinteger)
											Case "ULONGINT"
												n_ulongint=CULngInt(opn(opfn(i)))
												opn(0)=CSign(n_ulongint)
											Case Else
											opn(0)=CSign(opn(opfn(i)))
										End Select
									Case "cunsg"
										Select Case opn_type(opfn(i))
											Case "BYTE"
												n_byte=CByte(opn(opfn(i)))
												opn(0)=CUnsg(n_byte)
											Case "SHORT"
												n_short=CShort(opn(opfn(i)))
												opn(0)=CUnsg(n_short)
											Case "LONG"
												n_long=CLng(opn(opfn(i)))
												opn(0)=CUnsg(n_long)
											Case "INTEGER"
												n_integer=CInt(opn(opfn(i)))
												opn(0)=CUnsg(n_integer)
											Case "LONGINT"
												n_longint=CLngInt(opn(opfn(i)))
												opn(0)=CUnsg(n_longint)
											Case Else
												opn(0)=CSign(opn(opfn(i)))
										End Select
									Case "csng"
										opn(0)=CSng(opn(opfn(i)))
									Case "cdbl"
										opn(0)=CDbl(opn(opfn(i)))
									Case "cbool"
										opn(0)=cbool(opn(opfn(i)))
								End Select
							Next
							If opn(0)<0 Then	
								Return Str(opn(0))	
							Else
								Return " "+Str(opn(0))
							EndIf
	 					Case Is > 1
	 						'precedence order except negate is first rather than second 
							For k=prinmax To 0 Step -1
								Do While opfc<>0 '^
									opset=FALSE
									For i=1 To opfc
										Select Case opf(i)
											Case "^"
												If opf_priority(i)=k Then
													opset=TRUE
													opn(opfn(i))=opn(opfn(i))^opn(opfn(i)+1)
													For j=opfn(i) To opnc
														opn(j+1)=opn(j+2)
													Next
													For j=i To opfc
														opf(j)=opf(j+1)
														opfn(j)=opfn(j+1)-1
														opf_priority(j)=opf_priority(j+1)
													Next
													opfc-=1
													opnc-=1
													Exit For
												EndIf
										End Select
									Next
									If opset=FALSE Then Exit Do
								Loop
								Do While opfc<>0 'negate
									opset=FALSE
									For i=1 To opfc
										Select Case opf(i)
											Case "negate"
												If opf_priority(i)=k Then
													opset=TRUE
													opn(opfn(i))= -opn(opfn(i))
													For j=i To opfc
														opf(j)=opf(j+1)
														opfn(j)=opfn(j+1)
														opf_priority(j)=opf_priority(j+1)
													Next
													opfc-=1
													Exit For
												EndIf
										End Select
									Next
									If opset=FALSE Then Exit Do
								Loop
								Do While opfc<>0 '*
									opset=FALSE
									For i=1 To opfc
										Select Case opf(i)
											Case "*"
												If opf_priority(i)=k Then
													opset=TRUE
													opn(opfn(i))=opn(opfn(i))*opn(opfn(i)+1)
													For j=opfn(i) To opnc
														opn(j+1)=opn(j+2)
													Next
													For j=i To opfc
														opf(j)=opf(j+1)
														opfn(j)=opfn(j+1)-1
														opf_priority(j)=opf_priority(j+1)
													Next
													opfc-=1
													opnc-=1
													Exit For
												EndIf
										End Select
									Next
									If opset=FALSE Then Exit Do
								Loop
								Do While opfc<>0 '/
									opset=FALSE
									For i=1 To opfc
										Select Case opf(i)
											Case "/"
												If opf_priority(i)=k Then
													opset=TRUE
													If opn(opfn(i)+1)=0 Then
														opn(opfn(i))=0
													Else
														opn(opfn(i))=opn(opfn(i))/opn(opfn(i)+1)
													EndIf
													For j=opfn(i) To opnc
														opn(j+1)=opn(j+2)
													Next
													For j=i To opfc
														opf(j)=opf(j+1)
														opfn(j)=opfn(j+1)-1
														opf_priority(j)=opf_priority(j+1)
													Next
													opfc-=1
													opnc-=1
													Exit For
												EndIf
										End Select
									Next
									If opset=FALSE Then Exit Do
								Loop
								Do While opfc<>0 '\
									opset=FALSE
									For i=1 To opfc
										Select Case opf(i)
											Case "\"
												If opf_priority(i)=k Then
													opset=TRUE
													If opn(opfn(i)+1)=0 Then
														opn(opfn(i))=0
													Else
														opn(opfn(i))=CDbl(opn(opfn(i))\opn(opfn(i)+1))
													EndIf
													For j=opfn(i) To opnc
														opn(j+1)=opn(j+2)
													Next
													For j=i To opfc
														opf(j)=opf(j+1)
														opfn(j)=opfn(j+1)-1
														opf_priority(j)=opf_priority(j+1)
													Next
													opfc-=1
													opnc-=1
													Exit For
												EndIf
										End Select
									Next
									If opset=FALSE Then Exit Do
								Loop
								Do While opfc<>0 'mod
									opset=FALSE
									For i=1 To opfc
										Select Case opf(i)
											Case "mod"
												If opf_priority(i)=k Then
													opset=TRUE
													opn(opfn(i))=opn(opfn(i)) Mod opn(opfn(i)+1)
													For j=opfn(i) To opnc
														opn(j+1)=opn(j+2)
													Next
													For j=i To opfc
														opf(j)=opf(j+1)
														opfn(j)=opfn(j+1)-1
														opf_priority(j)=opf_priority(j+1)
													Next
													opfc-=1
													opnc-=1
													Exit For
												EndIf
										End Select
									Next
									If opset=FALSE Then Exit Do
								Loop
								Do While opfc<>0 'shl
									opset=FALSE
									For i=1 To opfc
										Select Case opf(i)
											Case "shl"
												If opf_priority(i)=k Then
													opset=TRUE
													opn(opfn(i))=opn(opfn(i)) Shl opn(opfn(i)+1)
													For j=opfn(i) To opnc
														opn(j+1)=opn(j+2)
													Next
													For j=i To opfc
														opf(j)=opf(j+1)
														opfn(j)=opfn(j+1)-1
														opf_priority(j)=opf_priority(j+1)
													Next
													opfc-=1
													opnc-=1
													Exit For
												EndIf
										End Select
									Next
									If opset=FALSE Then Exit Do
								Loop
								Do While opfc<>0 'shr
									opset=FALSE
									For i=1 To opfc
										Select Case opf(i)
											Case "shr"
												If opf_priority(i)=k Then
													opset=TRUE
													opn(opfn(i))=opn(opfn(i)) Shr opn(opfn(i)+1)
													For j=opfn(i) To opnc
														opn(j+1)=opn(j+2)
													Next
													For j=i To opfc
														opf(j)=opf(j+1)
														opfn(j)=opfn(j+1)-1
														opf_priority(j)=opf_priority(j+1)
													Next
													opfc-=1
													opnc-=1
													Exit For
												EndIf
										End Select
									Next
									If opset=FALSE Then Exit Do
								Loop
								Do While opfc<>0 '+
									opset=FALSE
									For i=1 To opfc
										Select Case opf(i)
											Case "+"
												If opf_priority(i)=k Then
													opset=TRUE
													opn(opfn(i))=opn(opfn(i))+opn(opfn(i)+1)
													For j=opfn(i) To opnc
														opn(j+1)=opn(j+2)
													Next
													For j=i To opfc
														opf(j)=opf(j+1)
														opfn(j)=opfn(j+1)-1
														opf_priority(j)=opf_priority(j+1)
													Next
													opfc-=1
													opnc-=1
													Exit For
												EndIf
										End Select
									Next
									If opset=FALSE Then Exit Do
								Loop
								Do While opfc<>0 '-
									opset=FALSE
									For i=1 To opfc
										Select Case opf(i)
											Case "-"
												If opf_priority(i)=k Then
													opset=TRUE
													opn(opfn(i))=opn(opfn(i))-opn(opfn(i)+1)
													For j=opfn(i) To opnc
														opn(j+1)=opn(j+2)
													Next
													For j=i To opfc
														opf(j)=opf(j+1)
														opfn(j)=opfn(j+1)-1
														opf_priority(j)=opf_priority(j+1)
													Next
													opfc-=1
													opnc-=1
													Exit For
												EndIf
										End Select
									Next
									If opset=FALSE Then Exit Do
								Loop
								Do While opfc<>0 '=
									opset=FALSE
									For i=1 To opfc
										Select Case opf(i)
											Case "="
												If opf_priority(i)=k Then
													opset=TRUE
													opn(opfn(i))=opn(opfn(i))=opn(opfn(i)+1)
													For j=opfn(i) To opnc
														opn(j+1)=opn(j+2)
													Next
													For j=i To opfc
														opf(j)=opf(j+1)
														opfn(j)=opfn(j+1)-1
														opf_priority(j)=opf_priority(j+1)
													Next
													opfc-=1
													opnc-=1
													Exit For
												EndIf
										End Select
									Next
									If opset=FALSE Then Exit Do
								Loop
								Do While opfc<>0 '<
									opset=FALSE
									For i=1 To opfc
										Select Case opf(i)
											Case "<"
												If opf_priority(i)=k Then
													opset=TRUE
													opn(opfn(i))=opn(opfn(i))<opn(opfn(i)+1)
													For j=opfn(i) To opnc
														opn(j+1)=opn(j+2)
													Next
													For j=i To opfc
														opf(j)=opf(j+1)
														opfn(j)=opfn(j+1)-1
														opf_priority(j)=opf_priority(j+1)
													Next
													opfc-=1
													opnc-=1
													Exit For
												EndIf
										End Select
									Next
									If opset=FALSE Then Exit Do
								Loop
								Do While opfc<>0 '>
									opset=FALSE
									For i=1 To opfc
										Select Case opf(i)
											Case ">"
												If opf_priority(i)=k Then
													opset=TRUE
													opn(opfn(i))=opn(opfn(i))>opn(opfn(i)+1)
													For j=opfn(i) To opnc
														opn(j+1)=opn(j+2)
													Next
													For j=i To opfc
														opf(j)=opf(j+1)
														opfn(j)=opfn(j+1)-1
														opf_priority(j)=opf_priority(j+1)
													Next
													opfc-=1
													opnc-=1
													Exit For
												EndIf
										End Select
									Next
									If opset=FALSE Then Exit Do
								Loop
								Do While opfc<>0 '<=
									opset=FALSE
									For i=1 To opfc
										Select Case opf(i)
											Case "<="
												If opf_priority(i)=k Then
													opset=TRUE
													opn(opfn(i))=opn(opfn(i))<=opn(opfn(i)+1)
													For j=opfn(i) To opnc
														opn(j+1)=opn(j+2)
													Next
													For j=i To opfc
														opf(j)=opf(j+1)
														opfn(j)=opfn(j+1)-1
														opf_priority(j)=opf_priority(j+1)
													Next
													opfc-=1
													opnc-=1
													Exit For
												EndIf
										End Select
									Next
									If opset=FALSE Then Exit Do
								Loop
								Do While opfc<>0 '>=
									opset=FALSE
									For i=1 To opfc
										Select Case opf(i)
											Case ">="
												If opf_priority(i)=k Then
													opset=TRUE
													opn(opfn(i))=opn(opfn(i))>=opn(opfn(i)+1)
													For j=opfn(i) To opnc
														opn(j+1)=opn(j+2)
													Next
													For j=i To opfc
														opf(j)=opf(j+1)
														opfn(j)=opfn(j+1)-1
														opf_priority(j)=opf_priority(j+1)
													Next
													opfc-=1
													opnc-=1
													Exit For
												EndIf
										End Select
									Next
									If opset=FALSE Then Exit Do
								Loop
								Do While opfc<>0 '<>
									opset=FALSE
									For i=1 To opfc
										Select Case opf(i)
											Case "<>"
												If opf_priority(i)=k Then
													opset=TRUE
													opn(opfn(i))=opn(opfn(i))<>opn(opfn(i)+1)
													For j=opfn(i) To opnc
														opn(j+1)=opn(j+2)
													Next
													For j=i To opfc
														opf(j)=opf(j+1)
														opfn(j)=opfn(j+1)-1
														opf_priority(j)=opf_priority(j+1)
													Next
													opfc-=1
													opnc-=1
													Exit For
												EndIf
										End Select
									Next
									If opset=FALSE Then Exit Do
								Loop
								Do While opfc<>0 'not
									opset=FALSE
									For i=1 To opfc
										Select Case opf(i)
											Case "not"
												If opf_priority(i)=k Then
													opset=TRUE
													opn(opfn(i))= Not opn(opfn(i))
													For j=i To opfc
														opf(j)=opf(j+1)
														opfn(j)=opfn(j+1)
														opf_priority(j)=opf_priority(j+1)
													Next
													opfc-=1
													Exit For
												EndIf
										End Select
									Next
									If opset=FALSE Then Exit Do
								Loop
								Do While opfc<>0 'and
									opset=FALSE
									For i=1 To opfc
										Select Case opf(i)
											Case "and"
												If opf_priority(i)=k Then
													opset=TRUE
													opn(opfn(i))=opn(opfn(i)) And opn(opfn(i)+1)
													For j=opfn(i) To opnc
														opn(j+1)=opn(j+2)
													Next
													For j=i To opfc
														opf(j)=opf(j+1)
														opfn(j)=opfn(j+1)-1
														opf_priority(j)=opf_priority(j+1)
													Next
													opfc-=1
													opnc-=1
													Exit For
												EndIf
										End Select
									Next
									If opset=FALSE Then Exit Do
								Loop
								Do While opfc<>0 'or
									opset=FALSE
									For i=1 To opfc
										Select Case opf(i)
											Case "or"
												If opf_priority(i)=k Then
													opset=TRUE
													opn(opfn(i))=opn(opfn(i)) Or opn(opfn(i)+1)
													For j=opfn(i) To opnc
														opn(j+1)=opn(j+2)
													Next
													For j=i To opfc
														opf(j)=opf(j+1)
														opfn(j)=opfn(j+1)-1
														opf_priority(j)=opf_priority(j+1)
													Next
													opfc-=1
													opnc-=1
													Exit For
												EndIf
										End Select
									Next
									If opset=FALSE Then Exit Do
								Loop
								Do While opfc<>0 'eqv
									opset=FALSE
									For i=1 To opfc
										Select Case opf(i)
											Case "eqv"
												If opf_priority(i)=k Then
													opset=TRUE
													opn(opfn(i))=opn(opfn(i)) Eqv opn(opfn(i)+1)
													For j=opfn(i) To opnc
														opn(j+1)=opn(j+2)
													Next
													For j=i To opfc
														opf(j)=opf(j+1)
														opfn(j)=opfn(j+1)-1
														opf_priority(j)=opf_priority(j+1)
													Next
													opfc-=1
													opnc-=1
													Exit For
												EndIf
										End Select
									Next
									If opset=FALSE Then Exit Do
								Loop
								Do While opfc<>0 'imp
									opset=FALSE
									For i=1 To opfc
										Select Case opf(i)
											Case "imp"
												If opf_priority(i)=k Then
													opset=TRUE
													opn(opfn(i))=opn(opfn(i)) Imp opn(opfn(i)+1)
													For j=opfn(i) To opnc
														opn(j+1)=opn(j+2)
													Next
													For j=i To opfc
														opf(j)=opf(j+1)
														opfn(j)=opfn(j+1)-1
														opf_priority(j)=opf_priority(j+1)
													Next
													opfc-=1
													opnc-=1
													Exit For
												EndIf
										End Select
									Next
									If opset=FALSE Then Exit Do
								Loop
								Do While opfc<>0 'xor
									opset=FALSE
									For i=1 To opfc
										Select Case opf(i)
											Case "xor"
												If opf_priority(i)=k Then
													opset=TRUE
													opn(opfn(i))=opn(opfn(i)) Xor opn(opfn(i)+1)
													For j=opfn(i) To opnc
														opn(j+1)=opn(j+2)
													Next
													For j=i To opfc
														opf(j)=opf(j+1)
														opfn(j)=opfn(j+1)-1
														opf_priority(j)=opf_priority(j+1)
													Next
													opfc-=1
													opnc-=1
													Exit For
												EndIf
										End Select
									Next
									If opset=FALSE Then Exit Do
								Loop
								Do While opfc<>0 'andalso
									opset=FALSE
									For i=1 To opfc
										Select Case opf(i)
											Case "andalso"
												If opf_priority(i)=k Then
													opset=TRUE
													opn(opfn(i))=opn(opfn(i)) AndAlso opn(opfn(i)+1)
													For j=opfn(i) To opnc
														opn(j+1)=opn(j+2)
													Next
													For j=i To opfc
														opf(j)=opf(j+1)
														opfn(j)=opfn(j+1)-1
														opf_priority(j)=opf_priority(j+1)
													Next
													opfc-=1
													opnc-=1
													Exit For
												EndIf
										End Select
									Next
									If opset=FALSE Then Exit Do
								Loop
								Do While opfc<>0 'orelse
									opset=FALSE
									For i=1 To opfc
										Select Case opf(i)
											Case "orelse"
												If opf_priority(i)=k Then
													opset=TRUE
													opn(opfn(i))=opn(opfn(i)) OrElse opn(opfn(i)+1)
													For j=opfn(i) To opnc
														opn(j+1)=opn(j+2)
													Next
													For j=i To opfc
														opf(j)=opf(j+1)
														opfn(j)=opfn(j+1)-1
														opf_priority(j)=opf_priority(j+1)
													Next
													opfc-=1
													opnc-=1
													Exit For
												EndIf
										End Select
									Next
									If opset=FALSE Then Exit Do
								Loop
								Do While opfc<>0 'abs,acos,asin,atan2,atn,cos,exp,fix,int,log,rnd,sgn,sin,sqr,tan
									opset=FALSE
									For i=1 To opfc
										Select Case opf(i)
											Case "abs"
												If opf_priority(i)=k Then
													opset=TRUE
													opn(opfn(i))=Abs(opn(opfn(i)))
													For j=i To opfc
														opf(j)=opf(j+1)
														opfn(j)=opfn(j+1)
														opf_priority(j)=opf_priority(j+1)
													Next
													opfc-=1
													Exit For
												EndIf
											Case "acos"
												If opf_priority(i)=k Then
													opset=TRUE
													opn(opfn(i))=ACos(opn(opfn(i)))
													For j=i To opfc-1
														opf(j)=opf(j+1)
														opfn(j)=opfn(j+1)
														opf_priority(j)=opf_priority(j+1)
													Next
													opfc-=1
													Exit For
												EndIf
											Case "asin"
												If opf_priority(i)=k Then
													opset=TRUE
													opn(opfn(i))=ASin(opn(opfn(i)))
													For j=i To opfc-1
														opf(j)=opf(j+1)
														opfn(j)=opfn(j+1)
														opf_priority(j)=opf_priority(j+1)
													Next
													opfc-=1
													Exit For
												EndIf
											Case "atan2"
												If opf_priority(i)=k Then
													opset=TRUE
													opn(opfn(i))=ATan2(opn(opfn(i)),opn(opfn(i)+1))
													For j=opfn(i) To opnc
														opn(j+1)=opn(j+2)
													Next
													For j=i To opfc
														opf(j)=opf(j+1)
														opfn(j)=opfn(j+1)-1
														opf_priority(j)=opf_priority(j+1)
													Next
													opfc-=1
													opnc-=1
													Exit For
												EndIf
											Case "atn"
												If opf_priority(i)=k Then
													opset=TRUE
													opn(opfn(i))=Atn(opn(opfn(i)))
													For j=i To opfc-1
														opf(j)=opf(j+1)
														opfn(j)=opfn(j+1)
														opf_priority(j)=opf_priority(j+1)
													Next
													opfc-=1
													Exit For
												EndIf
											Case "cos"
												If opf_priority(i)=k Then
													opset=TRUE
													opn(opfn(i))=Cos(opn(opfn(i)))
													For j=i To opfc-1
														opf(j)=opf(j+1)
														opfn(j)=opfn(j+1)
														opf_priority(j)=opf_priority(j+1)
													Next
													opfc-=1
													Exit For
												EndIf
											Case "exp"
												If opf_priority(i)=k Then
													opset=TRUE
													opn(opfn(i))=Exp(opn(opfn(i)))
													For j=i To opfc-1
														opf(j)=opf(j+1)
														opfn(j)=opfn(j+1)
														opf_priority(j)=opf_priority(j+1)
													Next
													opfc-=1
													Exit For
												EndIf
											Case "fix"
												If opf_priority(i)=k Then
													opset=TRUE
													opn(opfn(i))=Fix(opn(opfn(i)))
													For j=i To opfc-1
														opf(j)=opf(j+1)
														opfn(j)=opfn(j+1)
														opf_priority(j)=opf_priority(j+1)
													Next
													opfc-=1
													Exit For
												EndIf
											Case "frac"
												If opf_priority(i)=k Then
													opset=TRUE
													opn(opfn(i))=Frac(opn(opfn(i)))
													For j=i To opfc-1
														opf(j)=opf(j+1)
														opfn(j)=opfn(j+1)
														opf_priority(j)=opf_priority(j+1)
													Next
													opfc-=1
													Exit For
												EndIf
											Case "int"
												If opf_priority(i)=k Then
													opset=TRUE
													opn(opfn(i))=Int(opn(opfn(i)))
													For j=i To opfc
														opf(j)=opf(j+1)
														opfn(j)=opfn(j+1)
														opf_priority(j)=opf_priority(j+1)
													Next
													opfc-=1
													Exit For
												EndIf
											'Case "len" 'evaluates a string - need to pass strings into here sometime
											Case "log"
												If opf_priority(i)=k Then
													opset=TRUE
													opn(opfn(i))=Log(opn(opfn(i)))
													For j=i To opfc-1
														opf(j)=opf(j+1)
														opfn(j)=opfn(j+1)
														opf_priority(j)=opf_priority(j+1)
													Next
													opfc-=1
													Exit For
												EndIf
											'Case "randomize" 'no value is returned so this is more of a command
											Case "rnd"
												If opf_priority(i)=k Then
													opset=TRUE
													opn(opfn(i))=Rnd(opn(opfn(i)))
													For j=i To opfc-1
														opf(j)=opf(j+1)
														opfn(j)=opfn(j+1)
														opf_priority(j)=opf_priority(j+1)
													Next
													opfc-=1
													Exit For
												EndIf
											Case "sgn" 'returns -1,0,1
												If opf_priority(i)=k Then
													opset=TRUE
													opn(opfn(i))=Sgn(opn(opfn(i)))
													For j=i To opfc-1
														opf(j)=opf(j+1)
														opfn(j)=opfn(j+1)
														opf_priority(j)=opf_priority(j+1)
													Next
													opfc-=1
													Exit For
												EndIf
											Case "sin"
												If opf_priority(i)=k Then
													opset=TRUE
													opn(opfn(i))=Sin(opn(opfn(i)))
													For j=i To opfc-1
														opf(j)=opf(j+1)
														opfn(j)=opfn(j+1)
														opf_priority(j)=opf_priority(j+1)
													Next
													opfc-=1
													Exit For
												EndIf
											Case "sqr"
												If opf_priority(i)=k Then
													opset=TRUE
													opn(opfn(i))=Sqr(opn(opfn(i)))
													For j=i To opfc
														opf(j)=opf(j+1)
														opfn(j)=opfn(j+1)
														opf_priority(j)=opf_priority(j+1)
													Next
													opfc-=1
													Exit For
												EndIf
											Case "tan"
												If opf_priority(i)=k Then
													opset=TRUE
													opn(opfn(i))=Tan(opn(opfn(i)))
													For j=i To opfc-1
														opf(j)=opf(j+1)
														opfn(j)=opfn(j+1)
														opf_priority(j)=opf_priority(j+1)
													Next
													opfc-=1
													Exit For
												EndIf
											Case "cbyte"
												If opf_priority(i)=k Then
													opset=TRUE
													opn(opfn(i))=CByte(opn(opfn(i)))
													For j=i To opfc-1
														opf(j)=opf(j+1)
														opfn(j)=opfn(j+1)
														opf_priority(j)=opf_priority(j+1)
													Next
													opfc-=1
													Exit For
												EndIf
											Case "cubyte"
												If opf_priority(i)=k Then
													opset=TRUE
													opn(opfn(i))=CUByte(opn(opfn(i)))
													For j=i To opfc-1
														opf(j)=opf(j+1)
														opfn(j)=opfn(j+1)
														opf_priority(j)=opf_priority(j+1)
													Next
													opfc-=1
													Exit For
												EndIf
											Case "cshort"
												If opf_priority(i)=k Then
													opset=TRUE
													opn(opfn(i))=CShort(opn(opfn(i)))
													For j=i To opfc-1
														opf(j)=opf(j+1)
														opfn(j)=opfn(j+1)
														opf_priority(j)=opf_priority(j+1)
													Next
													opfc-=1
													Exit For
												EndIf
											Case "cushort"
												If opf_priority(i)=k Then
													opset=TRUE
													opn(opfn(i))=CUShort(opn(opfn(i)))
													For j=i To opfc-1
														opf(j)=opf(j+1)
														opfn(j)=opfn(j+1)
														opf_priority(j)=opf_priority(j+1)
													Next
													opfc-=1
													Exit For
												EndIf
											Case "clng"
												If opf_priority(i)=k Then
													opset=TRUE
													opn(opfn(i))=CLng(opn(opfn(i)))
													For j=i To opfc-1
														opf(j)=opf(j+1)
														opfn(j)=opfn(j+1)
														opf_priority(j)=opf_priority(j+1)
													Next
													opfc-=1
													Exit For
												EndIf
											Case "culng"
												If opf_priority(i)=k Then
													opset=TRUE
													opn(opfn(i))=CULng(opn(opfn(i)))
													For j=i To opfc-1
														opf(j)=opf(j+1)
														opfn(j)=opfn(j+1)
														opf_priority(j)=opf_priority(j+1)
													Next
													opfc-=1
													Exit For
												EndIf
											Case "cint"
												If opf_priority(i)=k Then
													opset=TRUE
													opn(opfn(i))=CInt(opn(opfn(i)))
													For j=i To opfc-1
														opf(j)=opf(j+1)
														opfn(j)=opfn(j+1)
														opf_priority(j)=opf_priority(j+1)
													Next
													opfc-=1
													Exit For
												EndIf
											Case "cuint"
												If opf_priority(i)=k Then
													opset=TRUE
													opn(opfn(i))=CUInt(opn(opfn(i)))
													For j=i To opfc-1
														opf(j)=opf(j+1)
														opfn(j)=opfn(j+1)
														opf_priority(j)=opf_priority(j+1)
													Next
													opfc-=1
													Exit For
												EndIf
											Case "clngint"
												If opf_priority(i)=k Then
													opset=TRUE
													opn(opfn(i))=CLngInt(opn(opfn(i)))
													For j=i To opfc-1
														opf(j)=opf(j+1)
														opfn(j)=opfn(j+1)
														opf_priority(j)=opf_priority(j+1)
													Next
													opfc-=1
													Exit For
												EndIf
											Case "culngint"
												If opf_priority(i)=k Then
													opset=TRUE
													opn(opfn(i))=CULngInt(opn(opfn(i)))
													For j=i To opfc-1
														opf(j)=opf(j+1)
														opfn(j)=opfn(j+1)
														opf_priority(j)=opf_priority(j+1)
													Next
													opfc-=1
													Exit For
												EndIf
											Case "csign"
												If opf_priority(i)=k Then
													opset=TRUE
													opn(opfn(i))=CSign(opn(opfn(i)))
													For j=i To opfc-1
														opf(j)=opf(j+1)
														opfn(j)=opfn(j+1)
														opf_priority(j)=opf_priority(j+1)
													Next
													opfc-=1
													Exit For
												EndIf
											Case "cunsg"
												If opf_priority(i)=k Then
													opset=TRUE
													opn(opfn(i))=CUnsg(opn(opfn(i)))
													For j=i To opfc-1
														opf(j)=opf(j+1)
														opfn(j)=opfn(j+1)
														opf_priority(j)=opf_priority(j+1)
													Next
													opfc-=1
													Exit For
												EndIf
											Case "csng"
												If opf_priority(i)=k Then
													opset=TRUE
													opn(opfn(i))=CSng(opn(opfn(i)))
													For j=i To opfc-1
														opf(j)=opf(j+1)
														opfn(j)=opfn(j+1)
														opf_priority(j)=opf_priority(j+1)
													Next
													opfc-=1
													Exit For
												EndIf
											Case "cdbl"
												If opf_priority(i)=k Then
													opset=TRUE
													opn(opfn(i))=CDbl(opn(opfn(i)))
													For j=i To opfc-1
														opf(j)=opf(j+1)
														opfn(j)=opfn(j+1)
														opf_priority(j)=opf_priority(j+1)
													Next
													opfc-=1
													Exit For
												EndIf
											Case "cbool"
												If opf_priority(i)=k Then
													opset=TRUE
													opn(opfn(i))=cbool(opn(opfn(i)))
													For j=i To opfc-1
														opf(j)=opf(j+1)
														opfn(j)=opfn(j+1)
														opf_priority(j)=opf_priority(j+1)
													Next
													opfc-=1
													Exit For
												EndIf
										End Select
									Next
									If opset=FALSE Then Exit Do
								Loop
							Next
							If opn(1)<0 Then	
								Return Str(opn(1))	
							Else
								Return " "+Str(opn(1))
							EndIf
	 				End Select
				Else
					If has_numerics=TRUE Then
						Return "error "+temp
					EndIf
					If has_variables=TRUE Then
						skip=FALSE
						For i=1 To variables_c
							If variables_type(i)<>"STRING" Then
								skip=TRUE
								Exit For
							EndIf
						Next
						If skip=TRUE Then Return "error "+temp
					EndIf
					'has_strings should be TRUE cuz has_variables=TRUE
					If has_quotes=TRUE Then'this is a mixture of strings and quotes
						If has_arithmetic_op=TRUE Then
							aoi=1
							For i=1 To Len(temp)
								skip=TRUE
								If aoi=1 Then
									For j= 1 To quote_c
										If quote_x_start(j)=i Then
											lhsqti=j
											skip=FALSE
											lhs_qt_v=1
											Exit For
										EndIf
									Next
									If skip=TRUE Then
										For j= 1 To variables_c
											If variables_x(j)=i Then
												lhsvi=j
												skip=FALSE
												lhs_qt_v=2
												Exit For
											EndIf
										Next
									EndIf
									If skip=FALSE Then
										For k=i+1 To Len(temp)
											skip=TRUE
											For j= 1 To quote_c
												If quote_x_start(j)=k Then
													rhsqti=j
													'rhsqti=j+1
													i=quote_x_end(rhsqti)+1
													skip=FALSE
													rhs_qt_v=1
													Exit For
												EndIf
											Next
											If skip=TRUE Then
												For j= 1 To variables_c
													If variables_x(j)=k Then
														rhsvi=j
														'rhsvi=j+1
														i=variables_x(rhsvi)+Len(variables(rhsvi))
														skip=FALSE
														rhs_qt_v=2
														Exit For
													EndIf
												Next
											EndIf
											If skip=FALSE Then Exit For
										Next
									EndIf
								Else
									For k=i To Len(temp)
										skip=TRUE
										For j= 1 To quote_c
											If quote_x_start(j)=k Then
												rhsqti=j
												'rhsqti=j+1
												i=quote_x_end(rhsqti)+1
												skip=FALSE
												rhs_qt_v=1
												Exit For
											EndIf
										Next
										If skip=TRUE Then
											For j= 1 To variables_c
												If variables_x(j)=k Then
													rhsvi=j
													'rhsvi=j+1
													i=variables_x(rhsvi)+Len(variables(rhsvi))
													skip=FALSE
													rhs_qt_v=2
													Exit For
												EndIf
											Next
										EndIf
										If skip=FALSE Then Exit For
									Next
								EndIf
								If skip=FALSE Then
									For j=1 To arithmetic_op_c
										Select Case lhs_qt_v
											Case 1'qt
												Select Case rhs_qt_v
													Case 1'qt
														Select Case arithmetic_op_x(j)
															Case quote_x_end(lhsqti) To quote_x_start(rhsqti)
																If aoi=1 Then
																	concatenation=quoted_text(lhsqti)+quoted_text(rhsqti)
																	aoi=0
																Else
																	concatenation+=quoted_text(rhsqti)
																EndIf
																lhsqti=rhsqti
																lhs_qt_v=rhs_qt_v
																Exit For
														End Select
													Case 2'v
														Select Case arithmetic_op_x(j)
															Case quote_x_end(lhsqti) To variables_x(rhsvi)
																If aoi=1 Then
																	concatenation=quoted_text(lhsqti)+variables_value(rhsvi)
																	aoi=0
																Else
																	concatenation+=variables_value(rhsvi)
																EndIf
																lhsvi=rhsvi
																lhs_qt_v=rhs_qt_v
																Exit For
														End Select
												End Select
											Case 2'v
												Select Case rhs_qt_v
													Case 1'qt
														Select Case arithmetic_op_x(j)
															Case variables_x(lhsvi)+Len(variables(lhsvi)) To quote_x_start(rhsqti)
																If aoi=1 Then
																	concatenation=variables_value(lhsvi)+quoted_text(rhsqti)
																	aoi=0
																Else
																	concatenation+=quoted_text(rhsqti)
																EndIf
																lhsqti=rhsqti
																lhs_qt_v=rhs_qt_v
																Exit For
														End Select
													Case 2'v
														Select Case arithmetic_op_x(j)
															Case variables_x(lhsvi)+Len(variables(lhsvi)) To variables_x(rhsvi)
																If aoi=1 Then
																	concatenation=variables_value(lhsvi)+variables_value(rhsvi)
																	aoi=0
																Else
																	concatenation+=variables_value(rhsvi)
																EndIf
																lhsvi=rhsvi
																lhs_qt_v=rhs_qt_v
																Exit For
														End Select
												End Select
										End Select
									Next
								EndIf
							Next
							Return concatenation
						Else
							Return "error "+temp
						EndIf
					Else'has strings and no quotes
						If has_arithmetic_op=TRUE Then
							aoi=1'arithmetec op index
							For i=1 To Len(temp)
								skip=TRUE
								If aoi=1 Then
									For j= 1 To variables_c
										If variables_x(j)=i Then
											lhsvi=j
											rhsvi=j+1
											i=variables_x(rhsvi)+Len(variables(rhsvi))
											skip=FALSE
											Exit For
										EndIf
									Next
								Else
									For j= 1 To quote_c
										If variables_x(j)=i Then
											'find the Rhs quoted text
											rhsvi=j
											i=variables_x(rhsvi)+Len(variables(rhsvi))
											skip=FALSE
											Exit For
										EndIf
									Next
								EndIf
								If skip=FALSE Then
									For j=1 To arithmetic_op_c
										Select Case arithmetic_op_x(j)
											Case variables_x(lhsvi)+Len(variables(lhsvi)) To variables_x(rhsvi)
												If aoi=1 Then
													concatenation=variables_value(lhsvi)+variables_value(rhsvi)
													aoi=0
												Else
													concatenation+=variables_value(rhsvi)
												EndIf
												lhsvi=rhsvi
												Exit For
										End Select
									Next
								EndIf
							Next
							Return concatenation
						Else
							Return "error "+temp
						EndIf
					EndIf
				EndIf
			Else 'has_variables=FALSE And has_numerics=FALSE
				If has_quotes=TRUE Then
					If has_arithmetic_op=TRUE Then
						aoi=1
						For i=1 To Len(temp)
							skip=TRUE
							If aoi=1 Then
								For j= 1 To quote_c
									If quote_x_start(j)=i Then
										lhsqti=j
										rhsqti=j+1
										i=quote_x_end(rhsqti)+1
										skip=FALSE
										Exit For
									EndIf
								Next
							Else
								For j= 1 To quote_c
									If quote_x_start(j)=i Then
										'find the Rhs quoted text
										rhsqti=j
										i=quote_x_end(rhsqti)+1
										skip=FALSE
										Exit For
									EndIf
								Next
							EndIf
							If skip=FALSE Then
								For j=1 To arithmetic_op_c
									Select Case arithmetic_op_x(j)
										Case quote_x_end(lhsqti) To quote_x_start(rhsqti)
											If aoi=1 Then
												concatenation=quoted_text(lhsqti)+quoted_text(rhsqti)
												aoi=0
											Else
												concatenation+=quoted_text(rhsqti)
											EndIf
											lhsqti=rhsqti
											Exit For
									End Select
								Next
							EndIf
						Next
						Return concatenation
					Else
						Select Case quote_c
							Case 0
								Return "error "+temp
							Case 1
								Return quoted_text(quote_c)
							Case Else
								Return "error "+temp
						End Select
					EndIf
				Else
					Return temp
				EndIf
			EndIf
		EndIf
	EndIf
End Function

Function evaluate_condition(expression As String) As BOOLEAN
	If d_bug=TRUE Then
		Dim As Integer dbugi
		Print #5,"Function evaluate_condition"
		Print #5,"expression:";expression
		'For dbugi=LBound(temp) To UBound(temp)
			'Print #5,"temp("; dbugi; "):"; temp(dbugi)
		'Next
		Print #5,"---------------"
	EndIf
	'returns true if condition is met
	'x = 5
	'x >= 5 And x <= 10
	'y <> 0 AndAlso x \ y = 1
	'(in this case, "x \ y = 1" will only be evaluated if "y <> 0" is True)
	
	'+ - * & / \ mod shl shr and or xor imp eqv ^ = <> < > <= >=
	
	Return cbool(full_evaluate_expression(expression))
	
End Function

Sub keyword_text(temp As String)
	'x As Double, y As Double,s As Integer,c As Integer,
	Dim As Integer x,ptx,pty,pts,ptc,temp_lc
	temp=Mid(temp,6)
	x=find_delimeter(temp,",")
	ptx=CDbl(full_evaluate_expression(Left(temp,x-1)))
	temp=Mid(temp,x+1)
	x=find_delimeter(temp,",")
	pty=CDbl(full_evaluate_expression(Left(temp,x-1)))
	temp=Mid(temp,x+1)
	x=find_delimeter(temp,",")
	pts=CInt(full_evaluate_expression(Left(temp,x-1)))
	temp=Mid(temp,x+1)
	x=find_delimeter(temp,",")
	ptc=CInt(full_evaluate_expression(Left(temp,x-1)))
	temp=Mid(temp,x+1)
	temp=full_evaluate_expression(temp)
	theboxbelow(temp)
	temp_lc=lc
	lc=ptc
	plottextstring(temp, ptx, pty, pts)
	lc=temp_lc
End Sub

